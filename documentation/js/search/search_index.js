var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenModel.html",[0,0.498,1,3.032]],["body/interfaces/AccessTokenModel.html",[0,0.724,1,5.273,2,1.734,3,0.167,4,0.148,5,0.13,6,5.274,7,5.274,8,0.323,9,1.147,10,8.002,11,0.772,12,8.002,13,8.002,14,7.001,15,8.002,16,1.918,17,0.676,18,0.012,19,2.464,20,0.167,21,0.01,22,0.01]],["title/interfaces/Address.html",[0,0.498,23,2.273]],["body/interfaces/Address.html",[0,0.7,2,1.677,3,0.161,4,0.143,5,0.126,8,0.313,9,1.124,11,0.92,16,1.952,17,0.681,18,0.012,19,2.258,20,0.161,21,0.01,22,0.01,23,3.875,24,5.101,25,6.271,26,5.784,27,6.271,28,2.348,29,6.271,30,6.271]],["title/injectables/AddressService.html",[31,0.851,32,3.032]],["body/injectables/AddressService.html",[3,0.117,4,0.104,5,0.091,8,0.227,11,0.785,17,0.606,18,0.012,19,1.938,20,0.117,21,0.008,22,0.008,23,4.5,28,1.706,31,1.18,32,4.202,33,1.684,34,3.698,35,0.976,36,3.054,37,5.748,38,5.748,39,5.748,40,5.748,41,0.741,42,2.118,43,3.513,44,1.205,45,4.227,46,1.601,47,0.948,48,2.763,49,5.748,50,4.583,51,4.227,52,2.429,53,3.017,54,2,55,1.252,56,2.689,57,5.556,58,5.748,59,4.227,60,5.177,61,6.533,62,6.533,63,6.533,64,3.757,65,5.748,66,2.637,67,4.227,68,1.76,69,5.748,70,5.748,71,4.227,72,2.903,73,5.029,74,0.64,75,0.489,76,1.572,77,1.952,78,1.378,79,4.227,80,1.878,81,2.032,82,3.35,83,1.878,84,2.561,85,1.572,86,1.47,87,0.508,88,1.952,89,0.951,90,4.032,91,4.227,92,2.146,93,3.67,94,4.227,95,4.493,96,2.607,97,2.561,98,4.227,99,3.274,100,4.227,101,2.709,102,5.748,103,4.227,104,3.684,105,3.089,106,4.227,107,2.709]],["title/interceptors/ApiTokenInterceptorService.html",[108,3.287,109,2.386]],["body/interceptors/ApiTokenInterceptorService.html",[3,0.139,4,0.124,5,0.108,8,0.27,11,0.761,17,0.588,18,0.012,20,0.139,21,0.009,22,0.009,31,1.323,35,1.094,41,0.881,44,1.169,46,1.553,47,0.92,55,1.025,56,2.397,74,0.642,75,0.581,76,1.869,78,1.64,80,2.234,81,2.417,85,1.869,86,1.749,87,0.604,88,2.322,92,2.179,109,3.708,110,4.398,111,4.811,112,4.811,113,4.955,114,4.398,115,6.226,116,6.226,117,5.64,118,3.675,119,3.98,120,5.027,121,6.447,122,7.065,123,3.882,124,7.065,125,5.027,126,6.567,127,4.712,128,6.447,129,5.027,130,4.398,131,5.64,132,5.027,133,3.675,134,1.402,135,6.447,136,5.64,137,5.027,138,5.027,139,3.984,140,5.027,141,1.64,142,4.398,143,5.027,144,5.027,145,5.027,146,4.398,147,5.027,148,5.027]],["title/components/AppComponent.html",[149,0.462,150,1.27]],["body/components/AppComponent.html",[3,0.122,4,0.109,5,0.095,8,0.237,9,0.942,11,0.473,16,0.995,17,0.49,18,0.012,20,0.122,21,0.008,22,0.008,35,1.006,41,0.775,44,1.098,46,0.965,47,0.864,55,0.703,68,1.353,74,0.552,75,0.511,86,2.061,87,0.531,88,2.041,134,1.652,149,0.744,150,2.185,151,1.871,152,1.441,153,1.396,154,1.441,155,1.441,156,3.866,157,2.179,158,1.441,159,2.725,160,2.641,161,1.932,162,6.682,163,1.932,164,5.923,165,4.282,166,2.328,167,4.419,168,7.664,169,4.289,170,5.923,171,4.419,172,1.09,173,1.537,174,1.589,175,4.039,176,5.182,177,1.76,178,1.964,179,1.159,180,4.419,181,1.824,182,3.866,183,2.832,184,3.866,185,4.419,186,4.419,187,4.419,188,2.832,189,3.013,190,3.013,191,3.013,192,3.013,193,2.541,194,1.441,195,1.932,196,1.932,197,1.441,198,2.328,199,1.441,200,1.441,201,1.271,202,1.441,203,1.232,204,1.441,205,1.271,206,1.441,207,1.271,208,1.441,209,1.271,210,1.461,211,1.441,212,1.271,213,1.932,214,1.271,215,1.441,216,1.271,217,1.441,218,1.271,219,1.09,220,1.441,221,1.271,222,1.441,223,1.271,224,1.441,225,1.271,226,1.311,227,1.441,228,1.271,229,1.441,230,1.271,231,1.441,232,1.271,233,1.124,234,1.271,235,1.441,236,1.271,237,1.353,238,1.441,239,1.271,240,1.441,241,1.271,242,1.441,243,1.271,244,1.441,245,1.271,246,1.441,247,1.271,248,1.441,249,1.441]],["title/interfaces/AppState.html",[0,0.498,250,2.273]],["body/interfaces/AppState.html",[0,0.716,2,1.714,3,0.165,4,0.147,5,0.129,18,0.012,20,0.22,21,0.01,22,0.01,74,0.593,77,2.753,92,2.194,141,2.337,169,3.266,250,3.927,251,4.357,252,5.679,253,4.724,254,3.12,255,6.09,256,6.09,257,5.238,258,3.12,259,5.238,260,4.357,261,4.357,262,3.82,263,4.724,264,3.751,265,5.239,266,5.215,267,5.215,268,5.961,269,5.215,270,4.724]],["title/interfaces/AppState-1.html",[0,0.415,250,1.894,271,1.662]],["body/interfaces/AppState-1.html",[0,0.725,2,1.737,3,0.167,4,0.148,5,0.13,18,0.012,20,0.221,21,0.01,22,0.01,74,0.597,92,2.211,141,2.356,169,3.309,250,3.958,252,5.724,253,4.786,254,3.161,255,6.124,256,5.724,257,5.648,258,3.161,259,4.414,262,3.87,263,4.786,264,3.781,265,5.269,266,5.284,267,5.284,269,5.284,272,4.414,273,6.039]],["title/components/AuthComponent.html",[149,0.462,201,1.193]],["body/components/AuthComponent.html",[3,0.091,4,0.081,5,0.071,8,0.258,9,0.765,11,0.351,16,1.083,17,0.398,18,0.012,20,0.091,21,0.007,22,0.007,35,0.817,41,0.843,44,1.029,46,0.717,47,0.736,55,0.765,66,2.752,68,1.005,74,0.61,75,0.38,87,0.394,89,0.739,119,3.608,123,1.579,133,2.401,134,1.341,149,0.697,150,1.005,151,1.52,152,1.071,153,1.038,154,1.071,155,1.071,157,1.856,158,1.071,159,2.654,160,2.571,161,1.569,163,1.569,166,2.043,169,3.944,172,1.645,177,1.308,179,1.888,181,1.355,194,1.071,195,1.569,196,1.569,197,1.071,198,2.043,199,1.071,200,1.071,201,1.802,202,1.071,203,0.916,204,1.071,205,0.945,206,1.071,207,0.945,208,1.071,209,0.945,210,1.187,211,1.071,212,0.945,213,1.569,214,0.945,215,1.071,216,0.945,217,1.071,218,0.945,219,0.81,220,1.071,221,0.945,222,1.071,223,0.945,224,1.071,225,0.945,226,0.974,227,1.071,228,0.945,229,1.071,230,0.945,231,1.071,232,0.945,233,0.835,234,0.945,235,1.071,236,0.945,237,1.005,238,1.071,239,0.945,240,1.071,241,0.945,242,1.071,243,0.945,244,1.071,245,0.945,246,1.071,247,0.945,248,1.071,249,1.071,250,1.8,254,3.768,258,1.719,264,2.979,271,1.579,274,2.873,275,4.51,276,5.691,277,4.81,278,5.481,279,2.401,280,6.298,281,4.81,282,3.284,283,3.284,284,2.239,285,1.719,286,2.603,287,1.8,288,2.873,289,2.105,290,2.239,291,2.603,292,2.518,293,3.284,294,3.284,295,3.284,296,3.284,297,3.284,298,2.873,299,1.889,300,2.603,301,3.284,302,3.284,303,2.873,304,2.873,305,2.239,306,5.691,307,1.106,308,1.459,309,2.873,310,3.516,311,2.239,312,2.239,313,3.284,314,2.873,315,2.33,316,2.873,317,2.239,318,3.284,319,3.284,320,1.719,321,1.579,322,1.719,323,5.285,324,6.298,325,1.579,326,5.834,327,2.873,328,2.401,329,3.812,330,2.873,331,3.812,332,2.059,333,3.516,334,2.636,335,2.603,336,3.516,337,2.41,338,3.224,339,6.066,340,2.873,341,2.603,342,2.873,343,2.873,344,2.873,345,2.603,346,2.401,347,2.603,348,4.51,349,4.16,350,4.51,351,1.99,352,4.208,353,2.873,354,2.873,355,2.401,356,2.239,357,2.401,358,1.8,359,1.8,360,1.8,361,1.889,362,1.579,363,1.8,364,1.889,365,1.719,366,2.767,367,1.99,368,1.99,369,1.889,370,2.603,371,3.284,372,2.873,373,2.873]],["title/modules/AuthModule.html",[374,2.171,375,3.032]],["body/modules/AuthModule.html",[3,0.139,4,0.124,5,0.109,18,0.012,20,0.139,21,0.009,22,0.009,35,0.855,44,0.827,55,0.801,74,0.703,75,0.582,87,0.605,92,1.541,119,3.234,141,1.642,149,0.718,177,2.006,201,2.324,223,2.324,258,2.636,332,2.155,375,6.04,376,2.326,377,2.981,378,4.405,379,4.405,380,3.234,381,2.523,382,5.035,383,3.536,384,5.114,385,6.231,386,5.035,387,6.231,388,3.536,389,2.636,390,4.136,391,3.91,392,2.078,393,3.728,394,4.564,395,2.759,396,4.405,397,3.68,398,4.405,399,3.91,400,3.051,401,4.4,402,3.433,403,4.4,404,3.433,405,5.035,406,5.035,407,3.433,408,4.405,409,4.405,410,4.405,411,5.035,412,3.536,413,4.405,414,2.636,415,3.051,416,4.405,417,5.646,418,5.035,419,4.405,420,2.421]],["title/injectables/AuthService.html",[31,0.851,119,2.079]],["body/injectables/AuthService.html",[1,4.534,3,0.06,4,0.053,5,0.047,8,0.116,11,0.732,14,3.06,16,1.452,17,0.607,18,0.012,19,1.303,20,0.06,21,0.005,22,0.005,28,1.303,31,0.718,33,0.865,35,0.594,36,1.633,41,0.883,42,1.088,43,2.523,44,1.257,46,1.493,47,0.884,48,2.654,52,1.3,54,2.158,55,1.216,56,2.243,66,3.01,74,0.589,75,0.251,76,0.807,77,1.003,78,0.708,80,0.965,81,1.044,82,1.721,85,0.807,86,0.755,87,0.261,92,2.299,93,3.088,95,2.241,96,0.807,99,2.766,113,3.758,115,6.838,119,1.753,127,5.364,141,2.473,142,5.427,146,3.842,169,3.536,172,1.083,175,2.385,177,0.865,179,1.868,181,2.078,210,0.863,226,1.038,264,3.378,275,1.721,285,1.137,286,1.721,292,3.659,307,1.696,308,2.237,309,1.9,310,3.68,311,2.385,312,2.385,314,1.9,315,1.872,338,0.929,413,3.06,421,1.9,422,3.497,423,4.391,424,5.035,425,5.035,426,5.035,427,5.035,428,5.035,429,3.497,430,3.497,431,3.99,432,3.497,433,3.06,434,2.772,435,3.99,436,3.68,437,3.497,438,3.497,439,4.399,440,2.171,441,3.497,442,2.385,443,3.497,444,2.171,445,3.05,446,2.171,447,2.171,448,2.241,449,3.497,450,2.171,451,2.171,452,2.171,453,3.06,454,3.497,455,2.171,456,2.171,457,3.497,458,2.171,459,3.497,460,2.171,461,2.171,462,3.497,463,2.171,464,3.06,465,3.497,466,2.171,467,2.772,468,2.171,469,3.06,470,3.427,471,2.171,472,2.171,473,3.497,474,3.497,475,3.497,476,2.171,477,3.497,478,2.171,479,3.06,480,3.99,481,2.171,482,1.9,483,1.9,484,1.392,485,2.171,486,2.814,487,1.721,488,2.171,489,2.171,490,3.06,491,1.721,492,2.171,493,2.241,494,1.249,495,1.721,496,1.9,497,2.171,498,4.391,499,3.497,500,3.497,501,3.497,502,2.171,503,2.171,504,3.497,505,3.497,506,2.171,507,2.171,508,2.171,509,2.171,510,4.391,511,4.391,512,3.497,513,3.497,514,2.171,515,3.497,516,2.171,517,2.171,518,2.171,519,1.9,520,2.171,521,2.171,522,5.035,523,2.171,524,2.171,525,2.171,526,1.9,527,3.842,528,2.171,529,2.171,530,2.171,531,2.171,532,2.171,533,2.171,534,1.9,535,3.497,536,3.497,537,2.171,538,2.171,539,2.171,540,2.66,541,3.497,542,3.497,543,3.497,544,3.497,545,2.171,546,2.171,547,3.497,548,5.035,549,4.391,550,2.171,551,3.06,552,3.497,553,2.171,554,2.171,555,2.171,556,2.171,557,2.171,558,3.497,559,2.171,560,2.171,561,2.171,562,2.171,563,2.171,564,2.171,565,2.171,566,2.171,567,3.497,568,3.497,569,2.171,570,2.171,571,2.171,572,1.9,573,1.721,574,1.721,575,6.453,576,3.497,577,2.171,578,2.171,579,2.171,580,2.241,581,2.241,582,2.241,583,1.721,584,1.721,585,1.721,586,5.899,587,4.391,588,3.05,589,3.497,590,2.171,591,3.497,592,3.497,593,4.391,594,2.171,595,3.497,596,2.171,597,2.171,598,2.171,599,2.171,600,5.035,601,3.06,602,2.171,603,3.497,604,3.497,605,3.497,606,3.497,607,3.497,608,2.171,609,3.497,610,3.497,611,2.171,612,2.171,613,1.721,614,2.171,615,3.497,616,2.171,617,2.171,618,2.171]],["title/interfaces/Autorisation.html",[0,0.498,619,3.032]],["body/interfaces/Autorisation.html",[0,0.872,2,1.754,3,0.169,4,0.15,5,0.131,8,0.327,9,1.155,16,1.808,17,0.601,18,0.012,19,1.809,20,0.201,21,0.01,22,0.01,28,1.809,66,2.192,74,0.504,285,3.191,307,2.804,470,3.64,580,3.907,581,5.148,582,5.148,619,5.671,620,4.831,621,5.334,622,4.157,623,4.157,624,3.693,625,3.507]],["title/modules/ComponentsModule.html",[374,2.171,626,2.273]],["body/modules/ComponentsModule.html",[3,0.126,4,0.112,5,0.098,18,0.012,20,0.126,21,0.008,22,0.008,74,0.707,75,0.527,87,0.547,177,1.815,205,2.39,221,2.39,236,2.224,237,1.395,239,2.39,243,2.39,245,2.39,292,2.385,332,1.95,376,2.105,377,2.793,380,3.03,381,2.283,383,3.313,388,3.313,389,2.385,391,3.663,392,1.881,393,3.165,395,3.313,399,3.663,400,2.76,401,4.122,402,3.107,403,4.122,404,3.107,414,2.385,626,4.705,627,3.986,628,3.986,629,3.986,630,4.556,631,4.419,632,5.29,633,3.986,634,4.419,635,3.331,636,6.046,637,4.556,638,5.29,639,3.986,640,4.792,641,3.611,642,6.046,643,4.556,644,4.556,645,4.556,646,4.556,647,4.556,648,4.556,649,3.611,650,4.556]],["title/components/DefaultComponent.html",[149,0.462,203,1.157]],["body/components/DefaultComponent.html",[3,0.133,4,0.118,5,0.104,8,0.257,18,0.012,20,0.133,21,0.009,22,0.009,35,1.062,41,1.221,44,1.028,47,0.809,55,0.763,68,1.47,74,0.397,75,0.555,87,0.577,89,1.409,134,1.745,149,0.775,150,1.47,151,1.977,152,1.566,153,1.517,154,1.566,155,1.566,157,2.271,158,1.566,159,2.742,160,2.657,161,2.041,163,2.041,166,2.406,172,1.544,173,2.177,188,3.077,189,3.274,190,3.274,191,3.274,192,3.274,193,2.762,194,1.566,195,2.041,196,2.041,197,1.566,198,2.406,199,1.566,200,1.566,201,1.381,202,1.566,203,2.057,204,1.566,205,1.381,206,1.566,207,1.381,208,1.566,209,1.381,210,1.544,211,1.566,212,1.381,213,2.041,214,1.381,215,1.566,216,1.381,217,1.566,218,1.381,219,1.185,220,1.566,221,1.381,222,1.566,223,1.381,224,1.566,225,1.381,226,1.425,227,1.566,228,1.381,229,1.566,230,1.381,231,1.566,232,1.381,233,1.221,234,1.381,235,1.566,236,1.381,237,1.47,238,1.566,239,1.381,240,1.566,241,1.381,242,1.566,243,1.381,244,1.566,245,1.381,246,1.566,247,1.381,248,1.566,249,1.566,651,4.201,652,6.962,653,6.258,654,4.802,655,4.802]],["title/modules/DefaultModule.html",[374,2.171,656,2.828]],["body/modules/DefaultModule.html",[3,0.161,4,0.143,5,0.125,18,0.012,20,0.161,21,0.01,22,0.01,74,0.681,75,0.673,87,0.699,177,2.318,203,2.397,292,3.046,332,2.491,376,2.688,377,3.263,380,3.54,381,2.917,383,3.871,388,3.871,389,3.046,393,3.697,395,3.871,414,3.046,626,3.871,631,5.163,656,5.683,657,5.092,658,5.092,659,5.092,660,5.82,661,5.82,662,5.82,663,4.816,664,3.968]],["title/interfaces/Diner.html",[0,0.498,665,1.994]],["body/interfaces/Diner.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.863,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.014,666,2.674,667,3.961,668,3.961,669,2.053,670,3.251,671,3.251,672,3.251,673,3.251,674,3.251,675,3.251,676,3.251,677,2.793,678,3.968,679,4.101,680,2.674]],["title/interfaces/ErrorDataHttp.html",[0,0.498,681,3.032]],["body/interfaces/ErrorDataHttp.html",[0,0.657,2,1.574,3,0.151,4,0.135,5,0.118,8,0.293,9,1.081,16,1.743,17,0.562,18,0.012,20,0.188,21,0.009,22,0.009,31,1.396,36,2.529,41,0.96,54,1.904,56,2.291,74,0.612,75,0.633,76,2.035,78,1.785,85,2.035,86,1.904,87,0.657,89,1.232,99,3.409,141,1.785,172,1.678,179,1.435,260,4,262,3.508,315,2.529,588,3.316,613,4.337,681,5.659,682,4.337,683,3.316,684,4.337,685,7.2,686,5.166,687,3.731,688,3.148,689,4.788,690,4.788,691,4.788,692,4.788,693,5.951,694,4.337,695,4.788,696,4.788,697,4.788,698,4.788,699,4.788]],["title/injectables/ErrorHttpService.html",[31,0.851,688,2.386]],["body/injectables/ErrorHttpService.html",[0,0.59,3,0.136,4,0.121,5,0.106,8,0.263,9,1.01,11,0.526,16,1.675,17,0.525,18,0.012,20,0.176,21,0.009,22,0.009,31,1.303,33,1.957,35,1.078,36,2.935,41,1.234,44,1.266,46,1.072,47,0.635,52,1.826,54,2.21,55,1.01,56,2.37,74,0.582,75,0.568,76,1.826,78,1.602,85,1.826,86,1.709,87,0.59,89,1.106,99,3.183,141,1.602,172,1.836,173,2.21,174,2.284,179,1.846,260,4.642,262,4.07,315,2.767,588,3.848,613,5.033,681,5.145,682,6.255,683,4.782,684,3.893,685,6.905,686,5.026,687,3.349,688,3.653,689,6.158,690,5.557,691,6.158,692,5.557,693,6.51,694,5.033,695,5.557,696,6.158,697,4.297,698,6.51,699,4.297,700,6.351,701,4.912,702,4.912,703,4.912,704,4.912]],["title/components/FooterComponent.html",[149,0.462,205,1.193]],["body/components/FooterComponent.html",[3,0.128,4,0.114,5,0.1,8,0.248,18,0.012,20,0.128,21,0.008,22,0.008,35,1.037,41,1.199,44,1.004,47,0.79,55,0.736,68,1.417,74,0.383,75,0.535,87,0.556,89,1.375,134,1.704,149,0.761,150,1.417,151,1.93,152,1.51,153,1.462,154,1.51,155,1.51,157,2.23,158,1.51,159,2.735,160,2.65,161,1.992,163,1.992,166,2.372,172,1.507,194,1.51,195,1.992,196,1.992,197,1.51,198,2.372,199,1.51,200,1.51,201,1.331,202,1.51,203,1.291,204,1.51,205,2.092,206,1.51,207,1.331,208,1.51,209,1.331,210,1.507,211,1.51,212,1.331,213,1.992,214,1.331,215,1.51,216,1.331,217,1.51,218,1.331,219,1.142,220,1.51,221,1.331,222,1.51,223,1.331,224,1.51,225,1.331,226,1.373,227,1.51,228,1.331,229,1.51,230,1.331,231,1.51,232,1.331,233,1.177,234,1.331,235,1.51,236,1.331,237,1.417,238,1.51,239,1.331,240,1.51,241,1.331,242,1.51,243,1.331,244,1.51,245,1.331,246,1.51,247,1.331,248,1.51,249,1.51,334,2.536,338,2.615,356,3.156,359,3.348,361,3.514,705,4.05,706,5.983,707,6.839,708,6.109,709,4.629,710,4.629,711,6.109,712,6.109,713,6.109,714,6.109,715,6.109,716,4.629,717,2.966,718,2.804,719,4.05,720,3.668,721,2.662,722,3.156,723,4.05,724,2.423,725,4.629]],["title/interfaces/Franchisee.html",[0,0.498,210,1.023]],["body/interfaces/Franchisee.html",[0,0.638,2,1.527,3,0.147,4,0.131,5,0.114,8,0.285,9,1.061,11,0.929,16,1.878,17,0.695,18,0.012,19,2.548,20,0.147,21,0.009,22,0.009,23,4.53,28,2.272,47,0.99,57,6.069,66,2.754,74,0.552,210,1.647,624,4.64,625,4.405,726,4.646,727,6.7,728,6.7,729,6.7,730,6.7,731,5.31,732,5.31]],["title/components/FranchiseeComponent.html",[149,0.462,207,1.193]],["body/components/FranchiseeComponent.html",[3,0.057,4,0.05,5,0.044,8,0.11,9,0.531,11,0.574,16,0.752,17,0.62,18,0.012,19,1.705,20,0.057,21,0.005,22,0.005,23,3.461,28,1.445,35,0.567,36,1.571,41,0.586,44,1.272,46,1.17,47,0.783,53,0.948,55,0.914,64,2.801,68,0.628,72,1.878,74,0.568,75,0.237,83,0.912,87,0.246,89,0.462,96,0.763,123,0.986,134,0.932,141,0.669,149,0.47,150,0.628,151,1.055,152,0.669,153,1.335,154,0.669,155,0.669,157,1.378,158,0.669,159,2.5,160,2.423,161,1.09,163,1.09,166,1.588,172,1.849,173,1.162,174,2.067,178,0.912,179,1.277,183,2.141,194,0.669,195,1.09,196,1.09,197,0.669,198,1.588,199,0.669,200,0.669,201,0.59,202,0.669,203,0.572,204,0.669,205,0.59,206,0.669,207,1.401,208,0.669,209,0.59,210,1.985,211,0.669,212,0.961,213,1.09,214,0.59,215,0.669,216,0.59,217,0.669,218,0.59,219,0.506,220,0.669,221,0.59,222,0.669,223,0.59,224,0.669,225,0.59,226,0.609,227,0.669,228,0.59,229,0.669,230,0.59,231,0.669,232,0.59,233,0.522,234,0.59,235,0.669,236,0.59,237,0.628,238,0.669,239,0.59,240,0.669,241,0.59,242,0.669,243,0.59,244,0.669,245,0.59,246,0.669,247,0.59,248,0.669,249,0.669,264,2.212,271,2.763,307,2.2,315,1.811,320,3.008,321,2.763,322,3.008,325,3.37,338,3.29,356,1.399,357,1.5,358,1.831,360,1.124,362,2.341,363,2.938,364,2.801,365,3.306,366,3.306,367,2.56,368,2.56,420,1.606,445,2.024,448,2.141,494,1.18,588,1.243,625,1.922,669,2.43,724,3.172,733,1.795,734,6.133,735,3.017,736,4.226,737,3.919,738,2.881,739,3.919,740,3.757,741,3.697,742,3.349,743,2.56,744,3.697,745,3.341,746,4.226,747,3.697,748,2.708,749,5.006,750,3.349,751,3.56,752,4.226,753,3.697,754,3.697,755,4.87,756,2.923,757,2.923,758,1.795,759,3.306,760,3.671,761,2.43,762,2.549,763,3.341,764,2.052,765,3.341,766,2.052,767,2.052,768,2.923,769,2.052,770,2.923,771,2.052,772,3.341,773,2.052,774,2.052,775,2.052,776,2.052,777,2.052,778,2.052,779,2.052,780,2.052,781,2.052,782,3.089,783,2.052,784,2.052,785,2.052,786,2.052,787,2.052,788,2.052,789,4.226,790,3.697,791,2.052,792,1.795,793,1.315,794,1.315,795,1.626,796,1.626,797,2.052,798,1.5,799,1.315,800,1.5,801,1.5,802,2.052,803,2.052,804,2.052,805,1.028,806,1.831,807,2.052,808,2.052,809,2.052,810,1.795,811,2.052,812,2.052,813,1.124,814,1.18,815,1.315,816,1.315,817,1.795,818,1.795,819,1.399,820,1.399,821,1.399,822,4.691,823,1.795,824,1.795,825,2.923,826,4.261,827,4.261,828,2.923,829,2.923,830,1.795,831,3.341,832,2.708,833,1.795,834,2.052,835,2.052,836,5.715,837,2.648,838,2.923,839,2.648,840,2.923,841,2.278,842,2.708,843,2.923,844,3.349,845,2.56,846,1.795,847,1.795,848,2.442,849,2.052,850,2.801,851,2.801,852,2.881,853,2.801,854,2.881,855,2.669,856,3.084,857,2.708,858,2.442,859,1.795,860,1.795,861,4.261,862,1.626,863,1.795,864,2.052,865,2.052,866,1.626,867,1.795,868,1.399,869,1.795,870,1.315,871,1.795,872,1.399,873,1.5,874,1.399,875,2.278,876,1.399,877,1.399,878,1.399,879,2.278,880,2.052,881,1.795,882,1.5,883,1.315,884,1.5,885,1.18,886,2.024,887,3.306,888,2.052,889,2.923,890,1.243,891,1.795,892,1.399,893,2.024,894,2.648,895,2.442,896,3.341,897,2.923,898,2.923,899,2.923,900,2.923,901,2.923,902,2.923,903,2.923,904,2.442,905,2.648,906,2.442,907,2.442,908,3.341,909,2.923,910,2.923,911,1.5,912,1.399,913,1.399,914,1.315,915,2.923,916,2.923,917,1.5,918,1.922,919,1.243,920,1.795,921,1.626,922,2.442,923,1.626]],["title/components/FranchiseeDetailComponent.html",[149,0.462,209,1.193]],["body/components/FranchiseeDetailComponent.html",[3,0.07,4,0.062,5,0.055,8,0.136,9,0.628,11,0.271,17,0.579,18,0.012,19,1.172,20,0.07,21,0.005,22,0.005,23,3.454,28,1.628,35,0.67,36,2.344,41,0.692,44,1.273,46,0.552,47,0.628,55,1.047,68,0.775,74,0.592,75,0.293,87,0.304,89,1.093,96,1.468,134,1.101,149,0.54,150,0.775,151,1.248,152,0.825,153,0.8,154,0.825,155,0.825,157,1.584,158,0.825,159,2.575,160,2.495,161,1.288,163,1.288,166,1.789,172,1.875,173,0.881,174,1.42,177,1.008,178,1.125,179,1.787,194,0.825,195,1.288,196,1.288,197,0.825,198,1.789,199,0.825,200,0.825,201,0.728,202,0.825,203,0.706,204,0.825,205,0.728,206,0.825,207,0.728,208,0.825,209,1.578,210,1.927,211,0.825,212,0.728,213,1.288,214,0.728,215,0.825,216,0.728,217,0.825,218,0.728,219,0.624,220,0.825,221,0.728,222,0.825,223,0.728,224,0.825,225,0.728,226,0.751,227,0.825,228,0.728,229,0.825,230,0.728,231,0.825,232,0.728,233,0.644,234,0.728,235,0.825,236,0.728,237,0.775,238,0.825,239,0.728,240,0.825,241,0.728,242,0.825,243,0.728,244,0.825,245,0.728,246,0.825,247,0.728,248,0.825,249,0.825,280,4.8,307,1.33,356,1.726,357,1.85,358,2.164,360,1.387,362,1.217,363,2.164,364,1.456,365,2.067,392,1.045,445,1.533,669,2.533,670,1.125,671,1.125,672,1.125,673,1.125,674,1.125,675,1.125,676,1.125,724,1.325,735,3.306,740,1.456,747,4.249,749,3.848,758,2.214,759,3.626,761,2.793,762,2.872,790,2.214,795,2.006,796,2.006,798,1.85,799,1.622,813,2.661,814,2.793,816,1.622,822,2.214,842,1.622,844,2.006,845,1.533,855,2.164,861,3.455,862,2.006,897,3.455,898,3.455,899,3.455,900,3.455,901,3.455,902,3.455,903,3.455,909,3.455,910,3.455,911,1.85,912,1.726,913,1.726,914,1.622,915,3.455,916,3.455,917,1.85,918,2.271,919,1.533,920,2.214,921,2.006,922,2.887,923,2.006,924,6.191,925,6.191,926,2.214,927,4.856,928,3.949,929,5.486,930,4.8,931,5.486,932,5.486,933,3.516,934,4.8,935,4.813,936,2.942,937,3.324,938,3.848,939,3.949,940,2.531,941,2.531,942,2.531,943,2.531,944,2.531,945,2.531,946,2.531,947,2.531,948,2.531,949,2.531,950,2.531,951,2.531,952,2.531,953,2.531,954,1.533,955,2.214,956,2.531,957,2.531,958,3.949,959,2.531,960,2.531,961,2.214,962,2.531,963,2.531,964,2.531,965,2.531,966,1.533,967,1.533,968,2.531,969,3.989,970,2.531,971,2.531,972,2.531,973,2.531,974,2.531,975,2.531,976,2.531,977,2.531,978,2.531,979,2.531,980,2.531,981,2.531,982,2.531,983,2.531,984,2.531,985,2.531,986,2.531,987,2.531,988,2.531,989,2.531,990,2.531,991,2.531,992,2.531,993,2.531,994,2.531,995,2.531,996,2.531,997,2.531,998,2.531,999,2.531,1000,2.531,1001,2.531,1002,2.531,1003,2.531,1004,2.531,1005,2.531,1006,2.531,1007,2.531,1008,2.531,1009,2.531,1010,2.214,1011,2.531,1012,3.949,1013,3.949,1014,3.949,1015,3.949,1016,3.949,1017,3.949,1018,3.949,1019,3.949,1020,3.949,1021,3.949,1022,3.949,1023,3.949,1024,3.949,1025,3.949,1026,3.949,1027,3.949,1028,3.949,1029,3.949,1030,3.949,1031,3.949,1032,3.949,1033,3.949,1034,3.949,1035,3.949]],["title/components/FranchiseeDialogComponent.html",[149,0.462,212,1.193]],["body/components/FranchiseeDialogComponent.html",[3,0.067,4,0.059,5,0.052,8,0.13,9,0.606,11,0.259,17,0.596,18,0.012,20,0.067,21,0.005,22,0.005,23,3.388,25,1.915,26,1.766,27,1.915,29,1.915,30,1.915,32,4.73,35,0.647,36,2.723,41,0.668,44,1.282,46,0.528,47,0.691,53,2.989,55,1.029,66,0.869,68,0.74,72,2.98,74,0.614,75,0.279,87,0.29,96,1.416,123,1.831,134,1.062,149,0.525,150,0.74,151,1.203,152,0.788,153,0.763,154,0.788,155,0.788,157,1.537,158,0.788,159,2.56,160,2.48,161,1.242,163,1.242,166,1.745,172,1.939,173,0.841,174,0.869,178,1.074,179,1.973,194,0.788,195,1.242,196,1.242,197,0.788,198,1.745,199,0.788,200,0.788,201,0.695,202,0.788,203,0.674,204,0.788,205,0.695,206,0.788,207,0.695,208,0.788,209,0.695,210,1.926,211,0.788,212,1.539,213,1.242,214,0.695,215,0.788,216,0.695,217,0.788,218,0.695,219,0.596,220,0.788,221,0.695,222,0.788,223,0.695,224,0.788,225,0.695,226,0.717,227,0.788,228,0.695,229,0.788,230,0.695,231,0.788,232,0.695,233,0.615,234,0.695,235,0.788,236,0.695,237,0.74,238,0.788,239,0.695,240,0.788,241,0.695,242,0.788,243,0.695,244,0.788,245,0.695,246,0.788,247,0.695,248,0.788,249,0.788,271,2.266,287,1.324,292,1.994,307,1.283,315,2.299,334,2.583,392,0.997,439,3.214,445,1.464,494,1.39,495,1.915,496,2.114,624,1.464,625,2.711,669,2.379,735,2.989,743,2.307,751,3.91,759,3.722,761,2.711,762,2.8,782,4.254,793,1.549,794,1.549,795,1.915,796,1.915,798,1.766,799,1.549,800,5.744,805,1.211,806,1.324,813,2.583,814,2.711,815,3.021,816,1.549,817,2.114,819,2.597,820,2.597,821,1.648,836,4.68,848,3.445,850,2.191,851,2.191,853,2.191,855,2.087,856,2.191,862,1.915,863,4.68,885,2.191,886,2.307,887,3.857,889,3.332,890,2.307,893,2.307,894,3.018,895,2.784,919,1.464,924,6.228,933,3.428,936,2.856,937,3.241,954,1.464,955,2.114,961,2.114,966,1.464,967,1.464,969,4.062,1010,4.124,1036,1.915,1037,4.124,1038,3.332,1039,5.092,1040,4.714,1041,4.68,1042,3.428,1043,4.239,1044,2.114,1045,5.092,1046,3.332,1047,2.417,1048,2.417,1049,2.417,1050,2.417,1051,2.417,1052,2.417,1053,2.417,1054,2.114,1055,2.114,1056,2.417,1057,2.114,1058,2.417,1059,2.417,1060,2.114,1061,2.417,1062,2.114,1063,2.417,1064,4.68,1065,2.114,1066,2.417,1067,2.417,1068,2.417,1069,2.417,1070,1.549,1071,2.417,1072,2.417,1073,2.417,1074,1.915,1075,2.417,1076,2.417,1077,2.417,1078,2.417,1079,2.417,1080,2.417,1081,2.417,1082,2.417,1083,2.417,1084,2.417,1085,2.417,1086,2.417,1087,2.417,1088,2.417,1089,2.417,1090,2.417,1091,2.417,1092,2.417,1093,2.417,1094,2.417,1095,2.417,1096,2.417,1097,2.417,1098,2.417,1099,2.417,1100,2.417,1101,3.809,1102,2.114,1103,2.417,1104,2.417,1105,3.809,1106,2.417,1107,2.417,1108,2.417,1109,2.417,1110,2.597,1111,3.332,1112,2.114,1113,1.648,1114,2.417,1115,2.417,1116,2.114,1117,1.766,1118,2.114,1119,5.314,1120,4.901,1121,5.349,1122,2.191,1123,3.809,1124,3.809,1125,3.809,1126,3.809,1127,3.809,1128,3.021,1129,1.549,1130,2.441,1131,1.549,1132,1.549,1133,1.549,1134,3.021,1135,3.021,1136,3.021,1137,2.191,1138,2.087,1139,1.549,1140,1.549,1141,1.464,1142,1.549,1143,1.549]],["title/modules/FranchiseeModule.html",[374,2.171,1144,3.032]],["body/modules/FranchiseeModule.html",[3,0.12,4,0.107,5,0.094,18,0.012,20,0.12,21,0.008,22,0.008,28,1.29,74,0.714,75,0.503,76,1.616,87,0.522,109,4.387,111,2.786,112,2.786,113,2.633,141,1.418,149,0.652,177,1.731,181,1.794,207,2.242,209,2.242,210,1.445,212,2.28,332,1.861,376,2.008,377,2.706,380,2.936,381,2.178,383,3.21,388,3.21,389,2.275,390,3.755,391,3.549,392,1.794,393,3.067,394,4.247,395,2.382,399,3.549,400,2.633,401,3.994,402,2.964,403,3.994,404,2.964,412,3.21,414,2.275,415,2.633,420,2.816,626,3.21,634,4.282,635,3.177,663,3.994,664,2.964,759,4.387,794,2.786,798,3.177,800,3.177,801,3.177,925,3.445,1144,6.101,1145,3.803,1146,3.803,1147,3.803,1148,4.347,1149,5.126,1150,4.282,1151,4.282,1152,4.282,1153,3.177,1154,4.282,1155,3.177,1156,4.282,1157,3.177,1158,4.282,1159,3.177,1160,4.282,1161,3.177,1162,4.282,1163,3.177,1164,5.126,1165,5.126,1166,3.803,1167,4.282,1168,3.177,1169,5.126,1170,3.803,1171,5.126,1172,3.803,1173,3.177,1174,4.347,1175,4.347,1176,3.177,1177,3.177,1178,3.177,1179,3.177]],["title/interfaces/FranchiseeRecipe.html",[0,0.498,1180,2.828]],["body/interfaces/FranchiseeRecipe.html",[0,0.721,2,1.727,3,0.166,4,0.148,5,0.129,8,0.322,9,1.144,11,0.905,17,0.661,18,0.012,19,2.526,20,0.166,21,0.01,22,0.01,28,2.371,74,0.497,233,2.152,1180,4.908,1181,5.254,1182,5.254,1183,5.842,1184,5.449,1185,5.254]],["title/injectables/FranchiseeService.html",[31,0.851,759,2.386]],["body/injectables/FranchiseeService.html",[3,0.079,4,0.07,5,0.062,8,0.153,11,0.758,17,0.586,18,0.012,19,2.154,20,0.079,21,0.006,22,0.006,28,2.042,31,0.891,33,1.14,35,0.737,36,3.067,41,0.761,42,1.435,43,2.934,44,1.193,46,1.547,47,0.916,48,2.087,50,4.397,52,2.463,53,3.059,54,2.394,55,1.26,56,2.687,64,3.619,72,3.226,74,0.586,75,0.331,76,1.064,77,1.322,78,0.934,80,1.272,81,1.376,83,2.331,84,1.734,85,1.064,86,0.996,87,0.344,89,0.644,90,4.077,92,2.222,93,3.467,96,2.463,97,2.63,99,3.552,101,3.361,104,3.361,105,2.092,107,2.782,172,0.706,179,1.139,210,2.095,233,2.083,315,1.064,484,1.835,486,2.782,493,1.835,540,4.012,669,1.67,683,1.734,686,2.63,688,3.958,749,2.269,759,2.497,818,5.122,1180,5.046,1184,1.952,1185,2.504,1186,2.504,1187,5.245,1188,5.245,1189,5.245,1190,5.245,1191,5.854,1192,4.342,1193,5.854,1194,2.863,1195,2.863,1196,2.863,1197,3.798,1198,3.178,1199,4.342,1200,2.863,1201,5.854,1202,2.863,1203,2.863,1204,4.279,1205,2.863,1206,2.863,1207,5.854,1208,2.863,1209,2.863,1210,2.863,1211,4.589,1212,4.342,1213,4.342,1214,2.863,1215,2.863,1216,2.863,1217,2.863,1218,2.504,1219,2.092,1220,5.245,1221,2.863,1222,6.202,1223,6.881,1224,6.202,1225,4.294,1226,3.441,1227,4.342,1228,2.863,1229,2.863,1230,2.863,1231,2.863,1232,2.269,1233,2.863,1234,2.863,1235,2.863,1236,2.863,1237,2.863,1238,4.342,1239,2.863,1240,2.863,1241,2.863,1242,2.863,1243,2.863,1244,2.092,1245,2.092]],["title/interfaces/Friday.html",[0,0.498,674,1.843]],["body/interfaces/Friday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.251,672,3.251,673,3.251,674,3.409,675,3.251,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/components/HomeComponent.html",[149,0.462,214,1.193]],["body/components/HomeComponent.html",[3,0.13,4,0.115,5,0.101,8,0.251,18,0.012,20,0.13,21,0.009,22,0.009,35,1.046,41,1.207,44,1.013,47,0.797,55,0.746,68,1.436,74,0.388,75,0.542,87,0.563,89,1.387,134,1.719,149,0.766,150,1.436,151,1.947,152,1.529,153,1.482,154,1.529,155,1.529,157,2.245,158,1.529,159,2.738,160,2.653,161,2.01,163,2.01,166,2.384,172,1.52,188,3.005,189,3.197,190,3.197,191,3.197,192,3.197,193,2.697,194,1.529,195,2.01,196,2.01,197,1.529,198,2.384,199,1.529,200,1.529,201,1.349,202,1.529,203,1.308,204,1.529,205,1.349,206,1.529,207,1.349,208,1.529,209,1.349,210,1.52,211,1.529,212,1.349,213,2.01,214,2.103,215,1.529,216,1.349,217,1.529,218,1.349,219,1.157,220,1.529,221,1.349,222,1.529,223,1.349,224,1.529,225,1.349,226,1.391,227,1.529,228,1.349,229,1.529,230,1.349,231,1.529,232,1.349,233,1.193,234,1.349,235,1.529,236,1.349,237,1.436,238,1.529,239,1.349,240,1.529,241,1.349,242,1.529,243,1.349,244,1.529,245,1.349,246,1.529,247,1.349,248,1.529,249,1.529,337,3.088,349,4.504,551,5.391,1246,4.103,1247,6.162,1248,6.883,1249,6.162,1250,4.69,1251,4.69,1252,6.162,1253,6.162,1254,6.162,1255,6.162,1256,6.162]],["title/modules/HomeModule.html",[374,2.171,1257,3.032]],["body/modules/HomeModule.html",[3,0.15,4,0.133,5,0.117,18,0.012,20,0.15,21,0.009,22,0.009,74,0.701,75,0.628,87,0.652,141,1.77,149,0.604,177,2.162,214,2.46,332,2.323,376,2.507,377,3.125,380,3.391,381,2.72,383,3.707,388,3.707,389,2.841,391,4.099,392,2.24,393,3.542,394,4.725,395,2.974,399,4.099,400,3.288,401,4.613,402,3.7,403,4.613,404,3.7,412,2.974,414,2.841,415,3.288,631,4.946,632,5.92,633,4.748,634,4.946,635,3.967,1257,6.004,1258,4.748,1259,4.748,1260,4.748,1261,5.427,1262,6.766,1263,5.427,1264,5.427]],["title/interceptors/HttpErrorInterceptor.html",[108,3.287,1265,3.287]],["body/interceptors/HttpErrorInterceptor.html",[3,0.12,4,0.107,5,0.094,8,0.233,11,0.709,17,0.548,18,0.012,20,0.12,21,0.008,22,0.008,31,1.202,35,0.995,41,0.762,44,1.089,46,1.447,47,0.857,48,2.816,54,1.512,55,1.128,56,2.493,74,0.586,75,0.503,76,1.616,78,1.418,83,3.29,87,0.522,88,2.008,89,0.978,92,1.793,110,3.803,117,5.126,122,6.205,123,3.186,124,6.205,130,3.803,131,5.126,134,1.212,160,1.793,173,1.512,178,1.932,179,1.738,193,4.079,226,1.966,262,3.755,315,2.898,484,2.786,486,3.755,686,4.297,694,3.445,735,3.523,850,4.258,851,4.258,853,4.258,855,4.057,857,3.755,870,3.755,881,5.126,883,4.745,885,3.37,1232,5.867,1265,4.643,1266,6.205,1267,6.205,1268,3.803,1269,5.859,1270,4.347,1271,4.347,1272,5.859,1273,4.347,1274,5.859,1275,5.859,1276,5.859,1277,5.859,1278,5.859,1279,5.859,1280,5.126,1281,5.859,1282,5.859,1283,4.347,1284,3.803,1285,4.347,1286,4.347,1287,3.445,1288,4.347,1289,3.177,1290,6.477,1291,6.627,1292,7.795,1293,7.404,1294,5.859,1295,5.859,1296,5.859,1297,5.859,1298,5.62,1299,4.347,1300,4.347,1301,4.347,1302,4.347,1303,5.126,1304,5.859,1305,4.347,1306,4.347,1307,4.347]],["title/interfaces/IngreType.html",[0,0.498,1308,2.171]],["body/interfaces/IngreType.html",[0,0.728,2,1.744,3,0.168,4,0.149,5,0.131,8,0.325,9,1.151,11,0.906,16,1.919,17,0.663,18,0.012,19,2.296,20,0.168,21,0.01,22,0.01,28,2.379,47,1.036,52,2.981,292,4.196,1308,3.789,1309,3.885,1310,4.804]],["title/interfaces/Ingredient.html",[0,0.498,219,1.023]],["body/interfaces/Ingredient.html",[0,0.713,2,1.708,3,0.164,4,0.146,5,0.128,8,0.318,9,1.137,11,0.903,16,1.727,17,0.658,18,0.012,19,2.276,20,0.164,21,0.01,22,0.01,28,2.363,47,1.029,74,0.491,90,3.416,219,1.893,307,2.584,1308,4.168,1311,5.196,1312,6.31,1313,5.103,1314,3.416,1315,3.254]],["title/components/IngredientComponent.html",[149,0.462,216,1.193]],["body/components/IngredientComponent.html",[3,0.049,4,0.044,5,0.038,8,0.095,9,0.471,11,0.477,17,0.612,18,0.012,19,1.322,20,0.049,21,0.004,22,0.004,28,1.132,35,0.503,41,0.519,44,1.246,46,0.972,47,0.735,54,0.617,55,1.015,68,0.543,74,0.47,75,0.205,83,0.788,86,0.617,87,0.213,89,0.399,96,1.101,123,1.833,134,0.826,141,0.578,149,0.424,150,0.543,151,0.936,152,0.578,153,1.205,154,0.578,155,0.578,157,1.244,158,0.578,159,2.441,160,2.365,161,0.966,163,0.966,165,1.898,166,1.453,172,1.857,173,1.327,174,1.602,178,0.788,179,1.562,181,2.045,183,1.898,194,0.578,195,0.966,196,0.966,197,0.578,198,1.616,199,0.578,200,0.578,201,0.51,202,0.578,203,0.495,204,0.578,205,0.51,206,0.578,207,0.51,208,0.578,209,0.51,210,0.731,211,0.578,212,0.51,213,0.966,214,0.51,215,0.578,216,1.281,217,0.578,218,0.51,219,1.917,220,0.578,221,0.51,222,0.578,223,0.51,224,0.578,225,0.51,226,0.526,227,0.578,228,0.51,229,0.578,230,0.51,231,0.578,232,0.51,233,0.451,234,0.51,235,0.578,236,0.51,237,0.543,238,0.578,239,0.51,240,0.578,241,0.51,242,0.578,243,0.51,244,0.578,245,0.51,246,0.578,247,0.51,248,0.578,249,0.578,271,0.852,307,2.006,308,2.525,315,2.301,320,2.593,321,2.382,322,2.593,325,3.714,334,2.934,337,2.233,338,2.929,351,1.074,358,0.972,359,0.972,360,2.934,361,1.02,362,2.975,363,1.623,364,1.704,365,1.55,366,1.02,367,2.311,369,3.08,392,0.732,420,1.424,448,1.136,588,1.794,717,3.642,718,2.311,720,1.405,721,2.562,722,3.378,724,2.974,735,2.858,738,2.019,739,2.6,740,3.559,743,2.311,748,2.444,750,3.023,760,3.749,805,0.889,806,0.972,813,2.09,814,2.194,815,2.444,832,2.444,841,1.209,842,1.898,845,3.749,850,3.08,851,3.08,852,2.6,853,3.08,854,2.6,855,2.934,856,2.194,857,2.444,868,1.209,870,1.136,872,1.209,873,1.296,874,1.209,875,2.019,876,1.209,877,1.209,878,1.209,879,2.019,882,1.296,883,2.444,884,2.788,885,2.194,886,2.311,887,2.85,890,2.311,892,1.209,893,3.244,904,2.165,905,2.347,906,2.165,907,2.165,912,2.019,913,1.209,914,1.136,918,2.562,922,3.256,923,2.347,933,2.855,936,2.311,937,2.699,954,1.074,966,1.794,967,1.074,969,1.074,1042,2.855,1070,2.444,1113,1.209,1117,1.296,1120,2.165,1122,1.02,1128,2.855,1129,1.136,1130,1.898,1131,1.136,1132,1.136,1133,1.136,1134,2.444,1135,2.444,1136,2.444,1137,1.704,1138,1.623,1139,1.136,1140,1.136,1141,1.074,1142,1.136,1143,1.136,1289,1.296,1308,2.593,1309,1.136,1312,4.243,1313,1.136,1314,1.02,1315,3.114,1316,4.625,1317,1.551,1318,3.814,1319,2.6,1320,2.788,1321,3.914,1322,2.962,1323,3.814,1324,3.898,1325,3.337,1326,2.591,1327,3.53,1328,3.898,1329,2.962,1330,3.898,1331,4.455,1332,2.591,1333,1.773,1334,3.651,1335,3.874,1336,2.962,1337,2.962,1338,1.773,1339,1.773,1340,1.773,1341,1.773,1342,2.962,1343,1.773,1344,1.773,1345,1.773,1346,1.773,1347,1.773,1348,2.962,1349,1.773,1350,1.773,1351,1.773,1352,1.773,1353,1.773,1354,1.773,1355,1.773,1356,1.773,1357,1.773,1358,1.773,1359,1.773,1360,2.962,1361,1.296,1362,1.551,1363,1.296,1364,1.209,1365,1.551,1366,1.551,1367,1.551,1368,3.926,1369,1.551,1370,1.551,1371,1.773,1372,1.773,1373,1.773,1374,1.773,1375,3.337,1376,4.954,1377,2.962,1378,2.962,1379,2.962,1380,1.773,1381,1.773,1382,1.551,1383,2.962,1384,4.954,1385,3.53,1386,4.455,1387,1.551,1388,1.773,1389,1.551,1390,1.551,1391,3.337,1392,1.773,1393,1.551,1394,1.773,1395,1.405,1396,1.405,1397,1.405,1398,1.773,1399,2.962,1400,2.962,1401,2.591,1402,1.773,1403,1.773,1404,2.962,1405,2.962,1406,2.962,1407,2.962,1408,2.591,1409,2.591,1410,2.591,1411,1.773,1412,1.551,1413,3.53,1414,1.773,1415,1.773,1416,1.551,1417,1.405,1418,1.773,1419,1.773,1420,1.405,1421,1.405,1422,1.773,1423,1.773,1424,1.773,1425,2.962,1426,1.773,1427,1.551,1428,1.773,1429,1.773,1430,1.296,1431,1.405,1432,1.773,1433,1.773,1434,1.773,1435,1.773,1436,2.591,1437,1.773,1438,1.773,1439,1.773,1440,1.773,1441,1.551,1442,3.337,1443,1.551,1444,3.337,1445,1.551,1446,1.551,1447,1.405,1448,1.551,1449,1.551,1450,1.551,1451,4.334,1452,2.347,1453,1.551,1454,5.738,1455,3.337,1456,3.256,1457,1.551,1458,2.591,1459,4.685,1460,2.591,1461,3.337,1462,1.551,1463,1.296,1464,1.551,1465,1.551,1466,1.551,1467,3.337,1468,1.296,1469,1.296,1470,1.551,1471,1.551,1472,1.405,1473,1.405,1474,1.551,1475,1.405,1476,1.551,1477,3.898,1478,1.405,1479,1.296,1480,1.551,1481,2.962,1482,2.591]],["title/injectables/IngredientService.html",[31,0.851,1334,2.828]],["body/injectables/IngredientService.html",[3,0.117,4,0.104,5,0.091,8,0.228,11,0.751,17,0.581,18,0.012,19,1.942,20,0.117,21,0.008,22,0.008,28,1.71,31,1.183,33,1.69,35,0.978,36,3.056,41,0.744,42,2.127,43,3.519,44,1.207,46,1.533,47,0.908,48,2.771,50,4.588,52,2.434,53,2.662,54,2.443,55,1.253,56,2.691,60,5.188,64,3.765,72,3.263,74,0.626,75,0.491,76,1.578,77,1.96,78,1.384,80,1.886,81,2.04,83,1.886,84,2.571,85,1.578,86,1.476,87,0.51,88,1.96,89,0.955,90,4.039,92,2.15,93,3.676,95,4.5,96,2.434,97,2.571,99,3.28,101,2.719,104,4.195,107,2.719,219,2.063,233,1.466,368,3.492,1184,3.93,1198,3.966,1204,4.785,1226,3.363,1315,3.158,1326,5.043,1332,5.043,1334,3.93,1361,3.102,1483,3.712,1484,5.764,1485,7.022,1486,4.243,1487,5.764,1488,4.243,1489,5.764,1490,4.243,1491,6.546,1492,5.727,1493,4.243,1494,5.764,1495,4.243,1496,5.764,1497,4.243,1498,4.243,1499,3.712,1500,5.764,1501,4.243,1502,3.102,1503,4.243]],["title/components/IngredientTypeComponent.html",[149,0.462,218,1.193]],["body/components/IngredientTypeComponent.html",[3,0.066,4,0.059,5,0.051,8,0.128,9,0.599,11,0.5,17,0.648,18,0.012,19,1.118,20,0.066,21,0.005,22,0.005,35,0.64,41,0.661,44,1.258,46,1.02,47,0.795,52,2.15,55,1.092,68,0.73,74,0.478,75,0.276,83,1.06,87,0.286,89,0.537,96,1.401,123,1.146,134,1.051,149,0.52,150,0.73,151,1.19,152,0.778,153,1.476,154,0.778,155,0.778,157,1.524,158,0.778,159,2.555,160,2.476,161,1.229,163,1.229,166,1.732,172,1.934,173,1.311,174,1.355,178,1.06,179,1.688,181,1.928,194,0.778,195,1.229,196,1.229,197,0.778,198,1.732,199,0.778,200,0.778,201,0.686,202,0.778,203,0.665,204,0.778,205,0.686,206,0.778,207,0.686,208,0.778,209,0.686,210,0.93,211,0.778,212,0.686,213,1.229,214,0.686,215,0.778,216,0.686,217,0.778,218,1.527,219,1.695,220,0.778,221,0.686,222,0.778,223,0.686,224,0.778,225,0.686,226,0.707,227,0.778,228,0.686,229,0.778,230,0.686,231,0.778,232,0.686,233,0.606,234,0.686,235,0.778,236,0.686,237,0.73,238,0.778,239,0.686,240,0.778,241,0.686,242,0.778,243,0.686,244,0.778,245,0.686,246,0.778,247,0.686,248,0.778,249,0.778,271,1.146,299,1.371,307,1.788,308,2.57,315,1.737,320,2.446,321,2.246,322,2.446,325,2.246,334,2.56,338,2.756,362,2.246,392,0.984,420,1.812,588,1.444,724,2.446,735,3.173,740,2.687,742,1.889,743,2.831,748,2.994,760,4.162,805,1.195,806,1.306,813,2.56,814,2.687,815,2.994,821,1.626,832,1.528,845,3.724,850,3.054,851,3.054,852,3.186,853,3.054,854,3.186,855,2.909,856,2.687,857,2.415,858,2.754,866,1.889,868,1.626,870,1.528,872,1.626,874,1.626,875,2.569,876,1.626,877,1.626,878,1.626,879,2.569,883,2.994,884,3.415,885,1.371,886,1.444,887,3.952,890,1.444,892,1.626,893,3.217,906,2.754,907,2.754,933,3.403,936,2.831,937,3.217,954,1.444,966,1.444,967,1.444,969,1.444,1042,3.403,1070,2.994,1110,2.569,1113,2.569,1119,2.986,1120,2.754,1128,2.994,1129,1.528,1130,2.415,1131,1.528,1132,1.528,1133,1.528,1134,2.994,1135,2.994,1136,2.994,1137,2.167,1138,2.065,1139,1.528,1140,1.528,1141,1.444,1142,1.528,1143,1.528,1308,4.13,1309,1.528,1313,2.994,1314,1.371,1316,4.68,1319,3.186,1320,3.415,1321,3.415,1325,5.059,1327,4.208,1328,4.645,1335,4.191,1363,1.743,1364,5.308,1365,2.086,1366,2.086,1369,2.086,1370,5.059,1385,4.208,1391,2.086,1395,1.889,1396,1.889,1397,1.889,1408,4.645,1430,3.415,1482,3.297,1504,6.759,1505,2.086,1506,4.672,1507,4.088,1508,3.768,1509,4.672,1510,3.297,1511,5.309,1512,5.309,1513,3.297,1514,2.384,1515,3.768,1516,3.768,1517,2.384,1518,2.384,1519,2.384,1520,2.384,1521,2.384,1522,2.384,1523,2.384,1524,2.384,1525,3.768,1526,2.384,1527,2.384,1528,2.384,1529,2.384,1530,2.384,1531,2.384,1532,2.384,1533,2.384,1534,5.309,1535,2.384,1536,4.672,1537,2.384,1538,2.384,1539,2.384,1540,4.645,1541,2.384,1542,2.384,1543,4.672,1544,2.384,1545,2.384,1546,2.384,1547,2.384,1548,5.309,1549,2.384,1550,3.768,1551,3.768]],["title/injectables/IngredientTypeService.html",[31,0.851,1335,2.828]],["body/injectables/IngredientTypeService.html",[3,0.106,4,0.095,5,0.083,8,0.207,11,0.721,17,0.682,18,0.012,19,1.846,20,0.106,21,0.007,22,0.007,28,1.6,31,1.106,33,1.534,35,0.915,36,3.006,41,0.945,42,1.93,43,3.377,44,1.165,46,1.471,47,0.871,48,2.592,50,3.769,52,1.432,53,2.873,54,1.876,55,1.2,56,2.635,60,4.93,64,3.578,72,2.994,74,0.624,75,0.445,76,1.432,77,1.779,78,1.256,80,1.711,81,1.851,83,1.711,84,2.333,85,1.432,86,1.34,87,0.463,89,0.867,90,3.876,92,2.357,93,3.527,96,2.506,99,3.117,104,3.455,107,2.468,179,1.414,219,1.9,315,1.432,484,2.468,486,4.546,540,4.082,683,2.333,686,4.665,688,4.341,1198,3.769,1219,2.815,1225,4.082,1244,4.925,1245,4.925,1308,3.527,1313,3.987,1314,2.215,1315,3.886,1335,3.676,1363,5.373,1364,5.012,1492,5.442,1502,2.815,1510,4.717,1513,4.717,1552,3.37,1553,5.391,1554,6.738,1555,3.851,1556,5.391,1557,3.851,1558,5.391,1559,3.851,1560,6.22,1561,5.391,1562,5.391,1563,3.851,1564,5.391,1565,5.391,1566,5.391,1567,3.851,1568,3.851,1569,5.391,1570,3.851,1571,3.851,1572,5.391,1573,3.851,1574,3.851]],["title/guards/IsAuthenticatedGuard.html",[1575,3.287,1576,3.287]],["body/guards/IsAuthenticatedGuard.html",[3,0.152,4,0.135,5,0.118,8,0.294,11,0.588,17,0.454,18,0.012,20,0.152,21,0.009,22,0.009,31,1.399,35,1.157,41,0.963,44,1.12,46,1.199,47,0.71,55,0.873,56,2.496,74,0.641,75,0.635,78,1.791,85,2.042,86,1.911,87,0.66,88,2.537,92,1.681,118,4.014,119,4.071,127,4.982,134,1.532,141,1.791,169,4.512,177,2.187,179,1.44,264,2.875,307,2.496,435,5.874,487,5.402,938,4.352,1576,5.402,1577,4.352,1578,5.874,1579,6.485,1580,4.805,1581,7.106,1582,5.492,1583,5.492,1584,6.485,1585,5.964,1586,4.805,1587,4.805,1588,5.492]],["title/guards/IsUnauthenticatedGuard.html",[1575,3.287,1589,3.287]],["body/guards/IsUnauthenticatedGuard.html",[3,0.152,4,0.135,5,0.118,8,0.294,11,0.588,17,0.454,18,0.012,20,0.152,21,0.009,22,0.009,31,1.399,35,1.157,41,0.963,44,1.12,46,1.199,47,0.71,55,0.873,56,2.496,74,0.641,75,0.635,78,1.791,85,2.042,86,1.911,87,0.66,88,2.537,92,1.681,118,4.014,119,4.071,127,4.982,134,1.532,141,1.791,169,4.512,177,2.187,179,1.44,181,2.267,264,2.875,307,2.496,435,5.402,487,5.402,938,4.352,1577,4.352,1578,5.874,1581,7.106,1584,6.485,1585,5.964,1586,4.805,1587,4.805,1589,5.402,1590,6.485,1591,4.805,1592,5.492,1593,5.492,1594,5.492]],["title/modules/LayoutsModule.html",[374,2.171,1595,2.828]],["body/modules/LayoutsModule.html",[3,0.158,4,0.14,5,0.123,18,0.012,20,0.158,21,0.01,22,0.01,35,0.969,44,0.938,55,0.907,74,0.649,75,0.66,87,0.685,92,1.747,149,0.635,177,2.273,203,1.946,332,2.443,376,2.636,377,3.224,380,3.498,381,2.86,384,5.531,385,6.597,387,6.597,393,3.947,395,3.127,412,3.127,414,3.653,631,5.101,656,5.845,1595,5.714,1596,4.993,1597,5.706,1598,4.993,1599,5.706,1600,5.706,1601,5.706,1602,5.706,1603,5.706]],["title/components/LoadingComponent.html",[149,0.462,221,1.193]],["body/components/LoadingComponent.html",[3,0.098,4,0.087,5,0.077,8,0.273,9,0.81,11,0.381,17,0.538,18,0.012,20,0.098,21,0.007,22,0.007,35,0.865,36,1.895,41,0.624,44,1.131,46,0.776,47,0.77,55,0.566,68,1.089,74,0.492,75,0.411,87,0.427,89,0.801,134,1.421,149,0.663,150,1.089,151,1.61,152,1.16,153,1.124,154,1.16,155,1.16,157,1.942,158,1.16,159,2.675,160,2.592,161,1.662,163,1.662,166,2.121,169,4.041,172,1.469,173,1.773,174,1.832,176,4.459,177,1.417,179,0.933,182,3.112,183,4.59,184,6.266,194,1.16,195,1.662,196,1.662,197,1.16,198,2.121,199,1.16,200,1.16,201,1.023,202,1.16,203,0.992,204,1.16,205,1.023,206,1.16,207,1.023,208,1.16,209,1.023,210,1.257,211,1.16,212,1.023,213,1.662,214,1.023,215,1.16,216,1.023,217,1.16,218,1.023,219,0.878,220,1.16,221,1.87,222,1.16,223,1.023,224,1.16,225,1.023,226,1.055,227,1.16,228,1.023,229,1.16,230,1.023,231,1.16,232,1.023,233,0.905,234,1.023,235,1.16,236,1.023,237,1.089,238,1.16,239,1.023,240,1.16,241,1.023,242,1.16,243,1.023,244,1.16,245,1.023,246,1.16,247,1.023,248,1.16,249,1.16,271,1.71,307,2.19,308,2.89,320,1.862,321,1.71,322,1.862,323,5.455,324,6.453,325,1.71,326,6.022,327,3.112,328,2.6,329,4.039,330,3.112,331,4.039,332,2.181,333,3.725,334,2.792,335,2.819,336,3.725,337,2.554,338,3.288,339,6.177,340,3.112,341,2.819,342,3.112,343,3.112,344,3.112,345,2.819,346,2.6,347,2.819,348,4.719,349,4.353,350,4.719,351,2.155,352,4.459,353,3.112,354,3.112,355,2.6,356,2.425,357,2.6,358,1.949,359,1.949,360,1.949,361,2.046,362,1.71,363,1.949,364,2.046,365,1.862,366,2.931,367,2.155,368,2.155,369,2.046,370,2.819,372,3.112,373,3.112,761,2.931,762,4.021,799,2.28,1138,3.263,1604,3.112,1605,5.955,1606,5.096,1607,4.459,1608,5.955,1609,4.353,1610,3.557,1611,5.096,1612,3.557,1613,3.557,1614,3.557,1615,5.096,1616,5.096,1617,5.096,1618,5.096,1619,5.096,1620,3.557,1621,3.557,1622,3.557,1623,3.557,1624,3.557]],["title/injectables/LoadingService.html",[31,0.851,762,2.171]],["body/injectables/LoadingService.html",[3,0.144,4,0.128,5,0.112,8,0.28,9,1.049,11,0.558,17,0.599,18,0.012,20,0.144,21,0.009,22,0.009,31,1.354,33,2.077,35,1.12,36,3.092,41,1.269,44,1.317,46,1.441,47,0.674,54,2.296,55,1.151,56,2.775,74,0.546,75,0.603,78,1.701,85,1.939,86,1.814,87,0.626,89,1.174,92,1.596,172,1.877,173,2.296,174,2.373,179,1.899,493,4.229,687,3.556,761,4.164,762,3.454,793,4.229,1625,4.563,1626,7.24,1627,7.609,1628,7.609,1629,6.599,1630,6.599,1631,5.215,1632,5.215,1633,6.599,1634,5.215,1635,4.133,1636,6.599,1637,6.599,1638,5.774,1639,5.215,1640,5.774,1641,5.215,1642,5.215,1643,5.215,1644,5.215,1645,5.215]],["title/injectables/LocalStorageService.html",[31,0.851,439,2.828]],["body/injectables/LocalStorageService.html",[3,0.135,4,0.12,5,0.105,8,0.261,11,0.794,16,1.932,17,0.613,18,0.012,20,0.135,21,0.009,22,0.009,31,1.297,33,1.942,35,1.073,41,1.23,44,1.263,46,1.62,47,0.959,55,1.18,74,0.403,75,0.564,85,1.813,86,1.696,87,0.586,89,1.097,92,2.271,172,1.831,173,1.696,174,2.668,181,2.012,193,2.804,299,4.268,307,2.128,308,2.166,439,4.309,442,5.37,491,6.242,1211,5.529,1287,3.863,1298,3.863,1646,6.891,1647,4.265,1648,6.32,1649,4.875,1650,6.32,1651,4.875,1652,7.42,1653,6.32,1654,4.875,1655,6.32,1656,4.875,1657,6.32,1658,4.875,1659,7.42,1660,4.875,1661,4.875,1662,4.875,1663,4.875,1664,4.875,1665,4.875,1666,4.875,1667,4.875,1668,6.32,1669,4.875]],["title/components/LoginComponent.html",[149,0.462,223,1.193]],["body/components/LoginComponent.html",[3,0.127,4,0.113,5,0.099,8,0.247,11,0.493,17,0.381,18,0.012,20,0.127,21,0.008,22,0.008,35,1.034,41,0.808,44,1.121,46,1.006,47,0.882,55,0.969,68,1.411,74,0.564,75,0.533,87,0.554,88,2.129,89,1.037,118,3.369,119,3.887,133,3.369,134,1.699,149,0.759,150,1.411,151,1.925,152,1.503,153,1.456,154,1.503,155,1.503,157,2.226,158,1.503,159,2.734,160,2.649,161,1.987,163,1.987,166,2.368,172,1.684,194,1.503,195,1.987,196,1.987,197,1.503,198,2.368,199,1.503,200,1.503,201,1.326,202,1.503,203,1.285,204,1.503,205,1.326,206,1.503,207,1.326,208,1.503,209,1.326,210,1.503,211,1.503,212,1.326,213,1.987,214,1.326,215,1.503,216,1.326,217,1.503,218,1.326,219,1.137,220,1.503,221,1.326,222,1.503,223,2.088,224,1.503,225,1.326,226,1.367,227,1.503,228,1.326,229,1.503,230,1.326,231,1.503,232,1.326,233,1.172,234,1.326,235,1.503,236,1.326,237,1.411,238,1.503,239,1.326,240,1.503,241,1.326,242,1.503,243,1.326,244,1.503,245,1.326,246,1.503,247,1.326,248,1.503,249,1.503,347,3.652,369,2.651,453,5.33,721,2.651,737,3.142,918,2.651,919,2.792,1441,4.032,1670,4.032,1671,6.824,1672,6.092,1673,7.26,1674,4.609,1675,4.609,1676,4.609,1677,4.609,1678,4.032]],["title/interfaces/Lunch.html",[0,0.498,678,1.916]],["body/interfaces/Lunch.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.863,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,3.979,666,2.674,667,3.961,668,3.961,669,2.053,670,3.251,671,3.251,672,3.251,673,3.251,674,3.251,675,3.251,676,3.251,677,2.793,678,3.979,679,4.101,680,2.674]],["title/injectables/MessagesService.html",[31,0.851,1679,3.287]],["body/injectables/MessagesService.html",[3,0.155,4,0.138,5,0.121,8,0.301,9,1.098,11,0.6,16,1.684,17,0.571,18,0.012,20,0.155,21,0.01,22,0.01,31,1.417,33,2.233,35,1.172,44,1.229,46,1.224,47,0.725,54,2.402,55,0.891,56,2.52,74,0.571,75,0.648,78,1.829,85,2.085,86,1.951,87,0.673,172,1.383,173,2.402,174,2.483,179,1.962,338,3.202,687,5.101,1679,5.472,1680,4.905,1681,7.808,1682,6.545,1683,6.904,1684,6.904,1685,5.607,1686,6.904,1687,6.904,1688,6.904,1689,6.904,1690,6.904,1691,5.607,1692,5.607,1693,4.905,1694,5.607,1695,5.607]],["title/interfaces/Monday.html",[0,0.498,670,1.843]],["body/interfaces/Monday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.409,671,3.251,672,3.251,673,3.251,674,3.251,675,3.251,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/components/PageNotFoundComponent.html",[149,0.462,225,1.193]],["body/components/PageNotFoundComponent.html",[3,0.103,4,0.091,5,0.08,8,0.199,18,0.012,20,0.103,21,0.007,22,0.007,35,0.893,41,1.07,44,0.864,47,0.68,55,0.591,68,1.138,74,0.307,75,0.43,87,0.447,89,1.184,134,1.467,149,0.679,150,1.138,151,1.661,152,1.212,153,1.174,154,1.212,155,1.212,157,1.99,158,1.212,159,2.686,160,2.602,161,1.715,163,1.715,166,2.164,172,1.297,194,1.212,195,1.715,196,1.715,197,1.212,198,2.164,199,1.212,200,1.212,201,1.069,202,1.212,203,1.037,204,1.212,205,1.069,206,1.212,207,1.069,208,1.212,209,1.069,210,1.297,211,1.212,212,1.069,213,1.715,214,1.069,215,1.212,216,1.069,217,1.212,218,1.069,219,0.917,220,1.212,221,1.069,222,1.212,223,1.069,224,1.212,225,1.908,226,2.264,227,1.212,228,1.069,229,1.212,230,1.069,231,1.212,232,1.069,233,0.946,234,1.069,235,1.212,236,1.069,237,1.138,238,1.212,239,1.069,240,1.212,241,1.069,242,1.212,243,1.069,244,1.212,245,1.069,246,1.212,247,1.069,248,1.212,249,1.212,328,5.461,329,4.168,333,5.461,336,5.117,337,3.058,338,3.111,339,5.257,345,2.946,348,2.946,349,2.717,350,4.836,351,2.252,360,3.635,361,2.138,362,1.787,363,2.037,364,2.138,365,1.946,366,4.18,367,2.252,368,2.252,412,2.037,448,5.191,724,1.946,806,2.037,810,4.601,837,2.946,845,2.252,1319,3.585,1478,2.946,1696,5.339,1697,4.836,1698,3.253,1699,4.601,1700,6.102,1701,5.259,1702,3.718,1703,3.718,1704,3.718,1705,5.259,1706,3.718,1707,6.124,1708,6.358,1709,5.259,1710,3.718,1711,6.102,1712,3.718,1713,5.259,1714,5.259,1715,5.259,1716,5.259,1717,3.718,1718,3.718,1719,3.253,1720,6.102,1721,3.253,1722,7,1723,5.339,1724,3.718,1725,3.718,1726,3.718,1727,3.718,1728,4.601,1729,3.253,1730,3.718,1731,3.718,1732,3.718,1733,3.718,1734,3.718,1735,4.601,1736,5.259,1737,3.718,1738,3.718]],["title/interfaces/Picture.html",[0,0.498,1739,2.386]],["body/interfaces/Picture.html",[0,0.7,2,1.677,3,0.161,4,0.143,5,0.126,8,0.313,9,1.124,11,0.92,16,1.952,17,0.681,18,0.012,19,2.258,20,0.161,21,0.01,22,0.01,47,1.023,718,4.794,1739,4.067,1740,5.101,1741,6.923,1742,6.923,1743,6.923,1744,6.271]],["title/components/PrincipalComponent.html",[149,0.462,228,1.193]],["body/components/PrincipalComponent.html",[3,0.133,4,0.118,5,0.104,8,0.258,18,0.012,20,0.133,21,0.009,22,0.009,35,1.063,41,1.222,44,1.029,47,0.81,55,0.765,68,1.472,74,0.398,75,0.556,87,0.578,89,1.41,134,1.747,149,0.775,150,1.472,151,1.979,152,1.568,153,1.519,154,1.568,155,1.568,157,2.272,158,1.568,159,2.743,160,2.658,161,2.043,163,2.043,166,2.407,172,1.546,188,3.082,189,3.279,190,3.279,191,3.279,192,3.279,193,2.766,194,1.568,195,2.043,196,2.043,197,1.568,198,2.407,199,1.568,200,1.568,201,1.383,202,1.568,203,1.341,204,1.568,205,1.383,206,1.568,207,1.383,208,1.568,209,1.383,210,1.546,211,1.568,212,1.383,213,2.043,214,1.383,215,1.568,216,1.383,217,1.568,218,1.383,219,1.186,220,1.568,221,1.383,222,1.568,223,1.383,224,1.568,225,1.383,226,1.427,227,1.568,228,2.123,229,1.568,230,1.383,231,1.568,232,1.383,233,1.223,234,1.383,235,1.568,236,1.383,237,1.472,238,1.568,239,1.383,240,1.568,241,1.383,242,1.568,243,1.383,244,1.568,245,1.383,246,1.568,247,1.383,248,1.568,249,1.568,1745,4.207,1746,5.481,1747,6.967,1748,6.264,1749,4.809,1750,4.809]],["title/modules/PrincipalModule.html",[374,2.171,1751,3.032]],["body/modules/PrincipalModule.html",[3,0.149,4,0.132,5,0.116,18,0.012,20,0.149,21,0.009,22,0.009,74,0.703,75,0.622,87,0.646,89,1.211,178,2.391,225,2.324,228,2.324,258,2.817,332,2.303,376,2.486,377,3.109,380,3.373,381,2.697,383,3.688,388,3.688,389,2.817,390,4.314,392,2.221,393,3.523,396,4.708,397,3.933,398,4.708,407,3.669,408,4.708,409,4.708,410,4.708,414,3.523,416,4.708,417,4.708,419,4.708,420,2.587,735,3.109,1595,5.51,1609,4.92,1697,4.265,1746,4.708,1751,6.154,1752,4.708,1753,4.708,1754,5.381,1755,5.381,1756,5.381,1757,5.381,1758,5.381,1759,5.381,1760,5.381]],["title/components/ProfileComponent.html",[149,0.462,230,1.193]],["body/components/ProfileComponent.html",[3,0.079,4,0.07,5,0.061,8,0.153,9,0.688,11,0.791,16,1.178,17,0.621,18,0.012,20,0.079,21,0.006,22,0.006,35,0.735,41,0.5,44,1.235,46,0.945,47,0.755,55,0.832,56,1.763,66,2.868,68,0.873,72,1.268,74,0.6,75,0.33,78,0.93,87,0.343,88,1.317,89,0.642,92,0.873,96,1.946,134,1.208,141,1.412,149,0.699,150,0.873,151,1.368,152,0.93,153,1.653,154,0.93,155,0.93,157,1.707,158,0.93,159,2.613,160,2.532,161,1.412,163,1.412,166,1.906,172,1.442,173,0.992,174,1.557,178,1.268,179,1.648,193,3.361,194,0.93,195,1.412,196,1.412,197,0.93,198,1.906,199,0.93,200,0.93,201,0.82,202,0.93,203,0.795,204,0.93,205,0.82,206,0.93,207,0.82,208,0.93,209,0.82,210,1.068,211,0.93,212,0.82,213,1.412,214,0.82,215,0.93,216,0.82,217,0.93,218,0.82,219,0.704,220,0.93,221,0.82,222,0.93,223,0.82,224,0.93,225,0.82,226,0.846,227,0.93,228,0.82,229,0.93,230,1.681,231,0.93,232,0.82,233,0.726,234,0.82,235,0.93,236,0.82,237,0.873,238,0.93,239,0.82,240,0.93,241,0.82,242,0.93,243,0.82,244,0.93,245,0.82,246,0.93,247,0.82,248,0.93,249,0.93,250,1.563,254,3.462,258,1.493,279,2.085,284,1.945,287,1.563,288,2.495,289,1.828,290,1.945,291,2.26,299,2.49,300,2.26,303,2.495,305,3.984,307,2.385,308,2.597,315,1.61,320,2.739,321,2.516,322,2.739,325,2.516,337,1.429,338,2.831,358,2.868,359,2.868,392,1.177,420,2.081,479,3.788,540,1.728,622,2.952,623,2.952,624,2.623,625,3.361,721,4.073,722,4.509,735,2.417,740,2.49,748,2.775,805,1.429,813,3.973,814,3.01,887,2.49,891,2.495,893,2.623,894,3.431,895,3.165,936,3.171,937,3.54,954,1.728,966,1.728,967,1.728,969,3.54,1042,3.745,1070,1.828,1074,2.26,1110,1.945,1138,2.372,1287,2.26,1298,4.979,1410,2.495,1412,2.495,1693,2.495,1761,2.495,1762,5.112,1763,5.233,1764,5.233,1765,5.233,1766,4.33,1767,5.233,1768,5.233,1769,5.233,1770,5.233,1771,4.33,1772,4.164,1773,4.33,1774,2.852,1775,4.33,1776,4.33,1777,2.852,1778,4.33,1779,2.852,1780,2.852,1781,2.852,1782,2.852,1783,2.852,1784,2.852,1785,2.852,1786,2.852,1787,2.852,1788,2.852,1789,2.852,1790,2.852,1791,2.852,1792,2.852,1793,4.33,1794,2.852,1795,2.852,1796,2.852,1797,2.852,1798,2.852,1799,2.852,1800,2.852,1801,2.852,1802,2.852,1803,2.852,1804,2.852,1805,2.852,1806,2.852,1807,2.852,1808,2.852,1809,2.852,1810,2.852,1811,2.852,1812,2.852,1813,2.085,1814,2.852,1815,2.852,1816,5.233,1817,2.852,1818,2.852,1819,2.852,1820,2.852,1821,2.495,1822,2.495,1823,2.852,1824,2.852,1825,3.788,1826,3.788,1827,3.788,1828,3.788,1829,3.788,1830,2.852,1831,2.495]],["title/modules/ProfileModule.html",[374,2.171,1832,3.032]],["body/modules/ProfileModule.html",[3,0.132,4,0.117,5,0.103,18,0.012,20,0.132,21,0.009,22,0.009,74,0.713,75,0.55,76,1.77,87,0.572,109,4.501,111,3.05,112,3.05,113,2.883,141,1.552,149,0.53,177,1.896,178,2.115,181,1.964,230,2.293,332,2.037,376,2.198,377,2.874,380,3.118,381,2.385,383,3.409,388,3.409,389,2.491,390,3.988,391,3.769,392,1.964,393,3.257,394,4.443,395,2.608,399,3.769,400,2.883,412,2.608,414,2.491,415,2.883,420,2.991,626,3.409,663,4.242,664,3.245,735,2.874,760,3.769,1150,4.548,1151,4.548,1152,4.548,1153,3.479,1154,4.548,1155,3.479,1156,4.548,1157,3.479,1158,4.548,1159,3.479,1160,4.548,1161,3.479,1162,4.548,1163,3.479,1167,4.548,1168,3.479,1173,3.479,1176,3.479,1177,3.479,1178,3.479,1179,3.479,1772,4.741,1832,6.031,1833,4.164,1834,4.164,1835,4.164,1836,4.759,1837,5.444,1838,4.164,1839,5.444,1840,4.164,1841,4.759,1842,4.164]],["title/injectables/ProfileService.html",[31,0.851,1772,2.513]],["body/injectables/ProfileService.html",[3,0.123,4,0.109,5,0.096,8,0.238,11,0.717,17,0.554,18,0.012,20,0.123,21,0.008,22,0.008,31,1.22,33,1.77,35,1.009,41,0.779,42,2.227,43,3.586,44,1.176,46,1.463,47,0.866,48,2.858,52,1.652,54,1.546,55,1.138,56,2.512,66,3.047,74,0.648,75,0.514,76,1.652,77,2.052,78,1.449,80,1.974,81,2.136,82,3.521,85,1.652,86,1.546,87,0.534,88,2.052,89,1,92,2.051,93,3.112,96,2.211,99,2.227,141,2.185,179,1.757,181,2.454,285,2.326,299,3.42,308,2.642,310,4.346,311,3.029,312,3.029,431,5.67,434,4.712,467,4.712,469,5.202,470,2.98,480,4.712,493,2.847,494,2.556,540,2.692,572,3.887,573,3.521,574,3.521,580,2.847,581,2.847,582,2.847,583,3.521,584,3.521,585,3.521,1225,2.692,1772,3.602,1843,3.887,1844,3.81,1845,4.443,1846,4.443,1847,4.443,1848,5.945,1849,4.443,1850,4.443,1851,5.945,1852,5.862,1853,6.701,1854,5.945,1855,6.701,1856,5.945,1857,6.701,1858,5.945,1859,6.701,1860,5.945,1861,4.443,1862,4.443,1863,4.443,1864,4.443,1865,4.443,1866,4.443]],["title/interfaces/Recipe.html",[0,0.498,233,1.055]],["body/interfaces/Recipe.html",[0,0.629,2,1.507,3,0.145,4,0.129,5,0.113,8,0.281,9,1.052,11,0.928,16,1.807,17,0.693,18,0.012,19,2.419,20,0.145,21,0.009,22,0.009,28,2.262,47,0.985,52,2.834,74,0.6,219,1.881,233,1.846,307,2.444,1314,3.014,1315,4.177,1739,4.384,1867,4.585,1868,6.669,1869,6.041,1870,5.571,1871,6.041,1872,5.571,1873,6.669,1874,7.023,1875,4.384,1876,5.241,1877,5.241,1878,5.241]],["title/components/RecipeDialogComponent.html",[149,0.462,232,1.193]],["body/components/RecipeDialogComponent.html",[3,0.05,4,0.045,5,0.039,8,0.097,9,0.479,11,0.579,16,1.218,17,0.629,18,0.012,20,0.05,21,0.004,22,0.004,26,2.203,35,0.512,36,2.642,41,0.528,44,1.304,46,1.181,47,0.777,52,1.439,53,1.788,54,1.048,55,1.095,68,0.554,72,1.72,74,0.569,75,0.209,87,0.217,92,0.554,96,1.863,123,1.449,134,0.84,149,0.431,150,0.554,151,0.952,152,0.59,153,0.572,154,0.59,155,0.59,157,1.262,158,0.59,159,2.45,160,2.374,161,0.983,163,0.983,165,1.16,166,1.472,172,1.85,173,1.882,174,2.063,178,0.804,179,1.836,181,0.747,183,3.212,194,0.59,195,0.983,196,0.983,197,0.59,198,1.764,199,0.59,200,0.59,201,0.521,202,0.59,203,0.505,204,0.59,205,0.521,206,0.59,207,0.521,208,0.59,209,0.521,210,0.743,211,0.59,212,0.521,213,0.983,214,0.521,215,0.59,216,0.521,217,0.59,218,0.521,219,1.335,220,0.59,221,0.521,222,0.59,223,0.521,224,0.59,225,0.521,226,0.537,227,0.59,228,0.521,229,0.59,230,0.521,231,0.59,232,1.298,233,1.873,234,0.521,235,0.59,236,0.521,237,0.554,238,0.59,239,0.521,240,0.59,241,0.521,242,0.59,243,0.521,244,0.59,245,0.521,246,0.59,247,0.521,248,0.59,249,0.59,254,0.948,271,1.449,284,1.234,299,1.733,307,1.822,308,0.804,315,2.012,320,2.832,321,2.601,322,2.832,323,1.435,325,2.998,334,3.292,337,0.907,338,0.775,351,1.097,358,0.992,359,0.992,361,1.041,362,0.87,363,0.992,369,2.226,392,0.747,445,1.097,494,1.041,588,1.826,721,2.226,722,3.077,724,0.948,735,2.649,737,1.234,738,2.054,739,2.639,740,3.455,743,3.278,751,3.299,761,2.226,762,2.362,782,3.663,793,1.16,794,1.16,805,1.51,806,0.992,813,2.121,814,2.226,815,2.481,816,1.16,819,1.234,820,1.234,821,1.234,832,1.16,839,1.435,841,1.234,848,2.829,850,1.733,851,1.733,853,1.733,855,1.651,856,1.733,885,1.733,886,1.826,887,3.799,890,1.826,893,1.826,917,1.323,918,1.733,919,1.826,933,2.892,936,2.345,937,2.734,954,1.097,966,1.097,967,1.097,969,3.036,1036,1.435,1037,3.386,1038,2.636,1039,4.385,1042,2.892,1043,3.576,1044,1.584,1045,4.385,1046,1.584,1054,1.584,1055,1.584,1057,1.584,1060,1.584,1062,1.584,1064,3.386,1065,1.584,1070,1.16,1110,1.234,1111,2.636,1112,1.584,1113,1.234,1116,1.584,1117,1.323,1118,1.584,1119,2.388,1120,2.203,1122,1.041,1128,2.892,1129,1.16,1130,1.931,1131,1.16,1132,1.16,1133,1.16,1134,2.481,1135,2.481,1136,2.481,1137,1.733,1138,1.651,1139,1.16,1140,1.16,1141,1.097,1142,1.16,1143,1.16,1183,1.323,1198,1.097,1308,2.832,1309,1.16,1313,1.16,1314,1.733,1315,3.143,1316,4.825,1330,3.948,1334,3.911,1361,1.323,1362,1.584,1367,1.584,1368,2.388,1387,1.584,1401,3.386,1430,1.323,1456,1.323,1463,2.203,1468,1.323,1469,1.323,1479,1.323,1540,1.584,1739,3.799,1872,3.955,1874,3.386,1875,3.587,1879,6.968,1880,5.822,1881,3.871,1882,3.871,1883,4.513,1884,3.386,1885,3.871,1886,3.013,1887,4.513,1888,3.013,1889,3.013,1890,3.013,1891,4.513,1892,3.013,1893,3.576,1894,3.475,1895,3.013,1896,3.013,1897,3.871,1898,1.81,1899,1.81,1900,1.81,1901,1.81,1902,1.81,1903,1.81,1904,3.013,1905,1.81,1906,3.013,1907,1.81,1908,1.81,1909,3.013,1910,1.81,1911,1.81,1912,1.81,1913,3.013,1914,1.81,1915,1.81,1916,1.81,1917,1.81,1918,1.81,1919,1.81,1920,1.81,1921,1.81,1922,1.81,1923,1.81,1924,1.81,1925,1.81,1926,1.584,1927,1.435,1928,1.81,1929,1.435,1930,1.435,1931,1.81,1932,1.81,1933,3.013,1934,1.584,1935,3.871,1936,1.81,1937,1.81,1938,1.81,1939,1.81,1940,1.81,1941,1.81,1942,1.81,1943,4.513,1944,1.81,1945,1.81,1946,1.584,1947,4.513,1948,1.81,1949,1.81,1950,1.81,1951,1.81,1952,1.81,1953,1.81,1954,1.81,1955,1.81,1956,1.81,1957,1.81,1958,1.81,1959,1.81,1960,3.013,1961,3.013,1962,1.81,1963,1.81,1964,1.81,1965,1.81,1966,1.81,1967,1.81,1968,1.81,1969,1.81,1970,1.81,1971,1.81,1972,1.81,1973,1.81,1974,1.81,1975,1.81,1976,1.81,1977,1.81,1978,1.81,1979,1.81,1980,2.636,1981,1.81,1982,1.81,1983,1.81,1984,2.636,1985,3.948,1986,1.81,1987,1.81,1988,1.81,1989,1.81,1990,1.81,1991,1.81,1992,1.81,1993,1.81,1994,1.81,1995,1.81,1996,4.513,1997,3.013,1998,3.013,1999,3.013,2000,3.013,2001,1.81,2002,3.013,2003,1.81,2004,1.81,2005,1.584,2006,1.81,2007,3.871,2008,1.81,2009,1.584,2010,3.013,2011,1.81,2012,4.513,2013,1.81,2014,1.81,2015,1.81,2016,4.513,2017,1.584,2018,3.013,2019,1.81,2020,1.81,2021,1.81]],["title/modules/RecipeManagementModule.html",[374,2.171,2022,3.032]],["body/modules/RecipeManagementModule.html",[3,0.109,4,0.097,5,0.085,18,0.012,20,0.109,21,0.008,22,0.008,74,0.719,75,0.457,76,1.469,87,0.475,109,4.262,111,2.532,112,2.532,113,2.394,141,1.289,149,0.44,177,1.574,181,1.631,216,2.131,218,2.131,219,0.975,232,2.229,234,2.131,241,2.186,332,1.691,376,1.825,377,2.535,380,2.75,381,1.98,383,3.007,388,3.007,389,2.068,390,3.517,391,3.325,392,1.631,393,2.873,394,4.041,395,2.165,399,3.325,400,2.394,401,3.742,402,2.694,403,3.742,404,2.694,412,2.165,414,2.068,415,2.394,420,2.638,626,3.007,634,4.011,635,2.888,638,4.801,639,3.457,640,4.349,641,3.131,663,3.742,664,2.694,794,2.532,801,2.888,1149,4.801,1150,4.011,1151,4.011,1152,4.011,1153,2.888,1154,4.011,1155,2.888,1156,4.011,1157,2.888,1158,4.011,1159,2.888,1160,4.011,1161,2.888,1162,4.011,1163,2.888,1164,4.801,1165,4.801,1166,3.457,1167,4.011,1168,2.888,1169,4.801,1170,3.457,1171,4.801,1172,3.457,1173,2.888,1176,2.888,1177,2.888,1178,2.888,1179,2.888,1316,2.394,1364,2.694,1880,2.888,1894,4.489,1929,3.131,2022,6.132,2023,3.457,2024,3.457,2025,3.457,2026,3.951,2027,3.951,2028,5.488,2029,3.951,2030,5.488,2031,3.951,2032,5.488,2033,3.951,2034,5.488,2035,3.951,2036,5.488,2037,3.951,2038,5.488,2039,3.951,2040,5.488,2041,3.951,2042,3.951,2043,3.951,2044,3.951,2045,3.951,2046,3.951]],["title/injectables/RecipeService.html",[31,0.851,1894,2.513]],["body/injectables/RecipeService.html",[3,0.08,4,0.071,5,0.062,8,0.155,11,0.76,17,0.601,18,0.012,19,2.158,20,0.08,21,0.006,22,0.006,28,1.97,31,0.896,33,1.148,35,0.741,36,3.097,41,0.765,42,1.445,43,2.944,44,1.218,46,1.551,47,0.974,48,2.824,50,4.023,52,2.347,53,2.433,54,2.53,55,1.278,56,2.722,64,3.03,72,2.611,74,0.613,75,0.333,76,1.072,77,1.332,78,0.94,80,1.281,81,1.386,83,1.281,84,1.747,85,1.072,86,1.003,87,0.346,89,0.649,90,3.968,92,2.365,93,3.611,95,3.765,96,2.565,97,3.559,99,3.457,101,1.848,104,3.376,105,2.107,107,1.848,126,3.819,136,3.819,141,1.424,179,1.145,219,0.711,233,2.1,254,2.285,261,3.191,315,1.072,368,2.645,445,3.191,484,1.848,486,4.045,540,3.191,683,1.747,686,3.824,688,3.968,813,2.886,1184,4.006,1197,3.819,1198,3.191,1204,5.419,1219,2.107,1225,3.559,1226,2.285,1244,4.294,1245,4.294,1284,3.819,1314,1.658,1315,3.219,1382,3.819,1502,2.107,1739,4.265,1744,2.285,1852,6.363,1869,2.285,1870,3.191,1871,2.285,1872,2.107,1875,1.658,1893,3.459,1894,2.645,2047,2.522,2048,5.268,2049,4.365,2050,3.819,2051,4.365,2052,4.365,2053,5.14,2054,5.875,2055,4.365,2056,2.883,2057,2.883,2058,2.883,2059,4.365,2060,2.883,2061,4.365,2062,4.365,2063,2.883,2064,4.365,2065,2.883,2066,4.365,2067,2.883,2068,2.883,2069,2.883,2070,4.365,2071,4.365,2072,2.883,2073,4.365,2074,2.883,2075,4.365,2076,4.365,2077,2.883,2078,2.883,2079,2.883,2080,2.883,2081,5.268,2082,2.883,2083,4.365,2084,2.883,2085,5.268,2086,2.883,2087,2.883,2088,2.883,2089,2.883,2090,2.883,2091,2.883,2092,2.883,2093,2.883,2094,2.883,2095,2.883,2096,2.883,2097,2.883,2098,2.883,2099,2.883,2100,2.883,2101,2.883,2102,2.883,2103,2.883,2104,2.883,2105,2.883,2106,2.883]],["title/interfaces/RecipeType.html",[0,0.498,1875,2.386]],["body/interfaces/RecipeType.html",[0,0.728,2,1.744,3,0.168,4,0.149,5,0.131,8,0.325,9,1.151,11,0.906,16,1.919,17,0.663,18,0.012,19,2.296,20,0.168,21,0.01,22,0.01,28,2.379,47,1.036,52,2.981,292,4.196,1310,4.804,1875,4.164,1927,4.804]],["title/components/RecipesComponent.html",[149,0.462,234,1.193]],["body/components/RecipesComponent.html",[3,0.049,4,0.043,5,0.038,8,0.095,9,0.469,11,0.529,16,0.665,17,0.592,18,0.012,19,1.319,20,0.049,21,0.004,22,0.004,28,1.319,35,0.501,36,1.987,41,0.518,44,1.215,46,1.079,47,0.769,52,0.657,53,1.757,54,1.027,55,0.85,68,0.541,72,0.785,74,0.542,75,0.204,83,2.197,87,0.212,89,0.398,123,0.849,134,0.823,141,0.576,149,0.423,150,0.541,151,0.933,152,0.576,153,1.202,154,0.576,155,0.576,157,1.24,158,0.576,159,2.439,160,2.364,161,0.963,163,0.963,166,1.449,172,1.616,173,1.72,174,2.293,178,0.785,179,0.998,183,1.892,194,0.576,195,0.963,196,0.963,197,0.576,198,1.449,199,0.576,200,0.576,201,0.508,202,0.576,203,0.493,204,0.576,205,0.508,206,0.576,207,0.508,208,0.576,209,0.508,210,0.728,211,0.576,212,0.508,213,0.963,214,0.508,215,0.576,216,0.508,217,0.576,218,0.508,219,1.096,220,0.576,221,0.508,222,0.576,223,0.508,224,0.576,225,0.508,226,0.524,227,0.576,228,0.508,229,0.576,230,0.508,231,0.576,232,0.849,233,1.953,234,1.278,235,0.576,236,0.508,237,0.541,238,0.576,239,0.508,240,0.576,241,0.508,242,0.576,243,0.508,244,0.576,245,0.508,246,0.576,247,0.508,248,0.576,249,0.576,265,1.204,271,2.377,307,0.994,315,1.652,320,3.112,321,2.859,322,3.112,325,3.286,334,2.084,337,0.885,338,3.433,358,1.618,359,1.618,360,2.084,362,2.377,363,3.258,364,3.074,365,3.338,366,3.668,367,4.06,368,3.238,370,3.522,420,1.419,445,1.789,494,1.016,706,1.545,717,3.96,718,2.995,719,2.583,721,2.188,724,3.508,734,5.863,735,3.095,737,4.054,738,2.593,739,3.644,740,4.061,741,3.328,742,3.918,743,2.995,744,3.328,751,3.248,753,3.328,754,3.328,756,2.583,757,2.583,760,3.437,761,2.188,762,2.326,768,2.583,770,2.583,782,2.78,793,1.132,794,1.132,799,1.132,801,1.291,805,0.885,806,0.968,816,1.132,819,1.204,820,1.204,823,1.545,824,1.545,825,2.583,826,3.888,827,3.888,828,2.583,829,2.583,830,1.545,832,2.438,833,1.545,838,2.583,839,2.34,840,2.583,841,3.644,842,2.848,843,2.583,844,3.522,845,1.789,846,1.545,847,1.545,848,2.158,850,2.556,851,2.556,852,2.593,853,2.556,854,2.593,855,2.709,856,2.843,857,1.892,858,2.158,859,1.545,860,1.545,866,1.4,867,1.545,868,1.204,869,1.545,870,1.132,871,1.545,872,1.204,873,1.291,874,2.013,875,2.013,876,1.204,877,1.204,878,1.204,879,2.013,882,1.291,883,1.132,885,1.016,886,1.07,887,3.42,890,1.07,892,3.371,911,2.78,912,2.013,913,2.593,914,1.892,917,1.291,918,1.698,919,1.07,922,2.158,1128,2.438,1129,1.132,1130,1.892,1131,1.132,1132,1.132,1133,1.132,1134,2.438,1135,2.438,1136,2.438,1137,1.698,1138,1.618,1139,1.132,1140,1.132,1141,1.07,1142,1.132,1143,1.132,1183,2.158,1198,3.238,1204,3.906,1289,1.291,1290,1.545,1303,1.545,1308,1.991,1309,1.132,1314,1.016,1315,2.709,1316,4.519,1319,1.204,1320,1.291,1321,1.291,1324,3.328,1361,1.291,1368,1.4,1409,4.325,1413,3.522,1452,3.522,1456,3.248,1463,1.291,1468,1.291,1469,1.291,1472,4.235,1473,1.4,1479,1.291,1507,6.084,1735,1.545,1739,2.188,1870,3.613,1875,1.698,1880,1.291,1884,3.328,1893,2.34,1894,3.238,1926,1.545,1929,1.4,1946,1.545,1980,1.545,1984,3.888,1985,5.202,2017,3.328,2050,2.583,2053,1.545,2107,1.545,2108,3.803,2109,2.952,2110,3.803,2111,4.444,2112,1.766,2113,2.952,2114,1.766,2115,2.583,2116,2.952,2117,1.766,2118,2.952,2119,2.952,2120,2.952,2121,1.766,2122,1.766,2123,1.766,2124,2.952,2125,1.766,2126,1.766,2127,1.766,2128,1.766,2129,1.766,2130,1.766,2131,1.766,2132,1.766,2133,1.766,2134,1.766,2135,1.766,2136,1.766,2137,1.766,2138,1.766,2139,4.944,2140,1.766,2141,1.766,2142,1.766,2143,1.4,2144,2.952,2145,1.766,2146,2.583,2147,2.952,2148,1.766,2149,4.444,2150,1.766,2151,1.766,2152,1.766,2153,1.766,2154,1.766,2155,1.766,2156,1.766,2157,1.766,2158,1.766,2159,2.952,2160,2.952,2161,4.444,2162,1.766,2163,1.766,2164,1.766,2165,1.766,2166,1.766,2167,1.766,2168,2.952,2169,1.766,2170,1.766,2171,2.952,2172,2.952,2173,2.952,2174,1.766,2175,1.766,2176,1.766,2177,1.766,2178,1.545,2179,2.952,2180,1.545,2181,2.952,2182,2.952,2183,1.766,2184,1.766,2185,1.766,2186,1.766,2187,1.766,2188,1.766,2189,1.766,2190,1.766,2191,1.766,2192,1.766,2193,1.766,2194,1.545,2195,1.766,2196,3.328,2197,1.545,2198,1.766,2199,1.766]],["title/interfaces/Role.html",[0,0.498,470,2.079]],["body/interfaces/Role.html",[0,0.729,2,1.747,3,0.168,4,0.149,5,0.131,8,0.326,9,1.152,11,0.907,16,1.92,17,0.663,18,0.012,19,2.298,20,0.168,21,0.01,22,0.01,28,2.38,52,2.983,165,5.141,292,4.199,470,3.632,2200,5.314]],["title/interfaces/Saturday.html",[0,0.498,675,1.843]],["body/interfaces/Saturday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.251,672,3.251,673,3.251,674,3.251,675,3.409,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/interfaces/Schedule.html",[0,0.498,669,1.596]],["body/interfaces/Schedule.html",[0,1.002,2,1.46,3,0.14,4,0.125,5,0.109,8,0.272,9,1.031,16,1.696,17,0.669,18,0.012,20,0.231,21,0.009,22,0.009,665,3.939,666,2.543,667,3.25,668,3.25,669,2.495,670,3.641,671,3.641,672,3.641,673,3.641,674,3.641,675,3.641,676,3.641,677,2.656,678,3.946,679,4.056,680,2.543]],["title/injectables/ScheduleService.html",[31,0.851,935,3.032]],["body/injectables/ScheduleService.html",[3,0.117,4,0.104,5,0.091,8,0.227,11,0.751,17,0.58,18,0.012,20,0.117,21,0.008,22,0.008,31,1.182,33,1.688,35,0.978,36,2.971,41,1.01,42,2.124,43,3.517,44,1.153,46,1.532,47,0.907,48,2.768,50,4.978,52,2.141,53,3.242,55,1.204,56,2.608,72,3.502,74,0.652,75,0.49,76,1.576,77,1.957,78,1.382,80,1.883,81,2.037,83,1.883,84,2.567,85,1.576,86,1.474,87,0.509,89,0.954,92,2.247,93,3.424,95,2.716,96,2.432,97,2.567,99,3.278,104,3.691,105,3.098,179,1.51,210,1.993,315,1.576,484,2.716,486,4.192,540,3.489,669,3.264,683,2.567,686,4.252,688,4.454,930,5.038,934,5.723,935,4.209,1218,3.708,1219,3.098,1225,3.489,1244,4.209,1245,4.209,1499,3.708,2201,3.708,2202,6.541,2203,4.238,2204,4.238,2205,4.238,2206,7.57,2207,5.759,2208,4.238,2209,4.238,2210,4.238,2211,4.238,2212,4.238,2213,4.238,2214,4.238]],["title/components/ServerErrorComponent.html",[149,0.462,236,1.193]],["body/components/ServerErrorComponent.html",[3,0.074,4,0.066,5,0.058,8,0.144,18,0.012,20,0.074,21,0.006,22,0.006,35,0.7,41,0.882,44,0.678,47,0.533,55,0.426,68,0.819,74,0.221,75,0.31,87,0.321,89,0.928,134,1.15,149,0.56,150,0.819,151,1.303,152,0.873,153,0.846,154,0.873,155,0.873,157,1.641,158,0.873,159,2.593,160,2.513,161,1.345,163,1.345,166,1.844,172,1.017,194,0.873,195,1.345,196,1.345,197,0.873,198,1.844,199,0.873,200,0.873,201,0.77,202,0.873,203,0.746,204,0.873,205,0.77,206,0.873,207,0.77,208,0.873,209,0.77,210,1.017,211,0.873,212,0.77,213,1.345,214,0.77,215,0.873,216,0.77,217,0.873,218,0.77,219,0.66,220,0.873,221,0.77,222,0.873,223,0.77,224,0.873,225,0.77,226,0.794,227,0.873,228,0.77,229,0.873,230,0.77,231,0.873,232,0.77,233,0.681,234,0.77,235,0.873,236,1.626,237,2.124,238,0.873,239,0.77,240,0.873,241,0.77,242,0.873,243,0.77,244,0.873,245,0.77,246,0.873,247,0.77,248,0.873,249,0.873,271,3.932,315,1.533,328,5.931,331,5.499,332,2.97,333,5.408,335,2.121,336,5.072,337,3.368,338,2.97,341,2.121,346,1.956,351,3.908,359,2.26,360,1.467,361,2.894,366,4.182,448,5.429,649,3.987,723,2.342,806,4.054,911,1.956,921,3.987,1122,2.894,1427,4.402,1431,3.987,1475,4.839,1707,2.342,1708,6.228,1719,4.402,1721,3.608,1723,4.402,1728,3.608,1729,3.608,2146,2.342,2180,3.608,2197,4.402,2215,4.402,2216,2.342,2217,5.031,2218,4.124,2219,2.676,2220,2.676,2221,4.124,2222,4.124,2223,4.946,2224,2.676,2225,4.124,2226,2.676,2227,2.676,2228,2.676,2229,2.676,2230,2.676,2231,2.676,2232,2.676,2233,2.676,2234,2.676,2235,7.83,2236,5.653,2237,7.119,2238,5.031,2239,6.106,2240,2.676,2241,2.676,2242,2.676,2243,2.676,2244,2.676,2245,2.676,2246,1.956,2247,2.676,2248,4.124,2249,2.676,2250,4.124,2251,2.676,2252,2.676,2253,2.676,2254,2.676,2255,2.676,2256,2.676,2257,2.676,2258,7.119,2259,6.45,2260,4.124,2261,4.124,2262,4.124,2263,4.124,2264,5.653,2265,4.124,2266,4.124,2267,4.124,2268,5.031,2269,2.676,2270,5.031,2271,6.45,2272,4.124,2273,2.676,2274,4.124,2275,4.124,2276,5.031,2277,2.676,2278,5.031,2279,7.27,2280,2.676,2281,2.676,2282,2.676,2283,2.676,2284,2.676,2285,2.676,2286,2.676,2287,4.124,2288,2.676,2289,2.676,2290,4.124,2291,6.45,2292,2.676,2293,4.124,2294,2.342,2295,2.676,2296,2.121,2297,2.342,2298,5.031,2299,2.676,2300,2.676,2301,4.124,2302,2.676,2303,2.676,2304,4.124,2305,2.676,2306,2.676]],["title/components/SidebarComponent.html",[149,0.462,239,1.193]],["body/components/SidebarComponent.html",[3,0.107,4,0.095,5,0.084,8,0.208,9,0.861,11,0.668,17,0.516,18,0.012,20,0.107,21,0.007,22,0.007,35,0.919,41,0.949,44,1.242,46,0.846,47,0.807,54,1.348,55,0.992,56,2.275,66,2.429,68,1.186,74,0.648,75,0.448,78,1.264,87,0.465,89,0.872,96,1.441,134,1.51,149,0.752,150,1.186,151,1.71,152,1.264,153,1.224,154,1.264,155,1.264,157,2.035,158,1.264,159,2.696,160,2.612,161,1.766,163,1.766,166,2.203,172,1.817,173,1.348,174,1.393,179,1.42,194,1.264,195,1.766,196,1.766,197,1.264,198,2.203,199,1.264,200,1.264,201,1.114,202,1.264,203,1.081,204,1.264,205,1.114,206,1.264,207,1.114,208,1.264,209,1.114,210,1.336,211,1.264,212,1.114,213,1.766,214,1.114,215,1.264,216,1.114,217,1.264,218,1.114,219,0.956,220,1.264,221,1.114,222,1.264,223,1.114,224,1.264,225,1.114,226,1.15,227,1.264,228,1.114,229,1.264,230,1.114,231,1.264,232,1.114,233,0.986,234,1.114,235,1.264,236,1.114,237,1.186,238,1.264,239,1.943,240,1.264,241,1.114,242,1.264,243,1.114,244,1.264,245,1.114,246,1.264,247,1.114,248,1.264,249,1.264,250,2.123,254,3.855,258,2.028,279,2.832,284,2.642,287,2.123,289,2.483,305,3.691,307,1.823,308,2.406,320,2.028,321,1.863,322,2.028,325,3,361,2.229,362,3,436,4.938,519,3.39,717,2.483,724,2.028,737,3.691,842,2.483,1043,5.354,1122,2.229,1137,2.229,1416,4.737,1417,3.071,1420,4.946,1421,3.071,1678,3.39,2307,3.39,2308,6.24,2309,6.24,2310,5.414,2311,6.24,2312,5.154,2313,5.414,2314,3.875,2315,3.875,2316,3.875,2317,3.875,2318,3.875,2319,3.39,2320,3.39,2321,3.875,2322,3.39,2323,3.875,2324,3.875,2325,3.875,2326,3.39,2327,3.875,2328,3.875,2329,3.875,2330,3.875,2331,3.875,2332,4.737,2333,3.39,2334,3.39,2335,3.39]],["title/injectables/SidebarService.html",[31,0.851,2312,2.828]],["body/injectables/SidebarService.html",[3,0.141,4,0.125,5,0.11,8,0.273,9,1.034,11,0.696,17,0.624,18,0.012,20,0.141,21,0.009,22,0.009,31,1.335,33,2.031,35,1.104,36,2.664,41,0.894,42,2.555,43,3.782,44,1.31,46,1.42,47,0.841,48,3.127,54,2.263,55,1.034,56,2.413,74,0.645,75,0.59,76,1.896,77,2.355,78,1.663,80,2.266,81,2.451,85,1.896,86,1.774,87,0.612,88,2.355,90,4.121,92,1.992,96,1.896,119,4.06,172,1.605,173,2.263,174,2.339,179,1.979,307,2.413,362,3.628,687,3.477,1225,3.089,1638,5.692,1682,6.268,2312,4.435,2336,4.461,2337,7.164,2338,5.98,2339,5.692,2340,6.506,2341,5.099,2342,6.506,2343,5.099,2344,6.506,2345,5.099,2346,5.099,2347,5.099,2348,5.099,2349,4.461,2350,5.099,2351,4.461]],["title/interfaces/Sunday.html",[0,0.498,676,1.843]],["body/interfaces/Sunday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.251,672,3.251,673,3.251,674,3.251,675,3.251,676,3.409,677,2.793,678,4.012,679,4.214,680,2.674]],["title/components/TabsComponent.html",[149,0.462,241,1.193]],["body/components/TabsComponent.html",[3,0.129,4,0.115,5,0.101,8,0.25,18,0.012,20,0.129,21,0.008,22,0.008,35,1.042,41,1.203,44,1.009,47,0.794,55,0.741,68,1.427,74,0.385,75,0.539,87,0.56,89,1.382,134,1.712,149,0.764,150,1.427,151,1.939,152,1.521,153,1.473,154,1.521,155,1.521,157,2.238,158,1.521,159,2.736,160,2.652,161,2.002,163,2.002,166,2.379,172,1.515,194,1.521,195,2.002,196,2.002,197,1.521,198,2.379,199,1.521,200,1.521,201,1.341,202,1.521,203,1.3,204,1.521,205,1.341,206,1.521,207,1.341,208,1.521,209,1.341,210,1.515,211,1.521,212,1.341,213,2.002,214,1.341,215,1.521,216,1.341,217,1.521,218,1.341,219,1.15,220,1.521,221,1.341,222,1.521,223,1.341,224,1.521,225,1.341,226,1.383,227,1.521,228,1.341,229,1.521,230,1.341,231,1.521,232,1.341,233,1.186,234,1.341,235,1.521,236,1.341,237,1.427,238,1.521,239,1.341,240,1.521,241,2.098,242,1.521,243,1.341,244,1.521,245,1.341,246,1.521,247,1.341,248,1.521,249,1.521,325,3.643,355,3.408,365,3.213,369,2.682,1316,4.158,2352,4.079,2353,6.139,2354,6.863,2355,6.139,2356,4.662,2357,4.662,2358,4.662,2359,7.781,2360,7.293,2361,4.662,2362,4.662,2363,4.662]],["title/interfaces/Thursday.html",[0,0.498,673,1.843]],["body/interfaces/Thursday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.251,672,3.251,673,3.409,674,3.251,675,3.251,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/components/TitleComponent.html",[149,0.462,243,1.193]],["body/components/TitleComponent.html",[3,0.121,4,0.108,5,0.095,8,0.236,16,1.603,17,0.488,18,0.012,20,0.121,21,0.008,22,0.008,35,1.002,41,1.168,44,1.17,47,0.763,52,2.763,55,0.699,68,1.345,74,0.363,75,0.508,87,0.528,89,1.328,134,1.646,149,0.742,150,1.345,151,1.864,152,1.433,153,1.388,154,1.433,155,1.433,157,2.173,158,1.433,159,2.724,160,2.64,161,1.925,163,1.925,165,5.01,166,2.323,172,1.456,194,1.433,195,1.925,196,1.925,197,1.433,198,2.323,199,1.433,200,1.433,201,1.264,202,1.433,203,1.226,204,1.433,205,1.264,206,1.433,207,1.264,208,1.433,209,1.264,210,1.456,211,1.433,212,1.264,213,1.925,214,1.264,215,1.433,216,1.264,217,1.433,218,1.264,219,1.084,220,1.433,221,1.264,222,1.433,223,1.264,224,1.433,225,1.264,226,1.304,227,1.433,228,1.264,229,1.433,230,1.264,231,1.433,232,1.264,233,1.118,234,1.264,235,1.433,236,1.264,237,1.345,238,1.433,239,1.264,240,1.433,241,1.264,242,1.433,243,2.049,244,1.433,245,1.264,246,1.433,247,1.264,248,1.433,249,1.433,346,3.212,351,2.662,366,3.395,369,3.395,717,2.816,720,3.482,721,2.528,918,2.528,919,2.662,1137,2.528,1138,3.651,1417,3.482,1420,5.281,1421,3.482,1431,3.482,1436,3.845,1607,5.163,2005,3.845,2194,3.845,2332,5.163,2333,3.845,2334,3.845,2335,3.845,2364,3.845,2365,6.664,2366,5.902,2367,5.902,2368,4.394,2369,4.394,2370,4.394,2371,4.394,2372,4.394,2373,4.394,2374,4.394,2375,4.394,2376,4.394]],["title/components/TopbarComponent.html",[149,0.462,245,1.193]],["body/components/TopbarComponent.html",[3,0.108,4,0.096,5,0.085,8,0.21,9,0.868,11,0.672,16,1.229,17,0.562,18,0.012,20,0.108,21,0.008,22,0.008,35,0.927,36,2.335,41,0.957,44,1.246,46,0.856,47,0.812,55,0.999,56,2.115,66,2.916,68,1.201,74,0.627,75,0.454,78,1.279,87,0.471,89,0.883,123,1.885,134,1.523,149,0.699,150,1.201,151,1.725,152,1.279,153,1.239,154,1.279,155,1.279,157,2.048,158,1.279,159,2.699,160,2.615,161,1.781,163,1.781,166,2.215,172,1.871,179,1.873,188,2.514,189,2.674,190,2.674,191,2.674,192,2.674,193,2.256,194,1.279,195,1.781,196,1.781,197,1.279,198,2.215,199,1.279,200,1.279,201,1.128,202,1.279,203,1.094,204,1.279,205,1.128,206,1.279,207,1.128,208,1.279,209,1.128,210,1.347,211,1.279,212,1.128,213,1.781,214,1.128,215,1.279,216,1.128,217,1.279,218,1.128,219,0.968,220,1.279,221,1.128,222,1.279,223,1.128,224,1.279,225,1.128,226,1.164,227,1.279,228,1.128,229,1.279,230,1.128,231,1.279,232,1.128,233,0.998,234,1.128,235,1.279,236,1.128,237,1.201,238,1.279,239,1.128,240,1.279,241,1.128,242,1.279,243,1.128,244,1.279,245,1.954,246,1.279,247,1.128,248,1.279,249,1.279,250,2.149,254,3.97,258,2.053,278,5.942,279,2.867,284,2.674,287,2.149,289,2.514,290,2.674,291,3.108,298,3.431,299,2.256,300,3.108,305,3.723,315,2.525,316,3.431,317,2.674,2312,5.171,2319,3.431,2320,3.431,2326,3.431,2377,3.431,2378,5.46,2379,6.281,2380,5.46,2381,6.281,2382,6.792,2383,5.46,2384,3.922,2385,3.922,2386,3.922,2387,3.922,2388,3.922,2389,3.922,2390,3.922]],["title/interfaces/Tuesday.html",[0,0.498,671,1.843]],["body/interfaces/Tuesday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.409,672,3.251,673,3.251,674,3.251,675,3.251,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/interfaces/User.html",[0,0.498,66,1.492]],["body/interfaces/User.html",[0,0.827,2,1.604,3,0.154,4,0.137,5,0.12,8,0.299,9,1.094,11,0.921,16,1.924,17,0.683,18,0.012,19,2.215,20,0.19,21,0.009,22,0.009,28,2.312,66,2.475,74,0.461,285,4.079,307,2.318,470,3.906,580,4.995,581,3.575,582,3.575,619,5.697,620,4.42,621,4.88,622,5.314,623,5.314,624,4.722,625,4.483]],["title/injectables/UserEffects.html",[31,0.851,407,2.828]],["body/injectables/UserEffects.html",[3,0.13,4,0.116,5,0.102,8,0.253,9,0.983,11,0.504,17,0.389,18,0.012,20,0.13,21,0.009,22,0.009,31,1.268,33,1.876,41,1.083,44,1.133,46,1.028,47,0.609,74,0.645,75,0.545,77,2.176,87,0.566,119,3.985,133,3.443,173,2.15,174,2.222,179,1.809,290,3.211,304,5.407,308,2.746,317,4.703,397,3.443,407,4.213,493,3.019,494,2.709,1640,6.034,1772,4.818,1813,5.558,1842,4.121,1844,4.42,2349,5.407,2391,4.121,2392,4.71,2393,6.184,2394,4.71,2395,7.952,2396,7.803,2397,6.18,2398,7.322,2399,6.18,2400,4.71,2401,6.18,2402,6.18,2403,6.18,2404,6.18,2405,4.71,2406,4.71,2407,4.71,2408,3.733,2409,4.71,2410,4.71,2411,4.71,2412,4.71,2413,4.71,2414,4.71,2415,4.71]],["title/injectables/UserService.html",[31,0.851,2416,3.287]],["body/injectables/UserService.html",[3,0.138,4,0.123,5,0.108,8,0.268,11,0.76,17,0.587,18,0.012,19,2.107,20,0.138,21,0.009,22,0.009,28,1.485,31,1.319,33,1.993,35,1.091,41,0.877,42,2.508,43,3.755,44,1.231,46,1.55,47,0.918,48,3.09,55,1.129,56,2.61,66,2.938,74,0.656,75,0.579,76,1.861,77,2.311,78,1.632,80,2.224,81,2.406,85,1.861,86,1.741,87,0.601,88,2.311,89,1.126,92,2.174,93,3.364,141,1.632,179,1.862,181,2.653,285,2.619,286,3.966,287,2.742,308,2.856,310,4.698,311,3.412,312,3.412,434,5.094,467,5.094,480,5.094,573,5.094,574,5.094,580,3.207,581,3.207,582,3.207,583,3.966,584,3.966,585,3.966,2416,5.094,2417,4.378,2418,7.493,2419,6.427,2420,5.004,2421,5.004,2422,6.427,2423,5.004,2424,5.004,2425,5.004,2426,5.004]],["title/interfaces/UserState.html",[0,0.498,2427,2.828]],["body/interfaces/UserState.html",[0,0.821,2,1.588,3,0.153,4,0.136,5,0.119,8,0.296,9,1.087,11,0.732,17,0.565,18,0.012,20,0.215,21,0.009,22,0.009,66,2.924,74,0.614,92,2.093,116,5.983,123,2.654,141,2.423,258,2.889,261,4.035,264,4.36,265,4.662,287,3.025,290,3.764,442,3.764,1813,6.026,2393,4.375,2427,5.065,2428,4.375,2429,5.983,2430,5.52,2431,4.829,2432,5.52,2433,5.52,2434,5.52,2435,5.52,2436,5.52,2437,5.52,2438,4.375,2439,5.419,2440,4.829,2441,4.375,2442,4.829,2443,5.983,2444,4.829]],["title/components/UsersComponent.html",[149,0.462,247,1.193]],["body/components/UsersComponent.html",[3,0.051,4,0.045,5,0.04,8,0.098,9,0.484,11,0.418,17,0.571,18,0.012,19,1.616,20,0.051,21,0.004,22,0.004,28,1.159,35,0.517,41,0.534,44,1.245,46,0.853,47,0.653,55,1.028,66,2.744,68,1.849,74,0.499,75,0.212,83,0.815,87,0.22,89,0.413,96,1.133,123,1.878,134,0.85,141,0.598,149,0.435,150,0.561,151,0.962,152,0.598,153,1.234,154,0.598,155,0.598,157,1.274,158,0.598,159,2.455,160,2.379,161,0.993,163,0.993,165,1.952,166,1.484,172,1.883,173,1.359,174,1.636,178,0.815,179,1.843,181,1.878,194,0.598,195,0.993,196,0.993,197,0.598,198,1.646,199,0.598,200,0.598,201,0.528,202,0.598,203,0.511,204,0.598,205,0.528,206,0.598,207,0.528,208,0.598,209,0.528,210,0.752,211,0.598,212,0.528,213,0.993,214,0.528,215,0.598,216,0.528,217,0.598,218,0.528,219,0.452,220,0.598,221,0.528,222,0.598,223,0.528,224,0.598,225,0.528,226,0.544,227,0.598,228,0.528,229,0.598,230,0.528,231,0.598,232,0.528,233,0.467,234,0.528,235,0.598,236,0.528,237,0.561,238,0.598,239,0.528,240,0.598,241,0.528,242,0.598,243,0.528,244,0.598,245,0.528,246,0.598,247,1.309,248,0.598,249,0.598,271,0.882,287,1.005,305,3.713,307,1.834,308,2.42,315,2.331,320,2.642,321,2.427,322,2.642,325,3.736,334,2.766,337,0.919,338,2.683,358,1.005,359,1.005,360,2.984,362,2.904,363,1.005,364,1.055,365,0.96,367,2.367,369,1.752,392,0.757,420,1.464,448,1.175,470,2.53,494,1.055,622,2.664,623,2.664,624,2.367,625,3.319,717,2.504,718,1.111,721,2.247,722,2.664,724,2.85,735,2.895,738,2.077,739,2.077,740,3.319,743,2.367,748,2.504,750,3.096,760,3.797,761,2.247,762,2.381,793,1.175,799,1.175,805,0.919,806,1.005,813,2.141,814,2.247,815,2.504,816,1.952,819,2.664,820,2.664,821,2.077,832,2.504,841,1.25,842,1.175,845,3.659,850,3.132,851,3.132,852,2.664,853,3.132,854,2.664,855,2.984,856,2.247,857,1.175,868,1.25,870,1.175,872,1.25,873,1.341,874,1.25,875,2.077,876,1.25,877,1.25,878,1.25,879,2.077,882,1.341,883,2.504,884,2.856,885,2.247,886,2.367,887,2.903,890,1.845,892,1.25,893,2.756,895,3.325,904,2.227,905,2.414,906,2.227,907,2.227,912,2.077,913,1.25,914,1.175,918,1.752,933,2.916,936,2.367,937,2.756,954,1.111,966,1.111,967,1.111,969,3.058,1041,3.98,1042,2.916,1070,2.504,1074,1.453,1102,1.605,1110,1.25,1113,2.077,1117,1.341,1122,1.055,1128,2.916,1129,1.175,1130,1.952,1131,1.175,1132,1.175,1133,1.175,1134,2.504,1135,2.504,1136,2.504,1137,1.752,1138,1.669,1139,1.175,1140,1.175,1141,1.111,1142,1.175,1143,1.175,1289,1.341,1319,2.664,1320,2.856,1321,3.69,1327,3.605,1375,3.418,1385,3.605,1389,1.605,1390,1.605,1393,1.605,1395,1.453,1396,1.453,1397,1.453,1413,3.096,1442,3.418,1443,1.605,1444,3.418,1445,1.605,1446,1.605,1447,1.453,1448,1.605,1449,1.605,1450,1.605,1451,4.416,1452,2.414,1453,1.605,1454,5.803,1455,3.418,1456,3.325,1457,1.605,1458,2.665,1459,4.764,1460,2.665,1461,3.418,1462,1.605,1463,1.341,1464,1.605,1465,1.605,1466,1.605,1467,3.418,1468,1.341,1469,1.341,1470,1.605,1471,1.605,1472,1.453,1473,1.453,1474,1.605,1475,1.453,1476,1.605,1477,3.98,1478,1.453,1479,1.341,1480,1.605,1821,1.605,1822,1.605,1825,3.98,1826,3.98,1827,3.98,1828,3.418,1829,3.418,1844,2.916,2338,1.453,2445,1.605,2446,3.907,2447,3.046,2448,3.907,2449,3.907,2450,3.907,2451,4.55,2452,3.046,2453,3.98,2454,3.046,2455,1.834,2456,3.49,2457,3.046,2458,1.834,2459,3.046,2460,1.834,2461,1.834,2462,1.834,2463,1.834,2464,1.834,2465,1.834,2466,3.046,2467,1.834,2468,1.834,2469,1.834,2470,1.834,2471,1.834,2472,1.834,2473,1.834,2474,1.834,2475,1.834,2476,1.834,2477,1.834,2478,1.834,2479,1.834,2480,1.605,2481,3.907,2482,2.665,2483,1.834,2484,1.834,2485,1.605,2486,1.605,2487,1.605,2488,5.048,2489,1.834,2490,1.834,2491,1.834,2492,1.834,2493,1.834,2494,1.834,2495,1.834,2496,1.834,2497,1.834,2498,1.834,2499,1.834,2500,1.834,2501,1.834,2502,1.834,2503,3.046,2504,4.55,2505,1.834,2506,1.834,2507,1.834,2508,1.834,2509,3.046,2510,1.834,2511,1.834,2512,3.046,2513,1.834,2514,1.834,2515,1.834,2516,4.55,2517,3.046,2518,3.046,2519,3.046,2520,6.04]],["title/modules/UsersModule.html",[374,2.171,2521,3.032]],["body/modules/UsersModule.html",[3,0.13,4,0.116,5,0.101,18,0.012,20,0.13,21,0.009,22,0.009,74,0.713,75,0.544,76,1.749,87,0.565,109,4.486,111,3.014,112,3.014,113,2.849,141,1.534,149,0.523,177,1.873,178,2.09,181,1.941,247,2.287,332,2.013,376,2.172,377,2.852,380,3.094,381,2.357,383,3.383,388,3.383,389,2.462,390,3.957,391,3.74,392,1.941,393,3.232,394,4.417,395,2.577,399,3.74,400,2.849,412,2.577,414,2.462,415,2.849,420,2.968,626,3.383,640,4.893,641,3.727,663,4.209,664,3.207,735,2.852,760,3.74,1150,4.513,1151,4.513,1152,4.513,1153,3.438,1154,4.513,1155,3.438,1156,4.513,1157,3.438,1158,4.513,1159,3.438,1160,4.513,1161,3.438,1162,4.513,1163,3.438,1167,4.513,1168,3.438,1173,3.438,1176,3.438,1177,3.438,1178,3.438,1179,3.438,1837,5.402,1838,4.115,1839,5.402,1840,4.115,2143,3.727,2456,4.999,2480,4.115,2521,6.018,2522,4.115,2523,4.115,2524,4.115,2525,4.703,2526,4.703]],["title/injectables/UsersService.html",[31,0.851,2456,2.658]],["body/injectables/UsersService.html",[3,0.155,4,0.079,5,0.069,8,0.173,11,0.765,17,0.591,18,0.012,19,2.223,20,0.089,21,0.007,22,0.007,28,1.962,31,0.973,33,1.282,35,0.804,36,3.132,41,0.564,42,1.613,43,3.109,44,1.252,46,1.561,47,0.925,48,2.278,50,3.408,52,2.307,53,2.866,54,2.407,55,1.299,56,2.765,64,3.235,66,3.081,68,1.899,72,2.939,74,0.591,75,0.372,76,1.197,77,1.486,78,1.05,80,1.43,81,1.547,83,1.43,84,1.95,85,1.197,86,1.12,87,0.387,88,1.486,89,0.724,90,4.309,92,2.332,93,2.48,95,3.037,96,2.66,97,2.871,99,3.109,101,2.063,107,2.063,139,3.755,172,1.169,261,4.535,285,2.48,287,1.763,431,3.755,433,4.146,442,3.231,470,3.871,493,2.063,1198,2.871,1222,4.146,1224,4.146,1225,3.408,1502,2.352,1844,3.037,2338,4.917,2351,2.816,2453,4.146,2456,3.037,2482,4.921,2485,2.816,2486,2.816,2487,2.816,2527,2.816,2528,4.739,2529,4.739,2530,6.205,2531,6.205,2532,3.218,2533,4.739,2534,3.218,2535,6.205,2536,4.739,2537,3.218,2538,4.739,2539,3.218,2540,4.739,2541,3.218,2542,4.739,2543,3.218,2544,3.218,2545,6.205,2546,3.218,2547,4.739,2548,3.218,2549,4.739,2550,3.218,2551,3.218,2552,5.625,2553,3.218,2554,5.625,2555,3.218,2556,3.218,2557,3.218,2558,3.218,2559,3.218,2560,4.739,2561,3.218,2562,4.739,2563,3.218,2564,3.218,2565,3.218,2566,3.218,2567,3.218,2568,3.218,2569,3.218,2570,4.739,2571,3.218]],["title/interfaces/Wednesday.html",[0,0.498,672,1.843]],["body/interfaces/Wednesday.html",[0,1.01,2,1.535,3,0.148,4,0.131,5,0.115,8,0.286,9,1.065,11,0.821,16,1.727,17,0.554,18,0.012,20,0.232,21,0.009,22,0.009,665,4.042,666,2.674,667,3.355,668,3.355,669,2.053,670,3.251,671,3.251,672,3.409,673,3.251,674,3.251,675,3.251,676,3.251,677,2.793,678,4.012,679,4.214,680,2.674]],["title/coverage.html",[2572,4.498]],["body/coverage.html",[0,0.978,1,1.784,5,0.053,6,2.135,7,2.135,17,0.202,18,0.012,21,0.005,22,0.005,23,1.337,24,2.135,31,1.579,32,1.784,34,2.135,54,0.849,66,0.878,80,2.39,108,3.042,109,1.404,111,1.564,112,1.564,113,1.478,114,2.135,119,1.223,149,0.895,150,0.747,156,2.135,201,0.702,203,0.681,205,0.702,207,0.702,209,0.702,210,0.602,212,0.702,214,0.702,216,0.702,218,0.702,219,0.602,221,0.702,223,0.702,225,0.702,228,0.702,230,0.702,232,0.702,233,0.621,234,0.702,236,0.702,239,0.702,241,0.702,243,0.702,245,0.702,247,0.702,250,2.103,251,3.931,257,1.784,259,2.805,262,3.04,270,1.934,272,3.931,274,2.135,289,1.564,317,1.664,337,2.695,338,3.757,407,1.664,421,2.135,439,1.664,470,1.223,491,1.934,619,1.784,620,3.042,649,1.934,651,2.135,665,1.173,666,3.55,669,0.939,670,1.084,671,1.084,672,1.084,673,1.084,674,1.084,675,1.084,676,1.084,678,1.127,681,1.784,682,3.042,683,2.325,684,3.042,688,1.404,705,2.135,726,2.135,733,2.135,759,1.404,762,1.277,800,1.784,805,1.923,837,1.934,924,3.042,925,1.934,926,2.135,935,1.784,1036,3.042,1180,1.664,1181,2.135,1182,2.135,1186,2.135,1246,2.135,1265,1.934,1266,2.135,1267,2.135,1268,2.135,1308,1.277,1309,1.564,1310,3.042,1311,2.135,1316,3.543,1317,2.135,1334,1.664,1335,1.664,1363,1.784,1364,2.617,1447,1.934,1483,2.135,1504,2.135,1505,2.135,1552,2.135,1575,3.042,1576,1.934,1578,3.042,1579,2.135,1580,2.135,1589,1.934,1590,2.135,1591,2.135,1604,2.135,1609,2.805,1625,2.135,1646,2.135,1647,2.135,1670,2.135,1679,1.934,1680,2.135,1696,2.135,1697,1.934,1698,2.135,1739,1.404,1740,2.135,1745,2.135,1761,2.135,1772,1.478,1831,2.135,1843,2.135,1844,1.564,1867,2.135,1875,1.404,1879,2.135,1880,1.784,1894,1.478,1927,1.934,1934,7.518,2047,2.135,2107,2.135,2200,2.135,2201,2.135,2215,2.135,2216,2.135,2223,2.135,2246,1.784,2296,1.934,2307,2.135,2312,1.664,2336,2.135,2352,2.135,2364,2.135,2377,2.135,2391,2.135,2408,1.934,2416,1.934,2417,2.135,2427,1.664,2428,4.262,2438,1.934,2439,1.934,2441,1.934,2445,2.135,2456,1.564,2527,2.135,2572,1.934,2573,2.135,2574,2.44,2575,2.44,2576,2.135,2577,3.358,2578,8.599,2579,5.848,2580,6.921,2581,7.921,2582,4.744,2583,5.378,2584,3.838,2585,2.44,2586,2.44,2587,2.135,2588,2.44,2589,2.44,2590,2.44,2591,2.44,2592,2.44,2593,2.44,2594,2.135,2595,2.135,2596,4.15,2597,4.15,2598,2.135,2599,2.135,2600,2.135,2601,3.358,2602,2.135,2603,2.135,2604,4.15,2605,5.683,2606,2.135,2607,2.135,2608,2.135,2609,4.15,2610,2.135,2611,2.135,2612,2.135,2613,4.705,2614,2.135,2615,2.135,2616,2.135,2617,2.135,2618,4.705,2619,2.135,2620,2.135,2621,2.135,2622,2.135,2623,4.15,2624,2.135,2625,2.135,2626,2.135,2627,4.15,2628,2.135,2629,2.135,2630,2.135,2631,2.135,2632,2.135,2633,6.055,2634,2.135,2635,2.135,2636,2.135,2637,2.135,2638,2.135,2639,2.135,2640,2.135,2641,2.135,2642,2.135,2643,5.378,2644,3.838,2645,3.759,2646,4.744,2647,2.44,2648,2.44,2649,3.838,2650,3.838,2651,2.44,2652,2.44,2653,2.44,2654,3.358,2655,4.705,2656,5.378,2657,2.135,2658,2.44,2659,5.147,2660,1.934,2661,2.135,2662,2.135,2663,2.135,2664,2.135,2665,2.135,2666,2.135,2667,2.135,2668,2.135,2669,2.135,2670,2.44]],["title/dependencies.html",[377,2.306,2671,2.74]],["body/dependencies.html",[18,0.012,21,0.01,22,0.01,75,0.648,78,1.829,177,2.233,253,4.443,254,2.935,258,3.614,377,2.59,389,2.935,392,2.314,397,4.098,412,3.072,482,4.905,483,4.905,792,4.905,1232,4.443,2115,4.905,2572,4.443,2672,8.354,2673,5.607,2674,5.607,2675,5.607,2676,6.904,2677,6.04,2678,7.808,2679,5.607,2680,5.607,2681,5.607,2682,6.904,2683,5.607,2684,5.607,2685,5.607,2686,5.607,2687,5.607,2688,5.607,2689,4.905,2690,5.607,2691,5.607,2692,5.607,2693,5.607,2694,5.607,2695,5.607,2696,5.607,2697,5.607,2698,5.607,2699,5.607,2700,5.607,2701,5.607,2702,4.905,2703,5.607,2704,4.905,2705,5.607,2706,5.607,2707,5.607,2708,5.607,2709,4.443,2710,4.905,2711,5.607,2712,5.607,2713,5.607]],["title/miscellaneous/enumerations.html",[2714,2.216,2715,4.368]],["body/miscellaneous/enumerations.html",[8,0.304,18,0.012,21,0.01,22,0.01,53,2.622,64,4.327,66,2.041,72,2.522,83,3.091,97,4.215,101,4.458,174,3.117,175,3.87,210,1.4,264,2.971,285,3.641,365,3.641,436,4.149,464,4.966,470,3.486,495,5.513,858,4.149,904,4.149,1635,4.498,2322,6.086,2714,3.638,2715,4.966,2716,6.957,2717,5.676,2718,5.676,2719,5.676,2720,5.676,2721,5.676,2722,5.676,2723,5.676,2724,5.676,2725,5.676,2726,6.957,2727,5.676,2728,4.966,2729,5.676,2730,5.676,2731,5.676,2732,5.676,2733,5.676,2734,5.676,2735,5.676,2736,4.966,2737,5.676,2738,5.676,2739,5.676,2740,5.676,2741,5.676,2742,5.676,2743,5.676]],["title/miscellaneous/functions.html",[2714,2.216,2744,4.368]],["body/miscellaneous/functions.html",[8,0.329,11,0.832,17,0.643,18,0.012,21,0.01,22,0.01,46,1.698,47,1.005,55,1.237,66,2.205,251,4.482,255,6.607,263,5.776,272,4.482,285,3.815,307,2.065,2427,4.969,2431,6.376,2654,7.041,2659,4.859,2660,5.776,2714,3.93,2744,5.364,2745,5.364,2746,5.364,2747,5.364,2748,5.364]],["title/index.html",[8,0.185,2749,3.025,2750,3.457]],["body/index.html",[4,0.104,18,0.011,21,0.008,22,0.008,28,1.709,47,0.548,53,1.957,54,1.474,134,1.182,139,5.184,149,0.641,153,1.339,160,1.297,175,5.373,188,2.716,226,1.257,237,2.002,292,2.218,321,3.884,325,2.768,332,1.814,355,3.098,384,3.358,490,3.708,526,3.708,680,2.124,718,2.567,748,3.691,856,2.437,914,2.716,1141,2.567,1280,6.894,1430,4.781,1635,3.358,1930,3.358,2009,3.708,2143,5.999,2178,6.623,2246,3.098,2339,3.708,2573,5.038,2645,4.564,2671,3.358,2689,3.708,2702,5.038,2704,5.723,2709,3.358,2710,5.038,2728,5.038,2749,3.708,2751,7.339,2752,5.759,2753,4.238,2754,6.541,2755,5.759,2756,4.238,2757,6.541,2758,4.238,2759,7.57,2760,4.238,2761,5.759,2762,4.238,2763,3.708,2764,4.238,2765,4.238,2766,4.238,2767,4.238,2768,6.541,2769,6.541,2770,4.238,2771,6.775,2772,4.238,2773,4.238,2774,4.238,2775,4.238,2776,5.759,2777,5.759,2778,7.018,2779,4.238,2780,5.759,2781,5.759,2782,4.238,2783,4.238,2784,4.238,2785,6.541,2786,3.708,2787,4.238,2788,4.238,2789,4.238,2790,6.541,2791,5.759,2792,4.238,2793,3.358,2794,5.759,2795,5.759,2796,4.238,2797,4.238,2798,4.238,2799,4.238,2800,4.238,2801,4.238,2802,7.018,2803,7.018,2804,4.238,2805,4.238,2806,3.708,2807,4.238,2808,4.238,2809,4.238,2810,4.238,2811,4.238,2812,4.238,2813,4.238,2814,5.759,2815,4.238,2816,4.238,2817,5.759,2818,4.238,2819,4.238,2820,7.744,2821,4.238,2822,4.238,2823,4.238,2824,4.238,2825,5.759,2826,4.238,2827,4.238,2828,4.238,2829,4.238,2830,4.238,2831,4.238,2832,4.238,2833,4.238,2834,5.759,2835,4.238,2836,4.238,2837,4.238,2838,4.238,2839,5.759,2840,4.238,2841,5.759,2842,5.759,2843,4.238,2844,4.238,2845,4.238,2846,7.018,2847,4.238,2848,4.238,2849,4.238,2850,4.238,2851,4.238,2852,5.759,2853,4.238,2854,4.238,2855,4.238,2856,4.238,2857,4.238,2858,4.238,2859,4.238,2860,4.238,2861,4.238,2862,4.238,2863,5.759,2864,4.238,2865,4.238,2866,4.238,2867,4.238]],["title/modules.html",[376,2.621]],["body/modules.html",[18,0.01,21,0.01,22,0.01,375,4.499,376,2.843,626,3.373,656,4.196,1144,4.499,1257,4.499,1595,4.196,1751,4.499,1832,4.499,2022,4.499,2521,4.499,2677,7.514,2868,8.588,2869,8.588,2870,8.588]],["title/overview.html",[2793,4.498]],["body/overview.html",[2,1.208,18,0.012,21,0.008,22,0.008,33,1.673,109,4.342,151,1.327,201,1.873,203,2.155,205,2.222,207,1.873,209,1.873,212,1.873,214,2.222,216,1.873,218,1.873,221,2.222,223,1.873,225,1.873,228,1.873,230,1.873,232,1.873,234,1.873,236,1.873,239,2.222,241,1.873,243,2.222,245,2.222,247,1.873,332,1.797,375,5.518,376,1.939,377,2.643,378,3.674,379,3.674,380,2.868,381,2.104,626,4.644,627,3.674,628,3.674,629,3.674,656,5.498,657,3.674,658,3.674,659,3.674,759,3.745,805,2.104,1122,2.415,1144,5.997,1145,3.674,1146,3.674,1147,3.674,1257,5.348,1258,3.674,1259,3.674,1260,3.674,1577,3.328,1595,5.147,1596,3.674,1598,3.674,1751,5.747,1752,3.674,1753,3.674,1772,3.944,1832,5.747,1833,3.674,1834,3.674,1835,3.674,1894,3.944,2022,6.13,2023,3.674,2024,3.674,2025,3.674,2456,4.172,2521,5.747,2522,3.674,2523,3.674,2524,3.674,2645,3.328,2793,3.328,2871,4.199,2872,4.199]],["title/properties.html",[9,0.794,2671,2.74]],["body/properties.html",[9,1.075,18,0.011,21,0.011,22,0.011,2709,5.361,2873,6.764]],["title/miscellaneous/variables.html",[2714,2.216,2874,4.368]],["body/miscellaneous/variables.html",[5,0.098,8,0.097,9,0.289,16,1.868,17,0.684,18,0.012,21,0.004,22,0.004,23,1.656,25,1.439,26,1.328,27,1.439,28,2.275,29,1.439,30,1.439,47,0.891,52,2.322,54,1.051,55,0.289,57,1.439,66,2.757,72,0.807,73,1.589,80,2.673,92,1.537,149,0.336,159,0.955,169,1.656,173,2.929,174,3.028,175,2.645,181,2.237,210,0.746,219,0.957,233,1.379,251,1.328,252,2.395,254,1.582,256,2.395,257,3.306,259,3.306,260,1.328,264,2.367,265,2.645,270,2.395,271,3.607,272,1.328,275,2.395,285,2.837,289,2.487,292,3.461,299,1.738,308,2.553,311,1.238,312,2.06,317,2.06,321,1.453,415,1.1,436,1.328,442,3.083,470,1.944,527,1.589,534,1.589,580,1.937,581,1.937,582,1.937,601,2.644,622,4.102,623,4.102,624,3.784,625,3.592,667,3.512,668,3.512,669,0.699,670,0.807,671,0.807,672,0.807,673,0.807,674,0.807,675,0.807,676,0.807,678,2.653,679,2.879,718,2.351,727,1.589,728,1.589,729,1.589,730,1.589,805,2.266,1122,3.705,1180,2.06,1183,2.209,1184,2.06,1308,2.031,1312,2.395,1313,1.937,1315,1.656,1609,3.306,1699,2.644,1739,2.601,1741,3.395,1742,3.395,1743,3.395,1744,3.979,1762,2.644,1813,3.961,1844,1.937,1868,2.644,1869,2.395,1870,2.209,1871,2.395,1872,2.209,1873,2.644,1875,2.601,1930,1.439,2196,2.644,2246,1.328,2294,3.395,2296,1.439,2297,1.589,2393,1.439,2408,2.395,2427,1.238,2428,1.439,2429,1.589,2438,2.395,2439,3.075,2440,1.589,2441,2.395,2442,1.589,2443,2.644,2444,1.589,2576,1.589,2577,3.957,2587,1.589,2594,1.589,2595,3.395,2596,1.589,2597,3.957,2598,3.395,2599,3.395,2600,2.644,2601,1.589,2602,3.395,2603,2.644,2604,1.589,2605,5.464,2606,3.957,2607,3.957,2608,2.644,2609,1.589,2610,3.395,2611,3.395,2612,3.957,2613,1.589,2614,3.957,2615,3.395,2616,3.395,2617,3.395,2618,1.589,2619,2.644,2620,3.395,2621,4.393,2622,3.395,2623,1.589,2624,3.957,2625,3.957,2626,2.644,2627,1.589,2628,4.741,2629,3.957,2630,2.644,2631,1.589,2632,2.644,2633,1.589,2634,3.957,2635,3.395,2636,3.395,2637,2.644,2638,2.644,2639,2.644,2640,2.644,2641,2.644,2642,2.644,2655,1.589,2657,2.644,2659,1.439,2660,1.439,2661,3.395,2662,3.395,2663,2.644,2664,2.644,2665,3.395,2666,1.589,2667,1.589,2668,1.589,2669,1.589,2714,1.164,2736,3.395,2745,4.741,2746,2.644,2747,2.644,2748,2.644,2763,2.644,2771,3.957,2786,1.589,2806,2.644,2874,1.589,2875,1.816,2876,1.816,2877,1.816,2878,1.816,2879,3.88,2880,4.522,2881,1.816,2882,3.022,2883,3.88,2884,3.88,2885,4.522,2886,3.88,2887,4.522,2888,3.88,2889,1.816,2890,3.88,2891,6.245,2892,1.816,2893,1.816,2894,3.022,2895,3.022,2896,1.816,2897,1.816,2898,1.816,2899,1.816,2900,4.522,2901,3.022,2902,1.816,2903,3.88,2904,3.022,2905,3.88,2906,3.88,2907,3.88,2908,1.816,2909,1.816,2910,1.816,2911,1.816,2912,1.816,2913,3.88,2914,3.88,2915,1.816,2916,3.022,2917,1.816,2918,1.816,2919,1.816,2920,1.816,2921,1.816,2922,3.022,2923,3.022,2924,3.022,2925,3.022,2926,3.022,2927,3.022,2928,3.022,2929,3.022,2930,3.022,2931,1.816,2932,1.816,2933,3.022,2934,1.816,2935,1.816,2936,1.816,2937,3.88,2938,3.88,2939,1.816,2940,1.816,2941,1.816,2942,1.816,2943,1.816,2944,1.816,2945,1.816,2946,1.816,2947,1.816,2948,1.816,2949,3.022,2950,1.816,2951,1.816,2952,1.816,2953,1.816,2954,1.816,2955,1.816,2956,1.816,2957,3.88,2958,3.88,2959,1.816,2960,1.816,2961,1.816,2962,1.816,2963,3.022,2964,3.022,2965,3.022,2966,3.022,2967,3.022,2968,5.419,2969,5.419,2970,5.419,2971,5.419,2972,1.816,2973,1.816,2974,1.816,2975,1.816,2976,1.816,2977,1.816,2978,1.816,2979,1.816,2980,1.816,2981,1.816]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":338,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2873,"title":{},"body":{"properties.html":{}}}],["0.0.0.0:8181",{"_index":2843,"title":{},"body":{"index.html":{}}}],["0.0.6",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["0.053",{"_index":1624,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0.07",{"_index":812,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["0.096",{"_index":2191,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1.2",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["0.11.7",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":2193,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.12.7",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":2192,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.16",{"_index":2183,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1s",{"_index":2301,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.2",{"_index":2274,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.23",{"_index":2184,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.258",{"_index":371,"title":{},"body":{"components/AuthComponent.html":{}}}],["0.25em",{"_index":2329,"title":{},"body":{"components/SidebarComponent.html":{}}}],["0.25rem",{"_index":2016,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.2s",{"_index":921,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/ServerErrorComponent.html":{}}}],["0.325",{"_index":2006,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.3s",{"_index":2303,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.41",{"_index":1715,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.49",{"_index":1714,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.4rem",{"_index":1477,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["0.4s",{"_index":2293,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5",{"_index":2248,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5em",{"_index":2174,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.5rem",{"_index":738,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["0.5s",{"_index":2284,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.676",{"_index":2373,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.7",{"_index":2251,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.75",{"_index":2242,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.7s",{"_index":2292,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8",{"_index":2239,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8rem",{"_index":2164,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.8s",{"_index":2277,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.95",{"_index":2257,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.97",{"_index":1716,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.9rem",{"_index":2185,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0/1",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0fe271d28c2d",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":1734,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0rem",{"_index":2010,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0s",{"_index":2295,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1",{"_index":271,"title":{"interfaces/AppState-1.html":{}},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["1.05",{"_index":2240,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.1",{"_index":2238,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.15",{"_index":2243,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.2.0",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["1.3s",{"_index":2286,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.5rem",{"_index":1457,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["1.5s",{"_index":330,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["1.6s",{"_index":2285,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.7s",{"_index":2290,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.jpg",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":805,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.1",{"_index":1133,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["100",{"_index":337,"title":{},"body":{"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["1000",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["10000",{"_index":847,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["100px",{"_index":2180,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["109.75px",{"_index":2300,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["10px",{"_index":723,"title":{},"body":{"components/FooterComponent.html":{},"components/ServerErrorComponent.html":{}}}],["10rem",{"_index":741,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["11",{"_index":1141,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["11111111",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1412,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{}}}],["12.0",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345678",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124px",{"_index":354,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["13.0.2",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["13.2.1",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["13.2.6",{"_index":2755,"title":{},"body":{"index.html":{}}}],["13.3.1",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["13.3.2",{"_index":2801,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["13.4.1",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1422,"title":{},"body":{"components/IngredientComponent.html":{}}}],["14rem",{"_index":917,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["14s",{"_index":1712,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15",{"_index":2244,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15.0",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150px",{"_index":1319,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["156px",{"_index":1724,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15px",{"_index":2269,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15rem",{"_index":2013,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["16",{"_index":2645,"title":{},"body":{"coverage.html":{},"index.html":{},"overview.html":{}}}],["16.13.02",{"_index":2800,"title":{},"body":{"index.html":{}}}],["17px",{"_index":2020,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["18",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2014,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["1px",{"_index":1472,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1rem",{"_index":1413,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1s",{"_index":1719,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["2",{"_index":1122,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0a",{"_index":2816,"title":{},"body":{"index.html":{}}}],["2.2.1",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/11",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":349,"title":{},"body":{"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["201",{"_index":2727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2021",{"_index":714,"title":{},"body":{"components/FooterComponent.html":{}}}],["2022",{"_index":715,"title":{},"body":{"components/FooterComponent.html":{}}}],["204",{"_index":2726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["20deg",{"_index":1730,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["20px",{"_index":725,"title":{},"body":{"components/FooterComponent.html":{}}}],["213",{"_index":1135,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["22",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["221",{"_index":2189,"title":{},"body":{"components/RecipesComponent.html":{}}}],["227",{"_index":2362,"title":{},"body":{"components/TabsComponent.html":{}}}],["229",{"_index":2190,"title":{},"body":{"components/RecipesComponent.html":{}}}],["23",{"_index":2871,"title":{},"body":{"overview.html":{}}}],["230",{"_index":1136,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["234",{"_index":2005,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/TitleComponent.html":{}}}],["24.2mbaprès",{"_index":2826,"title":{},"body":{"index.html":{}}}],["24t14:15:22z",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2223,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["250px",{"_index":2177,"title":{},"body":{"components/RecipesComponent.html":{}}}],["254",{"_index":2372,"title":{},"body":{"components/TitleComponent.html":{}}}],["255",{"_index":2363,"title":{},"body":{"components/TabsComponent.html":{}}}],["25px",{"_index":2261,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["25rem",{"_index":1450,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["26",{"_index":2872,"title":{},"body":{"overview.html":{}}}],["26.67",{"_index":2231,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["28.33",{"_index":2224,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["280px",{"_index":2176,"title":{},"body":{"components/RecipesComponent.html":{}}}],["28cb65260f81",{"_index":2824,"title":{},"body":{"index.html":{}}}],["28d1",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":2187,"title":{},"body":{"components/RecipesComponent.html":{}}}],["2rem",{"_index":1320,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["2s",{"_index":1721,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["3",{"_index":2294,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["3.jpg",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/5",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1478,"title":{},"body":{"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UsersComponent.html":{}}}],["300",{"_index":1735,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{}}}],["3000",{"_index":884,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["30px",{"_index":920,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["31",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["310px",{"_index":1725,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["33",{"_index":2246,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["35px",{"_index":353,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["378.729px",{"_index":2299,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["38000",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":2017,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["3s",{"_index":1706,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4",{"_index":2296,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["4.18.1",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":341,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["400",{"_index":1289,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["401",{"_index":1299,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["401b",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1300,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["4200:4200",{"_index":2831,"title":{},"body":{"index.html":{}}}],["4201docker",{"_index":2862,"title":{},"body":{"index.html":{}}}],["44",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":2225,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["45deg",{"_index":2262,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["46.67",{"_index":2232,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["47",{"_index":2249,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["476.268px",{"_index":2280,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["48.33",{"_index":2226,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["485.125px",{"_index":2288,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["495057",{"_index":1423,"title":{},"body":{"components/IngredientComponent.html":{}}}],["4b4b62",{"_index":1737,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4e00",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":2194,"title":{},"body":{"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["4s",{"_index":1723,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["5",{"_index":2297,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":351,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["500",{"_index":1302,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["5000",{"_index":1290,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["50px",{"_index":2263,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.33px",{"_index":2289,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.67",{"_index":2227,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["510",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["55",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["550px",{"_index":843,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["576px",{"_index":2195,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6/19",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":837,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["607d8b",{"_index":1446,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["63",{"_index":2252,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["640px",{"_index":2021,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["65",{"_index":2241,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["66",{"_index":343,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["6px",{"_index":2182,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6rem",{"_index":744,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["6s",{"_index":335,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["7.4.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2146,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["700",{"_index":2163,"title":{},"body":{"components/RecipesComponent.html":{}}}],["75",{"_index":2197,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["75px",{"_index":2266,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["77",{"_index":2255,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["7rem",{"_index":916,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["7s",{"_index":1718,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1831,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["80",{"_index":345,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["80/tcp",{"_index":2844,"title":{},"body":{"index.html":{}}}],["85",{"_index":2256,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["86a8c0",{"_index":1434,"title":{},"body":{"components/IngredientComponent.html":{}}}],["89",{"_index":352,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["8px",{"_index":1441,"title":{},"body":{"components/IngredientComponent.html":{},"components/LoginComponent.html":{}}}],["8rem",{"_index":2169,"title":{},"body":{"components/RecipesComponent.html":{}}}],["90",{"_index":346,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["93.33",{"_index":2228,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["95",{"_index":2233,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["950",{"_index":373,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["96.67",{"_index":2229,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["960px",{"_index":1470,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["96560464",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96b05134",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97px",{"_index":2281,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["9]{9",{"_index":1822,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["9c39",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fb7ed",{"_index":340,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["_franchisee",{"_index":865,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["_httprequest",{"_index":2716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_recipe",{"_index":2158,"title":{},"body":{"components/RecipesComponent.html":{}}}],["_recipetype",{"_index":1881,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["_res",{"_index":1111,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["_title",{"_index":2370,"title":{},"body":{"components/TitleComponent.html":{}}}],["_user",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isadmin",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isfranchisee",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.roles.foreach((e",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["a952",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absolute",{"_index":357,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/LoadingComponent.html":{}}}],["acceder",{"_index":1297,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["accept",{"_index":879,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["acceptbuttonstyleclass",{"_index":878,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["access",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["accesstoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired(data",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenmodel",{"_index":1,"title":{"interfaces/AccessTokenModel.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["action",{"_index":265,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/RecipesComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["action's",{"_index":2435,"title":{},"body":{"interfaces/UserState.html":{}}}],["action.userdetails",{"_index":2443,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":255,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":256,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2393,"title":{},"body":{"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":1585,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["active",{"_index":807,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["actual_component",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":139,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["addrecipe",{"_index":1187,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["addrecipe(item",{"_index":1195,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["address",{"_index":23,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.model",{"_index":731,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["address_id",{"_index":57,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":69,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressservice",{"_index":32,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["addrole",{"_index":2528,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrole(user",{"_index":2533,"title":{},"body":{"injectables/UsersService.html":{}}}],["addstarrecipe",{"_index":1237,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["admin",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["adminaccess",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["adresse",{"_index":896,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ago",{"_index":2825,"title":{},"body":{"index.html":{}}}],["ajout",{"_index":1394,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ajouter",{"_index":833,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["align",{"_index":367,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["allergen",{"_index":1312,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":2268,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["alternate",{"_index":1707,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["angular",{"_index":2143,"title":{},"body":{"components/RecipesComponent.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["angular.json",{"_index":2806,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":792,"title":{},"body":{"components/FranchiseeComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":76,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["animate",{"_index":791,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["animate(\"400ms",{"_index":809,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["animation",{"_index":328,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["animations",{"_index":802,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["antialiased",{"_index":1426,"title":{},"body":{"components/IngredientComponent.html":{}}}],["api",{"_index":136,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["apibaseurl",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitokeninterceptorservice",{"_index":109,"title":{"interceptors/ApiTokenInterceptorService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiurl",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":150,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["application",{"_index":2850,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2848,"title":{},"body":{"index.html":{}}}],["appstate",{"_index":250,"title":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["appurl",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":2772,"title":{},"body":{"index.html":{}}}],["asobservable",{"_index":1687,"title":{},"body":{"injectables/MessagesService.html":{}}}],["assign",{"_index":960,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["async",{"_index":115,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["attached",{"_index":1491,"title":{},"body":{"injectables/IngredientService.html":{}}}],["attachment",{"_index":1437,"title":{},"body":{"components/IngredientComponent.html":{}}}],["attachpictures",{"_index":2048,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(picture",{"_index":2057,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(this.picture",{"_index":1983,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["attched",{"_index":1560,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["attention",{"_index":60,"title":{},"body":{"injectables/AddressService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["au",{"_index":1305,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["auth",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component.html",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/auth.component",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_code_verifier",{"_index":2740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_state",{"_index":2738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_user_token",{"_index":2742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcomponent",{"_index":201,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticated",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated.guard.ts",{"_index":1580,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authenticated.guard.ts:12",{"_index":1583,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated.guard.ts:9",{"_index":1582,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated/is",{"_index":1579,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":375,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":146,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["authorization_code",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken(code",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize?${query.tostring",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{}}}],["authservice",{"_index":119,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["auto",{"_index":845,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["automatically",{"_index":2764,"title":{},"body":{"index.html":{}}}],["autorisation",{"_index":619,"title":{"interfaces/Autorisation.html":{}},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["autorisations",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autorise",{"_index":1296,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["available_at",{"_index":1868,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["availabledate",{"_index":1959,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["avatarmodule",{"_index":1262,"title":{},"body":{"modules/HomeModule.html":{}}}],["await",{"_index":142,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["b94a",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":2282,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["backend",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["background",{"_index":369,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["badgemodule",{"_index":632,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["bahar",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baixo",{"_index":1710,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["base",{"_index":2000,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["base_price",{"_index":1869,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":2434,"title":{},"body":{"interfaces/UserState.html":{}}}],["basezindex",{"_index":846,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["basic",{"_index":2008,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["bearer",{"_index":147,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["before",{"_index":267,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["behaviorsubject",{"_index":687,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(false",{"_index":1638,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":690,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["between",{"_index":914,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["bezier(0.1",{"_index":1713,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bezier(0.86",{"_index":811,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["bien",{"_index":858,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bientôt",{"_index":2154,"title":{},"body":{"components/RecipesComponent.html":{}}}],["bill",{"_index":2305,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["blink",{"_index":2221,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":1321,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["body",{"_index":1416,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{}}}],["bold",{"_index":1480,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":918,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["bottom",{"_index":359,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":922,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["break",{"_index":1298,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["browse",{"_index":2870,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2677,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":2771,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":737,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{}}}],["buttonmodule",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["c",{"_index":2797,"title":{},"body":{"index.html":{}}}],["c47406527d49",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["calc(100",{"_index":915,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["calendar",{"_index":1448,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["calendarmodule",{"_index":2034,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["calibri",{"_index":2334,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["canaccess",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canaccess(user",{"_index":2748,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":1581,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["capabilities",{"_index":2788,"title":{},"body":{"index.html":{}}}],["card",{"_index":2186,"title":{},"body":{"components/RecipesComponent.html":{}}}],["case",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["catalog",{"_index":1212,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["catch",{"_index":1667,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["catcherror",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["catcherror((err",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror((httperrorresponse",{"_index":1244,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["category",{"_index":2171,"title":{},"body":{"components/RecipesComponent.html":{}}}],["causing",{"_index":693,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["ccbe1c",{"_index":347,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{}}}],["ce",{"_index":881,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["cell",{"_index":1764,"title":{},"body":{"components/ProfileComponent.html":{}}}],["center",{"_index":366,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["cette",{"_index":2151,"title":{},"body":{"components/RecipesComponent.html":{}}}],["challenge",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["challenger",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["champ",{"_index":1119,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["change",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["changed",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1775,"title":{},"body":{"components/ProfileComponent.html":{}}}],["check",{"_index":2710,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["checkboxmodule",{"_index":638,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["checkerror",{"_index":1886,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["checkerror(controlname",{"_index":1896,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["chez",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":2784,"title":{},"body":{"index.html":{}}}],["choose",{"_index":2009,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{}}}],["chrome",{"_index":1129,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["cima",{"_index":1717,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["circle",{"_index":327,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["city",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["class*=\"col",{"_index":1411,"title":{},"body":{"components/IngredientComponent.html":{}}}],["clear",{"_index":1476,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":2754,"title":{},"body":{"index.html":{}}}],["client",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["client_id",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["clone",{"_index":2815,"title":{},"body":{"index.html":{}}}],["closed_at",{"_index":667,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["closeerrorhttp",{"_index":698,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["cluster_authmodule",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":627,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":628,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":629,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_defaultmodule",{"_index":657,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_declarations",{"_index":658,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_exports",{"_index":659,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule",{"_index":1145,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_declarations",{"_index":1147,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_providers",{"_index":1146,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1258,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1260,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_exports",{"_index":1259,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule",{"_index":1596,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_exports",{"_index":1598,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_imports",{"_index":1597,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["cluster_principalmodule",{"_index":1752,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_declarations",{"_index":1753,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_imports",{"_index":1754,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["cluster_profilemodule",{"_index":1833,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1834,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":1835,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule",{"_index":2023,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_declarations",{"_index":2024,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_providers",{"_index":2025,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2522,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":2524,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":2523,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":292,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/IngreType.html":{},"interfaces/RecipeType.html":{},"interfaces/Role.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code_challenge",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_challenge_method",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verifier",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verify",{"_index":2739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":1410,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{}}}],["color",{"_index":334,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["column",{"_index":912,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["command",{"_index":2785,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["complete",{"_index":318,"title":{},"body":{"components/AuthComponent.html":{}}}],["compodoc",{"_index":2846,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2852,"title":{},"body":{"index.html":{}}}],["component",{"_index":149,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/components.module",{"_index":662,"title":{},"body":{"modules/DefaultModule.html":{}}}],["componentsmodule",{"_index":626,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["compose",{"_index":2863,"title":{},"body":{"index.html":{}}}],["compte",{"_index":2734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["concatmap",{"_index":1640,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/UserEffects.html":{}}}],["concatmap((action",{"_index":2402,"title":{},"body":{"injectables/UserEffects.html":{}}}],["config",{"_index":1039,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.address",{"_index":1067,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.franchisee",{"_index":1066,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.ingredients",{"_index":1937,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.ingredientstypes",{"_index":1940,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.mode",{"_index":1065,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.pictures",{"_index":1944,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipe",{"_index":1936,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipetype",{"_index":1939,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.schedule",{"_index":1068,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["configuration",{"_index":2853,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":873,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["confirmation",{"_index":742,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["confirmationservice",{"_index":760,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/ProfileModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["confirmdialogmodule",{"_index":1167,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["console.info('complete",{"_index":319,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log",{"_index":1231,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["console.log(\"[intercept",{"_index":135,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["console.log(\"désol",{"_index":1293,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log(\"erreur",{"_index":891,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/ProfileComponent.html":{}}}],["console.log(\"get",{"_index":964,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["console.log(\"profile",{"_index":1814,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(\"res",{"_index":1792,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(\"service",{"_index":2562,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(\"users",{"_index":2559,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(\"xxxxxxxxxxxx",{"_index":1374,"title":{},"body":{"components/IngredientComponent.html":{}}}],["console.log('[authervice",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('[authservice",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('action",{"_index":273,"title":{},"body":{"interfaces/AppState-1.html":{}}}],["console.log('actions",{"_index":268,"title":{},"body":{"interfaces/AppState.html":{}}}],["console.log('auth",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('je",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('picture",{"_index":1993,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('refresh",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('res",{"_index":1546,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["console.log('return",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('selected",{"_index":1987,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('service",{"_index":1223,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["console.log('set",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('state",{"_index":266,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["console.log('topbar",{"_index":316,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["console.log('try",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('user",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.user",{"_index":1788,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":141,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["constants/message.const",{"_index":84,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["constants/role.const",{"_index":1850,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(actions",{"_index":2392,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(authservice",{"_index":118,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(franchiseeservice",{"_index":758,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["constructor(http",{"_index":42,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(ingredientservice",{"_index":1333,"title":{},"body":{"components/IngredientComponent.html":{}}}],["constructor(ingredienttypeservice",{"_index":1514,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["constructor(loadingservice",{"_index":1610,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(messageservice",{"_index":1270,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(primengconfig",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":1620,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(recipeservice",{"_index":2112,"title":{},"body":{"components/RecipesComponent.html":{}}}],["constructor(ref",{"_index":1044,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["constructor(store",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(usersservice",{"_index":2455,"title":{},"body":{"components/UsersComponent.html":{}}}],["contactdialog",{"_index":746,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["container",{"_index":355,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["conteneur",{"_index":2829,"title":{},"body":{"index.html":{}}}],["content",{"_index":365,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contentstyle",{"_index":840,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["continue",{"_index":1279,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["contractor",{"_index":2736,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":1899,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["cookie",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["copyright",{"_index":711,"title":{},"body":{"components/FooterComponent.html":{}}}],["country",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":1435,"title":{},"body":{"components/IngredientComponent.html":{}}}],["coverage",{"_index":2572,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["cr",{"_index":1547,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["create",{"_index":53,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create_by",{"_index":727,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[auth",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaddress",{"_index":37,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(create",{"_index":49,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(this.address",{"_index":1106,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["created",{"_index":2728,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["created_by",{"_index":1878,"title":{},"body":{"interfaces/Recipe.html":{}}}],["createeffect",{"_index":2395,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createfeatureselector('user",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createingredient",{"_index":1484,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(item",{"_index":1487,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredienttype",{"_index":1553,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(item",{"_index":1556,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(this.ingretype",{"_index":1545,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["createnewfranchisee",{"_index":755,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["createnewrecipe",{"_index":2111,"title":{},"body":{"components/RecipesComponent.html":{}}}],["createnewuser",{"_index":2451,"title":{},"body":{"components/UsersComponent.html":{}}}],["createrecipe",{"_index":2049,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createrecipe(item",{"_index":2059,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createreducer",{"_index":2429,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["createschedule",{"_index":2202,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createschedule(create",{"_index":2204,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createselector",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserdetails",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserstate",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["création",{"_index":1113,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["crée",{"_index":859,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["créer",{"_index":2828,"title":{},"body":{"index.html":{}}}],["csprng",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["csuppression",{"_index":888,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ctrl",{"_index":2796,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":810,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["current",{"_index":1443,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["current_user",{"_index":2743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currentrole",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":1462,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["custom",{"_index":323,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["customers",{"_index":1455,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d",{"_index":2830,"title":{},"body":{"index.html":{}}}],["d'alerte",{"_index":2120,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'ingredient",{"_index":1391,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["d'ingrédient",{"_index":1408,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["d'une",{"_index":2119,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'utilisateur",{"_index":2512,"title":{},"body":{"components/UsersComponent.html":{}}}],["d.p",{"_index":2358,"title":{},"body":{"components/TabsComponent.html":{}}}],["d4dff7",{"_index":342,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["d8dadc",{"_index":1445,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d8f6f6",{"_index":2001,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["d\\'ingredient",{"_index":1481,"title":{},"body":{"components/IngredientComponent.html":{}}}],["d\\'ingrédient",{"_index":1482,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["daemon",{"_index":2840,"title":{},"body":{"index.html":{}}}],["dans",{"_index":303,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["dash",{"_index":329,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dasharray",{"_index":348,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashoffset",{"_index":350,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["data",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["data.expire_at",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.expires_in",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.refresh_token",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expire_at",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expires_in",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["datatable",{"_index":1454,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["datatable.p",{"_index":1453,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["dataviewmodule",{"_index":2028,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["date",{"_index":1874,"title":{},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{}}}],["date('2019",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().getdate",{"_index":1951,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date().setdate(new",{"_index":1950,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(new",{"_index":1949,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(this.recipe?.available_at",{"_index":1952,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date.now",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["datepicker",{"_index":1449,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["daygrid",{"_index":1439,"title":{},"body":{"components/IngredientComponent.html":{}}}],["days",{"_index":677,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{}}}],["dbe6fdd7",{"_index":2375,"title":{},"body":{"components/TitleComponent.html":{}}}],["de",{"_index":887,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["declarations",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dee2e6",{"_index":2175,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deep",{"_index":322,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["default",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["default.component",{"_index":661,"title":{},"body":{"modules/DefaultModule.html":{}}}],["default.component.html",{"_index":653,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":652,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default/default.component",{"_index":1601,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["default/default.module",{"_index":1602,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["defaultcomponent",{"_index":203,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultmodule",{"_index":656,"title":{"modules/DefaultModule.html":{}},"body":{"modules/DefaultModule.html":{},"modules/LayoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["defined",{"_index":44,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["defining",{"_index":2436,"title":{},"body":{"interfaces/UserState.html":{}}}],["defone",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["delay",{"_index":2279,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["delete",{"_index":64,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["delete(`${environment.apibaseurl}/addresses/${id",{"_index":106,"title":{},"body":{"injectables/AddressService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/${id",{"_index":1503,"title":{},"body":{"injectables/IngredientService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/types/${id",{"_index":1574,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["delete(`${environment.apibaseurl}/users/${id",{"_index":2571,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete(franchisee",{"_index":765,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["deleteaddress",{"_index":38,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteaddress(id",{"_index":58,"title":{},"body":{"injectables/AddressService.html":{}}}],["deletefranchisee",{"_index":1188,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deletefranchisee(id",{"_index":1199,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deleteingredient",{"_index":1326,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["deleteingredient(id",{"_index":1489,"title":{},"body":{"injectables/IngredientService.html":{}}}],["deleteingredient(ingredient",{"_index":1337,"title":{},"body":{"components/IngredientComponent.html":{}}}],["deleteingredienttype",{"_index":1510,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(id",{"_index":1558,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(ingretype",{"_index":1516,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleteingredienttype(ingretype.id",{"_index":1549,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleterecipe",{"_index":2050,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["deleterecipe(id",{"_index":2062,"title":{},"body":{"injectables/RecipeService.html":{}}}],["deleterecipe(recipe",{"_index":2116,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deletes",{"_index":61,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteuser",{"_index":2529,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":2536,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":377,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":2513,"title":{},"body":{"components/UsersComponent.html":{}}}],["description",{"_index":52,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"injectables/ScheduleService.html":{},"components/TitleComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dessert",{"_index":2070,"title":{},"body":{"injectables/RecipeService.html":{}}}],["detail",{"_index":855,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["detail'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["detail.component",{"_index":1175,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["detail.component.html",{"_index":928,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.scss",{"_index":927,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts",{"_index":926,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:102",{"_index":946,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:106",{"_index":943,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":950,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":949,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":951,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":947,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":953,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":948,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":939,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":952,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":944,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":942,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:67",{"_index":941,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:84",{"_index":945,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":940,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail/franchisee",{"_index":925,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"coverage.html":{}}}],["details",{"_index":1930,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["details.module.ts",{"_index":2027,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/ingredient",{"_index":1504,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts",{"_index":1317,"title":{},"body":{"components/IngredientComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts:102",{"_index":1349,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:110",{"_index":1347,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:155",{"_index":1338,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:184",{"_index":1343,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:194",{"_index":1339,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:27",{"_index":1352,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:29",{"_index":1354,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:31",{"_index":1359,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:32",{"_index":1357,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:34",{"_index":1356,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:36",{"_index":1350,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:37",{"_index":1355,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:38",{"_index":1358,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:40",{"_index":1351,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:42",{"_index":1353,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:43",{"_index":1336,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:55",{"_index":1346,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:60",{"_index":1340,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:71",{"_index":1341,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:80",{"_index":1344,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:94",{"_index":1345,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/recipe",{"_index":2026,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/recipe/recipe",{"_index":1879,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts",{"_index":2107,"title":{},"body":{"components/RecipesComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts:103",{"_index":2114,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:137",{"_index":2117,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:166",{"_index":2125,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:41",{"_index":2134,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:43",{"_index":2132,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:44",{"_index":2133,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:45",{"_index":2127,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:46",{"_index":2128,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:47",{"_index":2130,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:49",{"_index":2136,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:50",{"_index":2135,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:51",{"_index":2131,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:52",{"_index":2113,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:58",{"_index":2126,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:59",{"_index":2129,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:64",{"_index":2121,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:75",{"_index":2123,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:88",{"_index":2122,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/tabs/tabs.component.ts",{"_index":2352,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["details/tabs/tabs.component.ts:13",{"_index":2357,"title":{},"body":{"components/TabsComponent.html":{}}}],["details/tabs/tabs.component.ts:8",{"_index":2356,"title":{},"body":{"components/TabsComponent.html":{}}}],["detectroutingongoing",{"_index":1608,"title":{},"body":{"components/LoadingComponent.html":{}}}],["determining",{"_index":2433,"title":{},"body":{"interfaces/UserState.html":{}}}],["dev",{"_index":2761,"title":{},"body":{"index.html":{}}}],["development",{"_index":2756,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["dgitflow",{"_index":2864,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":743,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dialog'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dialog.component",{"_index":801,"title":{},"body":{"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["dialog.component.html",{"_index":1038,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1037,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1036,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:101",{"_index":1047,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:109",{"_index":1901,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:121",{"_index":1911,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:126",{"_index":1053,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1902,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:146",{"_index":1051,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:159",{"_index":1915,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:174",{"_index":1908,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":1910,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:183",{"_index":1905,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:188",{"_index":1912,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":1914,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:201",{"_index":1898,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1059,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1056,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1058,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1057,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1054,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1061,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1920,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1062,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1046,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1916,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1060,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1055,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1918,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1924,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1919,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1923,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1922,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":1895,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":1050,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1921,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1917,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1049,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":1903,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:74",{"_index":1048,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:80",{"_index":1900,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":1052,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1907,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog/franchisee",{"_index":800,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"coverage.html":{}}}],["dialog/recipe",{"_index":1880,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":1154,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dialogservice",{"_index":734,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["dimanche",{"_index":1033,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["diner",{"_index":665,"title":{"interfaces/Diner.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["direction",{"_index":911,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2770,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2775,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":304,"title":{},"body":{"components/AuthComponent.html":{},"injectables/UserEffects.html":{}}}],["display",{"_index":362,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{}}}],["disponiblit",{"_index":1997,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dist",{"_index":2774,"title":{},"body":{"index.html":{}}}],["div",{"_index":1415,"title":{},"body":{"components/IngredientComponent.html":{}}}],["dividermodule",{"_index":2040,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["docker",{"_index":2820,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":2817,"title":{},"body":{"index.html":{}}}],["dockerize",{"_index":2818,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2573,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dosign",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["dot",{"_index":1440,"title":{},"body":{"components/IngredientComponent.html":{}}}],["down",{"_index":1932,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["drop",{"_index":1931,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dropdown",{"_index":1463,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dropdownmodule",{"_index":640,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["du",{"_index":889,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["dubeau",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dubois",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duration",{"_index":2278,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["during",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2115,"title":{},"body":{"components/RecipesComponent.html":{},"dependencies.html":{}}}],["dynamicdialog",{"_index":839,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["dynamicdialogconfig",{"_index":1045,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dynamicdialogmodule",{"_index":1164,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["dynamicdialogref",{"_index":782,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["définitivement",{"_index":2153,"title":{},"body":{"components/RecipesComponent.html":{}}}],["e",{"_index":1011,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["e.id",{"_index":1009,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["e.roles",{"_index":2485,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":2782,"title":{},"body":{"index.html":{}}}],["e['code",{"_index":310,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["ease",{"_index":331,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["edge",{"_index":1143,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["edit",{"_index":1235,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["editing",{"_index":1765,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmode",{"_index":747,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["editmodeemail",{"_index":1767,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodefirstname",{"_index":1768,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodelastname",{"_index":1769,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodephone",{"_index":1770,"title":{},"body":{"components/ProfileComponent.html":{}}}],["edituser",{"_index":2452,"title":{},"body":{"components/UsersComponent.html":{}}}],["edituser(user",{"_index":2459,"title":{},"body":{"components/UsersComponent.html":{}}}],["effect",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["effectsmodule.forfeature([usereffects",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ellipsis",{"_index":2168,"title":{},"body":{"components/RecipesComponent.html":{}}}],["email",{"_index":625,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["ember",{"_index":2258,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["emitted",{"_index":2287,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["en",{"_index":904,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["end",{"_index":2178,"title":{},"body":{"components/RecipesComponent.html":{},"index.html":{}}}],["endpoints",{"_index":2322,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["endpoints.logout",{"_index":2328,"title":{},"body":{"components/SidebarComponent.html":{}}}],["entotal",{"_index":1550,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["entrycomponents",{"_index":1149,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["enumerations",{"_index":2715,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":80,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/contractors/${create.id}/times",{"_index":2213,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/recipes",{"_index":1228,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/times",{"_index":2212,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${id}/recipes/${recipe.id",{"_index":1241,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${update.id}/recipes/${recipe.id",{"_index":1239,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/users/${user.id}/roles",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apibaseurl}/users/current",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthcallbackuri",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthclientid",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthproviderbaseurl",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.prod.ts",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1793,"title":{},"body":{"components/ProfileComponent.html":{}}}],["err.message",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.statustext",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["erreur",{"_index":885,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error",{"_index":315,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error('failed",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('state",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('user",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('workflow",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error.message",{"_index":1307,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error(httperrorresponse",{"_index":2085,"title":{},"body":{"injectables/RecipeService.html":{}}}],["error.component",{"_index":650,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["error.component.html",{"_index":2218,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":2217,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":2216,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:13",{"_index":2220,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:8",{"_index":2219,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":890,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error.error.message",{"_index":2510,"title":{},"body":{"components/UsersComponent.html":{}}}],["error.interceptor.ts",{"_index":1268,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:12",{"_index":1283,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:19",{"_index":1273,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:7",{"_index":1271,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":1288,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error/http",{"_index":1267,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error/server",{"_index":649,"title":{},"body":{"modules/ComponentsModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error?.error?.message",{"_index":1292,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errordatahttp",{"_index":681,"title":{"interfaces/ErrorDataHttp.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["errorhttp",{"_index":691,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorhttpservice",{"_index":688,"title":{"injectables/ErrorHttpService.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["errorhttpsubject",{"_index":689,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorname",{"_index":1897,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["errors",{"_index":1681,"title":{},"body":{"injectables/MessagesService.html":{}}}],["est",{"_index":857,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["etes",{"_index":1395,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["event",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["event.checked",{"_index":1401,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["event.files",{"_index":1991,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.files[0",{"_index":1988,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.target",{"_index":823,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["event.url",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url.match",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value",{"_index":830,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["eventtarget",{"_index":2142,"title":{},"body":{"components/RecipesComponent.html":{}}}],["example",{"_index":2819,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":876,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["execute",{"_index":2780,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2141,"title":{},"body":{"components/RecipesComponent.html":{}}}],["exit",{"_index":2795,"title":{},"body":{"index.html":{}}}],["expire_at",{"_index":12,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["explorer",{"_index":1140,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["exports",{"_index":631,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{}}}],["express",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["external_link",{"_index":1741,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["eyes",{"_index":2304,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["f10f652d3da9",{"_index":2837,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1276,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["false",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1417,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["fancy",{"_index":2222,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fb",{"_index":936,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["fc",{"_index":1438,"title":{},"body":{"components/IngredientComponent.html":{}}}],["feature",{"_index":260,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"miscellaneous/variables.html":{}}}],["ffa62b",{"_index":344,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["ffffff",{"_index":1433,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ffffffc7",{"_index":2376,"title":{},"body":{"components/TitleComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":2766,"title":{},"body":{"index.html":{}}}],["fileupload",{"_index":2007,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploader",{"_index":2011,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploadmodule",{"_index":2030,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["fill",{"_index":1736,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["filter",{"_index":1693,"title":{},"body":{"injectables/MessagesService.html":{},"components/ProfileComponent.html":{}}}],["filter((user",{"_index":1800,"title":{},"body":{"components/ProfileComponent.html":{}}}],["finalize",{"_index":793,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["firefox",{"_index":1130,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["first",{"_index":748,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["first_line",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":622,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(response",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(userroles",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(usr",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["fish",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":720,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["flame",{"_index":2235,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["flex",{"_index":363,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["flicker",{"_index":2236,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["float",{"_index":1475,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["flow",{"_index":2866,"title":{},"body":{"index.html":{}}}],["font",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["food",{"_index":713,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer",{"_index":706,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["footer'},{'name",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":708,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":707,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":645,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["footercomponent",{"_index":205,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":813,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/UsersComponent.html":{}}}],["formbuilder",{"_index":937,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formcontrol",{"_index":1360,"title":{},"body":{"components/IngredientComponent.html":{}}}],["formdata",{"_index":1852,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/RecipeService.html":{}}}],["formdata.append('email",{"_index":1864,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('file_uuid",{"_index":2104,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('filename",{"_index":2101,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('firstname",{"_index":1861,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('lastname",{"_index":1862,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('name",{"_index":2099,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('phone",{"_index":1863,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formgroup",{"_index":814,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formsmodule",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["formvalue",{"_index":1802,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.email.trim",{"_index":1811,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.firstname.trim",{"_index":1805,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.lastname.trim",{"_index":1807,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.phone.trim",{"_index":1809,"title":{},"body":{"components/ProfileComponent.html":{}}}],["forroot",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["found",{"_index":1699,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["found.component",{"_index":1760,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["found.component.html",{"_index":1701,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1700,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1698,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:13",{"_index":1703,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1702,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1697,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{}}}],["fr",{"_index":1882,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["france",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["franch",{"_index":2545,"title":{},"body":{"injectables/UsersService.html":{}}}],["franchis",{"_index":836,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["franchisee",{"_index":210,"title":{"interfaces/Franchisee.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["franchisee'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["franchisee.address.city",{"_index":902,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.country",{"_index":903,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.first_line",{"_index":899,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.second_line",{"_index":900,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.zip_code",{"_index":901,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.component.html",{"_index":745,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.component.scss",{"_index":736,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.email",{"_index":898,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.name",{"_index":861,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.owned_by",{"_index":1229,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["franchisee.phone",{"_index":897,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee/franchisee.component",{"_index":1174,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["franchisee_id",{"_index":1201,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["franchiseeaccess",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchiseearray",{"_index":1040,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["franchiseecomponent",{"_index":207,"title":{"components/FranchiseeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseedetailcomponent",{"_index":209,"title":{"components/FranchiseeDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseedialogcomponent",{"_index":212,"title":{"components/FranchiseeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseemodule",{"_index":1144,"title":{"modules/FranchiseeModule.html":{}},"body":{"modules/FranchiseeModule.html":{},"modules.html":{},"overview.html":{}}}],["franchiseerecipe",{"_index":1180,"title":{"interfaces/FranchiseeRecipe.html":{}},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchisees",{"_index":749,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"injectables/FranchiseeService.html":{}}}],["franchisees.length",{"_index":908,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchiseeservice",{"_index":759,"title":{"injectables/FranchiseeService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"overview.html":{}}}],["franchisés",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{}}}],["freshaccesstoken",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["freshaccesstoken.access_token",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["friday",{"_index":674,"title":{"interfaces/Friday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["from(this.handle(req",{"_index":140,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["fromauth",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["fromauth.userreducer",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["front",{"_index":2275,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fruit",{"_index":1565,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["function",{"_index":262,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["functionality",{"_index":685,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["functions",{"_index":2744,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundo",{"_index":1704,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["further",{"_index":2789,"title":{},"body":{"index.html":{}}}],["g",{"_index":2839,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2768,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2753,"title":{},"body":{"index.html":{}}}],["generates",{"_index":2849,"title":{},"body":{"index.html":{}}}],["get(`${environment.apibaseurl}/contractors",{"_index":1221,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["get(`${environment.apibaseurl}/ingredients",{"_index":1497,"title":{},"body":{"injectables/IngredientService.html":{}}}],["get(`${environment.apibaseurl}/ingredients/types",{"_index":1570,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id",{"_index":2082,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id}/ingredients",{"_index":2087,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/types",{"_index":2088,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes?includes[]=pictures",{"_index":2084,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/users/${id",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${environment.apibaseurl}/users/${id}/roles",{"_index":2426,"title":{},"body":{"injectables/UserService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/addresses",{"_index":94,"title":{},"body":{"injectables/AddressService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/roles",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${environment.apibaseurl}/users/current",{"_index":2425,"title":{},"body":{"injectables/UserService.html":{}}}],["get(`${environment.apibaseurl}/users/current?includes[]=roles",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["get(`${environment.oauthproviderbaseurl}/token",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(key",{"_index":1650,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getaccesstoken",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaddresses",{"_index":39,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddresses(user",{"_index":65,"title":{},"body":{"injectables/AddressService.html":{}}}],["getauthorizationcode",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuserremote",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["getformvalues",{"_index":1041,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["getfranchiseebyid",{"_index":929,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["getfranchiseerecipes",{"_index":1189,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchiseerecipes(franchisee",{"_index":1202,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchisees",{"_index":818,"title":{},"body":{"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{}}}],["getingredients",{"_index":1485,"title":{},"body":{"injectables/IngredientService.html":{}}}],["getingredientsbyrecipeid",{"_index":2051,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientsbyrecipeid(id",{"_index":2064,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientstypes",{"_index":1554,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["getnewuser",{"_index":2418,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole",{"_index":2419,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole(id",{"_index":2422,"title":{},"body":{"injectables/UserService.html":{}}}],["getpkce",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpkce(128",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrecipe",{"_index":2052,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipe(id",{"_index":2066,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipes",{"_index":2053,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["getrecipetype",{"_index":2054,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrole",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrole(user",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote(user",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroles",{"_index":2530,"title":{},"body":{"injectables/UsersService.html":{}}}],["getschedule",{"_index":930,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{}}}],["getschedule(franchisee",{"_index":2207,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["getting",{"_index":2749,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["getuser(id",{"_index":2540,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbyid(id",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserrole",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["getuserrole(id",{"_index":2542,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserrole(user",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":2338,"title":{},"body":{"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["getuserswithroles",{"_index":2531,"title":{},"body":{"injectables/UsersService.html":{}}}],["gill",{"_index":2332,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["git",{"_index":2814,"title":{},"body":{"index.html":{}}}],["global",{"_index":2851,"title":{},"body":{"index.html":{}}}],["glow",{"_index":2298,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["go",{"_index":2792,"title":{},"body":{"index.html":{}}}],["good",{"_index":712,"title":{},"body":{"components/FooterComponent.html":{}}}],["goodfood",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gradient(135deg",{"_index":2374,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(147.38deg",{"_index":1432,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grant_type",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["grayscale",{"_index":1429,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grenoble",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1409,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["guard",{"_index":1575,"title":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1577,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"overview.html":{}}}],["handle",{"_index":116,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/UserState.html":{}}}],["handle(req",{"_index":121,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["handleerror",{"_index":1269,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handleerror(error",{"_index":1272,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handler",{"_index":1277,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handles",{"_index":1274,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["has(key",{"_index":1653,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["header",{"_index":832,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["height",{"_index":842,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["help",{"_index":2790,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1419,"title":{},"body":{"components/IngredientComponent.html":{}}}],["hidden",{"_index":2167,"title":{},"body":{"components/RecipesComponent.html":{}}}],["hidedialog",{"_index":1327,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["hidehomebtn",{"_index":2311,"title":{},"body":{"components/SidebarComponent.html":{}}}],["highlight",{"_index":2306,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["home",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":1264,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":214,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1257,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horaires",{"_index":1012,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["host",{"_index":320,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["hours",{"_index":680,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["htmltextareaelement).value",{"_index":824,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["http",{"_index":48,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["http.service",{"_index":1219,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["http.service.ts",{"_index":684,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["http.service.ts:10",{"_index":700,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:21",{"_index":703,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:29",{"_index":701,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:9",{"_index":704,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http/error",{"_index":683,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["http://localhost/4000",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/4100",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/8085/api",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2763,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200/login/redirect",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/api",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8085/oauth",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8090/storage/files/string",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":1151,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httpclient",{"_index":43,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":1150,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httperrorinterceptor",{"_index":1265,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["httperrorresponse",{"_index":686,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["httpevent",{"_index":130,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":124,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":131,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":122,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.google.fr",{"_index":2724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://www.tektutorialshub.com/angular/property",{"_index":2140,"title":{},"body":{"components/RecipesComponent.html":{}}}],["icon",{"_index":874,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["icons",{"_index":1414,"title":{},"body":{"components/IngredientComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["idfranchisee",{"_index":2448,"title":{},"body":{"components/UsersComponent.html":{}}}],["igredients",{"_index":1197,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{}}}],["il",{"_index":906,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["image",{"_index":1430,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"index.html":{}}}],["imagesrepository",{"_index":2821,"title":{},"body":{"index.html":{}}}],["img",{"_index":2179,"title":{},"body":{"components/RecipesComponent.html":{}}}],["img.flag",{"_index":2019,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["implements",{"_index":134,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":74,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":721,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/DefaultComponent.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indigo/theme.css",{"_index":2810,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":333,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["informations",{"_index":2514,"title":{},"body":{"components/UsersComponent.html":{}}}],["ingredient",{"_index":219,"title":{"interfaces/Ingredient.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingredient'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ingredient.allergen",{"_index":1378,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.html",{"_index":1322,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.scss",{"_index":1318,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.id",{"_index":1382,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/RecipeService.html":{}}}],["ingredient.model",{"_index":1876,"title":{},"body":{"interfaces/Recipe.html":{}}}],["ingredient.name",{"_index":1376,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.types",{"_index":1380,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient/ingredient.component",{"_index":2044,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["ingredient_type",{"_index":1562,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["ingredientcomponent",{"_index":216,"title":{"components/IngredientComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientdialog",{"_index":1323,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredients",{"_index":1315,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["ingredients.length",{"_index":1407,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredientsdetails",{"_index":1883,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["ingredientservice",{"_index":1334,"title":{"injectables/IngredientService.html":{}},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["ingredientstypes",{"_index":2147,"title":{},"body":{"components/RecipesComponent.html":{}}}],["ingredienttype",{"_index":1324,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["ingredienttypecomponent",{"_index":218,"title":{"components/IngredientTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredienttypedialog",{"_index":1509,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingredienttypeservice",{"_index":1335,"title":{"injectables/IngredientTypeService.html":{}},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["ingretype",{"_index":1308,"title":{"interfaces/IngreType.html":{}},"body":{"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingretype.description",{"_index":1536,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.id",{"_index":1538,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.name",{"_index":1534,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingrédients",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["init",{"_index":1328,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["initauth",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initauth(user",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initform",{"_index":1042,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["initial",{"_index":2437,"title":{},"body":{"interfaces/UserState.html":{}}}],["initialstate",{"_index":2439,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initschedule",{"_index":931,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["inizialized",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":31,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":1479,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["inner",{"_index":2276,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["input",{"_index":1138,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["inputnumbermodule",{"_index":1160,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputs",{"_index":1607,"title":{},"body":{"components/LoadingComponent.html":{},"components/TitleComponent.html":{}}}],["inputtextareamodule",{"_index":1162,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputtextmodule",{"_index":1156,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["install",{"_index":2803,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2802,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["intercept",{"_index":117,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":128,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["intercept(request",{"_index":1282,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":108,"title":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":1176,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["interceptor.service.ts",{"_index":114,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:10",{"_index":120,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:13",{"_index":129,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:25",{"_index":125,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptors",{"_index":110,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"overview.html":{}}}],["internet",{"_index":1139,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["introuvable",{"_index":1301,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["isadmin",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isallergen",{"_index":1329,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isallergen(event",{"_index":1342,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isauthenticated",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["isauthenticatedguard",{"_index":1576,"title":{"guards/IsAuthenticatedGuard.html":{}},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["iscreate",{"_index":750,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["isere",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfranchisee",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istanbul",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["isunauthenticatedguard",{"_index":1589,"title":{"guards/IsUnauthenticatedGuard.html":{}},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["item",{"_index":1198,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UsersService.html":{}}}],["item).pipe(map((res",{"_index":2568,"title":{},"body":{"injectables/UsersService.html":{}}}],["item.ingredients.map((ingredient",{"_index":2090,"title":{},"body":{"injectables/RecipeService.html":{}}}],["items",{"_index":368,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"injectables/IngredientService.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["jeudi",{"_index":1024,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["jour",{"_index":1390,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":1666,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(action.userdetails",{"_index":2412,"title":{},"body":{"injectables/UserEffects.html":{}}}],["json.stringify(newuserdetails.email",{"_index":1860,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.firstname",{"_index":1854,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.lastname",{"_index":1856,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.phone",{"_index":1858,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(value",{"_index":1661,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":364,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["karma",{"_index":2689,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1652,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyfiltermodule",{"_index":1165,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["keyframes",{"_index":336,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["l'ingrédient",{"_index":1399,"title":{},"body":{"components/IngredientComponent.html":{}}}],["la",{"_index":1984,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["label",{"_index":2015,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["label:not(.p",{"_index":1464,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["ladate",{"_index":1947,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["lastname",{"_index":623,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":132,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["lastvaluefrom(next.handle(req",{"_index":148,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["latest",{"_index":2823,"title":{},"body":{"index.html":{}}}],["lato",{"_index":1418,"title":{},"body":{"components/IngredientComponent.html":{}}}],["layer",{"_index":1474,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["layout",{"_index":909,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["layouts/components/page",{"_index":1759,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layouts/layouts.module",{"_index":1757,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layoutsmodule",{"_index":1595,"title":{"modules/LayoutsModule.html":{}},"body":{"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["le",{"_index":856,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["left",{"_index":360,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["length",{"_index":1776,"title":{},"body":{"components/ProfileComponent.html":{}}}],["les",{"_index":2730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lets",{"_index":1278,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["life",{"_index":883,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["light",{"_index":2809,"title":{},"body":{"index.html":{}}}],["lightgoldenrodyellow",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{}}}],["ligne",{"_index":1121,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["line",{"_index":2330,"title":{},"body":{"components/SidebarComponent.html":{}}}],["linear",{"_index":1431,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1742,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":2196,"title":{},"body":{"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["livraison",{"_index":1127,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["load",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadappuser",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["loaded",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":761,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["loading'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["loading.component.html",{"_index":1606,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1605,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":648,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["loadingcomponent",{"_index":221,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingoff",{"_index":1627,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingon",{"_index":1628,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":762,"title":{"injectables/LoadingService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loadingsubject",{"_index":1626,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loaduser",{"_index":317,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["localhost:8080/api/addresses",{"_index":98,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/addresses/{address_id",{"_index":102,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/contractors",{"_index":1220,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes",{"_index":1227,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id",{"_index":1238,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/times",{"_index":2206,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["localhost:8080/api/contractors/{contractors_id",{"_index":1242,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/ingredients",{"_index":1496,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/ingredients/types",{"_index":1569,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/types/{ingredient_type_id",{"_index":1572,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/{ingredient_id",{"_index":1500,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/recipes",{"_index":2083,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id",{"_index":2081,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/ingredients",{"_index":2086,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/pictures",{"_index":2103,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/roles",{"_index":2563,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users",{"_index":2554,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id",{"_index":2552,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id}/addresses",{"_index":91,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/users/{user_id}/roles",{"_index":2560,"title":{},"body":{"injectables/UsersService.html":{}}}],["localstorage",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["localstorage.getitem(key",{"_index":1668,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1669,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem",{"_index":2411,"title":{},"body":{"injectables/UserEffects.html":{}}}],["localstorage.setitem(key",{"_index":1663,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":439,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["logger",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(reducer",{"_index":263,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.html",{"_index":1672,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1671,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":223,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logoutaction",{"_index":2413,"title":{},"body":{"injectables/UserEffects.html":{}}}],["lose",{"_index":1492,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["lower",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["lunch",{"_index":678,"title":{"interfaces/Lunch.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lundi",{"_index":1015,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["main",{"_index":1733,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["make",{"_index":2075,"title":{},"body":{"injectables/RecipeService.html":{}}}],["makeingredienttype",{"_index":1511,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["makerecipe",{"_index":1330,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["map",{"_index":77,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["map((res",{"_index":1225,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["map((userdetails",{"_index":2398,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map((value",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["mardi",{"_index":1018,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["margin",{"_index":724,"title":{},"body":{"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["materialrun",{"_index":2857,"title":{},"body":{"index.html":{}}}],["max",{"_index":841,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["max_delivery_radius",{"_index":728,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["meat",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1468,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["medium",{"_index":2170,"title":{},"body":{"components/RecipesComponent.html":{}}}],["menubarmodule",{"_index":642,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["mercredi",{"_index":1021,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["message",{"_index":83,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["message.create",{"_index":1499,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/ScheduleService.html":{}}}],["message.delete",{"_index":107,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["message.update",{"_index":105,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["message.update_success",{"_index":1502,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["messageservice",{"_index":735,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["messagesservice",{"_index":1679,"title":{"injectables/MessagesService.html":{}},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["metadata",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["metareducer",{"_index":257,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":270,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":35,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["microsoft",{"_index":1142,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["middle",{"_index":2173,"title":{},"body":{"components/RecipesComponent.html":{}}}],["midi",{"_index":1013,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["min",{"_index":739,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["minutes",{"_index":2841,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":2714,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":1389,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["mockaddress",{"_index":2595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchisee",{"_index":2602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseearray",{"_index":2603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe1",{"_index":2598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe2",{"_index":2599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipearray",{"_index":2600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre1",{"_index":2610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre2",{"_index":2611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingredientarray",{"_index":2612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockpicturearray",{"_index":2614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe1",{"_index":2624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe2",{"_index":2625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipearray",{"_index":2626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipetypearray",{"_index":2619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrole1",{"_index":2628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrole2",{"_index":2629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrolearray",{"_index":2630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockschedule",{"_index":2632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype1",{"_index":2606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype2",{"_index":2607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktypearray",{"_index":2608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser1",{"_index":2634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser2",{"_index":2635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser3",{"_index":2636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserarray",{"_index":2637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth",{"_index":2638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth1",{"_index":2639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth2",{"_index":2640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserwithauth",{"_index":2641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserwithauth1",{"_index":2642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":848,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["models/access",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/address.model",{"_index":79,"title":{},"body":{"injectables/AddressService.html":{}}}],["models/franchisee",{"_index":1217,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["models/franchisee.model",{"_index":1218,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/ScheduleService.html":{}}}],["models/ingredient",{"_index":1568,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["models/ingredient.model",{"_index":2080,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/picture.model",{"_index":2078,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe",{"_index":2079,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe.model",{"_index":2077,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/role.model",{"_index":2551,"title":{},"body":{"injectables/UsersService.html":{}}}],["models/schedule.model",{"_index":2211,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["models/user.model",{"_index":82,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["modifi",{"_index":866,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["modification",{"_index":1117,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["modifications",{"_index":2731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":374,"title":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":376,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["moi",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":886,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["monday",{"_index":670,"title":{"interfaces/Monday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2791,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1427,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{}}}],["ms",{"_index":1137,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["msg",{"_index":1689,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msg.length",{"_index":1690,"title":{},"body":{"injectables/MessagesService.html":{}}}],["mt",{"_index":2333,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["multi",{"_index":1179,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["multiselect",{"_index":2012,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["multiselectmodule",{"_index":2038,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["n'etes",{"_index":1294,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2836,"title":{},"body":{"index.html":{}}}],["nav",{"_index":2360,"title":{},"body":{"components/TabsComponent.html":{}}}],["navigate",{"_index":2762,"title":{},"body":{"index.html":{}}}],["navigationcancel",{"_index":1615,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationend",{"_index":1616,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationerror",{"_index":1617,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationstart",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["need",{"_index":2786,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newerrorhttp",{"_index":696,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["newerrorhttp(httperrorresponse",{"_index":702,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["newfranchisee",{"_index":1190,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["newfranchisee(create",{"_index":1206,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["newfranchisee(this.franchisee",{"_index":1108,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["newingredient",{"_index":1331,"title":{},"body":{"components/IngredientComponent.html":{}}}],["newingredienttype",{"_index":1512,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["newrecipe",{"_index":1887,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["newschedule",{"_index":932,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["newuser",{"_index":2453,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["newuser(item",{"_index":2547,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser(this.user",{"_index":2507,"title":{},"body":{"components/UsersComponent.html":{}}}],["newuserdetails",{"_index":1851,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.email",{"_index":1859,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.firstname",{"_index":1853,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.lastname",{"_index":1855,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.phone",{"_index":1857,"title":{},"body":{"injectables/ProfileService.html":{}}}],["next",{"_index":123,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{}}}],["next.handle(req",{"_index":138,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["next.handle(request).pipe(catcherror((err",{"_index":1285,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":321,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nginx",{"_index":2838,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["ngoninit",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ngrx/effects",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":253,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":258,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["ngx",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["night",{"_index":679,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":1306,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["node",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["node_modules/.bin/compodoc",{"_index":2859,"title":{},"body":{"index.html":{}}}],["node_modules/primeicons/primeicons.css",{"_index":2807,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/primeng.min.css",{"_index":2811,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/themes/lara",{"_index":2808,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":2799,"title":{},"body":{"index.html":{}}}],["nom",{"_index":893,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["non",{"_index":1406,"title":{},"body":{"components/IngredientComponent.html":{}}}],["none",{"_index":1467,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["normal",{"_index":2162,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nosonar",{"_index":89,"title":{},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["nouveau",{"_index":835,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["nouvel",{"_index":1393,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["nouvelle",{"_index":2145,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nowrap",{"_index":2166,"title":{},"body":{"components/RecipesComponent.html":{}}}],["npm",{"_index":2759,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2854,"title":{},"body":{"index.html":{}}}],["null",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["numéro",{"_index":894,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{}}}],["o",{"_index":2758,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["oauthcallbackuri",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthclientid",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthproviderbaseurl",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":1224,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["obligatoire",{"_index":1120,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["obs",{"_index":1636,"title":{},"body":{"injectables/LoadingService.html":{}}}],["observable",{"_index":56,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["occurred",{"_index":1281,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["of(null).pipe",{"_index":1641,"title":{},"body":{"injectables/LoadingService.html":{}}}],["oftype",{"_index":2406,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.loaduser",{"_index":2397,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logoutaction.logoutflowinitiated.type",{"_index":2414,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.updateuser",{"_index":2401,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.userloaded",{"_index":2409,"title":{},"body":{"injectables/UserEffects.html":{}}}],["olhos",{"_index":1720,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["on(useractions.updateuser",{"_index":2444,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["on(useractions.userloaded",{"_index":2442,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["onchange",{"_index":1888,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchange(event",{"_index":1904,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchangevalue",{"_index":756,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onchangevalue(event",{"_index":768,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onclick",{"_index":1989,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar",{"_index":1889,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar(event",{"_index":1906,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclose",{"_index":1043,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["ondelete",{"_index":2454,"title":{},"body":{"components/UsersComponent.html":{}}}],["ondelete(user",{"_index":2466,"title":{},"body":{"components/UsersComponent.html":{}}}],["one",{"_index":261,"title":{},"body":{"interfaces/AppState.html":{},"injectables/RecipeService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["oninit",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["onlogin",{"_index":1673,"title":{},"body":{"components/LoginComponent.html":{}}}],["onselectpicture",{"_index":1890,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onselectpicture(event",{"_index":1909,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onsortchange",{"_index":757,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsortchange(event",{"_index":770,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsubmit",{"_index":933,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["ont",{"_index":2732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupload",{"_index":1891,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic",{"_index":1892,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic(event",{"_index":1913,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["opacity",{"_index":806,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["open",{"_index":2339,"title":{},"body":{"injectables/SidebarService.html":{},"index.html":{}}}],["open(display",{"_index":2342,"title":{},"body":{"injectables/SidebarService.html":{}}}],["opened_at",{"_index":668,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["opensidebar",{"_index":2382,"title":{},"body":{"components/TopbarComponent.html":{}}}],["opera",{"_index":1131,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["operation",{"_index":1275,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["optima",{"_index":2331,"title":{},"body":{"components/SidebarComponent.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Diner.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1708,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["osx",{"_index":1428,"title":{},"body":{"components/IngredientComponent.html":{}}}],["oui",{"_index":1405,"title":{},"body":{"components/IngredientComponent.html":{}}}],["out",{"_index":332,"title":{},"body":{"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/ServerErrorComponent.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":2302,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["over",{"_index":2076,"title":{},"body":{"injectables/RecipeService.html":{}}}],["overflow",{"_index":844,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipesComponent.html":{}}}],["overview",{"_index":2793,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned_by",{"_index":729,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["ownedby",{"_index":730,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1207,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["p",{"_index":325,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["package",{"_index":2671,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":722,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["page",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":225,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":1442,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["panelmodule",{"_index":1169,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["pao",{"_index":1709,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["param",{"_index":99,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters['code",{"_index":294,"title":{},"body":{"components/AuthComponent.html":{}}}],["parameters['state",{"_index":295,"title":{},"body":{"components/AuthComponent.html":{}}}],["params",{"_index":867,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["params[\"id",{"_index":959,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["partial",{"_index":50,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pas",{"_index":1295,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["passe",{"_index":302,"title":{},"body":{"components/AuthComponent.html":{}}}],["path",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/PageNotFoundComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["pays",{"_index":1125,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["phone",{"_index":624,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["pi",{"_index":875,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["picture",{"_index":1739,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture.model",{"_index":1877,"title":{},"body":{"interfaces/Recipe.html":{}}}],["picture.name",{"_index":2100,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture.uuid",{"_index":2105,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture1",{"_index":2615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture2",{"_index":2616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture3",{"_index":2617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pictures",{"_index":1870,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["pipe(filter((msg",{"_index":1688,"title":{},"body":{"injectables/MessagesService.html":{}}}],["pipe(finalize",{"_index":819,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["pipe(map((res",{"_index":95,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pipe(map((user",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["pkce",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["placeholder",{"_index":1128,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["plat",{"_index":1996,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["platform",{"_index":2783,"title":{},"body":{"index.html":{}}}],["porc",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ports",{"_index":2835,"title":{},"body":{"index.html":{}}}],["position",{"_index":356,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/LoadingComponent.html":{}}}],["post",{"_index":97,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["post(`${environment.apibaseurl}/addresses",{"_index":100,"title":{},"body":{"injectables/AddressService.html":{}}}],["post(`${environment.apibaseurl}/contractors",{"_index":1230,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/contractors/${item.id}/recipes",{"_index":1236,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/ingredients",{"_index":1498,"title":{},"body":{"injectables/IngredientService.html":{}}}],["post(`${environment.apibaseurl}/ingredients/types",{"_index":1571,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["post(`${environment.apibaseurl}/recipes",{"_index":2089,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.apibaseurl}/recipes/${recipe.id}/pictures",{"_index":2106,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.oauthproviderbaseurl}/token",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["postal",{"_index":1123,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["price",{"_index":1183,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":2018,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["primeflex",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2702,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng",{"_index":2704,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["primeng/avatar",{"_index":1263,"title":{},"body":{"modules/HomeModule.html":{}}}],["primeng/badge",{"_index":633,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["primeng/button",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/calendar",{"_index":2035,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/checkbox",{"_index":639,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/confirmdialog",{"_index":1168,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/dataview",{"_index":2029,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dialog",{"_index":1155,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/divider",{"_index":2041,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dropdown",{"_index":641,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/dynamicdialog",{"_index":794,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["primeng/fileupload",{"_index":2031,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/inputnumber",{"_index":1161,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtext",{"_index":1157,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtextarea",{"_index":1163,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/keyfilter",{"_index":1166,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/menubar",{"_index":643,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["primeng/multiselect",{"_index":2039,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/panel",{"_index":1170,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/progressbar",{"_index":1840,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/progressspinner",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/radiobutton",{"_index":2033,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/ripple",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/selectbutton",{"_index":1172,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/sidebar",{"_index":637,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["primeng/slider",{"_index":1838,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/table",{"_index":1153,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tabview",{"_index":2037,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/toast",{"_index":664,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/toolbar",{"_index":1159,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tooltip",{"_index":635,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primengconfig",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["principal",{"_index":1746,"title":{},"body":{"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{}}}],["principal'},{'name",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["principal.component",{"_index":1758,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["principal.component.html",{"_index":1748,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principal.component.scss",{"_index":1747,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principalcomponent",{"_index":228,"title":{"components/PrincipalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["principalmodule",{"_index":1751,"title":{"modules/PrincipalModule.html":{}},"body":{"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["prises",{"_index":2733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["prix",{"_index":1999,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["problem",{"_index":695,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["prod",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":1507,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["product@description.com",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.fr",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.org",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1762,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":1766,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1763,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1841,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profilecomponent",{"_index":230,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":1832,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1772,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":326,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["progressbar",{"_index":1444,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["progressbarmodule",{"_index":1839,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["progressspinnermodule",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["project",{"_index":2752,"title":{},"body":{"index.html":{}}}],["promise",{"_index":127,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"interfaces/Wednesday.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["props",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1177,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["providedin",{"_index":85,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["prénom",{"_index":1825,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["pscontainer",{"_index":2833,"title":{},"body":{"index.html":{}}}],["public",{"_index":36,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UsersService.html":{}}}],["pulse",{"_index":2271,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["put",{"_index":101,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["put(`${environment.apibaseurl}/addresses/${update.id",{"_index":103,"title":{},"body":{"injectables/AddressService.html":{}}}],["put(`${environment.apibaseurl}/contractors/${update.id}/times",{"_index":2214,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/${update.id",{"_index":1501,"title":{},"body":{"injectables/IngredientService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/types/${update.id",{"_index":1573,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["put(`${environment.apibaseurl}/recipes/${update.id",{"_index":2091,"title":{},"body":{"injectables/RecipeService.html":{}}}],["put(`${environment.apibaseurl}/users/${update.id",{"_index":2569,"title":{},"body":{"injectables/UsersService.html":{}}}],["put(`${environment.apibaseurl}/users/${user.id",{"_index":1865,"title":{},"body":{"injectables/ProfileService.html":{}}}],["query",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["r",{"_index":2861,"title":{},"body":{"index.html":{}}}],["radiobuttonmodule",{"_index":2032,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["radius",{"_index":919,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["reactiveformsmodule",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["readonly",{"_index":2337,"title":{},"body":{"injectables/SidebarService.html":{}}}],["recette",{"_index":1985,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recettes",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["recipe",{"_index":233,"title":{"interfaces/Recipe.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.available_at",{"_index":1998,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["recipe.base_price",{"_index":2159,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.id",{"_index":1240,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["recipe.mock.ts",{"_index":2597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.model",{"_index":1185,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{}}}],["recipe.model.ts",{"_index":1182,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["recipe.name",{"_index":2149,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.recipe_type.code",{"_index":2160,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe/recipe",{"_index":2043,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe/recipes/recipes.component",{"_index":2046,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe_id",{"_index":1184,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipe_type",{"_index":1871,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipedialog",{"_index":2110,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipedialogcomponent",{"_index":232,"title":{"components/RecipeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipemanagementmodule",{"_index":2022,"title":{"modules/RecipeManagementModule.html":{}},"body":{"modules/RecipeManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["recipepostmodel",{"_index":2061,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipes",{"_index":1204,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["recipes'},{'name",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["recipes.component.html",{"_index":2109,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipes.component.scss",{"_index":2108,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipescomponent",{"_index":234,"title":{"components/RecipesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeservice",{"_index":1894,"title":{"injectables/RecipeService.html":{}},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipestype",{"_index":1884,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recipetype",{"_index":1875,"title":{"interfaces/RecipeType.html":{}},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype1",{"_index":2620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype2",{"_index":2621,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype3",{"_index":2622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["redirect_uri",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["reducer",{"_index":2431,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":269,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["reducers",{"_index":259,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":751,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["ref.onclose.subscribe((franchisee",{"_index":849,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ref.onclose.subscribe((recipe",{"_index":2148,"title":{},"body":{"components/RecipesComponent.html":{}}}],["reference",{"_index":2794,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{}}}],["refreshed",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(data",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["related",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":2765,"title":{},"body":{"index.html":{}}}],["remote",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":1211,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/LocalStorageService.html":{}}}],["remove(key",{"_index":1655,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removerecipe",{"_index":1191,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["removerecipe(id",{"_index":1209,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["repeat",{"_index":1436,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["replaced",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reporter",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":126,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["req.clone",{"_index":144,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["req.urlwithparams.startswith(environment.apibaseurl",{"_index":137,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["request",{"_index":1284,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/RecipeService.html":{}}}],["required",{"_index":2520,"title":{},"body":{"components/UsersComponent.html":{}}}],["res",{"_index":96,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["res.foreach((e",{"_index":2483,"title":{},"body":{"components/UsersComponent.html":{}}}],["res.id",{"_index":1107,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["res1",{"_index":2486,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["res[\"data",{"_index":2556,"title":{},"body":{"injectables/UsersService.html":{}}}],["res[\"data\"].foreach((e",{"_index":2557,"title":{},"body":{"injectables/UsersService.html":{}}}],["res[\"message",{"_index":2570,"title":{},"body":{"injectables/UsersService.html":{}}}],["res['data",{"_index":1226,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{}}}],["res['message",{"_index":104,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["res['payload",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["response_type",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1466,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["return",{"_index":92,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reverse",{"_index":2283,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["revoke",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgb(193",{"_index":1134,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["rgb(227",{"_index":2361,"title":{},"body":{"components/TabsComponent.html":{}}}],["rgba(0",{"_index":370,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{}}}],["rgba(198",{"_index":2188,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rgba(213",{"_index":2371,"title":{},"body":{"components/TitleComponent.html":{}}}],["rgba(255",{"_index":2004,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["right",{"_index":361,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{}}}],["ripplemodule",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["role",{"_index":470,"title":{"interfaces/Role.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.model",{"_index":621,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{}}}],["rolearraytype",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid(_user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolelist",{"_index":2449,"title":{},"body":{"components/UsersComponent.html":{}}}],["roles",{"_index":285,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":311,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.franchisee",{"_index":312,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":86,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["rotate",{"_index":1729,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(0",{"_index":2264,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotate(0deg",{"_index":1728,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(45deg",{"_index":2267,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotatepao",{"_index":1711,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(0deg",{"_index":1731,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(30deg",{"_index":1732,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["route",{"_index":938,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routeconfigloadend",{"_index":1618,"title":{},"body":{"components/LoadingComponent.html":{}}}],["routeconfigloadstart",{"_index":1619,"title":{},"body":{"components/LoadingComponent.html":{}}}],["router",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forchild",{"_index":1603,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["routermodule.forchild(routes",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerreducer",{"_index":252,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routerstatesnapshot.tostring",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["routes",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routing",{"_index":1609,"title":{},"body":{"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":1756,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["routing.module.ts",{"_index":2577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":2199,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rue",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["run",{"_index":1280,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"index.html":{}}}],["running",{"_index":2776,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":78,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{}}}],["rôle",{"_index":2516,"title":{},"body":{"components/UsersComponent.html":{}}}],["s",{"_index":2860,"title":{},"body":{"index.html":{}}}],["s256",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["safari",{"_index":1132,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["samedi",{"_index":1030,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["sans",{"_index":1420,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["sara",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saturday",{"_index":675,"title":{"interfaces/Saturday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saumon",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":2804,"title":{},"body":{"index.html":{}}}],["savein",{"_index":2805,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":2767,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2270,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.8",{"_index":2272,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.98",{"_index":1726,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1",{"_index":1727,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1.1",{"_index":2273,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.65",{"_index":2254,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.7",{"_index":2250,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.72",{"_index":2253,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.9",{"_index":2245,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1",{"_index":2237,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1.2",{"_index":2247,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scales",{"_index":1705,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scaley(0.1",{"_index":2234,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaley(1",{"_index":2230,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["schedule",{"_index":669,"title":{"interfaces/Schedule.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schedule.friday.lunch",{"_index":1028,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.friday.night",{"_index":1029,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.monday.lunch",{"_index":1016,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.monday.night",{"_index":1017,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.saturday.lunch",{"_index":1031,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.saturday.night",{"_index":1032,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.sunday.lunch",{"_index":1034,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.sunday.night",{"_index":1035,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.thursday.lunch",{"_index":1025,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.thursday.night",{"_index":1026,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.tuesday.lunch",{"_index":1019,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.tuesday.night",{"_index":1020,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.wednesday.lunch",{"_index":1022,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.wednesday.night",{"_index":1023,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["scheduledialog",{"_index":752,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["scheduleservice",{"_index":935,"title":{"injectables/ScheduleService.html":{}},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["scope",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["screen",{"_index":1469,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["script",{"_index":2858,"title":{},"body":{"index.html":{}}}],["sdqi",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second_line",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":284,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["select(selectuserdetails",{"_index":1799,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selectbuttonmodule",{"_index":1171,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["selectisloggedin",{"_index":2663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["selectprofileuser",{"_index":2664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserdetails",{"_index":289,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserstate",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":2198,"title":{},"body":{"components/RecipesComponent.html":{}}}],["sera",{"_index":2152,"title":{},"body":{"components/RecipesComponent.html":{}}}],["serif",{"_index":1421,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":2757,"title":{},"body":{"index.html":{}}}],["server",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["servererrorcomponent",{"_index":236,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serveur",{"_index":694,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["service",{"_index":1232,"title":{},"body":{"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"dependencies.html":{}}}],["services/user/auth/auth.service",{"_index":1586,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["set",{"_index":1648,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set(key",{"_index":1657,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setheaders",{"_index":145,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["severity",{"_index":851,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["shadow",{"_index":2181,"title":{},"body":{"components/RecipesComponent.html":{}}}],["shared/models/picture.model",{"_index":1928,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/models/schedule.model",{"_index":797,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["shared/services/loading/loading.service",{"_index":1925,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/services/profile/profile.service",{"_index":1786,"title":{},"body":{"components/ProfileComponent.html":{}}}],["shared/services/user/auth/auth.service",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/store/state/user",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["shared/store/state/user/user.reducer",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["showerrors",{"_index":1683,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showerrors(...errors",{"_index":1684,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showloaderuntilcompleted",{"_index":1629,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showloaderuntilcompleted(obs",{"_index":1633,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sidebar",{"_index":2308,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component.html",{"_index":2310,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2309,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":644,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarcomponent",{"_index":239,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":636,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarservice",{"_index":2312,"title":{"injectables/SidebarService.html":{}},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["size",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"interfaces/Picture.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["size_unit",{"_index":1743,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":923,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{}}}],["slidermodule",{"_index":1837,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["small",{"_index":719,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["smoke",{"_index":2291,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["smoothing",{"_index":1425,"title":{},"body":{"components/IngredientComponent.html":{}}}],["soir",{"_index":1014,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["solid",{"_index":1473,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sonar",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["sortfield",{"_index":753,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["sortorder",{"_index":754,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["space",{"_index":913,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sparks",{"_index":1722,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["spinner",{"_index":324,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["src/.../address.mock.ts",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoints.const.ts",{"_index":2718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.example.ts",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stage.ts",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fracnhisee",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../franchisee.mock.ts",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httprequest.const.ts",{"_index":2717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":2747,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ingredient",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ingredients.mock.ts",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.const.ts",{"_index":2719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../picture.mock.ts",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../principal",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe.mock.ts",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.const.ts",{"_index":2720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.mock.ts",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../schedule.mock.ts",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storagekeys.const.ts",{"_index":2721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../store.reducer.ts",{"_index":2746,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.reducer.ts",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.selector.ts",{"_index":2745,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.mock.ts",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":2576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/auth/auth.module.ts",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.module.ts:40",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth/auth.component.ts",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth/auth.component.ts:19",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:30",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:42",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1670,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":1675,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":1676,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:9",{"_index":1674,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layouts/components/components.module",{"_index":1173,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["src/app/layouts/components/components.module.ts",{"_index":630,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/layouts/components/footer/footer.component.ts",{"_index":705,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:13",{"_index":710,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:8",{"_index":709,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts",{"_index":1604,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:20",{"_index":1612,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:23",{"_index":1611,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:25",{"_index":1614,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:29",{"_index":1613,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/page",{"_index":1696,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/server",{"_index":2215,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts",{"_index":2307,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:17",{"_index":2317,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:18",{"_index":2318,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:19",{"_index":2313,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:28",{"_index":2315,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:36",{"_index":2316,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:40",{"_index":2314,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts",{"_index":2364,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/title/title.component.ts:10",{"_index":2367,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:16",{"_index":2369,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:9",{"_index":2368,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts",{"_index":2377,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:18",{"_index":2388,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:19",{"_index":2387,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:20",{"_index":2383,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:28",{"_index":2385,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:33",{"_index":2384,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:48",{"_index":2386,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":651,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:13",{"_index":655,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:8",{"_index":654,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.module.ts",{"_index":660,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/layouts/layouts.module.ts",{"_index":1599,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/layouts/layouts.module.ts:14",{"_index":1600,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/principal/franchisee/franchisee",{"_index":924,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee.module.ts",{"_index":1148,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts",{"_index":733,"title":{},"body":{"components/FranchiseeComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:102",{"_index":771,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:113",{"_index":769,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:124",{"_index":764,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:150",{"_index":773,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:178",{"_index":766,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:60",{"_index":783,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:62",{"_index":780,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:63",{"_index":779,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:65",{"_index":774,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:66",{"_index":784,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:68",{"_index":775,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:69",{"_index":785,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:71",{"_index":787,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:72",{"_index":786,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:74",{"_index":781,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:75",{"_index":777,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:78",{"_index":778,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:79",{"_index":763,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:85",{"_index":776,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:91",{"_index":767,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/home/home.component.ts",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/principal/home/home.component.ts:13",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.component.ts:8",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.module.ts",{"_index":1261,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/principal/principal",{"_index":2587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/principal/principal.component.ts",{"_index":1745,"title":{},"body":{"components/PrincipalComponent.html":{},"coverage.html":{}}}],["src/app/principal/principal.component.ts:13",{"_index":1750,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.component.ts:8",{"_index":1749,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.module.ts",{"_index":1755,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["src/app/principal/profile/profile.module.ts",{"_index":1836,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/principal/profile/profile/profile.component.ts",{"_index":1761,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:101",{"_index":1774,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:26",{"_index":1781,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:27",{"_index":1782,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:28",{"_index":1780,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:29",{"_index":1783,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:31",{"_index":1785,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:32",{"_index":1784,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:34",{"_index":1773,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:40",{"_index":1777,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:64",{"_index":1779,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/recipe",{"_index":1316,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["src/app/principal/user/users.module.ts",{"_index":2525,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/principal/user/users/users.component.ts",{"_index":2445,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/principal/user/users/users.component.ts:102",{"_index":2464,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:110",{"_index":2460,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:118",{"_index":2468,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:133",{"_index":2458,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:159",{"_index":2469,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:182",{"_index":2467,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:212",{"_index":2462,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:28",{"_index":2478,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:29",{"_index":2476,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:31",{"_index":2474,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:33",{"_index":2471,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:35",{"_index":2473,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:36",{"_index":2475,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:37",{"_index":2477,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:39",{"_index":2470,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:41",{"_index":2472,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:42",{"_index":2457,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:54",{"_index":2465,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:76",{"_index":2463,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:86",{"_index":2461,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/constants/endpoints.const",{"_index":2323,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/constants/endpoints.const.ts",{"_index":2723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/httprequest.const.ts",{"_index":2722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/message.const.ts",{"_index":2725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/role.const",{"_index":286,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["src/app/shared/constants/role.const.ts",{"_index":2735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/storagekeys.const",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/constants/storagekeys.const.ts",{"_index":2737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/guards/is",{"_index":1578,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/api",{"_index":111,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/http",{"_index":1266,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/mock/address.mock.ts",{"_index":2594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/fracnhisee",{"_index":2596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/franchisee.mock.ts",{"_index":2601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredient",{"_index":2604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredients.mock.ts",{"_index":2609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/picture.mock.ts",{"_index":2613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe",{"_index":2618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe.mock.ts",{"_index":2623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/role.mock.ts",{"_index":2627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/schedule.mock.ts",{"_index":2631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/users.mock.ts",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/access",{"_index":6,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["src/app/shared/models/address.model",{"_index":796,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/address.model.ts",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee",{"_index":1181,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee.model",{"_index":795,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/franchisee.model.ts",{"_index":726,"title":{},"body":{"interfaces/Franchisee.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient",{"_index":1309,"title":{},"body":{"interfaces/IngreType.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient.model",{"_index":1361,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/ingredient.model.ts",{"_index":1311,"title":{},"body":{"interfaces/Ingredient.html":{},"coverage.html":{}}}],["src/app/shared/models/picture.model",{"_index":2137,"title":{},"body":{"components/RecipesComponent.html":{}}}],["src/app/shared/models/picture.model.ts",{"_index":1740,"title":{},"body":{"interfaces/Picture.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe",{"_index":1927,"title":{},"body":{"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe.model",{"_index":1926,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/recipe.model.ts",{"_index":1867,"title":{},"body":{"interfaces/Recipe.html":{},"coverage.html":{}}}],["src/app/shared/models/role.model",{"_index":2479,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/models/role.model.ts",{"_index":2200,"title":{},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["src/app/shared/models/schedule.model",{"_index":955,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/schedule.model.ts",{"_index":666,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["src/app/shared/models/user.model",{"_index":287,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["src/app/shared/models/user.model.ts",{"_index":620,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/services/address/address.service",{"_index":1063,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/services/address/address.service.ts",{"_index":34,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/shared/services/address/address.service.ts:13",{"_index":45,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:22",{"_index":67,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:33",{"_index":51,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:44",{"_index":71,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:56",{"_index":59,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/error",{"_index":682,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service",{"_index":798,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts",{"_index":1186,"title":{},"body":{"injectables/FranchiseeService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:110",{"_index":1216,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:131",{"_index":1210,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:14",{"_index":1194,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:150",{"_index":1200,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:26",{"_index":1205,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:40",{"_index":1203,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:58",{"_index":1208,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:80",{"_index":1214,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:93",{"_index":1196,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/ingredient",{"_index":1363,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service",{"_index":1362,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts",{"_index":1483,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:12",{"_index":1486,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:21",{"_index":1493,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:32",{"_index":1488,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:43",{"_index":1495,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:55",{"_index":1490,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/loading/loading.service",{"_index":799,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/shared/services/loading/loading.service.ts",{"_index":1625,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/shared/services/loading/loading.service.ts:15",{"_index":1639,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:17",{"_index":1630,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:23",{"_index":1634,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:31",{"_index":1632,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:35",{"_index":1631,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/messages/messages.service.ts",{"_index":1680,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/app/shared/services/messages/messages.service.ts:10",{"_index":1691,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:14",{"_index":1685,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:8",{"_index":1692,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/profile/profile.service",{"_index":1842,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/profile/profile.service.ts",{"_index":1843,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/shared/services/profile/profile.service.ts:12",{"_index":1845,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:17",{"_index":1846,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:28",{"_index":1847,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:48",{"_index":1849,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/recipe/recipe.service",{"_index":1929,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts",{"_index":2047,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:103",{"_index":2072,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:130",{"_index":2063,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:152",{"_index":2074,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:16",{"_index":2056,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:166",{"_index":2058,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:28",{"_index":2067,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:38",{"_index":2068,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:58",{"_index":2065,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:68",{"_index":2069,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:80",{"_index":2060,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/schedule/schedule.service",{"_index":956,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts",{"_index":2201,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:14",{"_index":2203,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:27",{"_index":2208,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:40",{"_index":2205,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:66",{"_index":2210,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service",{"_index":2319,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts",{"_index":2336,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:11",{"_index":2346,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:13",{"_index":2345,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:15",{"_index":2340,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:21",{"_index":2343,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:25",{"_index":2341,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/user/auth/auth.service",{"_index":133,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:114",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:119",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:141",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:152",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:158",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:164",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:17",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:170",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:185",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:205",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:221",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:229",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:250",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:265",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:284",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:304",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:35",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:70",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/local",{"_index":1646,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts",{"_index":2417,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts:12",{"_index":2420,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:17",{"_index":2421,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:22",{"_index":2423,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:27",{"_index":2424,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/users/users.service",{"_index":2480,"title":{},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["src/app/shared/services/users/users.service.ts",{"_index":2527,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/shared/services/users/users.service.ts:101",{"_index":2550,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:112",{"_index":2537,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:13",{"_index":2532,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:22",{"_index":2541,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:30",{"_index":2544,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:38",{"_index":2546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:58",{"_index":2543,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:69",{"_index":2539,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:82",{"_index":2534,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:92",{"_index":2548,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/store",{"_index":288,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["src/app/shared/store/reducers/index.ts",{"_index":272,"title":{},"body":{"interfaces/AppState-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user",{"_index":291,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/state/user/index",{"_index":2407,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.actions.ts",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.effects.ts",{"_index":2391,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:16",{"_index":2400,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:24",{"_index":2405,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:9",{"_index":2394,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.reducer.ts",{"_index":2428,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.selector",{"_index":2321,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/store/state/user/user.selector.ts",{"_index":2659,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/store.reducer",{"_index":2320,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/store.reducer.ts",{"_index":251,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":81,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["src/environments/environment.example.ts",{"_index":2666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.stage.ts",{"_index":2668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/styles.scss",{"_index":1678,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["star",{"_index":1872,"title":{},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2760,"title":{},"body":{"index.html":{}}}],["started",{"_index":2750,"title":{"index.html":{}},"body":{}}],["state",{"_index":264,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"index.html":{}}}],["status",{"_index":2834,"title":{},"body":{"index.html":{}}}],["storage",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1647,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1658,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:24",{"_index":1651,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:35",{"_index":1656,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:39",{"_index":1654,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:6",{"_index":1649,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storagekeys",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":254,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2773,"title":{},"body":{"index.html":{}}}],["storemodule",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["storemodule.forfeature('user",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature(fromauth.userfeaturekey",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"injectables/LocalStorageService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["stringservice",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["stroke",{"_index":339,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["style",{"_index":789,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["styleclass",{"_index":838,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["styles",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["styleurls",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["subject",{"_index":1682,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["submitted",{"_index":815,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":1110,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe((recipes",{"_index":2138,"title":{},"body":{"components/RecipesComponent.html":{}}}],["subscribe((res",{"_index":821,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe(async",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":852,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["succès",{"_index":854,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["summary",{"_index":853,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sunday",{"_index":676,"title":{"interfaces/Sunday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2868,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":892,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["suppresssion",{"_index":2118,"title":{},"body":{"components/RecipesComponent.html":{}}}],["supprim",{"_index":882,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["supprimer",{"_index":872,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["survenue",{"_index":1304,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["svg",{"_index":2869,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1287,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["sync",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":62,"title":{},"body":{"injectables/AddressService.html":{}}}],["sûre",{"_index":1396,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["t",{"_index":1635,"title":{},"body":{"injectables/LoadingService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["table",{"_index":1447,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablemodule",{"_index":1152,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2353,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["tabs.component.html",{"_index":2355,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2354,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":2045,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["tabscomponent",{"_index":241,"title":{"components/TabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabview",{"_index":2359,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabviewmodule",{"_index":2036,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["tag",{"_index":2822,"title":{},"body":{"index.html":{}}}],["tap",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/LoadingService.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"injectables/UsersService.html":{}}}],["tap((action",{"_index":2410,"title":{},"body":{"injectables/UserEffects.html":{}}}],["tap((obj",{"_index":1222,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["tap((res",{"_index":1866,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tbody",{"_index":1461,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["td",{"_index":1451,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["template",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":2779,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2787,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2778,"title":{},"body":{"index.html":{}}}],["text",{"_index":1456,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["tfoot",{"_index":1471,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["th",{"_index":1460,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["thead",{"_index":1458,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["theme",{"_index":2856,"title":{},"body":{"index.html":{}}}],["themes",{"_index":2812,"title":{},"body":{"index.html":{}}}],["this._recipetype",{"_index":1938,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.accesstokenisexpired(useraccesstoken",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.actions$.pipe",{"_index":2396,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.activatedroute.queryparams.subscribe((parameters",{"_index":293,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.address",{"_index":863,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.address.city",{"_index":1095,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.address.country",{"_index":1097,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.address.first_line",{"_index":1089,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.address.id",{"_index":1100,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.address.second_line",{"_index":1091,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.address.zip_code",{"_index":1093,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.addressservice",{"_index":1105,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.allergen",{"_index":1400,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.authservice.authorizationcodetoaccesstoken(code",{"_index":296,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.getaccesstoken",{"_index":143,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["this.authservice.getauthorizationcode",{"_index":1677,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getuser",{"_index":2349,"title":{},"body":{"injectables/SidebarService.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.isauthenticated",{"_index":1587,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["this.authservice.logout",{"_index":2415,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.confirmationservice.confirm",{"_index":868,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.create",{"_index":1104,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.createnewuser",{"_index":2506,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.detectroutingongoing",{"_index":1621,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.dialogservice.open(franchiseedialogcomponent",{"_index":831,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.dialogservice.open(recipedialogcomponent",{"_index":2144,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.display",{"_index":2325,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.editmode",{"_index":1005,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.editmodeemail",{"_index":1796,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodefirstname",{"_index":1794,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodelastname",{"_index":1795,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodephone",{"_index":1797,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.errorhttpservice.newerrorhttp",{"_index":1245,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["this.errorhttpsubject.asobservable",{"_index":692,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(errordatahttp",{"_index":697,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(undefined",{"_index":699,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.fb.group",{"_index":967,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form",{"_index":966,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form.controls[\"ingredienttype\"].value.code",{"_index":1381,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.controls['ingredientsdetails'].value",{"_index":1973,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls['recipetype'].value.code",{"_index":1969,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls[controlname].dirty",{"_index":1994,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls[controlname].haserror(errorname",{"_index":1995,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.get(\"allergen\").setvalue(false",{"_index":1403,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get(\"allergen\").setvalue(true",{"_index":1402,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get(\"allergen\").value",{"_index":1379,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get(\"email\").value",{"_index":2500,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get(\"firstname\").value",{"_index":2497,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get(\"lastname\").value",{"_index":2498,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get(\"name\").value",{"_index":1377,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get(\"phone\").value",{"_index":2499,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('description').value",{"_index":1537,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.form.get('name').value",{"_index":1535,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.form.get('star').setvalue(false",{"_index":1963,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.get('star').setvalue(true",{"_index":1962,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.patchvalue(this.user",{"_index":1791,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.valid",{"_index":1977,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value",{"_index":1803,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.value.availabledate",{"_index":1965,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.city",{"_index":1096,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.country",{"_index":1098,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.description",{"_index":1976,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.email",{"_index":1086,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.first_line",{"_index":1090,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.friday.lunch",{"_index":993,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.friday.night",{"_index":995,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.monday.lunch",{"_index":977,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.monday.night",{"_index":979,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.name",{"_index":1082,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.phone",{"_index":1084,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.price",{"_index":1971,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.radius",{"_index":1088,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.saturday.lunch",{"_index":997,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.saturday.night",{"_index":999,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.second_line",{"_index":1092,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.star",{"_index":1974,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.sunday.lunch",{"_index":1001,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.sunday.night",{"_index":1003,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.thursday.lunch",{"_index":989,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.thursday.night",{"_index":991,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.title",{"_index":1967,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.tuesday.lunch",{"_index":981,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.tuesday.night",{"_index":983,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.wednesday.lunch",{"_index":985,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.wednesday.night",{"_index":987,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.zip_code",{"_index":1094,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee",{"_index":1010,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address",{"_index":1099,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address_id",{"_index":1101,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.email",{"_index":1085,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.max_delivery_radius",{"_index":1087,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.name",{"_index":1081,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.phone",{"_index":1083,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.city",{"_index":1079,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.country",{"_index":1080,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.first_line",{"_index":1076,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.second_line",{"_index":1077,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.zip_code",{"_index":1078,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.email",{"_index":1073,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.max_delivery_radius",{"_index":1075,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.name",{"_index":1071,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.phone",{"_index":1072,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseearray",{"_index":1069,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisees",{"_index":822,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["this.franchisees.foreach((e",{"_index":1008,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.franchiseeservice",{"_index":817,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseeservice.deletefranchisee(franchisee.id).subscribe",{"_index":880,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.franchiseeservice.getfranchisees().subscribe((data",{"_index":961,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseeservice.updatefranchisee(this.franchisee).subscribe",{"_index":1115,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.getcurrentuser",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getformvalues",{"_index":1102,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.getfranchiseebyid",{"_index":962,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.getrole(currentuser",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getroleremote(currentuser",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getschedule",{"_index":1004,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.getuserrole(e.id).subscribe((res1",{"_index":2558,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.handleerror(err",{"_index":1286,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["this.has(key",{"_index":1664,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.http",{"_index":93,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/contractors/${id}`).pipe",{"_index":1243,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/recipes/${id}`).pipe",{"_index":2098,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.get",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/roles`).pipe",{"_index":2564,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/${id}/roles`).pipe",{"_index":2561,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/${id}`).pipe(map((res",{"_index":2553,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/current",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users`).pipe",{"_index":2351,"title":{},"body":{"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users`).pipe(map((res",{"_index":2555,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apibaseurl}/files",{"_index":2102,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.post(`${environment.apibaseurl}/users",{"_index":2567,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apibaseurl}/users/${user.id",{"_index":2565,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.put(`${environment.apibaseurl}/contractors",{"_index":1233,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.id",{"_index":958,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.ingredient",{"_index":1384,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient.id",{"_index":1383,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.allergen",{"_index":1372,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.name",{"_index":1371,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.types",{"_index":1373,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientdialog",{"_index":1386,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredients",{"_index":1368,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ingredients.foreach((x",{"_index":1941,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.createingredient(this.ingredient).subscribe",{"_index":1392,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.deleteingredient(ingredient.id).subscribe",{"_index":1398,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.getingredients().subscribe((res",{"_index":1367,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.updateingredient(this.ingredient).subscribe",{"_index":1388,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredienttype",{"_index":2155,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.ingredienttypedialog",{"_index":1548,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice",{"_index":1543,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice.getingredientstypes().subscribe((res",{"_index":1369,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.ingretype",{"_index":1540,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingretype.id",{"_index":1542,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.description",{"_index":1533,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.id",{"_index":1539,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.name",{"_index":1532,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.init",{"_index":1366,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.initauth(user",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.initauth(value",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initform",{"_index":1070,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.initschedule",{"_index":965,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.iscreate",{"_index":1375,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadappuser",{"_index":2389,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.loading.loadingoff",{"_index":820,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loading.loadingon",{"_index":816,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadingoff",{"_index":1643,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingon",{"_index":1642,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.loadingoff",{"_index":1623,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.loadingon",{"_index":1622,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":1637,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(false",{"_index":1645,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(true",{"_index":1644,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.localstorageservice.get(storagekeys.code_verify",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.role",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.state",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user)).id",{"_index":1109,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.localstorageservice.get(storagekeys.user_token",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.code_verify",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.role",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.state",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user_token",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.code_verify",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.state",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.user",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.code_verify",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.role",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.state",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user_token",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.makeingredienttype",{"_index":1541,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.makerecipe",{"_index":1387,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.messageservice.add",{"_index":850,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.mode",{"_index":1064,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.newrecipe",{"_index":1979,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.newschedule",{"_index":1007,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.picture",{"_index":1943,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.pictures",{"_index":2156,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.primengconfig.ripple",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["this.profileservice.getcurrentuser",{"_index":1789,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.getuser().subscribe",{"_index":1790,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.updateuser(action.userdetails",{"_index":2403,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.recipe",{"_index":1935,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.available_at",{"_index":1964,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.base_price",{"_index":1970,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.description",{"_index":1975,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.ingredients",{"_index":1972,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.name",{"_index":1966,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.recipe_type",{"_index":1968,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.star",{"_index":1961,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.available_at",{"_index":1948,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.base_price",{"_index":1955,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.description",{"_index":1957,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.ingredients",{"_index":1956,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.name",{"_index":1953,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.recipe_type",{"_index":1954,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.star",{"_index":1958,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipes",{"_index":2139,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice",{"_index":1980,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.recipeservice.createrecipe(this.recipe).subscribe",{"_index":1982,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.deleterecipe(recipe.id).subscribe",{"_index":2150,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice.getrecipetype().subscribe((res",{"_index":1945,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.updaterecipe(this.recipe).subscribe",{"_index":1986,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.uploadpicture(this.picture).subscribe((res",{"_index":1990,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipestype",{"_index":1946,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref",{"_index":860,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref.close",{"_index":1118,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(_res",{"_index":1112,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(res",{"_index":1116,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.onclose.subscribe((_franchisee",{"_index":864,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.ref.onclose.subscribe((_recipe",{"_index":2157,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.refreshtoken(useraccesstoken",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolebyid(user",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolelist",{"_index":2490,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":957,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["this.router.navigate([\"/home",{"_index":1594,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["this.router.navigate([\"/login",{"_index":1588,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["this.router.navigate(['/home",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([event.url.replace",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl",{"_index":314,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/home",{"_index":313,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.schedule",{"_index":862,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.schedule.friday.lunch",{"_index":992,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.friday.night",{"_index":994,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.monday.lunch",{"_index":976,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.monday.night",{"_index":978,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.saturday.lunch",{"_index":996,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.saturday.night",{"_index":998,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.sunday.lunch",{"_index":1000,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.sunday.night",{"_index":1002,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.thursday.lunch",{"_index":988,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.thursday.night",{"_index":990,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.tuesday.lunch",{"_index":980,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.tuesday.night",{"_index":982,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.wednesday.lunch",{"_index":984,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.wednesday.night",{"_index":986,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.friday",{"_index":973,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.monday",{"_index":968,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.saturday",{"_index":974,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.sunday",{"_index":975,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.thursday",{"_index":972,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.tuesday",{"_index":970,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.wednesday",{"_index":971,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.scheduleservice.getschedule(this.franchisee).subscribe((res",{"_index":963,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.sidebarservice.display$.subscribe((res",{"_index":2324,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(false",{"_index":2327,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(true",{"_index":2390,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.sortfield",{"_index":827,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.sortorder",{"_index":826,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.star",{"_index":1960,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.store",{"_index":1798,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.dispatch(useractions.loaduser",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.dispatch(useractions.updateuser",{"_index":1812,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.pipe(select(selectuserdetails",{"_index":2326,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe((user",{"_index":1787,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.subject",{"_index":1686,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.subject.asobservable",{"_index":2344,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(display",{"_index":2350,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(errors",{"_index":1694,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.submitted",{"_index":1385,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["this.typearray",{"_index":1370,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.update",{"_index":1103,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.updaterecipe",{"_index":1978,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.updateschedule",{"_index":1006,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.updateuser",{"_index":2505,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.uploadedfiles.push(picture",{"_index":1992,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.url",{"_index":2348,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.user",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["this.user.email",{"_index":1810,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.firstname",{"_index":1804,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.id",{"_index":2503,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user.lastname",{"_index":1806,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.phone",{"_index":1808,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.email",{"_index":1823,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.email?.trim",{"_index":2494,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user?.firstname",{"_index":1815,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.firstname?.trim",{"_index":2491,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user?.lastname",{"_index":1818,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.lastname?.trim",{"_index":2492,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user?.phone",{"_index":1820,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.phone?.trim",{"_index":2493,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user?.roles",{"_index":2495,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userdialog",{"_index":2504,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.users",{"_index":2488,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice",{"_index":2481,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.addrole(this.user).subscribe",{"_index":2508,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.deleteuser(user.id).subscribe",{"_index":2515,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.getroles().subscribe((role",{"_index":2489,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.getuserrole(e.id).subscribe((res1",{"_index":2484,"title":{},"body":{"components/UsersComponent.html":{}}}],["throw",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["thursday",{"_index":673,"title":{"interfaces/Thursday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2813,"title":{},"body":{"index.html":{}}}],["title",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"interfaces/Role.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["title'},{'name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["title.component.html",{"_index":2366,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":2365,"title":{},"body":{"components/TitleComponent.html":{}}}],["title/title.component",{"_index":647,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["titlebar",{"_index":2003,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["titlecomponent",{"_index":243,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["titre1",{"_index":2381,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toastmodule",{"_index":663,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["token",{"_index":113,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["token.model",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.model.ts",{"_index":7,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["token/api",{"_index":112,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["token_type",{"_index":15,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["tool",{"_index":2847,"title":{},"body":{"index.html":{}}}],["toolbarmodule",{"_index":1158,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tooltipmodule",{"_index":634,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["top",{"_index":358,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["topbar",{"_index":2378,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["topbar.component.html",{"_index":2380,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":2379,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar/topbar.component",{"_index":646,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["topbarcomponent",{"_index":245,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":905,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["tr",{"_index":1459,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["transform",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["transition",{"_index":790,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["transitions",{"_index":2432,"title":{},"body":{"interfaces/UserState.html":{}}}],["translate",{"_index":2265,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(0",{"_index":2259,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(10px",{"_index":2260,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate/core",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["translatex",{"_index":804,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["translatex(0",{"_index":808,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["transparent",{"_index":1738,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["trashed_at",{"_index":1873,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["trebuchet",{"_index":2335,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["triangle",{"_index":877,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["trigger",{"_index":788,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["trigger(\"rowexpansiontrigger",{"_index":803,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["true",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LocalStorageService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1665,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tsconfig.doc.json",{"_index":2855,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":671,"title":{"interfaces/Tuesday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tutorial",{"_index":2865,"title":{},"body":{"index.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Role.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["type.component",{"_index":2042,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["type.component.html",{"_index":1508,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.scss",{"_index":1506,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts",{"_index":1505,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:105",{"_index":1522,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:112",{"_index":1526,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:119",{"_index":1517,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:150",{"_index":1518,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1530,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1531,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:28",{"_index":1528,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1527,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:32",{"_index":1529,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:33",{"_index":1515,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1523,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:49",{"_index":1519,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:56",{"_index":1520,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:63",{"_index":1521,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:72",{"_index":1524,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.mock.ts",{"_index":2605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.model",{"_index":1314,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["type.model.ts",{"_index":1310,"title":{},"body":{"interfaces/IngreType.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["type.service",{"_index":1365,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["type.service.ts",{"_index":1552,"title":{},"body":{"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["type.service.ts:13",{"_index":1555,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:25",{"_index":1563,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:46",{"_index":1557,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:65",{"_index":1567,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:86",{"_index":1559,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type/ingredient",{"_index":1364,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"modules/RecipeManagementModule.html":{},"coverage.html":{}}}],["type_id",{"_index":1561,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["typearray",{"_index":1325,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["typearray.length",{"_index":1551,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["typeof",{"_index":1660,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["types",{"_index":1313,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["téléphone",{"_index":895,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["ui",{"_index":2002,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["un",{"_index":834,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["unauthenticated",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthenticated.guard.ts",{"_index":1591,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["unauthenticated.guard.ts:12",{"_index":1593,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated.guard.ts:9",{"_index":1592,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated/is",{"_index":1590,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["undefined",{"_index":2440,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["une",{"_index":1303,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["unit",{"_index":2777,"title":{},"body":{"index.html":{}}}],["up",{"_index":2842,"title":{},"body":{"index.html":{}}}],["update",{"_index":72,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["update(franchisee",{"_index":772,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["update).pipe",{"_index":1234,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["update.base_price",{"_index":2095,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.description",{"_index":2094,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.ingredients.map((ingredient",{"_index":2092,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.name",{"_index":2093,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.recipe_type",{"_index":2097,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.star",{"_index":2096,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update_success",{"_index":2729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updateaddress",{"_index":40,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(this.address",{"_index":1114,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["updateaddress(update",{"_index":70,"title":{},"body":{"injectables/AddressService.html":{}}}],["updated",{"_index":73,"title":{},"body":{"injectables/AddressService.html":{},"miscellaneous/variables.html":{}}}],["updatefield",{"_index":1771,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefield(type",{"_index":1778,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefranchisee",{"_index":1192,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updatefranchisee(update",{"_index":1213,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateingredient",{"_index":1332,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["updateingredient(ingredient",{"_index":1348,"title":{},"body":{"components/IngredientComponent.html":{}}}],["updateingredient(update",{"_index":1494,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updateingredienttype",{"_index":1513,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["updateingredienttype(ingretype",{"_index":1525,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(this.ingretype",{"_index":1544,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(update",{"_index":1566,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["updaterecipe",{"_index":1893,"title":{},"body":{"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["updaterecipe(recipe",{"_index":2124,"title":{},"body":{"components/RecipesComponent.html":{}}}],["updaterecipe(update",{"_index":2071,"title":{},"body":{"injectables/RecipeService.html":{}}}],["updaterecipeprice",{"_index":1193,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updaterecipeprice(update",{"_index":1215,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateschedule",{"_index":934,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{}}}],["updateschedule(update",{"_index":2209,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["updateuser",{"_index":1844,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuser(this.user",{"_index":2511,"title":{},"body":{"components/UsersComponent.html":{}}}],["updateuser(update",{"_index":2549,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":1848,"title":{},"body":{"injectables/ProfileService.html":{}}}],["upload",{"_index":1933,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadedfiles",{"_index":1885,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadpicture",{"_index":2055,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(picture",{"_index":2073,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(this.picture",{"_index":1981,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uppercase",{"_index":1465,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["url",{"_index":90,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"interfaces/Ingredient.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["urlsearchparams",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["urltree",{"_index":1584,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["use",{"_index":2769,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1178,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["used",{"_index":63,"title":{},"body":{"injectables/AddressService.html":{}}}],["usehash",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{"interfaces/User.html":{}},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user.actions",{"_index":2430,"title":{},"body":{"interfaces/UserState.html":{}}}],["user.autorisations.isadmin",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.autorisations.isfranchisee",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":1829,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.firstname",{"_index":1826,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.id",{"_index":2502,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.lastname",{"_index":1827,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.model",{"_index":732,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["user.phone",{"_index":1828,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.roles",{"_index":2496,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.roles).pipe(map((res",{"_index":2566,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.roles.foreach((e",{"_index":309,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["user.roles.push(currentrole",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.push(this.form.controls[\"role\"].value.code",{"_index":2501,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.roles[0].code",{"_index":2517,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.userdetails",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user/auth/auth.service",{"_index":2347,"title":{},"body":{"injectables/SidebarService.html":{}}}],["user@example.com",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":2538,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_token",{"_index":2741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useraccesstoken",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractions",{"_index":290,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{}}}],["useractions.userloaded",{"_index":2399,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.userupdated",{"_index":2404,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercurrentroles",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercurrentroles[0",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":1813,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["userdialog",{"_index":2450,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereffects",{"_index":407,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["userfeaturekey",{"_index":2438,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloaded",{"_index":2408,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":2535,"title":{},"body":{"injectables/UsersService.html":{}}}],["userreducer",{"_index":2441,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":68,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["users.component.html",{"_index":2447,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":2446,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.length",{"_index":2518,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":2526,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscomponent",{"_index":247,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":2416,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":2521,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":2456,"title":{"injectables/UsersService.html":{}},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstate",{"_index":2427,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userswithrole",{"_index":2482,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["userswithrole.push(e",{"_index":2487,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["userupdate",{"_index":1801,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userupdated",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usr",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilidateurs",{"_index":2519,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateur",{"_index":2509,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateurs",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{}}}],["uuid",{"_index":1744,"title":{},"body":{"interfaces/Picture.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["uuis",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["va",{"_index":2827,"title":{},"body":{"index.html":{}}}],["validators",{"_index":954,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["validators.email",{"_index":1074,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.maxlength(100",{"_index":1824,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(30",{"_index":1817,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(40",{"_index":1819,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.minlength(3",{"_index":1816,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.pattern(\"/^[0][0",{"_index":1821,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.required",{"_index":969,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["value",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.code",{"_index":1404,"title":{},"body":{"components/IngredientComponent.html":{}}}],["value.indexof",{"_index":825,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.length",{"_index":829,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.name",{"_index":2161,"title":{},"body":{"components/RecipesComponent.html":{}}}],["value.substring(1",{"_index":828,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.tostring",{"_index":1662,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["valueserialized",{"_index":1659,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1934,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2874,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetebale",{"_index":1564,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["vendredi",{"_index":1027,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["verifier",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["version",{"_index":2709,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":2798,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2172,"title":{},"body":{"components/RecipesComponent.html":{}}}],["via",{"_index":2781,"title":{},"body":{"index.html":{}}}],["ville",{"_index":1124,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["void",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["voulez",{"_index":869,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["vouloir",{"_index":1397,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["vous",{"_index":870,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["vraiment",{"_index":871,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["w",{"_index":1830,"title":{},"body":{"components/ProfileComponent.html":{}}}],["warn",{"_index":1291,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["web",{"_index":2751,"title":{},"body":{"index.html":{}}}],["webhttp://localhost:4200",{"_index":2845,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":1424,"title":{},"body":{"components/IngredientComponent.html":{}}}],["websee",{"_index":2832,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":672,"title":{"interfaces/Wednesday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":1452,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["white",{"_index":2165,"title":{},"body":{"components/RecipesComponent.html":{}}}],["width",{"_index":740,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["window.location.href",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["window.scrollto(0",{"_index":1695,"title":{},"body":{"injectables/MessagesService.html":{}}}],["workflow",{"_index":2867,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":910,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["written",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["x.name",{"_index":1942,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["xxxxxx",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":907,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["z",{"_index":372,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["zara",{"_index":2972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_code",{"_index":30,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1126,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["zone.js",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenModel.html":{"url":"interfaces/AccessTokenModel.html","title":"interface - AccessTokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/access-token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expire_at\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expire_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expire_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenModel {\n  token_type: string;\n  expires_in: number;\n  access_token: string;\n  refresh_token: string;\n  expire_at?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/address.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            second_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zip_code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        second_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n  id?: number;\n  first_line?: string;\n  second_line?: string;\n  zip_code?: string;\n  city?: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAddress\n                            \n                            \n                                    Public\n                                deleteAddress\n                            \n                            \n                                    Public\n                                getAddresses\n                            \n                            \n                                    Public\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/address/address.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(create: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        address_id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAddress(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:56\n                \n            \n\n\n            \n                \n                    Attention : Deletes an address from the system, only if it is not used\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete address\nAttention : Deletes an address from the system, only if it is not used\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddresses(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users addresses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAddress(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated address\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\nimport { Address } from '../../models/address.model';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/user.model';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/addresses\n   * @returns all users addresses\n   */\n  public getAddresses(user: User): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/addresses`)\n      .pipe(map((res) => [res]));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/addresses\n   * @param create new address\n   * @returns address_id\n   */\n  public createAddress(create: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/addresses`, create)\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/addresses/{address_id}\n   * @param update address\n   * @returns updated address\n   */\n  public updateAddress(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/addresses/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/addresses/{address_id}\n   * @param id address_id\n   * @returns Delete address\n   * Attention : Deletes an address from the system, only if it is not used\n   */\n  public deleteAddress(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/addresses/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiTokenInterceptorService.html":{"url":"interceptors/ApiTokenInterceptorService.html","title":"interceptor - ApiTokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiTokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/api-token/api-token-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/api-token/api-token-interceptor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token/api-token-interceptor.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token/api-token-interceptor.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { from, lastValueFrom, Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { AuthService } from \"src/app/shared/services/user/auth/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiTokenInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    console.log(\"[INTERCEPT API TOKEN] handle\", req);\n\n    if (!req.urlWithParams.startsWith(environment.apiBaseUrl)) {\n      return next.handle(req);\n    }\n\n    console.log(\"[INTERCEPT API TOKEN] add\");\n\n    return from(this.handle(req, next));\n  }\n\n  async handle(req: HttpRequest, next: HttpHandler): Promise> {\n    const token = await this.authService.getAccessToken();\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return lastValueFrom(next.handle(req));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GOODFOOD'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'GOODFOOD';\n\n  constructor(private primengConfig: PrimeNGConfig, private router: Router) {}\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        if (!!event.url && event.url.match(/^\\/#/)) {\n          this.router.navigate([event.url.replace('/#', '')]);\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/store.reducer.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { routerReducer } from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\n\n/**\n * @ActionReducerMap Map of all the reducers in this feature of which we have only one\n */\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap = {\n  router: routerReducer,\n};\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state, action) => {\n    console.log('state before: ', state);\n    console.log('actions', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer[] = [];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState-1.html":{"url":"interfaces/AppState-1.html","title":"interface - AppState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/reducers/index.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionReducerMap, ActionReducer, MetaReducer } from \"@ngrx/store\";\nimport { routerReducer } from '@ngrx/router-store'\n\nexport interface AppState { }\n\nexport const reducers: ActionReducerMap = {\n    router: routerReducer\n};\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n    return (state, action) => {\n        console.log('state before: ', state);\n        console.log('action', action);\n\n        return reducer(state, action);\n    }\n}\n\nexport const metaReducer: MetaReducer[] = [];\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, activatedRoute: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { AppState } from 'src/app/shared/store';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    let code: string = '';\n    let state: string = '';\n\n    this.activatedRoute.queryParams.subscribe((parameters) => {\n      code = parameters['code'];\n      state = parameters['state'];\n    });\n    this.authService.authorizationCodeToAccessToken(code, state);\n    console.log('auth component');\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n          console.log('je passe dans *** auth dispatch ***', user);\n        } else {\n          this.user = user;\n          let authorized: boolean = false;\n          user.roles.forEach((e) => {\n            if (e['code'] === Roles.ADMIN || e['code'] === Roles.FRANCHISEE) {\n              authorized = true;\n            }\n          });\n          if (authorized) {\n            this.router.navigateByUrl('/home');\n          } else {\n            this.router.navigateByUrl('/');\n          }\n        }\n      },\n      error: (error): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n      complete: () => {\n        console.info('complete');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.258);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { ButtonModule } from \"primeng/button\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { AuthComponent } from \"./auth/auth.component\";\nimport { UserEffects } from \"../shared/store/state/user\";\nimport * as fromAuth from \"../shared/store/state/user/user.reducer\";\nimport { AuthService } from \"../shared/services/user/auth/auth.service\";\n\nconst routes: Routes = [\n  { path: \"\", component: LoginComponent },\n  { path: \"redirect\", component: AuthComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    //StoreModule.forFeature('user', fromAuth.userReducer),\n    ProgressSpinnerModule,\n    EffectsModule.forFeature([UserEffects]),\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n  ],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthModule,\n      providers: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessTokenIsExpired\n                            \n                            \n                                    Async\n                                authorizationCodeToAccessToken\n                            \n                            \n                                doSign\n                            \n                            \n                                    Async\n                                getAccessToken\n                            \n                            \n                                getAuthorizationCode\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                getCurrentUserRemote\n                            \n                            \n                                    Async\n                                getRole\n                            \n                            \n                                    Async\n                                getRoleRemote\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                roleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http client object\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        accessTokenIsExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    accessTokenIsExpired(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authorizationCodeToAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizationCodeToAccessToken(code: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Transform authorization code to AccessToken\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSign\n                        \n                    \n                \n            \n            \n                \ndoSign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthorizationCode\n                        \n                    \n                \n            \n            \n                \ngetAuthorizationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n                    Redirect user to login backend page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUserRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserRemote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleRemote(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:152\n                \n            \n\n\n            \n                \n                    Get user by id as a franchisee or an admin (goodfood)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:114\n                \n            \n\n\n            \n                \n                    Revoke the authenticated user token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        roleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleById(_user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:265\n                \n            \n\n\n            \n                \n                    Verify user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport getPkce from 'oauth-pkce';\nimport { catchError, firstValueFrom, Observable, throwError } from 'rxjs';\nimport { Router, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AccessTokenModel } from '../../../models/access-token.model';\nimport { User } from '../../../models/user.model';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { map, tap } from 'rxjs/operators';\nimport { StorageKeys } from 'src/app/shared/constants/storageKeys.const';\nimport { Roles } from 'src/app/shared/constants/role.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /**\n   *\n   * Constructor\n   * @param http The http client object\n   * @param stringService\n   * @param localStorageService\n   * @param router\n   */\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirect user to login backend page\n   */\n  getAuthorizationCode(): void {\n    if (this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      this.router.navigate(['/home']);\n      return;\n    }\n\n    this.localStorageService.remove(StorageKeys.STATE);\n    this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n    const state = RouterStateSnapshot.toString();\n\n    getPkce(128, (error, { verifier, challenge }) => {\n      if (!error) {\n        this.localStorageService.set(StorageKeys.CODE_VERIFY, verifier);\n        this.localStorageService.set(StorageKeys.STATE, state);\n\n        const query = new URLSearchParams({\n          client_id: environment.oAuthClientId,\n          redirect_uri: environment.oAuthCallbackUri,\n          response_type: 'code',\n          scope: '',\n          state: state,\n          code_challenge: challenge,\n          code_challenge_method: 'S256',\n        });\n\n        window.location.href = `${\n          environment.oAuthProviderBaseUrl\n        }/authorize?${query.toString()}`;\n      } else {\n        throw new Error('failed to get code challenger');\n      }\n    });\n  }\n\n  /** Transform authorization code to AccessToken */\n  async authorizationCodeToAccessToken(\n    code: string,\n    state: string\n  ): Promise {\n    console.log('try to change authorization code to access token');\n\n    if (\n      !this.localStorageService.has(StorageKeys.STATE) ||\n      !this.localStorageService.has(StorageKeys.CODE_VERIFY)\n    ) {\n      throw new Error('Workflow auth is not inizialized');\n    }\n\n    if (this.localStorageService.get(StorageKeys.STATE) !== state) {\n      throw new Error('State has changed');\n    }\n\n    this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'authorization_code',\n        client_id: environment.oAuthClientId,\n        redirect_uri: environment.oAuthCallbackUri,\n        code_verifier: this.localStorageService.get(StorageKeys.CODE_VERIFY),\n        code: code,\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      )\n      .subscribe(async (data) => {\n        console.log('Set to local storage token access');\n        data.expire_at = Date.now() + data.expires_in * 1000;\n        this.localStorageService.set(StorageKeys.USER_TOKEN, data);\n        this.localStorageService.remove(StorageKeys.STATE);\n        this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n        await this.getCurrentUser();\n\n        this.router.navigate(['/home']);\n      });\n  }\n\n  /** Revoke the authenticated user token */\n  logout() {\n    this.localStorageService.remove(StorageKeys.USER);\n    this.router.navigateByUrl('/');\n  }\n\n  async getAccessToken(): Promise {\n    if (!this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      throw new Error('user unauthenticated');\n    }\n\n    const userAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n\n    if (this.accessTokenIsExpired(userAccessToken)) {\n      console.log('REFRESH USER TOKEN');\n      await this.refreshToken(userAccessToken);\n      console.log('USER TOKEN REFRESHED');\n    }\n    console.log('RETURN ACCESS TOKEN FROM STORAGE');\n\n    const freshAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n    return freshAccessToken.access_token;\n  }\n\n  isAuthenticated(): boolean {\n    return (\n      !!this.localStorageService.has(StorageKeys.USER) &&\n      !!this.localStorageService.has(StorageKeys.ROLE) &&\n      !!this.localStorageService.has(StorageKeys.USER_TOKEN)\n    );\n  }\n\n  /**\n   * Get user by id as a franchisee or an admin (goodfood)\n   */\n  getUserById(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  doSign(): Observable {\n    return this.http\n      .get(`${environment.oAuthProviderBaseUrl}/token`)\n      .pipe(map((res) => res['payload']));\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  getUserRole(user: User): Observable {\n    const currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/roles`)\n      .pipe(\n        tap(() => currentRole),\n        map((value) => this.initAuth(value))\n      );\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  async getCurrentUser(): Promise {\n    let currentUser: User;\n    if (this.localStorageService.has(StorageKeys.USER)) {\n      console.log('[AUTHSERVICE] Retrieve USER from CACHE');\n      currentUser = this.localStorageService.get(StorageKeys.USER);\n    } else {\n      console.log('[AUTHSERVICE] Retrieve USER from remote');\n      const usr = this.http.get(\n        `${environment.apiBaseUrl}/users/current`\n      );\n      currentUser = await firstValueFrom(usr);\n      this.localStorageService.set(StorageKeys.USER, currentUser);\n    }\n    return this.getRole(currentUser);\n  }\n\n  async getCurrentUserRemote(): Promise {\n    let currentUser: User;\n    const usr = this.http.get(`${environment.apiBaseUrl}/users/current`);\n    currentUser = await firstValueFrom(usr);\n\n    return this.getRoleRemote(currentUser);\n  }\n\n  async getRole(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    if (this.localStorageService.has(StorageKeys.ROLE)) {\n      console.log('[AUTHSERVICE] Retrieve ROLE from CACHE');\n      currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    } else {\n      console.log('[AUTHERVICE] Retrieve ROLE from remote');\n      const userRoles = this.http.get(\n        `${environment.apiBaseUrl}/users/${user.id}/roles`\n      );\n      const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n      currentRole = userCurrentRoles[0];\n      this.localStorageService.set(StorageKeys.ROLE, currentRole);\n    }\n    user.roles.push(currentRole);\n\n    return this.roleById(user);\n  }\n\n  async getRoleRemote(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    const userRoles = this.http.get(\n      `${environment.apiBaseUrl}/users/${user.id}/roles`\n    );\n    const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n    currentRole = userCurrentRoles[0];\n\n    user.roles.push(currentRole);\n    return this.roleById(user);\n  }\n\n  /** Verify user role */\n  public roleById(_user: User): User {\n    const user = {\n      ..._user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        user.autorisations.isFranchisee = true;\n      }\n    });\n    return user;\n  }\n\n  private async refreshToken(data: AccessTokenModel): Promise {\n    const response = this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'refresh_token',\n        refresh_token: data.refresh_token,\n        client_id: environment.oAuthClientId,\n        scope: '',\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      );\n    const dataResponse = await firstValueFrom(response);\n\n    dataResponse.expire_at = Date.now() + dataResponse.expires_in * 1000;\n    this.localStorageService.set(StorageKeys.USER_TOKEN, dataResponse);\n  }\n\n  private accessTokenIsExpired(data: AccessTokenModel): boolean {\n    return (\n      !!data.expire_at && data.expire_at > 0 && Date.now() >= data.expire_at\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Autorisation.html":{"url":"interfaces/Autorisation.html","title":"interface - Autorisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Autorisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isFranchisee\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFranchisee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFranchisee:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./role.model\";\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  roles?: Role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MenubarModule } from 'primeng/menubar';\nimport { RippleModule } from 'primeng/ripple';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { TitleComponent } from './title/title.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\n\n@NgModule({\n  declarations: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n    ServerErrorComponent,\n  ],\n  exports: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    CheckboxModule,\n    BadgeModule,\n    ButtonModule,\n    TooltipModule,\n    SidebarModule,\n    DropdownModule,\n    MenubarModule,\n    RippleModule,\n  ],\n})\nexport class ComponentsModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                styleUrls\n                ./default.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss'],\n})\nexport class DefaultComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./default.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DefaultModule.html":{"url":"modules/DefaultModule.html","title":"module - DefaultModule","body":"\n                   \n\n\n\n\n    Modules\n    DefaultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/default/default.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { DefaultComponent } from './default.component';\nimport { ComponentsModule } from './../components/components.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  declarations: [DefaultComponent],\n  exports: [DefaultComponent],\n  imports: [CommonModule, RouterModule, ComponentsModule, ToastModule],\n})\nexport class DefaultModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Diner.html":{"url":"interfaces/Diner.html","title":"interface - Diner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Diner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorDataHttp.html":{"url":"interfaces/ErrorDataHttp.html","title":"interface - ErrorDataHttp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorDataHttp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            functionality\n                                        \n                                \n                                \n                                        \n                                            httpErrorResponse\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        functionality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        functionality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpErrorResponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpErrorResponse:         HttpErrorResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpErrorResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHttpService.html":{"url":"injectables/ErrorHttpService.html","title":"injectable - ErrorHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorHttp$\n                            \n                            \n                                    Private\n                                errorHttpSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeErrorHttp\n                            \n                            \n                                    Public\n                                newErrorHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeErrorHttp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    newErrorHttp(httpErrorResponse: HttpErrorResponse, functionality: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:21\n                \n            \n\n\n            \n                \n                    Retrieve the error and the feature causing the error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    httpErrorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        serveur response\n\n                                    \n                                \n                                \n                                    functionality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function causing the problem\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorHttp$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.errorHttpSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorHttpSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/footer/footer.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    Copyright © GOOD FOOD 2021-2022\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  color: lightgoldenrodyellow;\n  font-size: small;\n  position: fixed !important;\n  padding-right: 10px;\n  margin-bottom: -20px;\n  bottom: 0%;\n  right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Copyright © GOOD FOOD 2021-2022  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Franchisee.html":{"url":"interfaces/Franchisee.html","title":"interface - Franchisee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Franchisee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            create_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_delivery_radius\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owned_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        create_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_delivery_radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_delivery_radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedBy:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from './address.model';\nimport { User } from './user.model';\n\nexport interface Franchisee {\n  id?: number;\n  name?: string;\n  phone?: string;\n  email?: string;\n  max_delivery_radius?: number;\n  address_id?: number;\n  ownedBy?: User;\n  owned_by?: number;\n  create_by?: number;\n  address?: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeComponent.html":{"url":"components/FranchiseeComponent.html","title":"component - FranchiseeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee/franchisee.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-franchisee\n            \n\n            \n                styleUrls\n                ./franchisee.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./franchisee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contactDialog\n                            \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                editMode\n                            \n                            \n                                first\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchisees\n                            \n                            \n                                id\n                            \n                            \n                                isCreate\n                            \n                            \n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                scheduleDialog\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewFranchisee\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, messageService: MessageService, confirmationService: ConfirmationService, dialogService: DialogService, loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewFranchisee\n                        \n                    \n                \n            \n            \n                \ncreateNewFranchisee()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:178\n                \n            \n\n\n            \n                \n                    Delete a franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scheduleDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { trigger, state, style, transition, animate } from \"@angular/animations\";\nimport { finalize } from \"rxjs/operators\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { DialogService, DynamicDialogRef } from \"primeng/dynamicdialog\";\n\nimport { Franchisee } from \"src/app/shared/models/franchisee.model\";\nimport { Address } from \"src/app/shared/models/address.model\";\nimport { Schedule } from \"./../../../shared/models/schedule.model\";\nimport { FranchiseeService } from \"src/app/shared/services/franchisee/franchisee.service\";\nimport { LoadingService } from \"src/app/shared/services/loading/loading.service\";\nimport { FranchiseeDialogComponent } from \"../franchisee-dialog/franchisee-dialog.component\";\n\n@Component({\n  selector: \"app-franchisee\",\n  templateUrl: \"./franchisee.component.html\",\n  styleUrls: [\"./franchisee.component.scss\"],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n  animations: [\n    trigger(\"rowExpansionTrigger\", [\n      state(\n        \"void\",\n        style({\n          transform: \"translateX(-10%)\",\n          opacity: 0,\n        })\n      ),\n      state(\n        \"active\",\n        style({\n          transform: \"translateX(0)\",\n          opacity: 1,\n        })\n      ),\n      transition(\"*  *\", animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\")),\n    ]),\n  ],\n})\nexport class FranchiseeComponent implements OnInit {\n  // form: FormGroup;\n  ref: DynamicDialogRef;\n\n  franchisees: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  contactDialog: boolean;\n  scheduleDialog: boolean;\n\n  sortOrder: number;\n  sortField: string;\n\n  isCreate: boolean;\n  editMode: boolean;\n\n  // submitted: boolean;\n  first: number = 0;\n  id: number;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    public dialogService: DialogService,\n    private loading: LoadingService\n  ) {\n    // NOSONAR\n  }\n\n  ngOnInit(): void {\n    /* retrieve franchisees */\n    this.loading.loadingOn();\n    this.franchiseeService\n      .getFranchisees()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.franchisees = res;\n      });\n  }\n\n  onSortChange(event) {\n    let value = (event.target as HTMLTextAreaElement).value;\n    if (value.indexOf(\"!\") === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n    if (value.indexOf(\"!\") === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  createNewFranchisee(): void {\n    const ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: \"Ajouter un nouveau franchisé\",\n      width: \"60%\",\n      styleClass: \"DynamicDialog\",\n      contentStyle: { \"max-height\": \"550px\", overflow: \"auto\" },\n      baseZIndex: 10000,\n      data: {\n        mode: \"CREATE\",\n        franchisee: [],\n        address: {},\n        schedule: {},\n      },\n    });\n    ref.onClose.subscribe((franchisee: Franchisee) => {\n      if (franchisee) {\n        this.franchisees = [...this.franchisees];\n        this.messageService.add({\n          severity: \"success\",\n          summary: \"Succès\",\n          detail: \"Le franchisé est bien crée.\",\n        });\n      }\n    });\n  }\n\n  update(franchisee: Franchisee): void {\n    this.ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: `${franchisee.name}`,\n      width: \"60%\",\n      styleClass: \"DynamicDialog\",\n      contentStyle: { \"max-height\": \"550px\", overflow: \"auto\" },\n      data: {\n        mode: \"UPDATE\",\n        schedule: this.schedule,\n        address: this.address,\n        franchisee,\n      },\n    });\n    this.ref.onClose.subscribe((_franchisee: Franchisee): void => {\n      if (_franchisee) {\n        this.messageService.add({\n          severity: \"success\",\n          summary: \"Succès\",\n          detail: \"Le franchisé est bien modifié.\",\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id franchisee\n   * Delete a franchisee\n   */\n  delete(franchisee: Franchisee): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer le franchisé \"${franchisee.name}\" ?`,\n      header: \"Confirm\",\n      icon: \"pi pi-exclamation-triangle\",\n      acceptButtonStyleClass: \"accept\",\n      accept: (): void => {\n        this.franchiseeService.deleteFranchisee(franchisee.id).subscribe({\n          next: (): void => {\n            this.franchisees = [...this.franchisees];\n            this.messageService.add({\n              severity: \"success\",\n              summary: \"Succès\",\n              detail: \"Ce franchisé est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error: any): void => {\n            this.messageService.add({\n              severity: \"error\",\n              summary: \"Erreur le moment de csuppression du franchisé\",\n              detail: error.error,\n            });\n            console.log(\"erreur le moment de suppression du franchisé : \", error);\n          },\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n \n\n\n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n      \n    \n    \n      \n        \n          \n          \n            Nom de franchisé  \n          \n          \n            Numéro de téléphone  \n          \n          Email \n          \n            Adresse \n          \n          \n        \n      \n      \n        \n          \n            \n          \n          {{ franchisee.name }}\n          {{ franchisee.phone }}\n          {{ franchisee.email }}\n          \n            {{ franchisee.address.first_line }},\n            \n              {{ franchisee.address.second_line }},\n            \n            {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}\n          \n          \n            \n            \n          \n        \n      \n      \n        \n          En total il y a {{ franchisees ? franchisees.length : 0 }} franchisees.\n        \n      \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./franchisee.component.scss\n                \n                \n.layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                         Nom de franchisé                                  Numéro de téléphone                      Email                       Adresse                                                                                           {{ franchisee.name }}          {{ franchisee.phone }}          {{ franchisee.email }}                      {{ franchisee.address.first_line }},                          {{ franchisee.address.second_line }},                        {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}                                                                                            En total il y a {{ franchisees ? franchisees.length : 0 }} franchisees.                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeDetailComponent.html":{"url":"components/FranchiseeDetailComponent.html","title":"component - FranchiseeDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee-detail\n            \n\n            \n                styleUrls\n                ./franchisee-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchisees\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                schedule\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFranchiseeById\n                            \n                            \n                                    Private\n                                getSchedule\n                            \n                            \n                                initSchedule\n                            \n                            \n                                newSchedule\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, scheduleService: ScheduleService, messageService: MessageService, loading: LoadingService, fb: FormBuilder, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleService\n                                                  \n                                                        \n                                                                        ScheduleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFranchiseeById\n                        \n                    \n                \n            \n            \n                \ngetFranchiseeById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSchedule\n                        \n                    \n                \n            \n            \n                \ninitSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSchedule\n                        \n                    \n                \n            \n            \n                \nnewSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \nupdateSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { MessageService } from \"primeng/api\";\nimport { Address } from \"src/app/shared/models/address.model\";\n\nimport { Franchisee } from \"src/app/shared/models/franchisee.model\";\nimport { Schedule } from \"src/app/shared/models/schedule.model\";\nimport { FranchiseeService } from \"src/app/shared/services/franchisee/franchisee.service\";\nimport { LoadingService } from \"src/app/shared/services/loading/loading.service\";\nimport { ScheduleService } from \"src/app/shared/services/schedule/schedule.service\";\n\n@Component({\n  selector: \"app-franchisee-detail\",\n  templateUrl: \"./franchisee-detail.component.html\",\n  styleUrls: [\"./franchisee-detail.component.scss\"],\n})\nexport class FranchiseeDetailComponent implements OnInit {\n  franchisees: Franchisee[] = [];\n  franchisee: Franchisee;\n  id: number;\n  address: Address;\n  schedule: Schedule;\n\n  form: FormGroup;\n  editMode: boolean;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    private scheduleService: ScheduleService,\n    public messageService: MessageService,\n    private loading: LoadingService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.id = params[\"id\"]; //assign the value of id\n    });\n    this.franchiseeService.getFranchisees().subscribe((data) => {\n      this.franchisees = data;\n      this.getFranchiseeById();\n      this.scheduleService.getSchedule(this.franchisee).subscribe((res) => {\n        this.schedule = res;\n        console.log(\"get schedule ---> \", res);\n      });\n    });\n\n    this.initSchedule();\n  }\n\n  initSchedule(): void {\n    this.form = this.fb.group({\n      monday: [this.schedule?.monday, [Validators.required]],\n      tuesday: [this.schedule?.tuesday, [Validators.required]],\n      Wednesday: [this.schedule?.wednesday, [Validators.required]],\n      Thursday: [this.schedule?.thursday, [Validators.required]],\n      friday: [this.schedule?.friday, [Validators.required]],\n      saturday: [this.schedule?.saturday, [Validators.required]],\n      sunday: [this.schedule?.sunday, [Validators.required]],\n    });\n  }\n\n  private getSchedule(): void {\n    this.schedule.monday.lunch = this.form.value.monday.lunch;\n    this.schedule.monday.night = this.form.value.monday.night;\n    this.schedule.tuesday.lunch = this.form.value.tuesday.lunch;\n    this.schedule.tuesday.night = this.form.value.tuesday.night;\n    this.schedule.wednesday.lunch = this.form.value.wednesday.lunch;\n    this.schedule.wednesday.night = this.form.value.wednesday.night;\n    this.schedule.thursday.lunch = this.form.value.thursday.lunch;\n    this.schedule.thursday.night = this.form.value.thursday.night;\n    this.schedule.friday.lunch = this.form.value.friday.lunch;\n    this.schedule.friday.night = this.form.value.friday.night;\n    this.schedule.saturday.lunch = this.form.value.saturday.lunch;\n    this.schedule.saturday.night = this.form.value.saturday.night;\n    this.schedule.sunday.lunch = this.form.value.sunday.lunch;\n    this.schedule.sunday.night = this.form.value.sunday.night;\n  }\n\n  public onSubmit(): void {\n    this.loading.loadingOn();\n    this.getSchedule();\n    if (this.editMode) {\n      this.updateSchedule();\n    } else {\n      this.newSchedule();\n    }\n  }\n\n  getFranchiseeById(): void {\n    this.franchisees.forEach((e) => {\n      if (e.id == this.id) {\n        this.franchisee = e;\n      }\n    });\n  }\n\n  updateSchedule(): void {\n    //NOSONAR\n  }\n\n  newSchedule(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n \n\n\n  \n\n\n  \n  \n\n\n\n  \n  \n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  {{ franchisee.name }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n              \n                {{ franchisee.phone }}\n              \n            \n          \n          \n            \n              \n              \n                {{ franchisee.email }}\n              \n            \n          \n          \n            \n            \n              {{ franchisee.address.first_line }},\n              \n                {{ franchisee.address.second_line }},\n              \n              {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          Horaires\n          \n        \n        \n          \n          Midi\n          Soir\n        \n        \n          \n            Lundi\n            {{ schedule.monday.lunch }}\n            {{ schedule.monday.night }}\n          \n          \n            Mardi\n            {{ schedule.tuesday.lunch }}\n            {{ schedule.tuesday.night }}\n          \n          \n            Mercredi\n            {{ schedule.wednesday.lunch }}\n            {{ schedule.wednesday.night }}\n          \n          \n            Jeudi\n            {{ schedule.thursday.lunch }}\n            {{ schedule.thursday.night }}\n          \n          \n            Vendredi\n            {{ schedule.friday.lunch }}\n            {{ schedule.friday.night }}\n          \n          \n            Samedi\n            {{ schedule.saturday.lunch }}\n            {{ schedule.saturday.night }}\n          \n          \n            Dimanche\n            {{ schedule.sunday.lunch }}\n            {{ schedule.sunday.night }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./franchisee-detail.component.scss\n                \n                .layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                     {{ franchisee.name }}                                                                                                                                      {{ franchisee.phone }}                                                                                                      {{ franchisee.email }}                                                                                    {{ franchisee.address.first_line }},                              {{ franchisee.address.second_line }},                            {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}                                                                        Horaires                                              Midi          Soir                                      Lundi            {{ schedule.monday.lunch }}            {{ schedule.monday.night }}                                Mardi            {{ schedule.tuesday.lunch }}            {{ schedule.tuesday.night }}                                Mercredi            {{ schedule.wednesday.lunch }}            {{ schedule.wednesday.night }}                                Jeudi            {{ schedule.thursday.lunch }}            {{ schedule.thursday.night }}                                Vendredi            {{ schedule.friday.lunch }}            {{ schedule.friday.night }}                                Samedi            {{ schedule.saturday.lunch }}            {{ schedule.saturday.night }}                                Dimanche            {{ schedule.sunday.lunch }}            {{ schedule.sunday.night }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeDialogComponent.html":{"url":"components/FranchiseeDialogComponent.html","title":"component - FranchiseeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee-dialog\n            \n\n            \n                styleUrls\n                ./franchisee-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchiseeArray\n                            \n                            \n                                localStorageService\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                create\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Private\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, loading: LoadingService, franchiseeService: FranchiseeService, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { finalize } from \"rxjs/operators\";\nimport { MessageService } from \"primeng/api\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\n\nimport { Franchisee } from \"src/app/shared/models/franchisee.model\";\nimport { Address } from \"src/app/shared/models/address.model\";\nimport { Schedule } from \"src/app/shared/models/schedule.model\";\nimport { AddressService } from \"src/app/shared/services/address/address.service\";\nimport { LoadingService } from \"src/app/shared/services/loading/loading.service\";\nimport { FranchiseeService } from \"src/app/shared/services/franchisee/franchisee.service\";\nimport { User } from \"src/app/shared/models/user.model\";\nimport { StorageKeys } from \"src/app/shared/constants/storageKeys.const\";\n\n@Component({\n  selector: \"app-franchisee-dialog\",\n  templateUrl: \"./franchisee-dialog.component.html\",\n  styleUrls: [\"./franchisee-dialog.component.scss\"],\n})\nexport class FranchiseeDialogComponent implements OnInit {\n  mode: \"UPDATE\" | \"CREATE\";\n  form: FormGroup;\n\n  franchiseeArray: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  submitted: boolean;\n  localStorageService: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private loading: LoadingService,\n    private franchiseeService: FranchiseeService,\n    private addressService: AddressService\n  ) {\n    this.mode = config.data.mode;\n    this.franchisee = config.data.franchisee;\n    this.address = config.data.address;\n    this.schedule = config.data.schedule;\n  }\n\n  ngOnInit(): void {\n    this.franchiseeService.getFranchisees().subscribe((data: Franchisee[]): void => {\n      this.franchiseeArray = data;\n    });\n    if (this.mode == \"CREATE\") {\n      this.franchisee = {};\n      this.address = {};\n    }\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.franchisee?.name || \"\", [Validators.required]],\n      phone: [this.franchisee?.phone || \"\", [Validators.required]],\n      email: [this.franchisee?.email || \"\", [Validators.required, Validators.email]],\n      radius: [this.franchisee?.max_delivery_radius || \"\", [Validators.required]],\n      first_line: [this.franchisee?.address?.first_line || \"\", [Validators.required]],\n      second_line: [this.franchisee?.address?.second_line || \"\"],\n      zip_code: [this.franchisee?.address?.zip_code || \"\", [Validators.required]],\n      city: [this.franchisee?.address?.city || \"\", [Validators.required]],\n      country: [this.franchisee?.address?.country || \"\", [Validators.required]],\n    });\n  }\n\n  private getFormValues(): void {\n    this.franchisee.name = this.form.value.name;\n    this.franchisee.phone = this.form.value.phone;\n    this.franchisee.email = this.form.value.email;\n    this.franchisee.max_delivery_radius = this.form.value.radius;\n    this.address.first_line = this.form.value.first_line;\n    this.address.second_line = this.form.value.second_line;\n    this.address.zip_code = this.form.value.zip_code;\n    this.address.city = this.form.value.city;\n    this.address.country = this.form.value.country;\n    this.franchisee.address = this.address;\n    if (this.mode === \"UPDATE\") {\n      this.address.id = this.franchisee.address_id;\n    }\n  }\n\n  public onSubmit(): void {\n    this.getFormValues();\n    this.loading.loadingOn();\n\n    if (this.mode === \"UPDATE\") {\n      this.update();\n    } else {\n      this.create();\n    }\n  }\n\n  private create(): void {\n    this.addressService\n      .createAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.address = res;\n        this.franchisee.address_id = res.id;\n        this.franchiseeService\n          .newFranchisee(this.franchisee, (this.localStorageService.get(StorageKeys.USER)).id)\n          .subscribe({\n            next: (_res) => {\n              this.ref.close(_res);\n              this.franchisee = _res;\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: \"error\",\n                summary: \"Erreur le moment de création du franchisé.\",\n                detail: error.error,\n              });\n            },\n          });\n      });\n  }\n\n  private update(): void {\n    this.addressService\n      .updateAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((): void => {\n        this.franchiseeService.updateFranchisee(this.franchisee).subscribe({\n          next: (res) => {\n            this.ref.close(res);\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: \"error\",\n              summary: \"Erreur le moment de modification du franchisé.\",\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de franchisé\n      \n      Champ obligatoire\n    \n    \n      Numéro de téléphone\n      \n      Champ obligatoire\n    \n    \n      Email\n      \n      Champ obligatoire\n    \n  \n  \n    \n      Ligne 1\n      \n    \n    \n      Ligne 2\n      \n    \n    \n      Code postal\n      \n    \n  \n  \n    \n      Ville\n      \n    \n    \n      Pays\n      \n    \n    \n      Zone de livraison\n      \n      \n      Champ obligatoire\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./franchisee-dialog.component.scss\n                \n                ::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de franchisé            Champ obligatoire              Numéro de téléphone            Champ obligatoire              Email            Champ obligatoire                  Ligne 1                    Ligne 2                    Code postal                        Ville                    Pays                    Zone de livraison                  Champ obligatoire                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FranchiseeModule.html":{"url":"modules/FranchiseeModule.html","title":"module - FranchiseeModule","body":"\n                   \n\n\n\n\n    Modules\n    FranchiseeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDetailComponent\n\nFranchiseeDetailComponent\n\nFranchiseeModule -->\n\nFranchiseeDetailComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/franchisee/franchisee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FranchiseeComponent\n                        \n                        \n                            FranchiseeDetailComponent\n                        \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            FranchiseeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { TableModule } from \"primeng/table\";\nimport { ToastModule } from \"primeng/toast\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { ButtonModule } from \"primeng/button\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { DynamicDialogModule } from \"primeng/dynamicdialog\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { PanelModule } from \"primeng/panel\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { SelectButtonModule } from \"primeng/selectbutton\";\n\nimport { FranchiseeService } from \"src/app/shared/services/franchisee/franchisee.service\";\nimport { ComponentsModule } from \"src/app/layouts/components/components.module\";\nimport { FranchiseeComponent } from \"./franchisee/franchisee.component\";\nimport { FranchiseeDialogComponent } from \"./franchisee-dialog/franchisee-dialog.component\";\nimport { FranchiseeDetailComponent } from \"./franchisee-detail/franchisee-detail.component\";\nimport { ApiTokenInterceptorService } from \"src/app/shared/interceptors/api-token/api-token-interceptor.service\";\n\nconst routes: Routes = [\n  { path: \"\", component: FranchiseeComponent },\n  { path: \":id\", component: FranchiseeDetailComponent },\n];\n\n@NgModule({\n  declarations: [FranchiseeComponent, FranchiseeDialogComponent, FranchiseeDetailComponent],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DynamicDialogModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    KeyFilterModule,\n  ],\n  entryComponents: [FranchiseeDialogComponent],\n  providers: [\n    FranchiseeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class FranchiseeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FranchiseeRecipe.html":{"url":"interfaces/FranchiseeRecipe.html","title":"interface - FranchiseeRecipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FranchiseeRecipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee-recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe:         Recipe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recipe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Recipe } from './recipe.model';\n\nexport interface FranchiseeRecipe {\n\tid?: number;\n\tprice?: number;\n\trecipe_id?: number;\n\trecipe?: Recipe;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FranchiseeService.html":{"url":"injectables/FranchiseeService.html","title":"injectable - FranchiseeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FranchiseeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/franchisee/franchisee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRecipe\n                            \n                            \n                                    Public\n                                deleteFranchisee\n                            \n                            \n                                    Public\n                                getFranchiseeRecipes\n                            \n                            \n                                    Public\n                                getFranchisees\n                            \n                            \n                                    Public\n                                newFranchisee\n                            \n                            \n                                    Public\n                                removeRecipe\n                            \n                            \n                                    Public\n                                updateFranchisee\n                            \n                            \n                                    Public\n                                updateRecipePrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/franchisee/franchisee.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRecipe(item: Franchisee, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:93\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients for franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee (recipe)\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFranchisee(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchiseeRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchiseeRecipes(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        franchisee recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchisees\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchisees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all Franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    newFranchisee(create: Partial, owner_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new franchisee\n\n                                    \n                                \n                                \n                                    owner_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee id - message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRecipe(id: number, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Remove a recipe from franchisee catalog\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFranchisee(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipePrice\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipePrice(update: Partial, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map, Observable, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { FranchiseeRecipe } from '../../models/franchisee-recipe.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FranchiseeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors\n   * @returns all Franchisee\n   */\n  public getFranchisees(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/contractors`)\n      .pipe(\n        tap((obj: any) => console.log('service -> get franchisees : ', obj)),\n        map((res: any) => res['data'])\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors/{contractor_id}/recipes\n   * @param recipe\n   * @returns franchisee recipes\n   */\n  public getFranchiseeRecipes(\n    franchisee: Franchisee\n  ): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/recipes`\n      )\n      .pipe(\n        tap((obj): void => console.log('service -> All recipes : ', obj)),\n        map((res): any => res['data'])\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors\n   * @param create new franchisee\n   * @returns franchisee id - message\n   */\n  public newFranchisee(\n    create: Partial,\n    owner_id: number\n  ): Observable {\n    let franchisee: Franchisee;\n    franchisee = {\n      ...create,\n    };\n    franchisee.owned_by = owner_id;\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors`, franchisee)\n      .pipe(\n        tap((obj) => console.log(' service -> new franchisee : ', obj)),\n        map((res) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors\n   * @param update franchisee\n   * @returns update franchisee\n   */\n  public updateFranchisee(update: Partial): Observable {\n    return this.http.put(`${environment.apiBaseUrl}/contractors`, update).pipe(\n      tap((obj) => console.log('service -> edit franchisee : ', obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors/{contractor_id}/recipes\n   * Create new recipe with igredients for franchisee\n   * @param item franchisee (recipe)\n   * @returns new recipe\n   */\n  public addRecipe(\n    item: Franchisee,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors/${item.id}/recipes`, recipe)\n      .pipe(\n        // tap((obj: any) => console.log('service -> addStarRecipe : ', obj)),\n        map((res: any) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param update franchisee schedule\n   * @returns update recipe\n   */\n  public updateRecipePrice(\n    update: Partial,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .put(\n        `${environment.apiBaseUrl}/contractors/${update.id}/recipes/${recipe.id}`,\n        recipe\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> updateRecipePrice : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.UPDATE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param id franchisee_id\n   * @param recipe.id recipe_id\n   * @returns Remove a recipe from franchisee catalog\n   */\n  public removeRecipe(\n    id: number,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .delete(\n        `${environment.apiBaseUrl}/contractors/${id}/recipes/${recipe.id}`\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> Remove removeRecipe : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.DELETE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractors_id}\n   * @param id franchisee_id\n   * @returns Delete a franchisee\n   */\n  public deleteFranchisee(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/contractors/${id}`).pipe(\n      // tap((obj) => console.log('service -> deleteFranchisee : ', obj)),\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(() => httpErrorResponse);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Friday.html":{"url":"interfaces/Friday.html","title":"interface - Friday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Friday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          100\n          Utilisateurs\n        \n      \n      \n        \n          \n            \n          \n          1000\n          Franchisés\n        \n      \n      \n        \n          \n            \n          \n          200\n          Recettes\n        \n      \n      \n        \n          \n            \n          \n          510\n          Ingrédients\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              100          Utilisateurs                                                                      1000          Franchisés                                                                      200          Recettes                                                                      510          Ingrédients                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { ButtonModule } from \"primeng/button\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { AvatarModule } from \"primeng/avatar\";\nimport { BadgeModule } from \"primeng/badge\";\n\nimport { HomeComponent } from \"./home.component\";\n\nconst routes: Routes = [{ path: \"\", component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    AvatarModule,\n    BadgeModule,\n    TooltipModule,\n    RippleModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-error/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from \"@angular/common/http\";\nimport { catchError, Observable, throwError } from \"rxjs\";\nimport { MessageService } from \"primeng/api\";\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private messageService: MessageService) {\n    //NOSONAR\n  }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(catchError((err) => this.handleError(err)));\n  }\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    switch (error.status) {\n      case 400:\n        this.messageService.add({\n          life: 5000,\n          severity: \"warn\",\n          summary: \"Service Message\",\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, vous n'etes pas autorise a acceder a ce page.\", error?.error?.message);\n        break;\n      case 401:\n        this.messageService.add({\n          life: 5000,\n          severity: \"warn\",\n          summary: \"Service Message\",\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, vous n'etes pas autorise a acceder a ce page.\");\n        break;\n      case 404:\n        this.messageService.add({\n          life: 5000,\n          severity: \"warn\",\n          summary: \"Service Message\",\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, page introuvable.\");\n        break;\n      case 500:\n        this.messageService.add({\n          life: 5000,\n          severity: \"error\",\n          summary: \"Service Message\",\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, une erreur est survenue au niveau serveur.\");\n        break;\n      default:\n        this.messageService.add({\n          life: 5000,\n          severity: \"error\",\n          summary: \"Service Message\",\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé une erreur est survenue: \", error?.error?.message);\n    }\n    return throwError(() => new Error(error.message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngreType.html":{"url":"interfaces/IngreType.html","title":"interface - IngreType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngreType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngreType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ingredient.html":{"url":"interfaces/Ingredient.html","title":"interface - Ingredient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allergen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            types\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allergen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        types:         IngreType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IngreType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngreType } from './ingredient-type.model';\n\n/*\n * url : /ingredients\n */\nexport interface Ingredient {\n  id?: number;\n  name?: string;\n  allergen?: boolean;\n  types?: IngreType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientComponent.html":{"url":"components/IngredientComponent.html","title":"component - IngredientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient/ingredient.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient\n            \n\n            \n                styleUrls\n                ./ingredient.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allergen\n                            \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                ingredient\n                            \n                            \n                                ingredientDialog\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                isCreate\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredient\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                isAllergen\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                newIngredient\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientService: IngredientService, ingredientTypeService: IngredientTypeService, messageService: MessageService, confirmationService: ConfirmationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllergen\n                        \n                    \n                \n            \n            \n                \nisAllergen(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredient\n                        \n                    \n                \n            \n            \n                \nnewIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \nupdateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allergen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, Validators, FormBuilder, FormControl } from \"@angular/forms\";\n\nimport { MessageService, ConfirmationService } from \"primeng/api\";\n\nimport { Ingredient } from \"src/app/shared/models/ingredient.model\";\nimport { IngreType } from \"src/app/shared/models/ingredient-type.model\";\nimport { IngredientService } from \"src/app/shared/services/ingredient/ingredient.service\";\nimport { IngredientTypeService } from \"src/app/shared/services/ingredient-type/ingredient-type.service\";\n\n@Component({\n  selector: \"app-ingredient\",\n  templateUrl: \"./ingredient.component.html\",\n  styleUrls: [\"./ingredient.component.scss\"],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientComponent implements OnInit {\n  form: FormGroup;\n\n  ingredient: Ingredient;\n\n  typeArray: IngreType[] = [];\n  ingredientType: IngreType;\n\n  ingredients: Ingredient[] = [];\n\n  allergen: boolean;\n  ingredientDialog: boolean;\n  submitted: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private ingredientService: IngredientService,\n    private ingredientTypeService: IngredientTypeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingredient?.name || \"\", [Validators.required]],\n      allergen: this.ingredient?.allergen || false,\n      ingredientType: this.ingredient?.types || new FormControl([]),\n    });\n    console.log(\"xxxxxxxxxxxx \", this.form);\n  }\n\n  private makeRecipe(): void {\n    const ingredient: Ingredient = {};\n    if (this.isCreate) {\n      ingredient.name = this.form.get(\"name\").value;\n      ingredient.allergen = this.form.get(\"allergen\").value;\n      ingredient.types = [this.form.controls[\"ingredientType\"].value.code];\n    } else {\n      ingredient.id = this.ingredient.id;\n      ingredient.name = this.form.get(\"name\").value;\n      ingredient.allergen = this.form.get(\"allergen\").value;\n    }\n    this.ingredient = ingredient;\n  }\n\n  newIngredient(): void {\n    this.ingredient = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  updateIngredient(ingredient: Ingredient): void {\n    this.ingredient = { ...ingredient };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeRecipe();\n\n    if (this.ingredient.id) {\n      this.ingredientService.updateIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: \"success\",\n            summary: \"Succès\",\n            detail: \"Mise à jour d'ingredient\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: \"error\",\n            summary: \"Erreur le moment de modification\",\n            detail: error.error,\n          });\n        },\n      });\n    } else {\n      this.ingredientService.createIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: \"success\",\n            summary: \"Succès\",\n            detail: \"Nouvel ingredient ajouté\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: \"error\",\n            summary: \"Erreur le moment de création\",\n            detail: error.error,\n          });\n        },\n      });\n    }\n    this.ingredientDialog = false;\n    this.ingredients = [...this.ingredients, this.ingredient];\n  }\n\n  deleteIngredient(ingredient: Ingredient): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingredient.name + '\"?',\n      header: \"Confirm\",\n      icon: \"pi pi-exclamation-triangle\",\n      acceptButtonStyleClass: \"accept\",\n      accept: (): void => {\n        this.ingredientService.deleteIngredient(ingredient.id).subscribe({\n          next: () => {\n            this.ingredients = [...this.ingredients, this.ingredient];\n            this.messageService.add({\n              severity: \"success\",\n              summary: \"Succès\",\n              detail: \"L'ingrédient est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: \"error\",\n              summary: \"Erreur le moment de suppression de l'ingrédient!\",\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  isAllergen(event: any): void {\n    this.allergen = event.checked;\n    if (event.checked) {\n      this.allergen = true;\n      this.form.get(\"allergen\").setValue(true);\n    } else {\n      this.form.get(\"allergen\").setValue(false);\n    }\n  }\n\n  hideDialog(): void {\n    this.ingredientDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        Nom d'ingredient \n        Type d'ingredient  \n        Allergen \n        \n      \n    \n    \n      \n        {{ ingredient.name }}\n        {{ value.code }}\n        Oui\n        Non\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom d'ingrédient\n      \n      Nom est obligatoire.\n    \n    \n      \n        Type d'ingrédient\n        \n        \n      \n    \n    \n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./ingredient.component.scss\n                \n                .grid > .col,\n.grid > [class*=\"col\"] {\n  box-sizing: border-box;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  padding: 1rem;\n  width: 100%;\n}\n#icons {\n  justify-content: center !important;\n  right: 50%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ndiv {\n  display: block;\n}\n\nbody {\n  font-family: Lato, Helvetica, sans-serif;\n  font-size: 14px;\n  color: #495057;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 0;\n  margin: 0;\n  min-height: 100%;\n  background-image: linear-gradient(147.38deg, #ffffff 0%, #86a8c0 100%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n:root {\n  --fc-daygrid-event-dot-width: 8px;\n}\n\n// ---------------------\n\n:host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              Nom d\\'ingredient         Type d\\'ingredient          Allergen                                     {{ ingredient.name }}        {{ value.code }}        Oui        Non                                                                En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.                        Nom d\\'ingrédient            Nom est obligatoire.                      Type d\\'ingrédient                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredient\n                            \n                            \n                                    Public\n                                deleteIngredient\n                            \n                            \n                                    Public\n                                getIngredients\n                            \n                            \n                                    Public\n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredient(item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create new ingredient\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredient(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:55\n                \n            \n\n\n            \n                \n                    Attention : All recipes attached to this ingredient will lose their ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\nAttention : All recipes attached to this ingredient will lose their ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredients\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredient(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update ingredient\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/ingredients\n   * @returns all ingredients\n   */\n  public getIngredients(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients`)\n      .pipe(map((res) => res['data']));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/ingredients\n   * @param item Create new ingredient\n   * @returns new ingredient\n   */\n  public createIngredient(item: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients`, item)\n      .pipe(map((res) => (res ? res['message'] : Message.CREATE)));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/ingredients/{ingredient_id}\n   * @param update ingredient items\n   * @returns update ingredient\n   */\n  public updateIngredient(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/ingredients/{ingredient_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   * Attention : All recipes attached to this ingredient will lose their ingredient\n   */\n  public deleteIngredient(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientTypeComponent.html":{"url":"components/IngredientTypeComponent.html","title":"component - IngredientTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient-type\n            \n\n            \n                styleUrls\n                ./ingredient-type.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                ingredientTypeDialog\n                            \n                            \n                                ingreType\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredientType\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeIngredientType\n                            \n                            \n                                newIngredientType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientTypeService: IngredientTypeService, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \ndeleteIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredientType\n                        \n                    \n                \n            \n            \n                \nnewIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \nupdateIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientTypeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient-type',\n  templateUrl: './ingredient-type.component.html',\n  styleUrls: ['./ingredient-type.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientTypeComponent implements OnInit {\n  ingreType: IngreType;\n  typeArray: IngreType[] = [];\n\n  form: FormGroup;\n\n  first: number = 0;\n\n  ingredientTypeDialog: boolean;\n  submitted: boolean;\n\n  constructor(\n    private ingredientTypeService: IngredientTypeService,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingreType?.name || '', Validators.required],\n      description: this.ingreType?.description || '',\n    });\n  }\n\n  private makeIngredientType(): void {\n    let ingreType: IngreType = {};\n\n    ingreType.name = this.form.get('name').value;\n    ingreType.description = this.form.get('description').value;\n    ingreType.id = this.ingreType?.id || null;\n    this.ingreType = ingreType;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeIngredientType();\n    if (this.ingreType.id) {\n      this.ingredientTypeService\n        .updateIngredientType(this.ingreType)\n        .subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Le type d'ingrédient est bien modifié.\",\n            life: 3000,\n          });\n        });\n    } else {\n      this.ingredientTypeService\n        .createIngredientType(this.ingreType)\n        .subscribe((res) => {\n          console.log('res : ', res);\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"le type d'ingrédient est bien créé.\",\n            life: 3000,\n          });\n        });\n    }\n\n    this.typeArray = [...this.typeArray];\n    this.ingredientTypeDialog = false;\n    this.ingreType = {};\n  }\n\n  newIngredientType(): void {\n    this.ingreType = {};\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  updateIngredientType(ingreType: IngreType): void {\n    this.ingreType = { ...ingreType };\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  deleteIngredientType(ingreType: IngreType): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingreType.name + '\"?',\n      header: 'Confirmation de suppression',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientTypeService\n          .deleteIngredientType(ingreType.id)\n          .subscribe({\n            next: () => {\n              this.typeArray = [...this.typeArray];\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Succès',\n                detail: \"Création de type d'ingredient\",\n                life: 3000,\n              });\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création de type',\n                detail: error.error,\n              });\n            },\n          });\n      },\n    });\n  }\n\n  hideDialog(): void {\n    this.ingredientTypeDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom de type d'ingrédient\n        \n        \n          Description\n        \n        \n      \n    \n    \n      \n        {{ ingreType.name }}\n        {{ ingreType.description }}\n        \n          \n          \n        \n      \n    \n    \n      \n        Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom de type d'ingrédient\n      \n      Champ obligatoire.\n    \n    \n      Description\n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./ingredient-type.component.scss\n                \n                ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder { /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n            \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom de type d\\'ingrédient                          Description                                            {{ ingreType.name }}        {{ ingreType.description }}                                                                Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.                        Nom de type d\\'ingrédient            Champ obligatoire.              Description                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientTypeService.html":{"url":"injectables/IngredientTypeService.html","title":"injectable - IngredientTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient-type/ingredient-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredientType\n                            \n                            \n                                    Public\n                                deleteIngredientType\n                            \n                            \n                                    Public\n                                getIngredientsTypes\n                            \n                            \n                                    Public\n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredientType(item: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:46\n                \n            \n\n\n            \n                \n                    Create new ingredient type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredientType(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:86\n                \n            \n\n\n            \n                \n                    Attention : All ingredients attched to this type will lose their type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient-type_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a ingredient_type\nAttention : All ingredients attched to this type will lose their type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsTypes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredients types as Vegetebale, fruit, ...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredientType(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { IngreType } from '../../models/ingredient-type.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientTypeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * @returns ingredients types as Vegetebale, fruit, ...\n   */\n  public getIngredientsTypes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients/types`)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all ingredient-types'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * Create new ingredient type\n   * @param item\n   * @returns\n   */\n  public createIngredientType(item: IngreType): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients/types`, item)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param update\n   */\n  public updateIngredientType(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/types/${update.id}`, update)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param id ingredient-type_id\n   * @returns Delete a ingredient_type\n   * Attention : All ingredients attched to this type will lose their type\n   */\n  public deleteIngredientType(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/types/${id}`)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.DELETE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'delete ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAuthenticatedGuard.html":{"url":"guards/IsAuthenticatedGuard.html","title":"guard - IsAuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../../services/user/auth/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): // route: ActivatedRouteSnapshot,\n  // state: RouterStateSnapshot\n  Observable | Promise | boolean | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n      this.router.navigate([\"/login\"]);\n    }\n    return isAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsUnauthenticatedGuard.html":{"url":"guards/IsUnauthenticatedGuard.html","title":"guard - IsUnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsUnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../../services/user/auth/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IsUnauthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): // route: ActivatedRouteSnapshot,\n  // state: RouterStateSnapshot\n  Observable | Promise | boolean | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (isAuthenticated) {\n      this.router.navigate([\"/home\"]);\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutsModule.html":{"url":"modules/LayoutsModule.html","title":"module - LayoutsModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\n\nDefaultModule\n\nDefaultModule\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/layouts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/layouts.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DefaultComponent } from './default/default.component';\nimport { DefaultModule } from './default/default.module';\n\n@NgModule({\n  imports: [\n    DefaultModule,\n    RouterModule.forChild([{ path: '', component: DefaultComponent }]),\n  ],\n  exports: [DefaultModule],\n})\nexport class LayoutsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LayoutsModule,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRoutingOnGoing\n                            \n                            \n                                routing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRoutingOnGoing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/loading/loading.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/loading/loading.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  RouteConfigLoadEnd,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Input()\n  routing: boolean = false;\n\n  @Input()\n  detectRoutingOnGoing: boolean = false;\n\n  constructor(public loadingService: LoadingService, private router: Router) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    if (this.detectRoutingOnGoing) {\n      this.router.events.subscribe((event): void => {\n        if (\n          event instanceof NavigationStart ||\n          event instanceof RouteConfigLoadStart\n        ) {\n          this.loadingService.loadingOn();\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationError ||\n          event instanceof NavigationCancel ||\n          event instanceof RouteConfigLoadEnd\n        ) {\n          this.loadingService.loadingOff();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.053);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingOff\n                            \n                            \n                                    Public\n                                loadingOn\n                            \n                            \n                                    Public\n                                showLoaderUntilCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showLoaderUntilCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoaderUntilCompleted(obs$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  concatMap,\n  finalize,\n  Observable,\n  of,\n  tap,\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n\n  loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  public showLoaderUntilCompleted(obs$: Observable): Observable {\n    return of(null).pipe(\n      tap(() => this.loadingOn()),\n      concatMap(() => obs$),\n      finalize(() => this.loadingOff())\n    );\n  }\n\n  public loadingOn(): void {\n    this.loadingSubject.next(true);\n  }\n\n  public loadingOff(): void {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/local-storage/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | object | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: string | object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {\n    //NOSONAR\n  }\n\n  set(key: string, value: string | object): void {\n    let valueSerialized: string = '';\n\n    switch (typeof value) {\n      case 'object':\n        valueSerialized = JSON.stringify(value);\n        break;\n      default:\n        valueSerialized = value.toString();\n    }\n    localStorage.setItem(key, valueSerialized);\n  }\n\n  get(key: string): string | object | null {\n    if (this.has(key)) {\n      try {\n        return JSON.parse(localStorage.getItem(key));\n      } catch {\n        return localStorage.getItem(key);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  has(key: string): boolean {\n    return localStorage.getItem(key) === null ? false : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"src/app/shared/services/user/auth/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n\n  onLogin() {\n    this.authService.getAuthorizationCode();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/styles.scss\";\n\nbutton {\n  background: #ccbe1c !important;\n  border-radius: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lunch.html":{"url":"interfaces/Lunch.html","title":"interface - Lunch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lunch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/messages/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors$\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors(...errors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/messages/messages.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  private subject = new BehaviorSubject([]);\n\n  errors$: Observable = this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0));\n\n  showErrors(...errors: string[]) {\n    this.subject.next(errors);\n    window.scrollTo(0, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monday.html":{"url":"interfaces/Monday.html","title":"interface - Monday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n        \n        \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n              \n            \n          \n        \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                .fundo {\n  animation: scales 3s alternate infinite;\n  transform-origin: center;\n}\n\n.pao-baixo {\n  animation: rotatepao 14s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.pao-cima {\n  animation: rotatepao 7s 1s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.olhos {\n  animation: olhos 2s alternate infinite;\n  transform-origin: center;\n}\n\n.left-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 150px 156px;\n}\n\n.right-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 310px 150px;\n}\n\n@keyframes scales {\n  from {\n    transform: scale(0.98);\n  }\n\n  to {\n    transform: scale(1);\n  }\n}\n\n@keyframes rotatepao {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50%,\n  60% {\n    transform: rotate(-20deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes olhos {\n  0% {\n    transform: rotateX(0deg);\n  }\n\n  100% {\n    transform: rotateX(30deg);\n  }\n}\n\n@keyframes left-sparks {\n  0% {\n    opacity: 0;\n  }\n}\n\n.main {\n  margin: 0px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.path {\n  stroke-dasharray: 300;\n  stroke-dashoffset: 300;\n  animation: dash 4s alternate infinite;\n}\n\n@keyframes dash {\n  0%,\n  30% {\n    fill: #4b4b62;\n    stroke-dashoffset: 0;\n  }\n\n  80%,\n  100% {\n    fill: transparent;\n    stroke-dashoffset: -200;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/picture.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            external_link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size_unit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size_unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size_unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Picture {\n  uuid?: string;\n  name?: string;\n  size?: number;\n  size_unit?: string;\n  link?: string;\n  external_link?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrincipalComponent.html":{"url":"components/PrincipalComponent.html","title":"component - PrincipalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrincipalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/principal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-principal\n            \n\n            \n                styleUrls\n                ./principal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./principal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/principal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/principal.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.scss'],\n})\nexport class PrincipalComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./principal.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrincipalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrincipalModule.html":{"url":"modules/PrincipalModule.html","title":"module - PrincipalModule","body":"\n                   \n\n\n\n\n    Modules\n    PrincipalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_PrincipalModule_imports\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/principal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            PrincipalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LayoutsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MessageService } from 'primeng/api';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { UserEffects } from '../shared/store/state/user';\n\nimport { routing } from './principal-routing.module';\nimport { LayoutsModule } from '../layouts/layouts.module';\n\nimport { PrincipalComponent } from './principal.component';\nimport { PageNotFoundComponent } from '../layouts/components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [PrincipalComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    routing,\n    LayoutsModule,\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    EffectsModule.forFeature([UserEffects]),\n  ],\n  providers: [MessageService],\n})\nexport class PrincipalModule {\n  // NOSONAR\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/profile/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                editModeEmail\n                            \n                            \n                                    Optional\n                                editModeFirstname\n                            \n                            \n                                    Optional\n                                editModeLastname\n                            \n                            \n                                    Optional\n                                editModePhone\n                            \n                            \n                                form\n                            \n                            \n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileService: ProfileService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/profile/profile/profile.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:101\n                \n            \n\n\n            \n                \n                    In input form : + Verify value form (character form and length)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeFirstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeLastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModePhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ProfileService } from \"./../../../shared/services/profile/profile.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { MessageService } from \"primeng/api\";\nimport { Observable, filter, first } from \"rxjs\";\nimport { User } from \"src/app/shared/models/user.model\";\nimport { AppState } from \"src/app/shared/store\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { selectUserDetails, UserActions } from \"src/app/shared/store/state/user\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  providers: [MessageService],\n  styleUrls: [\"./profile.component.scss\"],\n  styles: [\n    `\n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    `,\n  ],\n})\nexport class ProfileComponent implements OnInit {\n  editModeFirstname?: boolean;\n  editModeLastname?: boolean;\n  editModeEmail?: boolean;\n  editModePhone?: boolean;\n\n  user$: Observable;\n  user: User;\n\n  form: FormGroup;\n\n  constructor(private store: Store, private profileService: ProfileService, private fb: FormBuilder) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    // this.store.pipe(select(selectUserDetails)).subscribe((user) => {\n    //   console.log(this.user);\n    //   if (user == null) {\n    //     this.store.dispatch(UserActions.loadUser());\n    //   }\n    // });\n    //this.user = this.profileService.getCurrentUser();\n    this.profileService.getUser().subscribe(\n      (res) => {\n        this.user = res;\n        this.form.patchValue(this.user);\n        console.log(\"res in profile : \", res);\n      },\n      (err) => console.log(\"erreur dans profile component : \", err)\n    );\n    this.editModeFirstname = false;\n    this.editModeLastname = false;\n    this.editModeEmail = false;\n    this.editModePhone = false;\n\n    this.initForm();\n  }\n\n  updateField(type: string): User {\n    this.store\n      .pipe(\n        select(selectUserDetails),\n        filter((user) => user != null),\n        first()\n      )\n      .subscribe(\n        (user) => {\n          const userUpdate = { ...user } as User;\n          const formValue = this.form.value;\n          switch (type) {\n            case \"FIRSTNAME\":\n              this.user.firstname = formValue.firstname.trim();\n              break;\n            case \"LASTNAME\":\n              this.user.lastname = formValue.lastname.trim();\n              break;\n            case \"PHONE\":\n              this.user.phone = formValue.phone.trim();\n              break;\n            case \"EMAIL\":\n              this.user.email = formValue.email.trim();\n              break;\n            default:\n              break;\n          }\n          this.store.dispatch(UserActions.updateUser({ userDetails: this.user }));\n        },\n        (error) => console.log(\"profile component > update user: \", error)\n      );\n    return this.user;\n  }\n\n  /**\n   * In input form : + Verify value form (character form and length)\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstname: [this.user?.firstname, [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      lastname: [this.user?.lastname, [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      phone: [this.user?.phone, [Validators.required, Validators.pattern(\"/^[0][0-9]{9}$\")]],\n      email: [\n        this.user?.email,\n        [Validators.required, Validators.email, Validators.minLength(3), Validators.maxLength(100)],\n      ],\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n                Prénom\n                \n                  \n                    {{ user.firstname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Nom\n                \n                  \n                    {{ user.lastname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Numéro de téléphone\n                \n                  \n                    {{ user.phone }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Email\n                \n                  \n                    {{ user.email }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .w-8 {\n  width: 100% !important;\n}\n\n.col-12 {\n  width: 10% !important;\n}\n\n            \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Prénom                                                      {{ user.firstname }}                                                                                                                                                                                                                            Nom                                                      {{ user.lastname }}                                                                                                                                                                                                                            Numéro de téléphone                                                      {{ user.phone }}                                                                                                                                                                                                                            Email                                                      {{ user.email }}                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { TableModule } from \"primeng/table\";\nimport { ToastModule } from \"primeng/toast\";\nimport { SliderModule } from \"primeng/slider\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\n\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { ProfileService } from \"src/app/shared/services/profile/profile.service\";\nimport { ComponentsModule } from \"src/app/layouts/components/components.module\";\nimport { ApiTokenInterceptorService } from \"src/app/shared/interceptors/api-token/api-token-interceptor.service\";\n\nconst routes: Routes = [{ path: \"\", component: ProfileComponent }];\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    ProfileService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/profile/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Roles } from '../../constants/role.const';\nimport { User } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  updateUser(user: User): Observable {\n    const newUserDetails: User = { ...user };\n\n    const formData = new FormData();\n    if (newUserDetails != null) {\n      newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n      newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n      newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n      newUserDetails.email = JSON.stringify(newUserDetails.email);\n\n      formData.append('firstname', newUserDetails.firstname);\n      formData.append('lastname', newUserDetails.lastname);\n      formData.append('phone', newUserDetails.phone);\n      formData.append('email', newUserDetails.email);\n    }\n\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${user.id}`, formData)\n      .pipe(\n        tap((res) => {\n          if (res != null) {\n            newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n            newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n            newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n            newUserDetails.email = JSON.stringify(newUserDetails.email);\n          }\n        }),\n        map((res) => res)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recipe.html":{"url":"interfaces/Recipe.html","title":"interface - Recipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            available_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            base_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pictures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            star\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trashed_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         Ingredient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ingredient[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_type:         RecipeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RecipeType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trashed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trashed_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ingredient } from './ingredient.model';\nimport { Picture } from './picture.model';\nimport { RecipeType } from './recipe-type.model';\n\nexport interface Recipe {\n  id?: number;\n  name?: string;\n  star?: boolean;\n  base_price?: number;\n  description?: string;\n  recipe_type?: RecipeType;\n  ingredients?: Ingredient[];\n  //created_by: number;\n  available_at?: Date;\n  trashed_at?: Date;\n  pictures?: Picture[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeDialogComponent.html":{"url":"components/RecipeDialogComponent.html","title":"component - RecipeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-dialog\n            \n\n            \n                styleUrls\n                ./recipe-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recipe-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _recipeType\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                fr\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientsDetails\n                            \n                            \n                                ingreType\n                            \n                            \n                                mode\n                            \n                            \n                                picture\n                            \n                            \n                                recipe\n                            \n                            \n                                recipesType\n                            \n                            \n                                recipeType\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                star\n                            \n                            \n                                submitted\n                            \n                            \n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkError\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                    Private\n                                newRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClickStar\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                onSelectPicture\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                onUploadPic\n                            \n                            \n                                    Private\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, recipeService: RecipeService, loading: LoadingService, ingredientService: IngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkError\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkError(controlName: string, errorName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        newRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    newRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickStar\n                        \n                    \n                \n            \n            \n                \nonClickStar(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPicture\n                        \n                    \n                \n            \n            \n                \nonSelectPicture(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadPic\n                        \n                    \n                \n            \n            \n                \nonUploadPic(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        star\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LoadingService } from './../../../../shared/services/loading/loading.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { RecipeType } from 'src/app/shared/models/recipe-type.model';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from '../../../../shared/models/picture.model';\n\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\n\n@Component({\n  selector: 'app-recipe-dialog',\n  templateUrl: './recipe-dialog.component.html',\n  styleUrls: ['./recipe-dialog.component.scss'],\n})\nexport class RecipeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n\n  form: FormGroup;\n  //------------------------------- Recipe Type : dropdown (1)\n  recipesType: Recipe[] = [];\n  recipe: Recipe;\n  recipeType: RecipeType;\n  _recipeType: RecipeType[] = [];\n  //------------------------------- Ingredients details : drop down (2)\n  ingredients: Ingredient[] = [];\n  ingredientsDetails: Ingredient;\n\n  ingreType: IngreType[] = [];\n\n  uploadedFiles: any[] = []; // Upload image\n  picture: Picture = null; // Variable to store picture\n\n  submitted: boolean;\n  star: boolean;\n\n  \n\n  fr: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private recipeService: RecipeService,\n    private loading: LoadingService,\n    private ingredientService: IngredientService\n  ) {\n    this.recipe = config.data.recipe;\n    this.ingredients = config.data.ingredients;\n    this._recipeType = config.data.recipeType;\n    this.ingreType = config.data.ingredientsTypes;\n    this.ingredients.forEach((x) => x.name);\n    this.mode = config.data.mode;\n    this.picture = config.data.pictures;\n  }\n\n  ngOnInit(): void {\n    /* retrieve recipe types */\n    this.recipeService.getRecipeType().subscribe((res) => {\n      this.recipesType = res;\n    });\n    /* retrieve ingredients data */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    this.initForm();\n  }\n\n  initForm(): void {\n    let laDate: Date;\n    if (!this.recipe?.available_at) {\n      laDate = new Date(new Date().setDate(new Date().getDate() + 10));\n    } else {\n      laDate = new Date(this.recipe?.available_at);\n    }\n    this.form = this.fb.group({\n      title: [this.recipe?.name, [Validators.required]],\n      recipeType: [this.recipe?.recipe_type, [Validators.required]],\n      price: [this.recipe?.base_price, [Validators.required]],\n      ingredientsDetails: [this.recipe?.ingredients, Validators.required],\n      description: [this.recipe?.description],\n      star: this.recipe?.star || false,\n      availableDate: [laDate, [Validators.required]],\n    });\n  }\n\n  onClickStar(event: any): void {\n    this.star = event.checked;\n    this.recipe.star = event.checked;\n    if (event.checked) {\n      this.star = true;\n      this.form.get('star').setValue(true);\n    } else {\n      this.form.get('star').setValue(false);\n    }\n  }\n\n  private makeRecipe(): void {\n    if (this.mode === 'CREATE') {\n      this.recipe.available_at = this.form.value.availableDate;\n    }\n    this.recipe.name = this.form.value.title;\n    this.recipe.recipe_type = this.form.controls['recipeType'].value.code;\n    this.recipe.base_price = this.form.value.price;\n    this.recipe.ingredients = this.form.controls['ingredientsDetails'].value;\n    this.recipe.star = this.form.value.star;\n    this.recipe.description = this.form.value.description;\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.makeRecipe();\n      this.loading.loadingOn();\n\n      if (this.mode === 'UPDATE') {\n        this.updateRecipe();\n      } else {\n        this.newRecipe();\n      }\n    }\n  }\n\n  private newRecipe(): void {\n    this.recipeService\n      .uploadPicture(this.picture)\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.picture = res;\n        this.recipeService.createRecipe(this.recipe).subscribe({\n          next: (_res) => {\n            this.ref.close(_res);\n            this.recipe = _res;\n            this.recipeService\n              .attachPictures(this.picture, this.recipe)\n              .subscribe();\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création de la recette',\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  private updateRecipe(): void {\n    this.recipeService.updateRecipe(this.recipe).subscribe({\n      next: (res) => {\n        this.ref.close(res);\n      },\n      error: (error) => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erreur le moment de modification de de la recette',\n          detail: error.error,\n        });\n      },\n    });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n\n  onSelectPicture(event) {\n    console.log('Selected picture', event);\n  }\n\n  // On picture Select\n  onChange(event) {\n    this.picture = event.files[0];\n  }\n\n  // OnClick of button Upload\n  onUpload() {\n    this.recipeService.uploadPicture(this.picture).subscribe((res) => {\n      this.picture = res;\n    });\n  }\n\n  onUploadPic(event) {\n    for (let picture of event.files) {\n      this.uploadedFiles.push(picture);\n      console.log('picture : ', picture);\n    }\n  }\n\n  public checkError(controlName: string, errorName: string): boolean {\n    return (\n      this.form.controls[controlName].dirty &&\n      this.form.controls[controlName].hasError(errorName)\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de plat\n      \n    \n    \n      Type de recette\n      \n      \n    \n    \n      Ingredients\n      Champ obligatoire\n      \n      \n    \n    \n      Date disponiblité\n      {{ recipe.available_at }}\n    \n  \n  \n    \n      \n        \n          Prix de base\n          \n          \n        \n        \n          \n        \n        \n          \n          \n        \n      \n    \n    \n      Description\n      \n    \n  \n  \n    \n    Plat star\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-dialog.component.scss\n                \n                :host ::ng-deep .p-dropdown {\n  width: 14rem;\n}\n\n.DynamicDialog {\n  :host ::ng-deep {\n    .p-dialog .p-dialog-header {\n      background: #d8f6f6 !important;\n    }\n  }\n}\n\n:host ::ng-deep .ui-dialog .ui-dialog-titlebar {\n  background-color: rgba(255, 234, 0, 0.325);\n}\n\n.p-fileupload .p-fileupload-basic .p-fileupload-choose {\n  border-radius: 50% !important;\n  min-width: 0rem !important;\n}\n\n#fileUploader {\n  min-width: 0rem;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 15rem;\n  width: 18rem;\n}\n\n:host ::ng-deep .multiselect-custom {\n  .p-multiselect-label {\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .country-item-value {\n    padding: 0.25rem 0.5rem;\n    border-radius: 3px;\n    display: inline-flex;\n    margin-right: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--primary-color-text);\n\n    img.flag {\n      width: 17px;\n    }\n  }\n\n  .country-placeholder {\n    padding: 0.25rem;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n:host ::ng-deep {\n  @media screen and (max-width: 640px) {\n    .p-multiselect {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de plat                    Type de recette                          Ingredients      Champ obligatoire                          Date disponiblité      {{ recipe.available_at }}                                    Prix de base                                                                                                              Description                      Plat star              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipeManagementModule.html":{"url":"modules/RecipeManagementModule.html","title":"module - RecipeManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipeManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/recipe-details/recipe-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IngredientComponent\n                        \n                        \n                            IngredientTypeComponent\n                        \n                        \n                            RecipeDialogComponent\n                        \n                        \n                            RecipesComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RecipeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            RecipeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { DataViewModule } from \"primeng/dataview\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { PanelModule } from \"primeng/panel\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { SelectButtonModule } from \"primeng/selectbutton\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { ToastModule } from \"primeng/toast\";\nimport { DynamicDialogModule } from \"primeng/dynamicdialog\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { RadioButtonModule } from \"primeng/radiobutton\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { TableModule } from \"primeng/table\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { DividerModule } from \"primeng/divider\";\n\nimport { IngredientTypeComponent } from \"./ingredient-type/ingredient-type.component\";\nimport { RecipeDialogComponent } from \"./recipe/recipe-dialog/recipe-dialog.component\";\nimport { IngredientComponent } from \"./ingredient/ingredient.component\";\nimport { TabsComponent } from \"./tabs/tabs.component\";\nimport { RecipesComponent } from \"./recipe/recipes/recipes.component\";\nimport { ComponentsModule } from \"src/app/layouts/components/components.module\";\nimport { RecipeService } from \"src/app/shared/services/recipe/recipe.service\";\nimport { ApiTokenInterceptorService } from \"src/app/shared/interceptors/api-token/api-token-interceptor.service\";\n\nconst routes: Routes = [{ path: \"\", component: TabsComponent }];\n\n@NgModule({\n  declarations: [RecipesComponent, RecipeDialogComponent, IngredientComponent, TabsComponent, IngredientTypeComponent],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DataViewModule,\n    DropdownModule,\n    DynamicDialogModule,\n    FileUploadModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    DialogModule,\n    CheckboxModule,\n    CalendarModule,\n    TabViewModule,\n    MultiSelectModule,\n    KeyFilterModule,\n    DividerModule,\n  ],\n  entryComponents: [RecipeDialogComponent],\n  providers: [\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class RecipeManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/recipe/recipe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachPictures\n                            \n                            \n                                    Public\n                                createRecipe\n                            \n                            \n                                    Public\n                                deleteRecipe\n                            \n                            \n                                    Public\n                                getIngredientsByRecipeId\n                            \n                            \n                                    Public\n                                getRecipe\n                            \n                            \n                                    Public\n                                getRecipes\n                            \n                            \n                                    Public\n                                getRecipeType\n                            \n                            \n                                    Public\n                                updateRecipe\n                            \n                            \n                                    Public\n                                uploadPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/recipe/recipe.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachPictures\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachPictures(picture: Partial, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        all pictures of recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRecipe(item: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:80\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RecipePostModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsByRecipeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsByRecipeId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients of a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipeType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipeType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipes type as dessert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        uploadPicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPicture(picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:152\n                \n            \n\n\n            \n                \n                    Store form name as \"picture\" with picture data\nMake http post request over api with formData as req\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport { Picture } from '../../models/picture.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { RecipeType } from '../../models/recipe-type.model';\nimport { Ingredient } from '../../models/ingredient.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}\n   * @returns one recipes\n   */\n  public getRecipe(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes\n   * @returns all recipes\n   */\n  public getRecipes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes?includes[]=pictures`)\n      .pipe(\n        map((res) => res['data']),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}/ingredients\n   * @param id recipe_id\n   * @returns all ingredients of a recipe\n   */\n  public getIngredientsByRecipeId(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}/ingredients`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   *\n   * @returns recipes type as dessert\n   */\n  public getRecipeType(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/types`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes\n   * Create new recipe with igredients\n   * @param item RecipePostModel\n   * @returns new recipe\n   */\n  public createRecipe(item: Recipe): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes`, {\n        ...item,\n        ingredients: item.ingredients.map((ingredient) => ingredient.id),\n      })\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/recipes/{recipe_id}\n   * @param update recipe items\n   * @returns update recipe\n   */\n  public updateRecipe(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/recipes/${update.id}`, {\n        ingredients: update.ingredients.map((ingredient) => ingredient.id),\n        name: update.name,\n        description: update.description,\n        base_price: update.base_price,\n        star: update.star,\n        recipe_type: update.recipe_type,\n      })\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/recipes/{recipe_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   */\n  public deleteRecipe(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/recipes/${id}`).pipe(\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(()=> (httpErrorResponse));\n      })\n    );\n  }\n\n  /**\n   * @param FormData() Create form data\n   *\n   * Store form name as \"picture\" with picture data\n   * Make http post request over api with formData as req\n   *\n   * @param picture\n   * @returns\n   */\n  public uploadPicture(picture): Observable {\n    const formData = new FormData();\n\n    formData.append('name', picture.name);\n    formData.append('filename', picture);\n\n    return this.http.post(`${environment.apiBaseUrl}/files`, formData);\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes/{recipe_id}/pictures\n   * @param id uuid\n   * @returns all pictures of recipe\n   */\n  public attachPictures(\n    picture: Partial,\n    recipe: Recipe\n  ): Observable {\n    const formData = new FormData();\n    formData.append('file_uuid', picture.uuid);\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes/${recipe.id}/pictures`, formData)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecipeType.html":{"url":"interfaces/RecipeType.html","title":"interface - RecipeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecipeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RecipeType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipesComponent.html":{"url":"components/RecipesComponent.html","title":"component - RecipesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-recipes\n            \n\n            \n                styleUrls\n                ./recipes.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./recipes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                id\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                pictures\n                            \n                            \n                                recipeDialog\n                            \n                            \n                                recipes\n                            \n                            \n                                recipesType\n                            \n                            \n                                ref\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateNewRecipe\n                            \n                            \n                                deleteRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, confirmationService: ConfirmationService, loading: LoadingService, dialogService: DialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateNewRecipe\n                        \n                    \n                \n            \n            \n                \nCreateNewRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:103\n                \n            \n\n\n            \n                \n                    Create new recipe button : DYNAMIC DIALOG\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \ndeleteRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:137\n                \n            \n\n\n            \n                \n                    Suppresssion d'une recette\nLe message d'alerte de suppression\nLe message de confirmation de suppression\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \nupdateRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from 'src/app/shared/models/picture.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { RecipeDialogComponent } from '../recipe-dialog/recipe-dialog.component';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n})\nexport class RecipesComponent implements OnInit {\n  ref: DynamicDialogRef;\n\n  recipes: Recipe[] = [];\n  recipesType: Recipe[] = [];\n  ingredients: Ingredient[] = [];\n  ingredientType: IngreType[] = [];\n  pictures: Picture[] = [];\n\n  sortOrder: number;\n  sortField: string;\n  recipeDialog: boolean;\n  id: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    public dialogService: DialogService,\n    public messageService: MessageService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit() {\n    this.loading.loadingOn();\n\n    this.recipeService\n      .getRecipes()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((recipes: Recipe[]): void => {\n        this.recipes = recipes;\n      });\n  }\n\n  onSortChange(event) {\n    // https://www.tektutorialshub.com/angular/property-value-does-not-exist-on-type-eventtarget-error-in-angular/\n    let value = (event.target as HTMLTextAreaElement).value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  /**\n   * Create new recipe button : DYNAMIC DIALOG\n   */\n  CreateNewRecipe(): void {\n    const ref = this.dialogService.open(RecipeDialogComponent, {\n      header: 'Ajouter une nouvelle recette',\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        recipe: [],\n        recipeType: [],\n        ingredientsTypes: [],\n        ingredients: [],\n        pictures: [],\n      },\n    });\n    ref.onClose.subscribe((recipe: Recipe) => {\n      if (recipe) {\n        this.recipes = [...this.recipes];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien crée.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id recipe\n   * Suppresssion d'une recette\n   * Le message d'alerte de suppression\n   * Le message de confirmation de suppression\n   */\n  deleteRecipe(recipe: Recipe): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer la recette \"${recipe.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: () => {\n        this.recipeService.deleteRecipe(recipe.id).subscribe({\n          next: () => {\n            this.recipes = [...this.recipes];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Cette recette sera supprimé définitivement bientôt.',\n              life: 5000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression de la recette.',\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  updateRecipe(recipe: Recipe): void {\n    this.ref = this.dialogService.open(RecipeDialogComponent, {\n      header: `${recipe.name}`,\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        recipeType: this.recipesType,\n        ingredientsTypes: this.ingredientType,\n        ingredients: this.ingredients,\n        pictures: this.pictures,\n        recipe,\n      },\n    });\n    this.ref.onClose.subscribe((_recipe: Recipe) => {\n      if (_recipe) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien modifié.',\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n            \n            \n              \n                \n                \n                \n              \n              {{ recipe.name }}\n              € {{ recipe.base_price }}\n              \n                \n                {{ recipe.recipe_type.code }}\n              \n              \n                \n                   {{ value.name + \", \" }} \n                   {{ value.name }} \n                \n              \n              \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recipes.component.scss\n                \n                :host ::ng-deep {\n  .p-dropdown {\n    width: 14rem;\n    font-weight: normal;\n  }\n\n  .product-name {\n    font-size: 1rem;\n    font-weight: 700;\n    margin-bottom: 0.8rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis ellipsis !important;\n    max-width: 8rem;\n  }\n\n  .product-description {\n    margin: 0 0 1rem 0;\n    font-size: medium;\n  }\n\n  .product-category-icon {\n    vertical-align: middle;\n  }\n\n  .product-category {\n    font-weight: 400;\n    font-size: small;\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .product-grid-item {\n    margin: 0.5em;\n    border: 1px solid #dee2e6;\n    max-width: 280px !important;\n    max-height: 250px !important;\n\n    .product-grid-item-top,\n    .product-grid-item-bottom {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .product-grid-item-footer {\n      justify-content: end;\n    }\n\n    img {\n      width: 100px;\n      height: 150px;\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n      margin: 1rem 0;\n    }\n\n    .product-grid-item-content {\n      text-align: center;\n    }\n\n    .product-price {\n      font-size: small;\n      font-weight: 300;\n    }\n  }\n}\n\n.inline-block {\n  font-size: 0.9rem;\n}\n\n.card {\n  box-shadow: 0 2px 1px -1px rgba(198, 221, 229, 0.096),\n    0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 576px) {\n  :host ::ng-deep .product-list-item {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      width: 75%;\n      margin: 1rem 0;\n    }\n\n    .product-list-detail {\n      text-align: left;\n    }\n\n    .product-price {\n      align-self: left;\n    }\n\n    .product-list-action {\n      margin-top: 2rem;\n      display: flex;\n      flex-direction: column;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                              {{ recipe.name }}              € {{ recipe.base_price }}                                              {{ recipe.recipe_type.code }}                                                               {{ value.name + \", \" }}                    {{ value.name }}                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/role.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Role {\n  id?: number;\n  code?: string;\n  title?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Saturday.html":{"url":"interfaces/Saturday.html","title":"interface - Saturday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Saturday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schedule.html":{"url":"interfaces/Schedule.html","title":"interface - Schedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            friday\n                                        \n                                \n                                \n                                        \n                                            monday\n                                        \n                                \n                                \n                                        \n                                            saturday\n                                        \n                                \n                                \n                                        \n                                            sunday\n                                        \n                                \n                                \n                                        \n                                            thursday\n                                        \n                                \n                                \n                                        \n                                            tuesday\n                                        \n                                \n                                \n                                        \n                                            wednesday\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        friday:         Friday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Friday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monday:         Monday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Monday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saturday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saturday:         Saturday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Saturday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sunday:         Sunday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sunday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thursday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thursday:         Thursday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thursday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuesday:         Tuesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tuesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wednesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wednesday:         Wednesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wednesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/schedule/schedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createSchedule\n                            \n                            \n                                    Public\n                                getSchedule\n                            \n                            \n                                    Public\n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/schedule/schedule.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchedule(create: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:40\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:27\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchedule(update: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:66\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError, of } from 'rxjs';\n\nimport { Schedule } from '../../models/schedule.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScheduleService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param franchisee\n   * @returns\n   */\n  public getSchedule(franchisee: Franchisee): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/times`\n      )\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param create franchisee schedule\n   * @returns update schedule\n   */\n  public createSchedule(\n    create: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .post(\n        `${environment.apiBaseUrl}/contractors/${create.id}/times`,\n        schedule\n      )\n      .pipe(\n        map((res: any) => (res ? res['message'] : Message.CREATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create schedule'\n          );\n          return throwError(() => httpErrorResponse);\n        })\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param update franchisee schedule\n   * @returns update schedule\n   */\n  public updateSchedule(\n    update: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/contractors/${update.id}/times`, schedule)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update schedule'\n          );\n          return throwError(() => httpErrorResponse);\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/server-error/server-error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/server-error/server-error.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss'],\n})\nexport class ServerErrorComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n    \n  \n  \n  \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n      \n      \n      \n    \n    \n      \n        \n        \n        \n        \n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n        \n        \n      \n      \n      \n    \n    \n      \n      \n    \n    \n    \n      \n      \n      \n      \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                @keyframes blink-fancy {\n  0%,\n  25%,\n  28.33%,\n  45%,\n  48.33%,\n  51.67%,\n  93.33%,\n  96.67% {\n    transform: scaleY(1);\n  }\n  26.67%,\n  46.67%,\n  50%,\n  95% {\n    transform: scaleY(0.1);\n  }\n}\n\n@keyframes flame-flicker-1 {\n  25% {\n    transform: scale3d(1, 1.1, 1);\n  }\n  40% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  50% {\n    transform: scale3d(1, 1.05, 1);\n  }\n  65% {\n    transform: scale3d(1, 0.75, 1);\n  }\n  75% {\n    transform: scale3d(1, 1, 1);\n  }\n  90% {\n    transform: scale3d(1, 1.15, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-flicker-2 {\n  15% {\n    transform: scale3d(0.9, 0.8, 1);\n  }\n  33% {\n    transform: scale3d(1.2, 0.5, 1);\n  }\n  47% {\n    transform: scale3d(0.7, 0.7, 1);\n  }\n  63% {\n    transform: scale3d(0.72, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.65, 1, 1);\n  }\n  77% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  85% {\n    transform: scale3d(0.7, 0.95, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-ember {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(10px, -25px) rotate(-45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(-10px, -75px) rotate(45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-alt {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(-15px, -25px) rotate(45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(10px, -75px) rotate(-45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-opacity {\n  45% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes scale-pulse {\n  0% {\n    transform: scale(0.8, 0.8);\n  }\n  50% {\n    transform: scale(1.1, 1.1);\n  }\n  100% {\n    transform: scale(0.8, 0.8);\n  }\n}\n\n@keyframes opacity-pulse {\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0.2;\n  }\n}\n\n.flame-front {\n  transform-origin: center bottom;\n  animation: flame-flicker-1 1s ease-in-out infinite;\n}\n\n.flame-inner {\n  transform-origin: center bottom;\n  animation: flame-flicker-2 0.8s ease-in-out infinite;\n}\n\n#flame-inner-right {\n  animation-duration: 1s;\n  animation-delay: -1s;\n  transform-origin: center center;\n  -moz-transform-origin: 476.268px 97px;\n}\n\n#flame-back {\n  animation-direction: reverse;\n  animation-delay: 0.5s;\n  animation-duration: 1.6s;\n}\n\n#flame-front-right {\n  animation-duration: 1.3s;\n  animation-delay: 0.2s;\n}\n\n.emitted-ember {\n  transform-origin: center center;\n  -moz-transform-origin: 485.125px 51.33px;\n  animation: flame-ember 2s linear infinite,\n    flame-ember-opacity 2s ease-out infinite;\n}\n\n.emitted-ember-alt {\n  animation: flame-ember-alt 1.7s linear infinite,\n    flame-ember-opacity 1.7s ease-out infinite;\n}\n\n.smoke {\n  transform-origin: center center;\n  animation: scale-pulse 0.7s ease-in-out infinite;\n}\n\n#smoke-float-1 {\n  animation-delay: 0.4s;\n}\n#smoke-float-2 {\n  animation-delay: 0.2s;\n}\n#smoke-float-3 {\n  animation-delay: 0s;\n}\n#smoke-float-4 {\n  animation-delay: -0.2s;\n}\n#smoke-float-5 {\n  animation-delay: -0.4s;\n}\n\n.glow {\n  transform-origin: center center;\n  -moz-transform-origin: 378.729px 109.75px;\n  animation: opacity-pulse 4s ease-in-out infinite 0.1s,\n    scale-pulse 4s ease-in-out alternate infinite;\n}\n\n#glow-outer-1 {\n  animation-delay: -0.1s;\n}\n#glow-inner {\n  animation-delay: -0.3s;\n}\n\n#eyes-left,\n#eyes-right {\n  animation: blink-fancy 6s linear infinite;\n}\n\n.bill-highlight {\n  animation: opacity-pulse 4s ease-in-out infinite;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                hideHomeBtn\n                            \n                            \n                                    Optional\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideHomeBtn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport { selectUserDetails } from 'src/app/shared/store/state/user/user.selector';\nimport { EndPoints } from 'src/app/shared/constants/endpoints.const';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  display!: boolean;\n  hideHomeBtn = false;\n  user$?: Observable;\n\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.sidebarService.display$.subscribe((res) => (this.display = res));\n\n    if (this.user$ != new Observable()) {\n      this.user$ = this.store.pipe(select(selectUserDetails));\n    }\n  }\n\n  onClose(): void {\n    this.sidebarService.open(false);\n  }\n\n  logOut(): void {\n    window.location.href = EndPoints.LOGOUT;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                @import \"src/styles.scss\";\n\n:host ::ng-deep button {\n  margin-right: 0.25em;\n}\n.p-button {\n  line-height: 2;\n}\n\nbody,\nbody .p-component .p-sidebar {\n  font-family: \"Optima\", \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\",\n    sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/sidebar/sidebar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display$\n                            \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(display: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarService {\n  private subject = new BehaviorSubject(false);\n\n  display$: Observable = this.subject.asObservable();\n\n  readonly url: any;\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    this.url = this.authService.getUser;\n  }\n\n  public open(display: boolean): void {\n    this.subject.next(display);\n  }\n\n  getUsers() {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sunday.html":{"url":"interfaces/Sunday.html","title":"interface - Sunday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sunday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.component.scss\n                \n                .d.p-tabview-nav-content .p-tabview .p-tabview .p-tabview-nav .p-tabview-nav-container .p-tabview-nav-content {\n  background: rgb(227, 227, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thursday.html":{"url":"interfaces/Thursday.html","title":"interface - Thursday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thursday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/title/title.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-title\n            \n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/title/title.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title: string;\n  @Input() description: string;\n\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  {{ description }}\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                ._title {\n  // background: rgba(213, 234, 254, 0.676);\n  background: linear-gradient(135deg, #dbe6fdd7 50%, #ffffffc7 90%) no-repeat center center fixed;\n  border-radius: 4px !important;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',\n      sans-serif;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  {{ description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/topbar/topbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titre1\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSidebar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        titre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss'],\n})\nexport class TopbarComponent implements OnInit {\n  user$: Observable;\n  user?: User;\n  titre1!: string;\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loadAppUser();\n    this.user$ = this.store.pipe(select(selectUserDetails));\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n        } else {\n          this.user = user;\n        }\n      },\n      error: (error: any): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n    });\n  }\n\n  public openSidebar(): void {\n    this.sidebarService.open(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tuesday.html":{"url":"interfaces/Tuesday.html","title":"interface - Tuesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tuesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorisations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorisations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorisations:         Autorisation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Autorisation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./role.model\";\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  roles?: Role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadUser$\n                            \n                            \n                                updateUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/user/user.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { concatMap, map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { UserActions } from 'src/app/shared/store/state/user/index';\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private profileService: ProfileService\n  ) {}\n\n  loadUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  );\n\n  updateUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  );\n\n  // userLoaded$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.userLoaded),\n  //       tap((action) =>\n  //         localStorage.setItem(\n  //           'userDetails',\n  //           JSON.stringify(action.userDetails)\n  //         )\n  //       )\n  //     ),\n  //   { dispatch: false }\n  // );\n\n  // logOutAction$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.logOutAction.logOutFlowInitiated.type),\n  //       tap(() => this.authService.logOut())\n  //     ),\n  //   { dispatch: false }\n  // );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewUser\n                            \n                            \n                                getNewUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUser\n                        \n                    \n                \n            \n            \n                \ngetNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUserRole\n                        \n                    \n                \n            \n            \n                \ngetNewUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, map } from 'rxjs';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getNewUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  getNewUserRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n    return _user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            userDetails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userDetails:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { User } from 'src/app/shared/models/user.model';\nimport * as UserActions from './user.actions';\n\n/**\n * @Reducer handle transitions from one state to the next state\n * by determining which actions to handle based on the action's type.\n */\n\n/**\n * Defining the interface for the user state object and its initial state\n */\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  userDetails?: User;\n}\n\nexport const initialState: UserState = {\n  userDetails: undefined,\n};\n\nexport const userReducer = createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/user/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                idFranchisee\n                            \n                            \n                                isCreate\n                            \n                            \n                                roleList\n                            \n                            \n                                submitted\n                            \n                            \n                                user\n                            \n                            \n                                userDialog\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNewUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                hideDialog\n                            \n                            \n                                initForm\n                            \n                            \n                                newUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, messageService: MessageService, confirmationService: ConfirmationService, loading: LoadingService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/user/users/users.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNewUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUser\n                        \n                    \n                \n            \n            \n                \nnewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { finalize } from \"rxjs/operators\";\nimport { Role } from \"src/app/shared/models/role.model\";\n\nimport { User } from \"src/app/shared/models/user.model\";\n\nimport { LoadingService } from \"src/app/shared/services/loading/loading.service\";\nimport { UsersService } from \"src/app/shared/services/users/users.service\";\n\n@Component({\n  selector: \"app-users\",\n  templateUrl: \"./users.component.html\",\n  styleUrls: [\"./users.component.scss\"],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class UsersComponent implements OnInit {\n  users: User[] = [];\n  user: User;\n\n  roleList: Role[] = [];\n\n  form: FormGroup;\n\n  idFranchisee: number;\n  submitted: boolean;\n  userDialog: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loading.loadingOn();\n\n    this.usersService\n      .getUsers()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        let usersWithRole: User[] = [];\n        if (res) {\n          res.forEach((e: User) => {\n            this.usersService.getUserRole(e.id).subscribe((res1) => {\n              e.roles = res1;\n              usersWithRole.push(e);\n            });\n          });\n        }\n        this.users = usersWithRole;\n      });\n    this.usersService.getRoles().subscribe((role) => (this.roleList = role));\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      firstname: [this.user?.firstname?.trim() || \"\", [Validators.required]],\n      lastname: [this.user?.lastname?.trim() || \"\", [Validators.required]],\n      phone: [this.user?.phone?.trim() || \"\", [Validators.required, Validators.pattern(\"/^[0][0-9]{9}$\")]],\n      email: [this.user?.email?.trim() || \"\", [Validators.required, Validators.email]],\n      role: [this.user?.roles ? [0] || \"\" : [Validators.required]],\n    });\n  }\n\n  private getFormValues(): void {\n    const user: User = {};\n    user.roles = [];\n    user.firstname = this.form.get(\"firstname\").value;\n    user.lastname = this.form.get(\"lastname\").value;\n    user.phone = this.form.get(\"phone\").value;\n    user.email = this.form.get(\"email\").value;\n    user.roles.push(this.form.controls[\"role\"].value.code);\n\n    if (!this.isCreate) {\n      user.id = this.user.id;\n    }\n\n    this.user = user;\n  }\n\n  newUser(): void {\n    this.user = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  editUser(user: User): void {\n    this.user = { ...user };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.getFormValues();\n    this.loading.loadingOn();\n\n    if (this.user.id) {\n      this.updateUser();\n    } else {\n      this.createNewUser();\n    }\n    this.users = [...this.users];\n    this.userDialog = false;\n    this.user = {};\n  }\n\n  private createNewUser(): void {\n    this.usersService\n      .newUser(this.user)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.user = res;\n        this.usersService.AddRole(this.user).subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: \"success\",\n              summary: \"Succès\",\n              detail: \"Création de nouvel utilisateur.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: \"error\",\n              summary: \"Erreur le moment de création!\",\n              detail: error.error.Message,\n            });\n          },\n        });\n      });\n  }\n\n  private updateUser(): void {\n    this.usersService\n      .updateUser(this.user)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: \"success\",\n            summary: \"Succès\",\n            detail: \"Mise à jour d'utilisateur.\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: \"error\",\n            summary: \"Erreur le moment de modification des informations d'utilisateur!\",\n            detail: error.error,\n          });\n        },\n      });\n  }\n\n  onDelete(user: User): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + user.firstname + \" \" + user.lastname + '\" ?',\n      header: \"Confirm\",\n      icon: \"pi pi-exclamation-triangle\",\n      acceptButtonStyleClass: \"accept\",\n      accept: (): void => {\n        this.usersService.deleteUser(user.id).subscribe({\n          next: () => {\n            this.user = {};\n            this.users = [...this.users];\n            this.messageService.add({\n              severity: \"success\",\n              summary: \"Succès\",\n              detail: \"Utilisateur est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: \"error\",\n              summary: \"Erreur le moment de suppression!\",\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  hideDialog() {\n    this.userDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n \n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n        Prénom \n        Nom \n        Email \n        Téléphone \n        Rôle \n        \n      \n    \n    \n      \n        {{ user.firstname }}\n        {{ user.lastname }}\n        {{ user.email }}\n        {{ user.phone }}\n        {{ user.roles[0].code }}\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.\n      \n    \n  \n\n\n\n\n  \n    \n      Prénom\n      \n      Firstname is required.\n    \n    \n      Nom\n      \n      Lastname is required.\n    \n    \n      Email\n      \n      Email is required.\n    \n    \n      Téléphone\n      \n      Phone is required.\n    \n    \n      Rôle\n      \n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                :host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                               Prénom         Nom         Email         Téléphone         Rôle                                     {{ user.firstname }}        {{ user.lastname }}        {{ user.email }}        {{ user.phone }}        {{ user.roles[0].code }}                                                                En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.                        Prénom            Firstname is required.              Nom            Lastname is required.              Email            Email is required.              Téléphone            Phone is required.              Rôle                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nUsersComponent\n\nUsersComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/user/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { TableModule } from \"primeng/table\";\nimport { ToastModule } from \"primeng/toast\";\nimport { SliderModule } from \"primeng/slider\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\n\nimport { UsersComponent } from \"./users/users.component\";\nimport { UsersService } from \"src/app/shared/services/users/users.service\";\nimport { ComponentsModule } from \"src/app/layouts/components/components.module\";\nimport { ApiTokenInterceptorService } from \"src/app/shared/interceptors/api-token/api-token-interceptor.service\";\n\nconst routes: Routes = [{ path: \"\", component: UsersComponent }];\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    UsersService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AddRole\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                getRoles\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserRole\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                getUsersWithRoles\n                            \n                            \n                                    Public\n                                newUser\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        AddRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:82\n                \n            \n\n\n            \n                \n                    Create new user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Add role to an user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        user role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users (franch)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUsersWithRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersWithRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users (franch)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    newUser(item: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:92\n                \n            \n\n\n            \n                \n                    Create new user user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map, tap, Observable } from \"rxjs\";\n\nimport { environment } from \"src/environments/environment\";\nimport { User } from \"src/app/shared/models/user.model\";\nimport { Message } from \"../../constants/message.const\";\nimport { Role } from \"../../models/role.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UsersService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}\n   * @returns one user\n   */\n  public getUser(id: number): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users/${id}`).pipe(map((res: User): User => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users\n   * @returns all users (franch)\n   */\n  public getUsers(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(map((res: User[]): any => res[\"data\"]));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users\n   * @returns all users (franch)\n   */\n  public getUsersWithRoles(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(\n      map((res: User[]): any => {\n        let usersWithRole: User[] = [];\n        res[\"data\"].forEach((e) => {\n          this.getUserRole(e.id).subscribe((res1) => {\n            e.roles = res1;\n            usersWithRole.push(e);\n          });\n          console.log(\"users with roles\", usersWithRole);\n          return usersWithRole;\n        });\n      })\n    );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/roles\n   * @returns user role\n   */\n  public getUserRole(id: number): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users/${id}/roles`).pipe(\n      tap((obj: Role[]): void => console.log(\"service -> get user role: \", id, obj)),\n      map((res: Role[]): Role[] => res)\n    );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/roles\n   * @returns one user\n   */\n  public getRoles(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/roles`).pipe(\n      tap((obj): void => console.log(\"service -> get roles : \", obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users/{user_id}/roles\n   * Create new user role\n   * @param user userModel\n   * @returns Add role to an user\n   */\n  public AddRole(user: User): Observable {\n    return this.http.post(`${environment.apiBaseUrl}/users/${user.id}`, user.roles).pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users\n   * Create new user user\n   * @param item userModel\n   * @returns new user\n   */\n  public newUser(item: User): Observable {\n    return this.http.post(`${environment.apiBaseUrl}/users`, item).pipe(map((res) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/users/{user_id}\n   * @param update user info\n   * @returns update user\n   */\n  public updateUser(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${update.id}`, update)\n      .pipe(map((res: Object): any => (res ? res[\"message\"] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/users/{user_id}\n   * @param id user_id\n   * @returns Delete a user\n   */\n  public deleteUser(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res: Object): any => (res ? res[\"message\"] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wednesday.html":{"url":"interfaces/Wednesday.html","title":"interface - Wednesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wednesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layouts/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layouts/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts\n            \n            component\n            FranchiseeDetailComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n            \n            component\n            FranchiseeDialogComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee/franchisee.component.ts\n            \n            component\n            FranchiseeComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/principal/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/principal-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/principal/principal.component.ts\n            \n            component\n            PrincipalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/profile/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n            \n            component\n            IngredientTypeComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient/ingredient.component.ts\n            \n            component\n            IngredientComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n            \n            component\n            RecipeDialogComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n            \n            component\n            RecipesComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/user/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n            guard\n            IsAuthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n            guard\n            IsUnauthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/api-token/api-token-interceptor.service.ts\n            \n            interceptor\n            ApiTokenInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-error/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/mock/address.mock.ts\n            \n            variable\n            mockAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchisee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchiseeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngredientArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            mockpictureArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            mockRecipeTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/role.mock.ts\n            \n            variable\n            mockRole1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/role.mock.ts\n            \n            variable\n            mockRole2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/role.mock.ts\n            \n            variable\n            mockRoleArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/schedule.mock.ts\n            \n            variable\n            mockSchedule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserWithAuth1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/access-token.model.ts\n            \n            interface\n            AccessTokenModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/address.model.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee-recipe.model.ts\n            \n            interface\n            FranchiseeRecipe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee.model.ts\n            \n            interface\n            Franchisee\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient-type.model.ts\n            \n            interface\n            IngreType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient.model.ts\n            \n            interface\n            Ingredient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/picture.model.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe-type.model.ts\n            \n            interface\n            RecipeType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe.model.ts\n            \n            interface\n            Recipe\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/role.model.ts\n            \n            interface\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Diner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Friday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Lunch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Monday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Saturday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Schedule\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Sunday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Thursday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Tuesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Wednesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            Autorisation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            injectable\n            ErrorHttpService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            interface\n            ErrorDataHttp\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/franchisee/franchisee.service.ts\n            \n            injectable\n            FranchiseeService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient-type/ingredient-type.service.ts\n            \n            injectable\n            IngredientTypeService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/recipe/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/sidebar/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                31 %\n                (6/19)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/shared/store/reducers/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/reducers/index.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/reducers/index.ts\n            \n            variable\n            metaReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/reducers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            loadUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            updateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userUpdated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            function\n            canAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            adminAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            franchiseeAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectIsLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectProfileUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.stage.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.1\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.1\n        \n            @angular/compiler : ~13.3.1\n        \n            @angular/core : ~13.3.1\n        \n            @angular/forms : ~13.3.1\n        \n            @angular/platform-browser : ~13.3.1\n        \n            @angular/platform-browser-dynamic : ~13.3.1\n        \n            @angular/router : ~13.3.1\n        \n            @ngrx/effects : ^13.2.0\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.2.0\n        \n            @ngrx/store : ^13.0.2\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            csprng : ^0.1.2\n        \n            express : ^4.18.1\n        \n            karma-coverage-istanbul-reporter : ^3.0.3\n        \n            ngx-cookie-service : ^13.2.1\n        \n            node-localstorage : ^2.2.1\n        \n            oauth-pkce : ^0.0.6\n        \n            path : ^0.12.7\n        \n            primeflex : ^3.2.1\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.4.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.4.0\n        \n            version-check : ^1.2.0\n        \n            zone.js : ^0.11.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _HttpRequest   (src/.../httpRequest.const.ts)\n                        \n                        \n                            EndPoints   (src/.../endpoints.const.ts)\n                        \n                        \n                            Message   (src/.../message.const.ts)\n                        \n                        \n                            Roles   (src/.../role.const.ts)\n                        \n                        \n                            StorageKeys   (src/.../storageKeys.const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/constants/httpRequest.const.ts\n    \n        \n            \n                \n                    \n                        \n                        _HttpRequest\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/shared/constants/endpoints.const.ts\n    \n        \n            \n                \n                    \n                        \n                        EndPoints\n                    \n                \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : https://www.google.fr\n                            \n                        \n            \n        \n\n    src/app/shared/constants/message.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Message\n                    \n                \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : 201 Created\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 UPDATE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : Les modifications ont bien été prises en compte.\n                            \n                        \n            \n        \n\n    src/app/shared/constants/role.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : goodfood\n                            \n                        \n                        \n                            \n                                 FRANCHISEE\n                            \n                        \n                        \n                            \n                                Value : contractor\n                            \n                        \n            \n        \n\n    src/app/shared/constants/storageKeys.const.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : AUTH_STATE\n                            \n                        \n                        \n                            \n                                 CODE_VERIFY\n                            \n                        \n                        \n                            \n                                Value : AUTH_CODE_VERIFIER\n                            \n                        \n                        \n                            \n                                 USER_TOKEN\n                            \n                        \n                        \n                            \n                                Value : AUTH_USER_TOKEN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canAccess   (src/.../user.selector.ts)\n                        \n                        \n                            logger   (src/.../store.reducer.ts)\n                        \n                        \n                            logger   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canAccess\n                        \n                    \n                \n            \n            \n                \ncanAccess(user: UserState, roles)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/store/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGoodFood - web\nAngular\nThis project was generated with Angular CLI version 13.2.6.\nDevelopment server\nRun ng serve (or ng serve --open or ng serve -o or npm start) for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component  to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nExit\nRun ctrl c to exit a dev server.\nVersions\n\nNodejs : 16.13.02\nAngular : 13.2.6\nPrimeNG : 13.3.2\n\nInstallation\nPrimeNG\nprimeicons\nnpm install primeng --save\nnpm install primeicons --savein angular.json > Styles we will add also\nnode_modules/primeicons/primeicons.css\nnode_modules/primeng/resources/themes/lara-light-indigo/theme.css\nnode_modules/primeng/resources/primeng.min.css\nThere is more than 33 themes and we can choose between them.\n\nGetting for first time\ngit clone GOODFOOD-2.0A\nnpm install\nDockerfile\n\nDockerfile reference\nDockerize example\n\nCreate image in Docker\ndocker build -t goodfood-web .Check :\ndocker imagesREPOSITORY TAG IMAGE ID CREATED SIZE\n\ngoodfood-web latest  28cb65260f81 11 hours ago  24.2MBAprès build on va créer le conteneur docker :\ndocker run -d -p 4200:4200 --name GoodFood-web goodfood-webSee container details :\ndocker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nf10f652d3da9 goodfood-web \"nginx -g 'daemon of…\" 16 minutes ago Up 16 minutes 0.0.0.0:8181->80/tcp GoodFood-webhttp://localhost:4200/\nCompodoc\nCompodoc is a documentation tool for Angular applications. It generates a static documentation of your application.\nInstallation\n\nGlobal installation\n\nnpm install -g @compodoc/compodoc\nLocal installation\n\nng add @compodoc/compodoc\nConfiguration\n\nnpx compodoc -p tsconfig.doc.json --theme materialRun script :\nnpm run compodoc\n./node_modules/.bin/compodoc -s -r 4201docker compose\ndocker compose up --build -dGITFLOW\nTutorial Git flow workflow\n\n\nSonar Status : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DefaultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FranchiseeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrincipalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipeManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_exports\n\n\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDetailComponent\n\nFranchiseeDetailComponent\n\nFranchiseeModule -->\n\nFranchiseeDetailComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminAccess   (src/.../user.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            franchiseeAccess   (src/.../user.selector.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            loadUser   (src/.../user.actions.ts)\n                        \n                        \n                            metaReducer   (src/.../index.ts)\n                        \n                        \n                            metaReducers   (src/.../store.reducer.ts)\n                        \n                        \n                            mockAddress   (src/.../address.mock.ts)\n                        \n                        \n                            mockFranchisee   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeArray   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe1   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe2   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipeArray   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockIngre1   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngre2   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngredientArray   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockpictureArray   (src/.../picture.mock.ts)\n                        \n                        \n                            mockRecipe1   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipe2   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeArray   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeTypeArray   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            mockRole1   (src/.../role.mock.ts)\n                        \n                        \n                            mockRole2   (src/.../role.mock.ts)\n                        \n                        \n                            mockRoleArray   (src/.../role.mock.ts)\n                        \n                        \n                            mockSchedule   (src/.../schedule.mock.ts)\n                        \n                        \n                            mockType1   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockType2   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockTypeArray   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockUser1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser3   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserArray   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserWithAuth   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserWithAuth1   (src/.../users.mock.ts)\n                        \n                        \n                            picture1   (src/.../picture.mock.ts)\n                        \n                        \n                            picture2   (src/.../picture.mock.ts)\n                        \n                        \n                            picture3   (src/.../picture.mock.ts)\n                        \n                        \n                            recipeType1   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType2   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType3   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            reducers   (src/.../store.reducer.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            routing   (src/.../app-routing.module.ts)\n                        \n                        \n                            routing   (src/.../principal-routing.module.ts)\n                        \n                        \n                            selectIsLoggedIn   (src/.../user.selector.ts)\n                        \n                        \n                            selectProfileUser   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserDetails   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserState   (src/.../user.selector.ts)\n                        \n                        \n                            updateUser   (src/.../user.actions.ts)\n                        \n                        \n                            userFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            userLoaded   (src/.../user.actions.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            userUpdated   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.ADMIN, Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserDetails,\n  (userDetails) => !!userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProfileUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserDetails, (user) => {\n  return { user };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserState,\n  (user) => user.userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('user')\n                    \n                \n\n            \n                \n                    Feature selector\nand\na selector that returns the userDetails\naccess these properties :\n\nisLoggedIn,\ncanAccess,\nadminAccess | franchiseeAccess\n\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'http://localhost/4000',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96560464-28d1-401b-9c39-0fe271d28c2d',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost/4100'\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96b05134-a952-4e00-b94a-c47406527d49',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.example.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost/8085/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/app/shared/store/state/user/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  userDetails: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/user/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Auth] Load User')\n                    \n                \n\n            \n                \n                    User-related Actions that we need for our user Store. Logout,\nand user changed Action to keep the user details in our Store in sync with Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] Update User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Auth Effect] User Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] User Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n    router: routerReducer\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: routerReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/address.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  first_line: '4 rue isere',\n  second_line: '',\n  zip_code: '38000',\n  city: 'Grenoble',\n  country: 'France',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/franchisee.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'chez moi',\n  phone: '01 22 33 44 55',\n  email: 'user@example.com',\n  max_delivery_radius: 5,\n  address_id: 1,\n  ownedBy: mockUser1,\n  owned_by: 1,\n  create_by: 1,\n  address: mockAddress,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : [mockFranchisee]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/fracnhisee-recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  price: 12.0,\n  recipe_id: 1,\n  recipe: mockRecipe1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  price: 15.0,\n  recipe_id: 2,\n  recipe: mockRecipe2,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  mockFranchiseeRecipe1,\n  mockFranchiseeRecipe2,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredients.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockIngre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'Porc',\n  allergen: false,\n  types: [mockType2],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngre2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'Saumon',\n  allergen: true,\n  types: [mockType1],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngredientArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : [mockIngre1, mockIngre2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/picture.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockpictureArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : [picture1, picture2, picture3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-1',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-1.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuis-2',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-2.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-3',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-3.jpg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'string',\n  star: false,\n  base_price: 22,\n  description: 'string',\n  recipe_type: recipeType1,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'string',\n  star: true,\n  base_price: 10,\n  description: 'string',\n  recipe_type: recipeType2,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [mockRecipe1, mockRecipe2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipeTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  recipeType2,\n  recipeType2,\n  recipeType3,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/role.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRole1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: \"goodfood\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRole2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: \"contractor\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRoleArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Default value : [mockRole1, mockRole2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/schedule.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockSchedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                \n                    \n                        Default value : {\n  monday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  tuesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  wednesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  thursday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  friday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  saturday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  sunday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredient-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'fish',\n  name: 'fish',\n  description: 'description 1',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'meat',\n  name: 'meat',\n  description: 'description 2',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : [mockType1, mockType2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/users.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockUser1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [mockRole1],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  firstname: \"Zara\",\n  lastname: \"Dubeau\",\n  email: \"Product@Description.com\",\n  phone: \"11111111\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  firstname: \"Bahar\",\n  lastname: \"Sdqi\",\n  email: \"Product@Description.org\",\n  phone: \"00000000\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [mockUser1, mockUser2, mockUser3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [\n    {\n      code: \"goodfood\",\n    },\n    {\n      code: \"contractor\",\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [mockRole1],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [mockRole2],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserWithAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [\n    {\n      code: \"goodfood\",\n    },\n    {\n      code: \"contractor\",\n    },\n  ],\n  autorisations: {\n    isAdmin: true,\n    isFranchisee: true,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserWithAuth1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: \"Sara\",\n  lastname: \"Dubois\",\n  email: \"Product@Description.fr\",\n  phone: \"12345678\",\n  roles: [mockRole1],\n  autorisations: {\n    isAdmin: true,\n    isFranchisee: false,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forRoot(ROUTES, { useHash: false })\n                    \n                \n\n\n        \n    \n\n    src/app/principal/principal-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild(ROUTES)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

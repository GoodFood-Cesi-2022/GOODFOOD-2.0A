var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenModel.html",[0,0.564,1,3.021]],["body/interfaces/AccessTokenModel.html",[0,0.82,1,5.254,2,1.829,3,0.188,4,0.169,5,0.15,6,5.257,7,5.257,8,0.307,9,1.166,10,7.98,11,0.783,12,7.98,13,7.98,14,6.979,15,7.98,16,1.954,17,0.654,18,0.012,19,2.441,20,0.188,21,0.01,22,0.01]],["title/interfaces/Address.html",[0,0.564,23,2.262]],["body/interfaces/Address.html",[0,0.793,2,1.769,3,0.181,4,0.163,5,0.145,8,0.297,9,1.142,11,0.933,16,1.988,17,0.659,18,0.012,19,2.237,20,0.181,21,0.01,22,0.01,23,3.855,24,5.085,25,6.25,26,5.762,27,6.25,28,2.401,29,6.25,30,6.25]],["title/injectables/AddressService.html",[31,0.84,32,3.021]],["body/injectables/AddressService.html",[3,0.132,4,0.118,5,0.105,8,0.215,11,0.796,17,0.586,18,0.012,19,1.92,20,0.132,21,0.008,22,0.008,23,4.477,28,1.744,31,1.164,32,4.186,33,1.672,34,3.686,35,0.96,36,3.031,37,5.733,38,5.733,39,5.733,40,5.733,41,0.729,42,2.107,43,3.494,44,1.185,45,4.215,46,1.58,47,0.928,48,2.748,49,5.733,50,4.562,51,4.215,52,2.495,53,2.999,54,1.984,55,1.23,56,2.667,57,5.537,58,5.733,59,4.215,60,5.159,61,6.515,62,6.515,63,6.515,64,3.739,65,5.733,66,2.616,67,4.215,68,1.744,69,5.733,70,5.733,71,4.215,72,2.885,73,5.014,74,0.71,75,0.477,76,1.56,77,1.941,78,1.324,79,4.215,80,1.867,81,2.02,82,3.338,83,1.867,84,2.549,85,1.56,86,1.459,87,0.496,88,2.02,89,0.94,90,4.013,91,4.215,92,2.195,93,3.65,94,4.215,95,4.474,96,2.587,97,2.549,98,4.215,99,3.256,100,4.215,101,2.697,102,5.733,103,4.215,104,3.668,105,3.078,106,4.215,107,2.697]],["title/interceptors/ApiTokenInterceptorService.html",[108,3.276,109,2.375]],["body/interceptors/ApiTokenInterceptorService.html",[3,0.156,4,0.141,5,0.125,8,0.256,11,0.772,17,0.569,18,0.012,20,0.156,21,0.009,22,0.009,31,1.305,35,1.077,41,0.868,44,1.15,46,1.534,47,0.9,55,1.007,56,2.377,74,0.712,75,0.568,76,1.856,78,1.574,80,2.22,81,2.403,85,1.856,86,1.735,87,0.59,88,2.403,92,2.229,109,3.69,110,4.385,111,4.79,112,4.932,113,4.385,114,6.207,115,6.547,116,6.207,117,3.661,118,3.958,119,5.014,120,5.014,121,7.043,122,3.86,123,7.043,124,5.014,125,6.926,126,4.695,127,5.014,128,5.014,129,4.385,130,5.623,131,5.014,132,3.661,133,1.388,134,6.429,135,5.623,136,5.014,137,5.014,138,3.97,139,5.014,140,1.679,141,4.385,142,5.014,143,5.014,144,5.014,145,4.385,146,5.014,147,5.014]],["title/components/AppComponent.html",[148,0.45,149,1.259]],["body/components/AppComponent.html",[3,0.138,4,0.124,5,0.11,8,0.225,9,0.957,11,0.48,16,1.013,17,0.473,18,0.012,20,0.138,21,0.008,22,0.008,35,0.989,41,0.763,44,1.08,46,0.952,47,0.845,55,0.69,68,1.341,74,0.613,75,0.499,86,2.045,87,0.519,88,2.112,133,1.636,148,0.725,149,2.166,150,1.855,151,1.429,152,1.384,153,1.429,154,1.429,155,3.854,156,2.161,157,1.429,158,2.701,159,2.617,160,1.916,161,6.664,162,1.916,163,5.907,164,4.538,165,2.309,166,4.407,167,7.643,168,4.481,169,5.907,170,4.407,171,1.078,172,1.525,173,1.577,174,4.022,175,5.166,176,1.748,177,1.951,178,1.147,179,4.407,180,1.812,181,3.854,182,2.82,183,3.854,184,4.407,185,4.407,186,4.407,187,2.82,188,3.001,189,3.001,190,3.001,191,3.001,192,2.529,193,1.429,194,1.916,195,1.916,196,1.429,197,2.309,198,1.429,199,1.429,200,1.259,201,1.429,202,1.22,203,1.429,204,1.259,205,1.429,206,1.259,207,1.429,208,1.259,209,1.445,210,1.429,211,1.259,212,1.916,213,1.259,214,1.429,215,1.259,216,1.429,217,1.259,218,1.078,219,1.429,220,1.259,221,1.429,222,1.259,223,1.429,224,1.259,225,1.299,226,1.429,227,1.259,228,1.429,229,1.259,230,1.429,231,1.259,232,1.112,233,1.259,234,1.429,235,1.259,236,1.341,237,1.429,238,1.259,239,1.429,240,1.259,241,1.429,242,1.259,243,1.429,244,1.259,245,1.429,246,1.259,247,1.429,248,1.429]],["title/interfaces/AppState.html",[0,0.564,249,2.502]],["body/interfaces/AppState.html",[0,0.811,2,1.808,3,0.185,4,0.167,5,0.148,18,0.012,20,0.248,21,0.01,22,0.01,74,0.658,77,2.737,92,2.244,140,2.394,168,3.412,249,4.322,250,4.341,251,6.25,252,5.199,253,3.25,254,6.702,255,6.702,256,6.25,257,3.25,258,5.659,259,4.341,260,4.341,261,4.048,262,5.199,263,3.907,264,5.596,265,5.944,266,5.944,267,5.944,268,5.944,269,4.707]],["title/components/AuthComponent.html",[148,0.45,200,1.182]],["body/components/AuthComponent.html",[3,0.102,4,0.092,5,0.082,8,0.245,9,0.777,11,0.356,16,1.103,17,0.384,18,0.012,20,0.102,21,0.007,22,0.007,35,0.803,41,0.83,44,1.012,46,0.708,47,0.72,55,0.751,66,2.731,68,0.996,74,0.677,75,0.371,87,0.385,89,0.73,118,3.588,122,1.57,132,2.392,133,1.328,148,0.68,149,0.996,150,1.506,151,1.062,152,1.029,153,1.062,154,1.062,156,1.84,157,1.062,158,2.631,159,2.548,160,1.555,162,1.555,165,2.026,168,4.121,171,1.627,176,1.299,178,1.868,180,1.347,193,1.062,194,1.555,195,1.555,196,1.062,197,2.026,198,1.062,199,1.062,200,1.785,201,1.062,202,0.907,203,1.062,204,0.936,205,1.062,206,0.936,207,1.062,208,0.936,209,1.173,210,1.062,211,0.936,212,1.555,213,0.936,214,1.062,215,0.936,216,1.062,217,0.936,218,0.801,219,1.062,220,0.936,221,1.062,222,0.936,223,1.062,224,0.936,225,0.965,226,1.062,227,0.936,228,1.062,229,0.936,230,1.062,231,0.936,232,0.826,233,0.936,234,1.062,235,0.936,236,0.996,237,1.062,238,0.936,239,1.062,240,0.936,241,1.062,242,0.936,243,1.062,244,0.936,245,1.062,246,0.936,247,1.062,248,1.062,249,1.981,253,3.925,257,1.791,263,3.103,270,2.865,271,4.495,272,5.676,273,4.797,274,5.464,275,2.392,276,6.278,277,4.797,278,3.275,279,3.275,280,2.23,281,1.791,282,2.594,283,1.791,284,2.865,285,2.096,286,2.23,287,2.594,288,2.299,289,3.275,290,3.275,291,3.275,292,3.275,293,3.275,294,2.865,295,1.88,296,2.594,297,3.275,298,3.275,299,2.865,300,2.865,301,2.23,302,5.676,303,1.097,304,1.451,305,2.865,306,3.503,307,2.23,308,2.23,309,3.275,310,2.865,311,2.312,312,2.865,313,2.23,314,2.865,315,3.275,316,1.71,317,1.57,318,1.71,319,5.267,320,6.278,321,1.57,322,5.816,323,2.865,324,2.392,325,3.799,326,2.865,327,3.799,328,2.046,329,3.503,330,2.622,331,2.594,332,3.503,333,2.505,334,3.203,335,6.045,336,2.865,337,2.594,338,2.865,339,2.865,340,2.865,341,2.594,342,2.392,343,2.594,344,4.495,345,1.637,346,4.495,347,4.495,348,1.981,349,4.195,350,2.865,351,2.865,352,2.392,353,2.23,354,2.392,355,1.791,356,1.791,357,1.791,358,1.88,359,1.57,360,1.791,361,1.88,362,1.71,363,2.753,364,1.981,365,1.981,366,1.88,367,2.594,368,3.275,369,2.865,370,2.865]],["title/modules/AuthModule.html",[371,2.16,372,3.021]],["body/modules/AuthModule.html",[3,0.157,4,0.141,5,0.125,18,0.012,20,0.157,21,0.009,22,0.009,35,0.841,44,0.813,55,0.787,74,0.781,75,0.568,87,0.591,92,1.577,118,3.216,140,1.682,148,0.7,176,1.992,200,2.301,222,2.301,257,2.745,328,2.142,372,6.017,373,2.312,374,2.963,375,4.392,376,4.392,377,3.216,378,2.51,379,5.022,380,3.518,381,5.096,382,6.211,383,5.022,384,6.211,385,3.518,386,2.622,387,4.118,388,3.892,389,2.064,390,3.708,391,4.545,392,2.745,393,4.392,394,3.667,395,4.392,396,3.892,397,3.037,398,4.382,399,3.419,400,4.382,401,3.419,402,5.022,403,5.022,404,3.419,405,4.392,406,4.392,407,4.392,408,5.022,409,3.518,410,4.392,411,2.622,412,3.037,413,4.392,414,5.628,415,5.022,416,4.392,417,2.407]],["title/injectables/AuthService.html",[31,0.84,118,2.068]],["body/injectables/AuthService.html",[1,4.517,3,0.068,4,0.061,5,0.054,8,0.11,11,0.742,14,3.051,16,1.48,17,0.586,18,0.012,19,1.291,20,0.068,21,0.005,22,0.005,28,1.332,31,0.708,33,0.859,35,0.584,36,1.621,41,0.869,42,1.082,43,2.509,44,1.236,46,1.474,47,0.865,48,2.639,52,1.336,54,2.141,55,1.195,56,2.225,66,2.987,74,0.654,75,0.245,76,0.801,77,0.997,78,0.68,80,0.959,81,1.038,82,1.715,85,0.801,86,0.75,87,0.255,92,2.352,93,3.072,95,2.232,96,0.801,99,2.751,112,3.741,114,6.816,118,1.743,126,5.344,140,2.533,141,5.41,145,3.83,168,3.694,171,1.071,174,2.375,176,0.859,178,1.848,180,2.064,209,0.853,225,1.028,263,3.518,271,1.715,281,1.184,282,1.715,288,3.341,303,1.682,304,2.224,305,1.894,306,3.666,307,2.375,308,2.375,310,1.894,311,1.858,334,0.924,410,3.051,418,1.894,419,3.488,420,4.38,421,5.021,422,5.021,423,5.021,424,5.021,425,5.021,426,3.488,427,3.488,428,3.976,429,3.488,430,3.051,431,2.762,432,3.976,433,3.666,434,3.488,435,3.488,436,4.118,437,2.166,438,3.488,439,2.375,440,3.488,441,2.166,442,3.213,443,2.166,444,2.166,445,2.232,446,3.488,447,2.166,448,2.166,449,2.166,450,3.051,451,3.488,452,2.166,453,2.166,454,3.488,455,2.166,456,3.488,457,2.166,458,2.166,459,3.488,460,2.166,461,3.051,462,3.488,463,2.166,464,2.762,465,2.166,466,3.051,467,3.914,468,2.166,469,2.166,470,3.488,471,3.488,472,3.488,473,2.166,474,3.488,475,2.166,476,3.051,477,3.976,478,2.166,479,1.894,480,1.894,481,1.386,482,2.166,483,2.802,484,1.715,485,2.166,486,2.166,487,3.051,488,1.581,489,1.894,490,2.232,491,1.243,492,1.715,493,1.894,494,2.166,495,4.38,496,3.051,497,3.488,498,3.488,499,2.166,500,2.166,501,3.488,502,3.488,503,2.166,504,2.166,505,2.166,506,2.166,507,4.38,508,4.38,509,3.488,510,3.488,511,2.166,512,3.488,513,2.166,514,2.166,515,2.166,516,1.894,517,2.166,518,2.166,519,5.021,520,2.166,521,2.166,522,2.166,523,1.894,524,3.83,525,2.166,526,2.166,527,2.166,528,2.166,529,2.166,530,2.166,531,1.894,532,3.488,533,3.488,534,2.166,535,2.166,536,2.166,537,2.649,538,3.488,539,3.488,540,3.488,541,3.488,542,2.166,543,2.166,544,3.488,545,5.021,546,4.38,547,2.166,548,3.488,549,3.488,550,2.166,551,2.166,552,2.166,553,2.166,554,2.166,555,3.488,556,2.166,557,2.166,558,2.166,559,2.166,560,2.166,561,2.166,562,2.166,563,2.166,564,3.488,565,3.488,566,2.166,567,2.166,568,2.166,569,1.894,570,1.715,571,1.715,572,6.435,573,3.488,574,2.166,575,2.166,576,2.166,577,2.232,578,2.232,579,2.232,580,1.715,581,1.715,582,1.715,583,5.883,584,4.38,585,3.037,586,3.488,587,2.166,588,3.488,589,3.488,590,4.38,591,2.166,592,3.488,593,2.166,594,2.166,595,2.166,596,2.166,597,5.021,598,3.051,599,2.166,600,3.488,601,3.488,602,3.488,603,3.488,604,3.488,605,2.166,606,3.488,607,3.488,608,2.166,609,2.166,610,1.715,611,2.166,612,3.488,613,2.166,614,2.166,615,2.166]],["title/interfaces/Autorisation.html",[0,0.564,616,3.021]],["body/interfaces/Autorisation.html",[0,0.983,2,1.836,3,0.188,4,0.169,5,0.151,8,0.308,9,1.168,16,1.906,17,0.618,18,0.012,19,1.779,20,0.225,21,0.01,22,0.01,28,1.836,66,2.159,281,3.299,288,3.456,303,2.776,467,4.139,577,3.861,578,5.113,579,5.113,616,5.631,617,4.406,618,4.109,619,4.109,620,3.649,621,3.464]],["title/modules/ComponentsModule.html",[371,2.16,622,2.262]],["body/modules/ComponentsModule.html",[3,0.142,4,0.127,5,0.113,18,0.012,20,0.142,21,0.008,22,0.008,74,0.784,75,0.514,87,0.535,176,1.803,204,2.367,220,2.367,235,2.202,236,1.382,238,2.367,242,2.367,244,2.367,288,2.178,328,1.938,373,2.092,374,2.776,377,3.013,378,2.271,380,3.296,385,3.296,386,2.373,388,3.646,389,1.868,390,3.148,392,3.296,396,3.646,397,2.748,398,4.106,399,3.094,400,4.106,401,3.094,411,2.373,622,4.681,623,3.974,624,3.974,625,3.974,626,4.544,627,4.403,628,5.273,629,3.974,630,4.403,631,3.318,632,6.03,633,4.544,634,5.273,635,3.974,636,4.775,637,3.599,638,6.03,639,4.544,640,4.544,641,4.544,642,4.544,643,4.544,644,4.544,645,3.599,646,4.544]],["title/components/DefaultComponent.html",[148,0.45,202,1.146]],["body/components/DefaultComponent.html",[3,0.149,4,0.134,5,0.119,8,0.244,18,0.012,20,0.149,21,0.009,22,0.009,35,1.045,41,1.201,44,1.011,47,0.792,55,0.75,68,1.457,74,0.441,75,0.542,87,0.564,89,1.391,133,1.728,148,0.756,149,1.457,150,1.96,151,1.553,152,1.504,153,1.553,154,1.553,156,2.251,157,1.553,158,2.718,159,2.633,160,2.024,162,2.024,165,2.386,171,1.527,172,2.16,187,3.064,188,3.261,189,3.261,190,3.261,191,3.261,192,2.749,193,1.553,194,2.024,195,2.024,196,1.553,197,2.386,198,1.553,199,1.553,200,1.368,201,1.553,202,2.037,203,1.553,204,1.368,205,1.553,206,1.368,207,1.553,208,1.368,209,1.527,210,1.553,211,1.368,212,2.024,213,1.368,214,1.553,215,1.368,216,1.553,217,1.368,218,1.171,219,1.553,220,1.368,221,1.553,222,1.368,223,1.553,224,1.368,225,1.412,226,1.553,227,1.368,228,1.553,229,1.368,230,1.553,231,1.368,232,1.208,233,1.368,234,1.553,235,1.368,236,1.457,237,1.553,238,1.368,239,1.553,240,1.368,241,1.553,242,1.368,243,1.553,244,1.368,245,1.553,246,1.368,247,1.553,248,1.553,647,4.188,648,6.943,649,6.241,650,4.789,651,4.789]],["title/modules/DefaultModule.html",[371,2.16,652,2.817]],["body/modules/DefaultModule.html",[3,0.181,4,0.163,5,0.145,18,0.012,20,0.181,21,0.01,22,0.01,74,0.756,75,0.657,87,0.683,176,2.302,202,2.373,288,2.782,328,2.475,373,2.672,374,3.243,377,3.521,378,2.901,380,3.851,385,3.851,386,3.03,390,3.678,392,3.851,411,3.03,622,3.851,627,5.144,652,5.66,653,5.076,654,5.076,655,5.076,656,5.804,657,5.804,658,5.804,659,4.797,660,3.952]],["title/interfaces/Diner.html",[0,0.564,661,1.983]],["body/interfaces/Diner.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.898,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,3.991,662,2.66,663,3.939,664,3.939,665,2.038,666,3.231,667,3.231,668,3.231,669,3.231,670,3.231,671,3.231,672,3.231,673,2.779,674,3.794,675,4.079,676,2.66]],["title/interfaces/ErrorDataHttp.html",[0,0.564,677,3.021]],["body/interfaces/ErrorDataHttp.html",[0,0.744,2,1.66,3,0.17,4,0.153,5,0.136,8,0.278,9,1.099,16,1.775,17,0.544,18,0.012,20,0.212,21,0.009,22,0.009,31,1.377,36,2.51,41,0.944,54,1.889,56,2.272,74,0.679,75,0.618,76,2.02,78,1.714,85,2.02,86,1.889,87,0.642,89,1.217,99,3.39,140,1.828,171,1.659,178,1.42,259,3.985,261,3.716,311,2.51,585,3.301,610,4.322,677,5.637,678,4.322,679,3.301,680,4.322,681,7.177,682,5.143,683,3.716,684,3.133,685,4.773,686,4.773,687,4.773,688,4.773,689,5.932,690,4.322,691,4.773,692,4.773,693,4.773,694,4.773,695,4.773]],["title/injectables/ErrorHttpService.html",[31,0.84,684,2.375]],["body/injectables/ErrorHttpService.html",[0,0.668,3,0.153,4,0.137,5,0.122,8,0.25,9,1.026,11,0.533,16,1.707,17,0.508,18,0.012,20,0.198,21,0.009,22,0.009,31,1.286,33,1.943,35,1.061,36,2.913,41,1.215,44,1.245,46,1.059,47,0.621,52,1.876,54,2.192,55,0.992,56,2.351,74,0.646,75,0.555,76,1.813,78,1.538,85,1.813,86,1.695,87,0.576,89,1.092,99,3.165,140,1.641,171,1.815,172,2.192,173,2.266,178,1.827,259,4.625,261,4.313,311,2.746,585,3.83,610,5.016,677,5.125,678,6.233,679,4.76,680,3.879,681,6.884,682,5.003,683,3.336,684,3.636,685,6.139,686,5.539,687,6.139,688,5.539,689,6.49,690,5.016,691,5.539,692,6.139,693,4.284,694,6.49,695,4.284,696,6.334,697,4.899,698,4.899,699,4.899,700,4.899]],["title/components/FooterComponent.html",[148,0.45,204,1.182]],["body/components/FooterComponent.html",[3,0.144,4,0.13,5,0.115,8,0.235,18,0.012,20,0.144,21,0.009,22,0.009,35,1.02,41,1.18,44,0.987,47,0.773,55,0.723,68,1.404,74,0.425,75,0.523,87,0.543,89,1.358,133,1.687,148,0.742,149,1.404,150,1.913,151,1.497,152,1.45,153,1.497,154,1.497,156,2.211,157,1.497,158,2.711,159,2.626,160,1.976,162,1.976,165,2.352,171,1.49,193,1.497,194,1.976,195,1.976,196,1.497,197,2.352,198,1.497,199,1.497,200,1.319,201,1.497,202,1.278,203,1.497,204,2.072,205,1.497,206,1.319,207,1.497,208,1.319,209,1.49,210,1.497,211,1.319,212,1.976,213,1.319,214,1.497,215,1.319,216,1.497,217,1.319,218,1.129,219,1.497,220,1.319,221,1.497,222,1.319,223,1.497,224,1.319,225,1.361,226,1.497,227,1.319,228,1.497,229,1.319,230,1.497,231,1.319,232,1.165,233,1.319,234,1.497,235,1.319,236,1.404,237,1.497,238,1.319,239,1.497,240,1.319,241,1.497,242,1.319,243,1.497,244,1.319,245,1.497,246,1.319,247,1.497,248,1.497,330,2.524,334,2.598,353,3.143,356,3.331,358,3.497,701,4.037,702,5.964,703,6.82,704,6.093,705,4.616,706,4.616,707,6.093,708,6.093,709,6.093,710,6.093,711,6.093,712,4.616,713,2.954,714,2.792,715,4.037,716,3.656,717,2.65,718,3.143,719,4.037,720,2.41,721,4.616]],["title/interfaces/Franchisee.html",[0,0.564,209,1.012]],["body/interfaces/Franchisee.html",[0,0.722,2,1.611,3,0.165,4,0.149,5,0.132,8,0.27,9,1.078,11,0.942,16,1.913,17,0.671,18,0.012,19,2.524,20,0.165,21,0.009,22,0.009,23,4.508,28,2.323,47,0.969,57,6.048,66,2.733,74,0.613,209,1.628,620,4.619,621,4.384,722,4.631,723,6.679,724,6.048,725,6.679,726,6.679,727,5.296,728,5.296]],["title/components/FranchiseeComponent.html",[148,0.45,206,1.182]],["body/components/FranchiseeComponent.html",[3,0.064,4,0.057,5,0.051,8,0.104,9,0.539,11,0.581,16,0.765,17,0.599,18,0.012,19,1.689,20,0.064,21,0.005,22,0.005,23,3.442,28,1.477,35,0.557,36,1.558,41,0.576,44,1.25,46,1.155,47,0.766,53,0.941,55,0.897,64,2.786,68,0.622,72,1.865,74,0.63,75,0.231,83,0.905,87,0.241,89,0.456,96,0.756,122,0.98,133,0.922,140,0.685,148,0.458,149,0.622,150,1.045,151,0.663,152,1.322,153,0.663,154,0.663,156,1.365,157,0.663,158,2.478,159,2.4,160,1.079,162,1.079,165,1.574,171,1.828,172,1.152,173,2.05,177,0.905,178,1.263,182,2.13,193,0.663,194,1.079,195,1.079,196,0.663,197,1.574,198,0.663,199,0.663,200,0.584,201,0.663,202,0.566,203,0.663,204,0.584,205,0.663,206,1.386,207,0.663,208,0.584,209,1.963,210,0.663,211,0.951,212,1.079,213,0.584,214,0.663,215,0.584,216,0.663,217,0.584,218,0.5,219,0.663,220,0.584,221,0.663,222,0.584,223,0.663,224,0.584,225,0.603,226,0.663,227,0.584,228,0.663,229,0.584,230,0.663,231,0.584,232,0.516,233,0.584,234,0.663,235,0.584,236,0.622,237,0.663,238,0.584,239,0.663,240,0.584,241,0.663,242,0.584,243,0.663,244,0.584,245,0.663,246,0.584,247,0.663,248,0.663,263,2.302,303,2.181,311,1.796,316,2.991,317,2.746,318,2.991,321,3.349,334,3.268,345,2.863,353,1.392,354,1.493,355,1.82,357,1.117,359,2.326,360,2.921,361,2.786,362,3.287,363,3.288,364,2.546,365,2.546,417,1.595,442,2.13,445,2.13,491,1.173,585,1.236,621,1.911,665,2.411,720,3.153,729,1.788,730,6.112,731,2.998,732,4.211,733,3.901,734,2.867,735,3.901,736,3.737,737,3.682,738,3.334,739,2.546,740,3.682,741,3.329,742,4.211,743,3.682,744,2.694,745,4.986,746,3.334,747,3.544,748,4.211,749,3.682,750,3.682,751,4.854,752,2.911,753,2.911,754,1.788,755,3.288,756,3.652,757,2.417,758,2.534,759,3.329,760,2.044,761,3.329,762,2.044,763,2.044,764,2.911,765,2.044,766,2.911,767,2.044,768,3.329,769,2.044,770,2.044,771,2.044,772,2.044,773,2.044,774,2.044,775,2.044,776,2.044,777,2.044,778,3.075,779,2.044,780,2.044,781,2.044,782,2.044,783,2.044,784,2.044,785,4.211,786,3.682,787,2.044,788,1.788,789,1.308,790,1.308,791,1.619,792,1.619,793,1.788,794,1.493,795,1.308,796,1.493,797,1.493,798,2.044,799,2.044,800,2.044,801,1.022,802,1.82,803,2.044,804,2.044,805,2.044,806,1.788,807,2.044,808,2.044,809,1.117,810,1.173,811,1.308,812,1.308,813,1.788,814,1.619,815,1.392,816,1.392,817,1.392,818,4.673,819,1.788,820,1.788,821,2.911,822,4.245,823,4.245,824,2.911,825,2.911,826,1.788,827,3.329,828,2.694,829,1.788,830,2.044,831,2.044,832,5.694,833,2.636,834,2.911,835,2.636,836,2.911,837,2.267,838,2.694,839,2.911,840,3.334,841,2.546,842,1.788,843,1.788,844,2.431,845,2.044,846,2.786,847,2.786,848,2.867,849,2.786,850,2.867,851,2.653,852,3.067,853,2.694,854,2.431,855,1.788,856,1.788,857,4.245,858,1.619,859,1.788,860,2.044,861,2.044,862,1.619,863,1.788,864,1.392,865,1.788,866,1.308,867,1.788,868,1.392,869,1.493,870,1.392,871,2.267,872,1.392,873,1.392,874,1.392,875,2.267,876,2.044,877,1.788,878,1.493,879,1.308,880,1.493,881,1.911,882,2.013,883,3.132,884,2.044,885,2.911,886,1.236,887,1.619,888,1.392,889,2.013,890,2.636,891,2.431,892,3.329,893,2.911,894,2.911,895,2.911,896,2.911,897,2.911,898,2.911,899,2.911,900,2.431,901,2.636,902,2.431,903,2.431,904,3.329,905,2.911,906,2.911,907,1.493,908,1.392,909,1.392,910,1.308,911,2.911,912,2.911,913,1.493,914,1.911,915,1.308,916,1.788,917,1.619,918,2.431,919,1.619]],["title/components/FranchiseeDetailComponent.html",[148,0.45,208,1.182]],["body/components/FranchiseeDetailComponent.html",[3,0.081,4,0.072,5,0.064,8,0.132,9,0.649,11,0.281,17,0.576,18,0.012,19,1.181,20,0.081,21,0.006,22,0.006,23,3.469,28,1.685,35,0.671,36,2.348,41,0.693,44,1.267,46,0.558,47,0.623,55,1.037,68,0.785,74,0.684,75,0.292,78,0.811,87,0.304,89,1.095,96,1.818,133,1.11,148,0.535,149,0.785,150,1.258,151,0.837,152,0.811,153,0.837,154,0.837,156,1.593,157,0.837,158,2.56,159,2.48,160,1.299,162,1.299,165,1.796,171,1.863,172,0.893,173,1.434,176,1.024,177,1.143,178,1.904,193,0.837,194,1.299,195,1.299,196,0.837,197,1.796,198,0.837,199,0.837,200,0.737,201,0.837,202,0.715,203,0.837,204,0.737,205,0.837,206,0.737,207,0.837,208,1.582,209,1.913,210,0.837,211,0.737,212,1.299,213,0.737,214,0.837,215,0.737,216,0.837,217,0.737,218,0.631,219,0.837,220,0.737,221,0.837,222,0.737,223,0.837,224,0.737,225,0.761,226,0.837,227,0.737,228,0.837,229,0.737,230,0.837,231,0.737,232,0.651,233,0.737,234,0.837,235,0.737,236,0.785,237,0.837,238,0.737,239,0.837,240,0.737,241,0.837,242,0.737,243,0.837,244,0.737,245,0.837,246,0.737,247,0.837,248,0.837,276,4.843,303,1.342,353,1.758,354,1.885,355,2.191,357,1.411,359,1.237,360,2.191,361,1.482,362,2.092,389,1.061,665,2.536,666,1.143,667,1.143,668,1.775,669,1.775,670,1.143,671,1.143,672,1.143,674,1.143,720,1.348,731,3.307,736,1.482,743,4.296,745,3.89,754,2.257,755,3.642,757,2.82,758,2.891,786,2.257,791,2.044,792,2.044,793,2.257,794,1.885,795,1.652,809,2.686,810,2.82,812,1.652,818,2.257,838,1.652,840,2.044,841,1.561,851,2.191,857,3.505,858,2.044,893,3.505,894,3.505,895,3.505,896,3.505,897,3.505,898,3.505,899,3.505,905,3.505,906,3.505,907,1.885,908,1.758,909,1.758,910,1.652,911,3.505,912,3.505,913,1.885,914,2.3,915,1.652,916,2.257,917,2.044,918,2.926,919,2.044,920,6.238,921,6.238,922,2.257,923,4.913,924,4.008,925,4.913,926,5.538,927,4.843,928,5.538,929,5.538,930,3.544,931,4.843,932,4.835,933,2.971,934,3.349,935,3.89,936,4.008,937,2.581,938,2.581,939,2.581,940,2.581,941,2.581,942,2.581,943,2.581,944,2.581,945,2.581,946,2.581,947,2.581,948,2.581,949,2.581,950,4.913,951,2.581,952,2.581,953,1.561,954,2.257,955,2.581,956,2.581,957,2.581,958,4.008,959,2.581,960,2.581,961,2.581,962,2.581,963,2.581,964,2.581,965,2.581,966,1.561,967,1.561,968,2.581,969,4.004,970,2.581,971,2.581,972,2.581,973,2.581,974,2.581,975,2.581,976,2.581,977,2.581,978,2.581,979,2.581,980,2.581,981,2.581,982,2.581,983,2.581,984,2.581,985,2.581,986,2.581,987,2.581,988,2.581,989,2.581,990,2.581,991,2.581,992,2.581,993,2.581,994,2.581,995,2.581,996,2.581,997,2.581,998,2.581,999,2.581,1000,2.581,1001,2.581,1002,2.581,1003,2.581,1004,2.581,1005,2.581,1006,2.581,1007,2.581,1008,2.581,1009,2.581,1010,2.257,1011,2.581,1012,4.008,1013,4.008,1014,4.008,1015,4.008,1016,4.008,1017,4.008,1018,4.008,1019,4.008,1020,4.008,1021,4.008,1022,4.008,1023,4.008,1024,4.008,1025,4.008,1026,4.008,1027,4.008,1028,4.008,1029,4.008,1030,4.008,1031,4.008,1032,4.008,1033,4.008,1034,4.008,1035,4.008]],["title/components/FranchiseeDialogComponent.html",[148,0.45,211,1.182]],["body/components/FranchiseeDialogComponent.html",[3,0.075,4,0.068,5,0.06,8,0.123,9,0.616,11,0.263,17,0.576,18,0.012,20,0.075,21,0.005,22,0.005,23,3.53,25,1.912,26,1.763,27,1.912,29,1.912,30,1.912,32,4.715,35,0.637,36,2.704,41,0.658,44,1.261,46,0.522,47,0.677,53,2.841,55,1.012,66,0.864,68,0.734,72,2.963,74,0.682,75,0.273,87,0.284,96,1.407,122,1.823,133,1.053,148,0.512,149,0.734,150,1.194,151,0.783,152,0.758,153,0.783,154,0.783,156,1.526,157,0.783,158,2.538,159,2.458,160,1.233,162,1.233,165,1.731,171,1.918,172,0.835,173,0.864,177,1.069,178,1.953,193,0.783,194,1.233,195,1.233,196,0.783,197,1.731,198,0.783,199,0.783,200,0.69,201,0.783,202,0.668,203,0.783,204,0.69,205,0.783,206,0.69,207,0.783,208,0.69,209,1.905,210,0.783,211,1.525,212,1.233,213,0.69,214,0.783,215,0.69,216,0.783,217,0.69,218,0.59,219,0.783,220,0.69,221,0.783,222,0.69,223,0.783,224,0.69,225,0.711,226,0.783,227,0.69,228,0.783,229,0.69,230,0.783,231,0.69,232,0.609,233,0.69,234,0.783,235,0.69,236,0.734,237,0.783,238,0.69,239,0.783,240,0.69,241,0.783,242,0.69,243,0.783,244,0.69,245,0.783,246,0.69,247,0.783,248,0.783,283,1.32,288,1.823,303,1.274,311,2.283,330,2.573,345,2.352,389,0.992,436,3.011,442,1.545,491,1.386,492,1.912,493,2.111,620,1.46,621,2.701,665,2.363,724,1.912,731,2.973,739,2.3,747,3.899,755,3.706,757,2.701,758,2.788,778,4.241,789,1.545,790,1.545,791,1.912,792,1.912,794,1.763,795,1.545,796,5.724,801,1.206,802,1.32,809,2.573,810,2.701,811,3.011,812,1.545,813,3.326,814,1.912,815,2.589,816,2.589,817,1.644,832,4.669,844,3.436,846,2.183,847,2.183,849,2.183,851,2.079,852,2.183,858,1.912,859,4.115,881,2.183,882,2.3,883,3.658,885,3.326,886,2.3,889,2.3,890,3.012,891,2.777,920,6.208,930,3.417,933,2.846,934,3.229,953,1.46,954,2.111,966,1.46,967,1.46,969,4.163,1010,4.115,1036,1.912,1037,4.115,1038,3.326,1039,5.08,1040,4.706,1041,4.669,1042,3.417,1043,4.228,1044,2.111,1045,5.08,1046,3.326,1047,2.414,1048,2.414,1049,2.414,1050,2.414,1051,2.414,1052,2.414,1053,2.414,1054,2.111,1055,2.111,1056,2.414,1057,2.111,1058,2.414,1059,2.414,1060,2.111,1061,2.414,1062,2.111,1063,2.414,1064,4.115,1065,2.111,1066,2.414,1067,2.414,1068,2.414,1069,2.414,1070,2.414,1071,1.545,1072,2.414,1073,2.414,1074,2.414,1075,1.912,1076,2.414,1077,2.414,1078,2.414,1079,2.414,1080,2.414,1081,2.414,1082,2.414,1083,2.414,1084,2.414,1085,2.414,1086,2.414,1087,2.414,1088,2.414,1089,2.414,1090,2.414,1091,2.414,1092,2.414,1093,2.414,1094,2.414,1095,2.414,1096,2.414,1097,2.414,1098,2.414,1099,2.414,1100,2.414,1101,2.414,1102,2.414,1103,3.803,1104,2.111,1105,2.414,1106,2.414,1107,3.803,1108,2.414,1109,2.414,1110,2.111,1111,2.414,1112,2.589,1113,3.326,1114,2.111,1115,1.644,1116,2.414,1117,2.414,1118,2.111,1119,1.763,1120,2.111,1121,5.298,1122,4.886,1123,5.339,1124,2.183,1125,3.803,1126,3.803,1127,3.803,1128,3.803,1129,3.803,1130,3.011,1131,1.545,1132,2.433,1133,1.545,1134,1.545,1135,1.545,1136,3.011,1137,3.011,1138,3.011,1139,2.183,1140,2.079,1141,1.545,1142,1.545,1143,1.46,1144,1.545,1145,1.545]],["title/modules/FranchiseeModule.html",[371,2.16,1146,3.021]],["body/modules/FranchiseeModule.html",[3,0.135,4,0.121,5,0.108,18,0.012,20,0.135,21,0.008,22,0.008,28,1.317,74,0.793,75,0.49,76,1.602,87,0.509,109,4.364,111,2.77,112,2.618,140,1.45,148,0.635,176,1.717,180,1.78,206,2.22,208,2.22,209,1.428,211,2.257,328,1.846,373,1.993,374,2.687,377,2.917,378,2.164,380,3.191,385,3.191,386,2.26,387,3.735,388,3.53,389,1.78,390,3.048,391,4.226,392,2.367,396,3.53,397,2.618,398,3.975,399,2.948,400,3.975,401,2.948,409,3.191,411,2.26,412,2.618,417,2.798,622,3.191,630,4.262,631,3.161,659,3.975,660,2.948,755,4.364,790,2.77,794,3.161,796,3.161,797,3.161,921,3.428,1146,6.077,1147,3.786,1148,3.786,1149,3.786,1150,4.329,1151,5.105,1152,4.262,1153,4.262,1154,4.262,1155,3.161,1156,4.262,1157,3.161,1158,4.262,1159,3.161,1160,4.262,1161,3.161,1162,4.262,1163,3.161,1164,4.262,1165,3.161,1166,5.105,1167,5.105,1168,3.786,1169,4.262,1170,3.161,1171,5.105,1172,3.786,1173,5.105,1174,3.786,1175,3.161,1176,3.161,1177,4.329,1178,4.329,1179,3.161,1180,3.161,1181,3.161]],["title/interfaces/FranchiseeRecipe.html",[0,0.564,1182,2.817]],["body/interfaces/FranchiseeRecipe.html",[0,0.817,2,1.822,3,0.187,4,0.168,5,0.149,8,0.305,9,1.163,11,0.918,17,0.639,18,0.012,19,2.503,20,0.187,21,0.01,22,0.01,28,2.425,74,0.551,232,2.128,1182,4.888,1183,5.238,1184,5.238,1185,5.82,1186,5.427,1187,5.238]],["title/injectables/FranchiseeService.html",[31,0.84,755,2.375]],["body/injectables/FranchiseeService.html",[3,0.089,4,0.08,5,0.071,8,0.146,11,0.769,17,0.566,18,0.012,19,2.134,20,0.089,21,0.006,22,0.006,28,2.088,31,0.879,33,1.132,35,0.725,36,3.044,41,0.749,42,1.427,43,2.918,44,1.173,46,1.528,47,0.897,48,2.075,50,4.378,52,2.53,53,3.041,54,2.375,55,1.238,56,2.665,64,3.602,72,3.206,74,0.651,75,0.323,76,1.057,77,1.314,78,0.897,80,1.264,81,1.368,83,2.316,84,1.727,85,1.057,86,0.988,87,0.336,89,0.637,90,4.058,92,2.273,93,3.448,96,2.444,97,2.619,99,3.533,101,3.347,104,3.347,105,2.085,107,2.771,171,0.698,178,1.127,209,2.072,232,2.06,311,1.057,481,1.827,483,2.771,490,1.827,537,3.994,665,1.658,679,1.727,682,2.619,684,3.939,745,2.261,755,2.485,814,4.623,887,2.261,1110,4.575,1182,5.025,1186,1.944,1187,2.497,1188,2.497,1189,5.231,1190,5.231,1191,5.231,1192,5.838,1193,4.33,1194,5.838,1195,2.855,1196,2.855,1197,2.855,1198,3.787,1199,3.163,1200,4.33,1201,2.855,1202,5.838,1203,2.855,1204,2.855,1205,4.263,1206,2.855,1207,2.855,1208,5.838,1209,2.855,1210,2.855,1211,2.855,1212,4.575,1213,4.33,1214,4.33,1215,2.855,1216,2.855,1217,2.855,1218,2.855,1219,2.497,1220,2.085,1221,5.231,1222,2.855,1223,6.182,1224,6.862,1225,6.182,1226,4.275,1227,3.429,1228,4.33,1229,2.855,1230,2.855,1231,2.855,1232,2.085,1233,2.855,1234,2.855,1235,2.855,1236,2.855,1237,2.855,1238,4.33,1239,2.855,1240,2.855,1241,2.855,1242,2.855,1243,2.855,1244,2.085,1245,2.085]],["title/interfaces/Friday.html",[0,0.564,670,1.832]],["body/interfaces/Friday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.231,668,3.231,669,3.231,670,3.388,671,3.231,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/components/HomeComponent.html",[148,0.45,213,1.182]],["body/components/HomeComponent.html",[3,0.143,4,0.129,5,0.115,8,0.234,18,0.012,20,0.143,21,0.008,22,0.008,35,1.016,41,1.177,44,0.983,47,0.77,55,0.719,68,1.396,74,0.559,75,0.52,87,0.54,89,1.353,133,1.681,148,0.74,149,1.396,150,1.906,151,1.488,152,1.441,153,1.488,154,1.488,156,2.205,157,1.488,158,2.71,159,2.625,160,1.968,162,1.968,165,2.346,171,1.485,187,2.937,188,3.125,189,3.125,190,3.125,191,3.125,192,2.635,193,1.488,194,1.968,195,1.968,196,1.488,197,2.346,198,1.488,199,1.488,200,1.311,201,1.488,202,1.271,203,1.488,204,1.311,205,1.488,206,1.311,207,1.488,208,1.311,209,1.485,210,1.488,211,1.311,212,1.968,213,2.067,214,1.488,215,1.311,216,1.488,217,1.311,218,1.123,219,1.488,220,1.311,221,1.488,222,1.311,223,1.488,224,1.311,225,1.353,226,1.488,227,1.311,228,1.488,229,1.311,230,1.488,231,1.311,232,1.158,233,1.311,234,1.488,235,1.311,236,1.396,237,1.488,238,1.311,239,1.488,240,1.311,241,1.488,242,1.311,243,1.488,244,1.311,245,1.488,246,1.311,247,1.488,248,1.488,436,2.937,488,3.351,489,4.014,883,3.318,1246,4.014,1247,6.07,1248,6.801,1249,6.07,1250,4.59,1251,4.59,1252,3.635,1253,5.308,1254,6.07,1255,6.07,1256,6.07,1257,5.308,1258,5.308,1259,6.07,1260,6.07,1261,6.07]],["title/modules/HomeModule.html",[371,2.16,1262,3.021]],["body/modules/HomeModule.html",[3,0.169,4,0.152,5,0.135,18,0.012,20,0.169,21,0.009,22,0.009,74,0.778,75,0.613,87,0.637,140,1.813,148,0.589,176,2.147,213,2.436,328,2.308,373,2.492,374,3.106,377,3.372,378,2.705,380,3.689,385,3.689,386,2.826,388,4.081,389,2.225,390,3.523,391,4.705,392,2.959,396,4.081,397,3.273,398,4.594,399,3.685,400,4.594,401,3.685,409,2.959,411,2.826,412,3.273,627,4.927,628,5.901,629,4.733,630,4.927,631,3.952,1262,5.981,1263,4.733,1264,4.733,1265,4.733,1266,5.412,1267,6.748,1268,5.412,1269,5.412]],["title/interceptors/HttpErrorInterceptor.html",[108,3.276,1270,3.276]],["body/interceptors/HttpErrorInterceptor.html",[3,0.134,4,0.121,5,0.107,8,0.219,11,0.716,17,0.527,18,0.012,20,0.134,21,0.008,22,0.008,31,1.18,35,0.973,41,0.744,44,1.066,46,1.422,47,0.835,48,2.785,54,1.488,55,1.104,56,2.466,74,0.649,75,0.487,76,1.591,78,1.35,83,3.261,87,0.506,88,2.061,89,0.959,92,1.825,110,3.761,116,5.756,121,6.165,122,3.379,123,6.165,129,3.761,130,5.082,133,1.191,159,1.768,172,1.488,177,1.904,178,1.713,192,4.046,225,1.94,261,3.957,311,2.871,481,2.752,483,3.718,682,4.263,690,3.405,731,3.494,846,4.226,847,4.226,849,4.226,851,4.025,853,3.718,866,3.718,877,5.082,879,4.711,881,3.335,887,3.405,1232,5.376,1270,4.602,1271,6.165,1272,6.165,1273,3.761,1274,5.811,1275,4.3,1276,4.3,1277,5.811,1278,4.3,1279,5.811,1280,5.811,1281,5.811,1282,5.811,1283,5.811,1284,5.811,1285,5.082,1286,5.811,1287,4.3,1288,4.3,1289,5.082,1290,4.3,1291,4.3,1292,4.3,1293,3.405,1294,4.3,1295,3.14,1296,6.439,1297,6.582,1298,7.758,1299,4.3,1300,5.811,1301,5.811,1302,5.811,1303,5.811,1304,5.582,1305,4.3,1306,4.3,1307,4.3,1308,6.582,1309,4.3,1310,4.3,1311,5.082,1312,5.811,1313,4.3,1314,4.3,1315,4.3]],["title/interfaces/IngreType.html",[0,0.564,1316,2.16]],["body/interfaces/IngreType.html",[0,0.825,2,1.839,3,0.189,4,0.17,5,0.151,8,0.308,9,1.169,11,0.919,16,1.955,17,0.641,18,0.012,19,2.275,20,0.189,21,0.01,22,0.01,28,2.432,47,1.014,52,3.062,288,3.832,1316,3.769,1317,3.868,1318,4.787]],["title/interfaces/Ingredient.html",[0,0.564,218,1.012]],["body/interfaces/Ingredient.html",[0,0.808,2,1.802,3,0.185,4,0.166,5,0.148,8,0.302,9,1.155,11,0.916,16,1.759,17,0.636,18,0.012,19,2.255,20,0.185,21,0.01,22,0.01,28,2.416,47,1.007,74,0.545,90,3.399,218,1.872,303,2.563,1316,4.146,1319,5.179,1320,6.288,1321,5.081,1322,3.399,1323,3.238]],["title/components/IngredientComponent.html",[148,0.45,215,1.182]],["body/components/IngredientComponent.html",[3,0.055,4,0.049,5,0.044,8,0.089,9,0.475,11,0.481,17,0.596,18,0.012,19,1.303,20,0.055,21,0.004,22,0.004,28,1.15,35,0.491,41,0.508,44,1.231,46,0.955,47,0.716,54,0.607,55,0.995,68,0.534,74,0.52,75,0.199,83,0.777,86,0.607,87,0.206,89,0.391,96,1.086,122,1.812,133,0.812,140,0.588,148,0.411,149,0.534,150,0.921,151,0.569,152,1.187,153,0.569,154,0.569,156,1.226,157,0.569,158,2.416,159,2.341,160,0.951,162,0.951,164,1.998,165,1.433,171,1.833,172,1.309,173,1.581,177,0.777,178,1.54,180,2.022,182,1.877,193,0.569,194,0.951,195,0.951,196,0.569,197,1.595,198,0.569,199,0.569,200,0.501,201,0.569,202,0.486,203,0.569,204,0.501,205,0.569,206,0.501,207,0.569,208,0.501,209,0.718,210,0.569,211,0.501,212,0.951,213,0.501,214,0.569,215,1.263,216,0.569,217,0.501,218,1.911,219,0.569,220,0.501,221,0.569,222,0.501,223,0.569,224,0.501,225,0.517,226,0.569,227,0.501,228,0.569,229,0.501,230,0.569,231,0.501,232,0.443,233,0.501,234,0.569,235,0.501,236,0.534,237,0.569,238,0.501,239,0.569,240,0.501,241,0.569,242,0.501,243,0.569,244,0.501,245,0.569,246,0.501,247,0.569,248,0.569,303,1.983,304,2.5,311,2.276,316,2.568,317,2.357,318,2.568,321,3.688,330,2.907,333,2.308,334,2.903,345,0.877,348,1.061,355,0.959,356,0.959,357,2.907,358,1.007,359,2.948,360,1.604,361,1.684,362,1.532,363,1.007,364,2.287,366,3.053,389,0.721,417,1.406,445,1.122,585,1.774,713,3.613,714,2.287,716,1.389,717,2.537,718,3.349,720,2.948,731,2.832,734,1.998,735,2.575,736,3.531,739,2.287,744,2.42,746,2.995,756,3.72,801,0.877,802,0.959,809,2.067,810,2.171,811,2.42,828,2.42,837,1.194,838,1.877,841,3.72,846,3.053,847,3.053,848,2.575,849,3.053,850,2.575,851,2.907,852,2.171,853,2.42,864,1.194,866,1.122,868,1.194,869,1.281,870,1.194,871,1.998,872,1.194,873,1.194,874,1.194,875,1.998,878,1.281,879,2.42,880,2.761,881,2.171,882,2.287,883,2.689,886,2.287,888,1.194,889,3.216,900,2.142,901,2.323,902,2.142,903,2.142,908,1.998,909,1.194,910,1.122,914,2.537,918,3.227,919,2.323,930,2.828,933,2.287,934,2.673,953,1.061,966,1.061,967,1.061,969,1.061,1042,2.828,1071,2.42,1115,1.194,1119,1.281,1122,2.142,1124,1.007,1130,2.828,1131,1.122,1132,1.877,1133,1.122,1134,1.122,1135,1.122,1136,2.42,1137,2.42,1138,2.42,1139,1.684,1140,1.604,1141,1.122,1142,1.122,1143,1.061,1144,1.122,1145,1.122,1295,1.281,1316,2.568,1317,1.122,1320,4.211,1321,1.122,1322,1.007,1323,3.086,1324,4.626,1325,1.534,1326,3.781,1327,2.575,1328,2.761,1329,3.883,1330,2.934,1331,3.781,1332,3.866,1333,3.781,1334,3.307,1335,2.566,1336,3.5,1337,3.866,1338,2.934,1339,3.866,1340,4.42,1341,2.566,1342,1.754,1343,3.621,1344,3.844,1345,2.934,1346,2.934,1347,1.754,1348,1.754,1349,1.754,1350,1.754,1351,2.934,1352,1.754,1353,1.754,1354,1.754,1355,1.754,1356,1.754,1357,2.934,1358,1.754,1359,1.754,1360,1.754,1361,1.754,1362,1.754,1363,1.754,1364,1.754,1365,1.754,1366,1.754,1367,1.754,1368,1.754,1369,1.754,1370,2.934,1371,1.281,1372,1.534,1373,1.281,1374,1.194,1375,1.534,1376,1.534,1377,1.534,1378,4.471,1379,1.534,1380,1.534,1381,1.754,1382,1.754,1383,1.754,1384,3.307,1385,4.918,1386,2.566,1387,2.934,1388,2.934,1389,1.754,1390,1.754,1391,1.534,1392,2.934,1393,5.318,1394,3.5,1395,4.42,1396,1.534,1397,1.754,1398,1.534,1399,1.534,1400,3.307,1401,1.754,1402,1.534,1403,1.754,1404,1.389,1405,1.389,1406,1.389,1407,1.754,1408,2.934,1409,2.934,1410,2.566,1411,1.754,1412,1.754,1413,2.934,1414,2.934,1415,2.934,1416,2.934,1417,2.323,1418,2.566,1419,2.566,1420,1.754,1421,1.534,1422,3.5,1423,1.754,1424,1.754,1425,1.534,1426,1.389,1427,1.754,1428,1.754,1429,1.389,1430,1.389,1431,1.754,1432,1.754,1433,1.754,1434,2.934,1435,1.754,1436,1.534,1437,1.754,1438,1.754,1439,1.281,1440,1.389,1441,1.754,1442,1.754,1443,1.754,1444,1.754,1445,2.566,1446,1.754,1447,1.754,1448,1.754,1449,1.754,1450,1.534,1451,3.307,1452,1.534,1453,3.307,1454,1.534,1455,1.534,1456,1.389,1457,1.534,1458,1.534,1459,1.534,1460,4.301,1461,2.323,1462,1.534,1463,5.705,1464,3.307,1465,3.227,1466,1.534,1467,2.566,1468,4.651,1469,2.566,1470,3.307,1471,1.534,1472,1.281,1473,1.534,1474,1.534,1475,1.534,1476,3.307,1477,1.281,1478,1.281,1479,1.534,1480,1.534,1481,1.389,1482,1.389,1483,1.534,1484,1.389,1485,1.534,1486,3.866,1487,1.389,1488,1.281,1489,1.534,1490,2.934,1491,2.323]],["title/injectables/IngredientService.html",[31,0.84,1343,2.817]],["body/injectables/IngredientService.html",[3,0.132,4,0.119,5,0.106,8,0.216,11,0.762,17,0.561,18,0.012,19,1.924,20,0.132,21,0.008,22,0.008,28,1.749,31,1.167,33,1.679,35,0.963,36,3.033,41,0.732,42,2.115,43,3.5,44,1.186,46,1.513,47,0.888,48,2.755,50,4.567,52,2.5,53,2.646,54,2.424,55,1.231,56,2.669,60,5.17,64,3.747,72,3.243,74,0.695,75,0.479,76,1.566,77,1.948,78,1.329,80,1.874,81,2.028,83,1.874,84,2.559,85,1.566,86,1.465,87,0.498,88,2.028,89,0.944,90,4.02,92,2.199,93,3.656,95,4.481,96,2.416,97,2.559,99,3.262,101,2.708,104,4.177,107,2.708,218,2.04,232,1.45,365,3.476,1186,3.914,1199,3.948,1205,4.767,1227,3.351,1323,3.143,1335,5.027,1341,5.027,1343,3.914,1371,3.09,1492,3.701,1493,5.748,1494,7.003,1495,4.232,1496,5.748,1497,4.232,1498,5.748,1499,4.232,1500,6.528,1501,5.709,1502,4.232,1503,5.748,1504,4.232,1505,5.748,1506,4.232,1507,4.232,1508,3.701,1509,5.748,1510,4.232,1511,3.09,1512,4.232]],["title/components/IngredientTypeComponent.html",[148,0.45,217,1.182]],["body/components/IngredientTypeComponent.html",[3,0.074,4,0.067,5,0.059,8,0.121,9,0.609,11,0.507,17,0.617,18,0.012,19,1.108,20,0.074,21,0.005,22,0.005,35,0.629,41,0.65,44,1.237,46,1.007,47,0.778,52,2.209,55,1.073,68,0.723,74,0.531,75,0.269,83,1.053,87,0.28,89,0.53,96,1.391,122,1.14,133,1.041,148,0.507,149,0.723,150,1.18,151,0.771,152,1.463,153,0.771,154,0.771,156,1.511,157,0.771,158,2.533,159,2.453,160,1.219,162,1.219,165,1.717,171,1.913,172,1.301,173,1.345,177,1.053,178,1.671,180,1.916,193,0.771,194,1.219,195,1.219,196,0.771,197,1.717,198,0.771,199,0.771,200,0.679,201,0.771,202,0.658,203,0.771,204,0.679,205,0.771,206,0.679,207,0.771,208,0.679,209,0.919,210,0.771,211,0.679,212,1.219,213,0.679,214,0.771,215,0.679,216,0.771,217,1.513,218,1.676,219,0.771,220,0.679,221,0.771,222,0.679,223,0.771,224,0.679,225,0.701,226,0.771,227,0.679,228,0.771,229,0.679,230,0.771,231,0.679,232,0.6,233,0.679,234,0.771,235,0.679,236,0.723,237,0.771,238,0.679,239,0.771,240,0.679,241,0.771,242,0.679,243,0.771,244,0.679,245,0.771,246,0.679,247,0.771,248,0.771,295,1.365,303,1.774,304,2.554,311,1.725,316,2.433,317,2.233,318,2.433,321,2.233,330,2.548,334,2.738,345,1.188,359,2.233,389,0.978,417,1.801,585,1.438,720,2.433,731,3.154,736,2.675,738,1.883,739,2.818,744,2.982,756,4.143,801,1.188,802,1.3,809,2.548,810,2.675,811,2.982,817,1.619,828,1.522,841,3.708,846,3.039,847,3.039,848,3.173,849,3.039,850,3.173,851,2.895,852,2.675,853,2.405,854,2.744,862,1.883,864,1.619,866,1.522,868,1.619,870,1.619,871,2.559,872,1.619,873,1.619,874,1.619,875,2.559,879,2.982,880,3.403,881,1.365,882,1.438,883,3.746,886,1.438,888,1.619,889,3.202,902,2.744,903,2.744,930,3.388,933,2.818,934,3.202,953,1.438,966,1.438,967,1.438,969,1.438,1042,3.388,1071,2.982,1112,2.559,1115,2.559,1121,2.976,1122,2.744,1130,2.982,1131,1.522,1132,2.405,1133,1.522,1134,1.522,1135,1.522,1136,2.982,1137,2.982,1138,2.982,1139,2.157,1140,2.055,1141,1.522,1142,1.522,1143,1.438,1144,1.522,1145,1.522,1316,4.109,1317,1.522,1321,2.982,1322,1.365,1324,4.659,1327,3.173,1328,3.403,1329,3.403,1334,5.043,1336,4.193,1337,4.631,1344,4.175,1373,1.736,1374,5.287,1375,2.08,1376,2.08,1379,2.08,1380,5.043,1386,2.08,1394,4.193,1400,2.08,1404,1.883,1405,1.883,1406,1.883,1417,4.193,1439,3.403,1491,2.976,1513,6.738,1514,2.08,1515,4.66,1516,4.075,1517,3.758,1518,4.66,1519,3.287,1520,5.295,1521,5.295,1522,3.287,1523,2.378,1524,3.758,1525,3.758,1526,2.378,1527,2.378,1528,2.378,1529,2.378,1530,2.378,1531,2.378,1532,2.378,1533,2.378,1534,3.758,1535,2.378,1536,2.378,1537,2.378,1538,2.378,1539,2.378,1540,2.378,1541,2.378,1542,2.378,1543,5.295,1544,4.66,1545,2.378,1546,2.378,1547,2.378,1548,4.631,1549,2.378,1550,2.378,1551,4.66,1552,2.378,1553,2.378,1554,2.08,1555,2.378,1556,5.295,1557,2.378,1558,3.758,1559,3.758,1560,3.758]],["title/injectables/IngredientTypeService.html",[31,0.84,1344,2.817]],["body/injectables/IngredientTypeService.html",[3,0.12,4,0.108,5,0.096,8,0.196,11,0.731,17,0.659,18,0.012,19,1.828,20,0.12,21,0.008,22,0.008,28,1.636,31,1.092,33,1.524,35,0.9,36,2.984,41,0.93,42,1.92,43,3.358,44,1.146,46,1.452,47,0.852,48,2.577,50,3.752,52,1.471,53,2.856,54,1.861,55,1.179,56,2.614,60,4.913,64,3.561,72,2.976,74,0.693,75,0.435,76,1.422,77,1.768,78,1.206,80,1.701,81,1.841,83,1.701,84,2.323,85,1.422,86,1.329,87,0.452,89,0.856,90,3.857,92,2.412,93,3.509,96,2.487,99,3.1,104,3.441,107,2.458,178,1.399,218,1.879,311,1.422,481,2.458,483,4.526,537,4.064,679,2.323,682,4.644,684,4.32,1199,3.752,1220,2.805,1226,4.064,1244,4.907,1245,4.907,1316,3.509,1321,3.97,1322,2.205,1323,3.867,1344,3.661,1373,5.353,1374,4.991,1501,5.425,1511,2.805,1519,4.702,1522,4.702,1561,3.359,1562,5.377,1563,6.72,1564,3.841,1565,5.377,1566,3.841,1567,5.377,1568,3.841,1569,6.203,1570,5.377,1571,5.377,1572,3.841,1573,5.377,1574,5.377,1575,5.377,1576,3.841,1577,3.841,1578,5.377,1579,3.841,1580,3.841,1581,5.377,1582,3.841,1583,3.841]],["title/guards/IsAuthenticatedGuard.html",[1584,3.276,1585,3.276]],["body/guards/IsAuthenticatedGuard.html",[3,0.167,4,0.151,5,0.134,8,0.274,11,0.73,17,0.538,18,0.012,20,0.167,21,0.009,22,0.009,31,1.363,35,1.124,41,0.929,44,1.087,46,1.451,47,0.851,55,0.841,56,2.453,74,0.706,75,0.608,78,1.685,85,1.986,86,1.857,87,0.631,88,2.572,92,1.685,117,3.919,118,4.028,126,4.901,133,1.486,140,1.797,168,4.693,176,2.129,178,1.397,263,4.004,303,2.453,432,5.8,484,6.077,935,5.315,1585,5.315,1586,4.25,1587,5.8,1588,6.405,1589,4.693,1590,6.91,1591,5.367,1592,4.693,1593,6.711,1594,5.367,1595,6.405,1596,4.693,1597,4.693,1598,5.367]],["title/guards/IsUnauthenticatedGuard.html",[1584,3.276,1599,3.276]],["body/guards/IsUnauthenticatedGuard.html",[3,0.167,4,0.151,5,0.134,8,0.274,11,0.73,17,0.538,18,0.012,20,0.167,21,0.009,22,0.009,31,1.363,35,1.124,41,0.929,44,1.087,46,1.451,47,0.851,55,0.841,56,2.453,74,0.706,75,0.608,78,1.685,85,1.986,86,1.857,87,0.631,88,2.572,92,1.685,117,3.919,118,4.028,126,4.901,133,1.486,140,1.797,168,4.693,176,2.129,178,1.397,180,2.206,263,4.004,303,2.453,432,5.315,484,6.077,496,4.693,935,5.315,1586,4.25,1587,5.8,1590,6.91,1592,4.693,1593,6.711,1595,6.405,1596,4.693,1597,4.693,1599,5.315,1600,6.405,1601,4.693,1602,5.367,1603,5.367]],["title/modules/LayoutsModule.html",[371,2.16,1604,2.817]],["body/modules/LayoutsModule.html",[3,0.178,4,0.16,5,0.142,18,0.012,20,0.178,21,0.01,22,0.01,35,0.953,44,0.922,55,0.892,74,0.721,75,0.644,87,0.67,92,1.787,148,0.619,176,2.257,202,1.927,328,2.427,373,2.62,374,3.204,377,3.478,378,2.844,381,5.512,382,6.576,384,6.576,390,3.926,392,3.111,409,3.111,411,3.634,627,5.082,652,5.821,1604,5.691,1605,4.977,1606,5.691,1607,4.977,1608,5.691,1609,5.691,1610,5.691,1611,5.691,1612,5.691]],["title/components/LoadingComponent.html",[148,0.45,220,1.182]],["body/components/LoadingComponent.html",[3,0.111,4,0.1,5,0.089,8,0.259,9,0.823,11,0.386,17,0.52,18,0.012,20,0.111,21,0.007,22,0.007,35,0.851,36,1.881,41,0.614,44,1.112,46,0.767,47,0.753,55,0.556,68,1.079,74,0.546,75,0.402,87,0.417,89,0.791,133,1.407,148,0.646,149,1.079,150,1.596,151,1.15,152,1.114,153,1.15,154,1.15,156,1.926,157,1.15,158,2.651,159,2.568,160,1.648,162,1.648,165,2.103,168,4.222,171,1.453,172,1.759,173,1.818,175,4.445,176,1.407,178,0.923,181,3.103,182,4.57,183,6.247,193,1.15,194,1.648,195,1.648,196,1.15,197,2.103,198,1.15,199,1.15,200,1.013,201,1.15,202,0.982,203,1.15,204,1.013,205,1.15,206,1.013,207,1.15,208,1.013,209,1.243,210,1.15,211,1.013,212,1.648,213,1.013,214,1.15,215,1.013,216,1.15,217,1.013,218,0.868,219,1.15,220,1.853,221,1.15,222,1.013,223,1.15,224,1.013,225,1.046,226,1.15,227,1.013,228,1.15,229,1.013,230,1.15,231,1.013,232,0.895,233,1.013,234,1.15,235,1.013,236,1.079,237,1.15,238,1.013,239,1.15,240,1.013,241,1.15,242,1.013,243,1.15,244,1.013,245,1.15,246,1.013,247,1.15,248,1.15,303,2.172,304,2.872,316,1.852,317,1.7,318,1.852,319,5.436,320,6.433,321,1.7,322,6.003,323,3.103,324,2.59,325,4.025,326,3.103,327,4.025,328,2.167,329,3.711,330,2.778,331,2.809,332,3.711,333,2.654,334,3.267,335,6.155,336,3.103,337,2.809,338,3.103,339,3.103,340,3.103,341,2.809,342,2.59,343,2.809,344,4.703,345,1.773,346,4.703,347,4.703,348,2.145,349,4.445,350,3.103,351,3.103,352,2.59,353,2.416,354,2.59,355,1.939,356,1.939,357,1.939,358,2.036,359,1.7,360,1.939,361,2.036,362,1.852,363,2.917,364,2.145,365,2.145,366,2.036,367,2.809,369,3.103,370,3.103,757,2.917,758,3.999,795,2.27,1140,3.247,1613,3.103,1614,5.939,1615,5.082,1616,4.445,1617,5.939,1618,4.337,1619,3.548,1620,5.082,1621,3.548,1622,3.548,1623,3.548,1624,5.082,1625,5.082,1626,5.082,1627,5.082,1628,5.082,1629,3.548,1630,3.548,1631,3.548,1632,3.548,1633,3.548]],["title/injectables/LoadingService.html",[31,0.84,758,2.16]],["body/injectables/LoadingService.html",[3,0.162,4,0.146,5,0.13,8,0.265,9,1.066,11,0.566,17,0.579,18,0.012,20,0.162,21,0.009,22,0.009,31,1.336,33,2.063,35,1.102,36,3.069,41,1.249,44,1.295,46,1.422,47,0.66,54,2.278,55,1.131,56,2.752,74,0.606,75,0.589,78,1.633,85,1.925,86,1.8,87,0.612,89,1.16,92,1.633,171,1.856,172,2.278,173,2.355,178,1.879,490,4.211,683,3.541,757,4.144,758,3.436,789,4.211,1634,4.549,1635,7.22,1636,7.588,1637,7.588,1638,6.581,1639,6.581,1640,5.201,1641,5.201,1642,6.581,1643,5.201,1644,4.119,1645,6.581,1646,6.581,1647,5.756,1648,5.201,1649,5.756,1650,5.201,1651,5.201,1652,5.201,1653,5.201,1654,5.201]],["title/injectables/LocalStorageService.html",[31,0.84,436,2.647]],["body/injectables/LocalStorageService.html",[3,0.152,4,0.136,5,0.121,8,0.248,11,0.805,16,1.968,17,0.593,18,0.012,20,0.152,21,0.009,22,0.009,31,1.28,33,1.928,35,1.055,41,1.21,44,1.242,46,1.599,47,0.939,55,1.159,74,0.447,75,0.55,85,1.799,86,1.683,87,0.572,89,1.084,92,2.324,171,1.81,172,1.683,173,2.647,180,1.999,192,2.791,295,4.247,303,2.111,304,2.153,436,4.033,439,5.349,488,5.736,1212,5.512,1252,6.22,1293,3.85,1304,3.85,1655,4.252,1656,6.303,1657,4.862,1658,6.303,1659,4.862,1660,7.399,1661,6.303,1662,4.862,1663,6.303,1664,4.862,1665,6.303,1666,4.862,1667,7.399,1668,4.862,1669,4.862,1670,4.862,1671,4.862,1672,4.862,1673,4.862,1674,4.862,1675,4.862,1676,6.303,1677,4.862]],["title/components/LoginComponent.html",[148,0.45,222,1.182]],["body/components/LoginComponent.html",[3,0.143,4,0.129,5,0.115,8,0.234,11,0.5,17,0.368,18,0.012,20,0.143,21,0.009,22,0.009,35,1.017,41,0.795,44,1.102,46,0.993,47,0.863,55,0.952,68,1.398,74,0.626,75,0.52,87,0.541,88,2.203,89,1.025,117,3.356,118,3.866,132,3.356,133,1.682,148,0.741,149,1.398,150,1.908,151,1.49,152,1.443,153,1.49,154,1.49,156,2.207,157,1.49,158,2.71,159,2.625,160,1.97,162,1.97,165,2.348,171,1.665,193,1.49,194,1.97,195,1.97,196,1.49,197,2.348,198,1.49,199,1.49,200,1.313,201,1.49,202,1.273,203,1.49,204,1.313,205,1.49,206,1.313,207,1.49,208,1.313,209,1.486,210,1.49,211,1.313,212,1.97,213,1.313,214,1.49,215,1.313,216,1.49,217,1.313,218,1.124,219,1.49,220,1.313,221,1.49,222,2.068,223,1.49,224,1.313,225,1.355,226,1.49,227,1.313,228,1.49,229,1.313,230,1.49,231,1.313,232,1.16,233,1.313,234,1.49,235,1.313,236,1.398,237,1.49,238,1.313,239,1.49,240,1.313,241,1.49,242,1.313,243,1.49,244,1.313,245,1.49,246,1.313,247,1.49,248,1.49,343,3.64,366,2.638,450,5.313,717,2.638,733,3.13,914,2.638,915,2.941,1450,4.02,1678,4.02,1679,6.805,1680,6.075,1681,7.24,1682,4.596,1683,4.596,1684,4.596,1685,4.596,1686,4.02]],["title/interfaces/Lunch.html",[0,0.564,674,1.832]],["body/interfaces/Lunch.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.898,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,3.956,662,2.66,663,3.939,664,3.939,665,2.038,666,3.231,667,3.231,668,3.231,669,3.231,670,3.231,671,3.231,672,3.231,673,2.779,674,3.805,675,4.079,676,2.66]],["title/injectables/MessagesService.html",[31,0.84,1687,3.276]],["body/injectables/MessagesService.html",[3,0.174,4,0.157,5,0.139,8,0.285,9,1.115,11,0.608,16,1.716,17,0.552,18,0.012,20,0.174,21,0.01,22,0.01,31,1.398,33,2.218,35,1.153,44,1.209,46,1.208,47,0.709,54,2.383,55,0.876,56,2.499,74,0.634,75,0.633,78,1.756,85,2.069,86,1.935,87,0.658,171,1.368,172,2.383,173,2.464,178,1.941,334,3.182,683,5.08,1687,5.453,1688,4.89,1689,7.786,1690,6.525,1691,6.885,1692,6.885,1693,5.592,1694,6.885,1695,6.885,1696,6.885,1697,6.885,1698,6.885,1699,5.592,1700,5.592,1701,4.89,1702,5.592,1703,5.592]],["title/interfaces/Monday.html",[0,0.564,666,1.832]],["body/interfaces/Monday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.388,667,3.231,668,3.231,669,3.231,670,3.231,671,3.231,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/components/PageNotFoundComponent.html",[148,0.45,224,1.182]],["body/components/PageNotFoundComponent.html",[3,0.116,4,0.104,5,0.092,8,0.189,18,0.012,20,0.116,21,0.007,22,0.007,35,0.878,41,1.053,44,0.85,47,0.665,55,0.581,68,1.128,74,0.341,75,0.42,87,0.436,89,1.169,133,1.452,148,0.662,149,1.128,150,1.647,151,1.202,152,1.164,153,1.202,154,1.202,156,1.973,157,1.202,158,2.662,159,2.579,160,1.701,162,1.701,165,2.145,171,1.283,193,1.202,194,1.701,195,1.701,196,1.202,197,2.145,198,1.202,199,1.202,200,1.059,201,1.202,202,1.027,203,1.202,204,1.059,205,1.202,206,1.059,207,1.202,208,1.059,209,1.283,210,1.202,211,1.059,212,1.701,213,1.059,214,1.202,215,1.059,216,1.202,217,1.059,218,0.907,219,1.202,220,1.059,221,1.202,222,1.059,223,1.202,224,1.89,225,2.243,226,1.202,227,1.059,228,1.202,229,1.059,230,1.202,231,1.059,232,0.935,233,1.059,234,1.202,235,1.059,236,1.128,237,1.202,238,1.059,239,1.202,240,1.059,241,1.202,242,1.059,243,1.202,244,1.059,245,1.202,246,1.059,247,1.202,248,1.202,324,5.441,325,4.153,329,5.441,332,5.098,333,3.177,334,3.091,335,5.239,341,2.936,344,2.936,346,2.936,347,4.819,348,2.242,357,3.617,358,2.128,359,1.777,360,2.027,361,2.128,362,1.936,363,4.16,364,2.242,365,2.242,409,2.027,445,5.169,720,1.936,802,2.027,806,4.587,833,2.936,841,2.242,1327,3.571,1487,2.936,1704,5.322,1705,4.819,1706,3.243,1707,4.587,1708,6.086,1709,5.245,1710,3.708,1711,3.708,1712,3.708,1713,5.245,1714,3.708,1715,6.105,1716,6.338,1717,5.245,1718,3.708,1719,6.086,1720,3.708,1721,5.245,1722,5.245,1723,5.245,1724,5.245,1725,3.708,1726,3.708,1727,3.243,1728,6.086,1729,3.243,1730,6.981,1731,5.322,1732,3.708,1733,3.708,1734,3.708,1735,3.708,1736,4.587,1737,3.243,1738,3.708,1739,3.708,1740,3.708,1741,3.708,1742,3.708,1743,4.587,1744,5.245,1745,3.708,1746,3.708]],["title/interfaces/Picture.html",[0,0.564,1747,2.375]],["body/interfaces/Picture.html",[0,0.793,2,1.769,3,0.181,4,0.163,5,0.145,8,0.297,9,1.142,11,0.933,16,1.988,17,0.659,18,0.012,19,2.237,20,0.181,21,0.01,22,0.01,47,1.001,714,4.772,1747,4.048,1748,5.085,1749,6.902,1750,6.902,1751,6.902,1752,6.25]],["title/components/PrincipalComponent.html",[148,0.45,227,1.182]],["body/components/PrincipalComponent.html",[3,0.15,4,0.135,5,0.12,8,0.245,18,0.012,20,0.15,21,0.009,22,0.009,35,1.046,41,1.202,44,1.012,47,0.792,55,0.751,68,1.459,74,0.441,75,0.543,87,0.564,89,1.393,133,1.73,148,0.756,149,1.459,150,1.962,151,1.555,152,1.506,153,1.555,154,1.555,156,2.253,157,1.555,158,2.719,159,2.634,160,2.026,162,2.026,165,2.387,171,1.528,187,3.069,188,3.266,189,3.266,190,3.266,191,3.266,192,2.753,193,1.555,194,2.026,195,2.026,196,1.555,197,2.387,198,1.555,199,1.555,200,1.37,201,1.555,202,1.328,203,1.555,204,1.37,205,1.555,206,1.37,207,1.555,208,1.37,209,1.528,210,1.555,211,1.37,212,2.026,213,1.37,214,1.555,215,1.37,216,1.555,217,1.37,218,1.173,219,1.555,220,1.37,221,1.555,222,1.37,223,1.555,224,1.37,225,1.414,226,1.555,227,2.103,228,1.555,229,1.37,230,1.555,231,1.37,232,1.21,233,1.37,234,1.555,235,1.37,236,1.459,237,1.555,238,1.37,239,1.555,240,1.37,241,1.555,242,1.37,243,1.555,244,1.37,245,1.555,246,1.37,247,1.555,248,1.555,1753,4.194,1754,5.464,1755,6.948,1756,6.247,1757,4.796,1758,4.796]],["title/modules/PrincipalModule.html",[371,2.16,1759,3.021]],["body/modules/PrincipalModule.html",[3,0.167,4,0.151,5,0.134,18,0.012,20,0.167,21,0.009,22,0.009,74,0.781,75,0.608,87,0.631,89,1.196,177,2.377,224,2.302,227,2.302,257,2.934,328,2.289,373,2.471,374,3.09,377,3.355,378,2.682,380,3.669,385,3.669,386,2.802,387,4.295,389,2.206,390,3.504,393,4.693,394,3.919,395,4.693,404,3.654,405,4.693,406,4.693,407,4.693,411,3.504,413,4.693,414,4.693,416,4.693,417,2.572,731,3.09,1604,5.488,1618,4.901,1705,4.25,1754,4.693,1759,6.131,1760,4.693,1761,4.693,1762,5.367,1763,5.367,1764,5.367,1765,5.367,1766,5.367,1767,5.367,1768,5.367]],["title/components/ProfileComponent.html",[148,0.45,229,1.182]],["body/components/ProfileComponent.html",[3,0.085,4,0.076,5,0.068,8,0.29,9,0.676,11,0.807,16,1.167,17,0.603,18,0.012,19,1.496,20,0.085,21,0.006,22,0.006,35,0.699,41,0.722,44,1.218,46,1.097,47,0.779,55,0.892,56,1.7,66,2.89,68,0.827,72,1.204,74,0.657,75,0.308,78,0.854,87,0.32,89,0.606,92,0.854,96,1.879,133,1.155,140,1.397,148,0.668,149,0.827,150,1.31,151,0.882,152,1.594,153,0.882,154,0.882,156,1.646,157,0.882,158,2.577,159,2.496,160,1.353,162,1.353,165,1.846,171,1.502,172,0.941,173,1.493,177,1.204,178,1.686,192,3.268,193,0.882,194,1.353,195,1.353,196,0.882,197,1.846,198,0.882,199,0.882,200,0.777,201,0.882,202,0.753,203,0.882,204,0.777,205,0.882,206,0.777,207,0.882,208,0.777,209,1.021,210,0.882,211,0.777,212,1.353,213,0.777,214,0.882,215,0.777,216,0.882,217,0.777,218,0.665,219,0.882,220,0.777,221,0.882,222,0.777,223,0.882,224,0.777,225,0.801,226,0.882,227,0.777,228,0.882,229,1.626,230,0.882,231,0.777,232,0.686,233,0.777,234,0.882,235,0.777,236,0.827,237,0.882,238,0.777,239,0.882,240,0.777,241,0.882,242,0.777,243,0.882,244,0.777,245,0.882,246,0.777,247,0.882,248,0.882,249,1.644,253,3.543,257,1.487,275,1.986,280,1.852,283,1.487,284,2.378,285,1.74,286,1.852,287,2.153,288,1.303,295,2.395,296,2.153,299,2.378,301,3.876,303,2.332,304,2.521,311,1.544,314,2.378,316,2.65,317,2.433,318,2.65,321,2.433,333,1.42,334,2.764,355,2.775,356,2.775,389,1.118,417,2,476,3.649,537,1.644,618,2.841,619,2.841,620,2.523,621,3.268,717,3.996,718,4.412,731,2.337,736,2.395,744,2.67,801,1.359,809,3.902,810,2.914,883,2.281,889,2.523,890,3.304,891,3.046,933,3.07,934,3.443,953,1.644,966,1.644,967,1.644,969,3.443,1042,3.643,1071,1.74,1075,2.153,1112,1.852,1140,2.281,1293,2.153,1304,4.863,1419,2.378,1421,2.378,1554,2.378,1701,2.378,1769,2.378,1770,4.979,1771,5.076,1772,5.076,1773,5.076,1774,4.172,1775,5.076,1776,5.076,1777,5.076,1778,5.076,1779,4.172,1780,4.172,1781,4.08,1782,4.172,1783,2.719,1784,4.172,1785,4.172,1786,2.719,1787,4.172,1788,2.719,1789,4.172,1790,2.719,1791,2.719,1792,2.719,1793,2.719,1794,2.719,1795,2.719,1796,2.719,1797,2.719,1798,2.719,1799,2.719,1800,2.719,1801,2.719,1802,2.719,1803,4.172,1804,2.719,1805,2.719,1806,2.719,1807,2.719,1808,2.719,1809,2.719,1810,2.719,1811,2.719,1812,2.719,1813,2.719,1814,2.719,1815,2.719,1816,2.719,1817,2.719,1818,2.719,1819,2.719,1820,2.719,1821,2.719,1822,2.719,1823,2.719,1824,2.719,1825,1.986,1826,2.719,1827,2.378,1828,5.076,1829,2.719,1830,2.378,1831,2.719,1832,2.378,1833,2.378,1834,2.378,1835,2.378,1836,2.719,1837,2.719,1838,2.719,1839,2.719,1840,3.649,1841,3.649,1842,3.649,1843,3.649,1844,3.649,1845,2.719,1846,2.719]],["title/modules/ProfileModule.html",[371,2.16,1847,3.021]],["body/modules/ProfileModule.html",[3,0.146,4,0.132,5,0.117,18,0.012,20,0.146,21,0.009,22,0.009,74,0.79,75,0.531,76,1.736,87,0.552,109,4.465,111,3.001,112,2.837,140,1.571,148,0.67,176,1.861,177,2.077,180,1.928,229,2.265,328,2,373,2.16,374,2.835,377,3.077,378,2.344,380,3.366,385,3.366,386,2.449,387,3.94,388,3.724,389,1.928,390,3.215,391,4.398,392,2.564,396,3.724,397,2.837,409,2.564,411,2.449,412,2.837,417,2.951,622,3.366,659,4.193,660,3.194,731,2.835,756,3.724,1152,4.496,1153,4.496,1154,4.496,1155,3.425,1156,4.496,1157,3.425,1158,4.496,1159,3.425,1160,4.496,1161,3.425,1162,4.496,1163,3.425,1164,4.496,1165,3.425,1169,4.496,1170,3.425,1175,3.425,1176,3.425,1179,3.425,1180,3.425,1181,3.425,1232,3.425,1781,4.704,1847,5.996,1848,4.102,1849,4.102,1850,4.102,1851,4.691,1852,3.425,1853,3.715,1854,5.385,1855,4.102,1856,5.385,1857,4.102,1858,4.691,1859,4.102,1860,4.691]],["title/injectables/ProfileService.html",[31,0.84,1781,2.502]],["body/injectables/ProfileService.html",[3,0.138,4,0.124,5,0.111,8,0.226,11,0.727,17,0.535,18,0.012,20,0.138,21,0.008,22,0.008,31,1.204,33,1.758,35,0.993,41,0.767,42,2.215,43,3.566,44,1.156,46,1.444,47,0.848,48,2.842,52,1.697,54,1.534,55,1.118,56,2.491,66,3.024,74,0.719,75,0.502,76,1.64,77,2.04,78,1.391,80,1.962,81,2.124,82,3.509,85,1.64,86,1.534,87,0.521,88,2.124,89,0.988,92,2.098,93,3.096,96,2.194,99,2.215,140,2.238,178,1.739,180,2.438,281,2.422,295,3.403,304,2.626,306,4.33,307,3.017,308,3.017,428,5.651,431,4.695,464,4.695,466,5.185,467,3.403,477,4.695,490,2.835,491,2.543,537,2.68,569,3.875,570,3.509,571,3.509,577,2.835,578,2.835,579,2.835,580,3.509,581,3.509,582,3.509,1226,2.68,1781,3.586,1861,3.875,1862,3.794,1863,4.431,1864,4.431,1865,4.431,1866,5.929,1867,4.431,1868,4.431,1869,5.929,1870,5.844,1871,6.682,1872,5.929,1873,6.682,1874,5.929,1875,6.682,1876,5.929,1877,6.682,1878,5.929,1879,4.431,1880,4.431,1881,4.431,1882,4.431,1883,4.431,1884,4.431]],["title/interfaces/Recipe.html",[0,0.564,232,1.044]],["body/interfaces/Recipe.html",[0,0.713,2,1.59,3,0.163,4,0.147,5,0.13,8,0.267,9,1.069,11,0.941,16,1.841,17,0.67,18,0.012,19,2.396,20,0.163,21,0.009,22,0.009,28,2.312,47,0.964,52,2.911,74,0.666,218,1.86,232,1.826,303,2.424,1322,3,1323,4.156,1747,4.363,1885,4.571,1886,6.648,1887,6.02,1888,5.55,1889,6.02,1890,5.55,1891,6.648,1892,7.001,1893,4.363,1894,5.227,1895,5.227,1896,5.227]],["title/components/RecipeDialogComponent.html",[148,0.45,231,1.182]],["body/components/RecipeDialogComponent.html",[3,0.056,4,0.051,5,0.045,8,0.092,9,0.487,11,0.587,16,1.241,17,0.608,18,0.012,20,0.056,21,0.004,22,0.004,26,2.194,35,0.503,36,2.623,41,0.52,44,1.282,46,1.166,47,0.76,52,1.479,53,1.777,54,1.04,55,1.076,68,0.549,72,1.71,74,0.632,75,0.204,87,0.212,92,0.567,96,1.85,122,1.44,133,0.832,148,0.42,149,0.549,150,0.944,151,0.585,152,0.567,153,0.585,154,0.585,156,1.252,157,0.585,158,2.428,159,2.352,160,0.975,162,0.975,164,1.229,165,1.459,171,1.829,172,1.867,173,2.047,177,0.8,178,1.817,180,0.742,182,3.198,193,0.585,194,0.975,195,0.975,196,0.585,197,1.75,198,0.585,199,0.585,200,0.516,201,0.585,202,0.5,203,0.585,204,0.516,205,0.585,206,0.516,207,0.585,208,0.516,209,0.735,210,0.585,211,0.516,212,0.975,213,0.516,214,0.585,215,0.516,216,0.585,217,0.516,218,1.32,219,0.585,220,0.516,221,0.585,222,0.516,223,0.585,224,0.516,225,0.532,226,0.585,227,0.516,228,0.585,229,0.516,230,0.585,231,1.286,232,1.852,233,0.516,234,0.585,235,0.516,236,0.549,237,0.585,238,0.516,239,0.585,240,0.516,241,0.585,242,0.516,243,0.585,244,0.516,245,0.585,246,0.516,247,0.585,248,0.585,253,0.987,280,1.229,295,1.725,303,1.807,304,0.8,311,1.997,316,2.817,317,2.586,318,2.817,319,1.43,321,2.981,330,3.275,333,0.943,334,0.77,345,1.502,348,1.092,355,0.987,356,0.987,358,1.036,359,0.865,360,0.987,366,2.216,389,0.742,442,1.155,491,1.036,585,1.817,717,2.216,718,3.065,720,0.943,731,2.634,733,1.229,734,2.046,735,2.629,736,3.439,739,3.263,747,3.286,757,2.216,758,2.35,778,3.65,789,1.155,790,1.155,801,1.502,802,0.987,809,2.11,810,2.216,811,2.47,812,1.155,815,1.229,816,1.229,817,1.229,828,1.155,835,1.43,837,1.229,844,2.819,846,1.725,847,1.725,849,1.725,851,1.643,852,1.725,881,1.725,882,1.817,883,3.601,886,1.817,889,1.817,913,1.318,914,1.725,915,1.923,930,2.88,933,2.335,934,2.722,953,1.092,966,1.092,967,1.092,969,3.023,1036,1.43,1037,3.376,1038,2.628,1039,4.371,1042,2.88,1043,3.564,1044,1.579,1045,4.371,1046,1.579,1054,1.579,1055,1.579,1057,1.579,1060,1.579,1062,1.579,1064,3.376,1065,1.579,1071,1.155,1112,1.229,1113,2.628,1114,1.579,1115,1.229,1118,1.579,1119,1.318,1120,1.579,1121,2.38,1122,2.194,1124,1.036,1130,2.88,1131,1.155,1132,1.923,1133,1.155,1134,1.155,1135,1.155,1136,2.47,1137,2.47,1138,2.47,1139,1.725,1140,1.643,1141,1.155,1142,1.155,1143,1.092,1144,1.155,1145,1.155,1185,1.318,1199,1.092,1316,2.817,1317,1.155,1321,1.155,1322,1.725,1323,3.127,1324,4.804,1339,3.936,1343,3.895,1371,1.318,1372,1.579,1377,1.579,1378,2.38,1396,1.579,1410,3.376,1439,1.318,1465,1.318,1472,2.194,1477,1.318,1478,1.318,1488,1.318,1548,1.579,1747,3.781,1890,3.94,1892,3.376,1893,3.57,1897,6.947,1898,5.8,1899,3.86,1900,3.86,1901,4.501,1902,3.376,1903,3.86,1904,3.005,1905,4.501,1906,3.005,1907,3.005,1908,3.005,1909,4.501,1910,3.005,1911,3.564,1912,3.46,1913,3.005,1914,3.005,1915,3.86,1916,1.806,1917,1.806,1918,1.806,1919,1.806,1920,1.806,1921,1.806,1922,3.005,1923,1.806,1924,3.005,1925,1.806,1926,1.806,1927,3.005,1928,1.806,1929,1.806,1930,1.806,1931,3.005,1932,1.806,1933,1.806,1934,1.806,1935,1.806,1936,1.806,1937,1.806,1938,1.806,1939,1.806,1940,1.806,1941,1.806,1942,1.806,1943,1.806,1944,1.579,1945,1.43,1946,1.806,1947,1.43,1948,1.43,1949,1.806,1950,1.806,1951,3.005,1952,1.579,1953,3.86,1954,1.806,1955,1.806,1956,1.806,1957,1.806,1958,1.806,1959,1.806,1960,1.806,1961,4.501,1962,1.806,1963,1.806,1964,1.579,1965,4.501,1966,1.806,1967,1.806,1968,1.806,1969,1.806,1970,1.806,1971,1.806,1972,1.806,1973,1.806,1974,1.806,1975,1.806,1976,1.806,1977,1.806,1978,3.005,1979,3.005,1980,1.806,1981,1.806,1982,1.806,1983,1.806,1984,1.806,1985,1.806,1986,1.806,1987,1.806,1988,1.806,1989,1.806,1990,1.806,1991,1.806,1992,1.806,1993,1.806,1994,1.806,1995,1.806,1996,1.806,1997,1.806,1998,2.628,1999,1.806,2000,1.806,2001,1.806,2002,2.628,2003,3.936,2004,1.806,2005,1.806,2006,1.806,2007,1.806,2008,1.806,2009,1.806,2010,1.806,2011,1.806,2012,1.806,2013,1.806,2014,4.501,2015,3.005,2016,3.005,2017,3.005,2018,3.005,2019,1.806,2020,3.005,2021,1.806,2022,1.806,2023,1.579,2024,1.806,2025,3.86,2026,1.806,2027,1.579,2028,3.005,2029,1.806,2030,4.501,2031,1.806,2032,1.806,2033,1.806,2034,4.501,2035,1.579,2036,3.005,2037,1.806,2038,1.806,2039,1.806]],["title/modules/RecipeManagementModule.html",[371,2.16,2040,3.021]],["body/modules/RecipeManagementModule.html",[3,0.123,4,0.11,5,0.098,18,0.012,20,0.123,21,0.008,22,0.008,74,0.798,75,0.446,76,1.456,87,0.463,109,4.24,111,2.518,112,2.38,140,1.318,148,0.428,176,1.561,180,1.618,215,2.11,217,2.11,218,0.963,231,2.207,233,2.11,240,2.164,328,1.678,373,1.812,374,2.518,377,2.733,378,1.967,380,2.99,385,2.99,386,2.055,387,3.499,388,3.307,389,1.618,390,2.855,391,4.021,392,2.152,396,3.307,397,2.38,398,3.724,399,2.68,400,3.724,401,2.68,409,2.152,411,2.055,412,2.38,417,2.621,622,2.99,630,3.993,631,2.874,634,4.783,635,3.442,636,4.331,637,3.117,659,3.724,660,2.68,790,2.518,797,2.874,1151,4.783,1152,3.993,1153,3.993,1154,3.993,1155,2.874,1156,3.993,1157,2.874,1158,3.993,1159,2.874,1160,3.993,1161,2.874,1162,3.993,1163,2.874,1164,3.993,1165,2.874,1166,4.783,1167,4.783,1168,3.442,1169,3.993,1170,2.874,1171,4.783,1172,3.442,1173,4.783,1174,3.442,1175,2.874,1176,2.874,1179,2.874,1180,2.874,1181,2.874,1324,2.38,1374,2.68,1898,2.874,1912,4.467,1947,3.117,2040,6.108,2041,3.442,2042,3.442,2043,3.442,2044,3.936,2045,3.936,2046,5.469,2047,3.936,2048,5.469,2049,3.936,2050,5.469,2051,3.936,2052,5.469,2053,3.936,2054,5.469,2055,3.936,2056,5.469,2057,3.936,2058,5.469,2059,3.936,2060,3.936,2061,3.936,2062,3.936,2063,3.936,2064,3.936]],["title/injectables/RecipeService.html",[31,0.84,1912,2.502]],["body/injectables/RecipeService.html",[3,0.09,4,0.081,5,0.072,8,0.147,11,0.771,17,0.581,18,0.012,19,2.138,20,0.09,21,0.006,22,0.006,28,2.015,31,0.884,33,1.141,35,0.729,36,3.074,41,0.753,42,1.437,43,2.928,44,1.198,46,1.531,47,0.953,48,2.808,50,4.005,52,2.411,53,2.419,54,2.51,55,1.256,56,2.7,64,3.016,72,2.595,74,0.68,75,0.326,76,1.064,77,1.324,78,0.903,80,1.273,81,1.378,83,1.273,84,1.739,85,1.064,86,0.995,87,0.338,89,0.641,90,3.949,92,2.419,93,3.592,95,3.749,96,2.546,97,3.543,99,3.438,101,1.84,104,3.362,105,2.1,107,1.84,125,3.807,135,3.807,140,1.458,178,1.133,218,0.703,232,2.077,253,2.38,260,3.179,311,1.064,365,2.633,442,3.362,481,1.84,483,4.028,537,3.177,679,1.739,682,3.807,684,3.949,809,2.872,1186,3.99,1198,3.807,1199,3.177,1205,5.399,1220,2.1,1226,3.543,1227,2.277,1244,4.279,1245,4.279,1289,3.807,1322,1.651,1323,3.203,1391,3.807,1511,2.1,1747,4.244,1752,2.277,1870,6.343,1887,2.277,1888,3.179,1889,2.277,1890,2.1,1893,1.651,1911,3.448,1912,2.633,2065,2.515,2066,5.254,2067,4.354,2068,3.807,2069,4.354,2070,4.354,2071,5.124,2072,5.859,2073,4.354,2074,2.875,2075,2.875,2076,2.875,2077,4.354,2078,2.875,2079,4.354,2080,4.354,2081,2.875,2082,4.354,2083,2.875,2084,4.354,2085,2.875,2086,2.875,2087,2.875,2088,4.354,2089,4.354,2090,2.875,2091,4.354,2092,2.875,2093,4.354,2094,4.354,2095,2.875,2096,2.875,2097,2.875,2098,2.875,2099,5.254,2100,2.875,2101,4.354,2102,2.875,2103,5.254,2104,2.875,2105,2.875,2106,2.875,2107,2.875,2108,2.875,2109,2.875,2110,2.875,2111,2.875,2112,2.875,2113,2.875,2114,2.875,2115,2.875,2116,2.875,2117,2.875,2118,2.875,2119,2.875,2120,2.875,2121,2.875,2122,2.875,2123,2.875,2124,2.875]],["title/interfaces/RecipeType.html",[0,0.564,1893,2.375]],["body/interfaces/RecipeType.html",[0,0.825,2,1.839,3,0.189,4,0.17,5,0.151,8,0.308,9,1.169,11,0.919,16,1.955,17,0.641,18,0.012,19,2.275,20,0.189,21,0.01,22,0.01,28,2.432,47,1.014,52,3.062,288,3.832,1318,4.787,1893,4.144,1945,4.787]],["title/components/RecipesComponent.html",[148,0.45,233,1.182]],["body/components/RecipesComponent.html",[3,0.055,4,0.049,5,0.044,8,0.09,9,0.477,11,0.537,16,0.677,17,0.572,18,0.012,19,1.306,20,0.055,21,0.004,22,0.004,28,1.348,35,0.493,36,1.972,41,0.51,44,1.194,46,1.066,47,0.752,52,0.675,53,1.746,54,1.019,55,0.835,68,0.536,72,0.78,74,0.601,75,0.199,83,2.183,87,0.207,89,0.393,122,0.844,133,0.815,140,0.59,148,0.413,149,0.536,150,0.925,151,0.571,152,1.191,153,0.571,154,0.571,156,1.23,157,0.571,158,2.418,159,2.342,160,0.955,162,0.955,165,1.437,171,1.598,172,1.706,173,2.276,177,0.78,178,0.987,182,1.884,193,0.571,194,0.955,195,0.955,196,0.571,197,1.437,198,0.571,199,0.571,200,0.503,201,0.571,202,0.488,203,0.571,204,0.503,205,0.571,206,0.503,207,0.571,208,0.503,209,0.72,210,0.571,211,0.503,212,0.955,213,0.503,214,0.571,215,0.503,216,0.571,217,0.503,218,1.084,219,0.571,220,0.503,221,0.571,222,0.503,223,0.571,224,0.503,225,0.519,226,0.571,227,0.503,228,0.571,229,0.503,230,0.571,231,0.841,232,1.931,233,1.266,234,0.571,235,0.503,236,0.536,237,0.571,238,0.503,239,0.571,240,0.503,241,0.571,242,0.503,243,0.571,244,0.503,245,0.571,246,0.503,247,0.571,248,0.571,264,1.286,303,0.986,311,1.64,316,3.096,317,2.842,318,3.096,321,3.267,330,2.074,333,0.92,334,3.411,345,2.464,355,1.61,356,1.61,357,2.074,359,2.363,360,3.242,361,3.059,362,3.321,363,3.651,364,4.042,365,3.223,367,3.51,417,1.411,442,1.884,491,1.011,702,1.541,713,3.943,714,2.982,715,2.575,717,2.177,720,3.489,730,5.845,731,3.077,733,4.038,734,2.583,735,3.629,736,4.041,737,3.318,738,3.904,739,2.982,740,3.318,747,3.236,749,3.318,750,3.318,752,2.575,753,2.575,756,3.421,757,2.177,758,2.314,764,2.575,766,2.575,778,2.77,789,1.127,790,1.127,795,1.127,797,1.286,801,0.881,802,0.963,812,1.127,815,1.2,816,1.2,819,1.541,820,1.541,821,2.575,822,3.876,823,3.876,824,2.575,825,2.575,826,1.541,828,2.427,829,1.541,834,2.575,835,2.332,836,2.575,837,3.629,838,2.836,839,2.575,840,3.51,841,1.781,842,1.541,843,1.541,844,2.15,846,2.544,847,2.544,848,2.583,849,2.544,850,2.583,851,2.695,852,2.83,853,1.884,854,2.15,855,1.541,856,1.541,862,1.395,863,1.541,864,1.2,865,1.541,866,1.127,867,1.541,868,1.2,869,1.286,870,2.005,871,2.005,872,1.2,873,1.2,874,1.2,875,2.005,878,1.286,879,1.127,881,1.011,882,1.065,883,3.242,886,1.065,888,3.357,907,2.77,908,2.005,909,2.583,910,1.884,913,1.286,914,1.69,915,1.127,918,2.15,1130,2.427,1131,1.127,1132,1.884,1133,1.127,1134,1.127,1135,1.127,1136,2.427,1137,2.427,1138,2.427,1139,1.69,1140,1.61,1141,1.127,1142,1.127,1143,1.065,1144,1.127,1145,1.127,1185,2.15,1199,3.223,1205,3.892,1253,1.541,1295,1.286,1296,1.541,1311,1.541,1316,1.981,1317,1.127,1322,1.011,1323,2.695,1324,4.499,1327,1.2,1328,1.286,1329,1.286,1332,3.318,1371,1.286,1378,1.395,1418,4.312,1422,3.51,1461,3.51,1465,3.236,1472,1.286,1477,1.286,1478,1.286,1481,4.221,1482,1.395,1488,1.286,1516,6.065,1743,1.541,1747,2.177,1852,1.286,1888,3.6,1893,1.69,1898,1.286,1902,3.318,1911,2.332,1912,3.223,1944,1.541,1947,1.395,1964,1.541,1998,1.541,2002,3.876,2003,5.186,2035,3.318,2068,2.575,2071,1.541,2125,1.541,2126,3.793,2127,2.945,2128,3.793,2129,4.432,2130,1.762,2131,2.945,2132,1.762,2133,2.575,2134,2.945,2135,1.762,2136,2.945,2137,2.945,2138,2.945,2139,1.762,2140,1.762,2141,1.762,2142,2.945,2143,1.762,2144,1.762,2145,1.762,2146,1.762,2147,1.762,2148,1.762,2149,1.762,2150,1.762,2151,1.762,2152,1.762,2153,1.762,2154,1.762,2155,1.762,2156,1.762,2157,4.93,2158,1.762,2159,1.762,2160,1.762,2161,2.945,2162,1.762,2163,2.575,2164,2.945,2165,1.762,2166,4.432,2167,1.762,2168,1.762,2169,1.762,2170,1.762,2171,1.762,2172,1.762,2173,1.762,2174,1.762,2175,2.945,2176,2.945,2177,4.432,2178,1.762,2179,1.762,2180,1.762,2181,1.762,2182,1.762,2183,1.762,2184,2.945,2185,1.762,2186,1.762,2187,2.945,2188,2.945,2189,2.945,2190,1.762,2191,1.762,2192,1.762,2193,1.762,2194,1.541,2195,2.945,2196,1.541,2197,2.945,2198,2.945,2199,1.762,2200,1.762,2201,1.762,2202,1.762,2203,1.762,2204,1.762,2205,1.762,2206,1.762,2207,1.762,2208,1.762,2209,1.762,2210,1.541,2211,1.762,2212,3.318,2213,1.541,2214,1.762,2215,1.762]],["title/interfaces/Saturday.html",[0,0.564,671,1.832]],["body/interfaces/Saturday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.231,668,3.231,669,3.231,670,3.231,671,3.388,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/interfaces/Schedule.html",[0,0.564,665,1.585]],["body/interfaces/Schedule.html",[0,1.134,2,1.54,3,0.158,4,0.142,5,0.126,8,0.258,9,1.048,16,1.728,17,0.647,18,0.012,20,0.26,21,0.009,22,0.009,661,3.917,662,2.529,663,3.233,664,3.233,665,2.477,666,3.619,667,3.619,668,3.619,669,3.619,670,3.619,671,3.619,672,3.619,673,2.643,674,3.773,675,4.033,676,2.529]],["title/injectables/ScheduleService.html",[31,0.84,932,3.021]],["body/injectables/ScheduleService.html",[3,0.132,4,0.119,5,0.105,8,0.216,11,0.762,17,0.561,18,0.012,20,0.132,21,0.008,22,0.008,31,1.166,33,1.676,35,0.962,36,2.948,41,0.994,42,2.112,43,3.498,44,1.134,46,1.513,47,0.888,48,2.753,50,4.955,52,2.2,53,3.222,55,1.183,56,2.587,72,3.48,74,0.723,75,0.478,76,1.564,77,1.946,78,1.327,80,1.872,81,2.026,83,1.872,84,2.556,85,1.564,86,1.463,87,0.497,89,0.942,92,2.298,93,3.406,95,2.704,96,2.414,97,2.556,99,3.26,104,3.675,105,3.086,178,1.495,209,1.971,311,1.564,481,2.704,483,4.174,537,3.473,665,3.24,679,2.556,682,4.233,684,4.433,927,5.023,931,5.705,932,4.194,1219,3.696,1220,3.086,1226,3.473,1244,4.194,1245,4.194,1508,3.696,2216,3.696,2217,6.524,2218,4.226,2219,4.226,2220,4.226,2221,7.549,2222,5.743,2223,4.226,2224,4.226,2225,4.226,2226,4.226,2227,4.226,2228,4.226,2229,4.226]],["title/components/ServerErrorComponent.html",[148,0.45,235,1.182]],["body/components/ServerErrorComponent.html",[3,0.083,4,0.075,5,0.067,8,0.136,18,0.012,20,0.083,21,0.006,22,0.006,35,0.689,41,0.868,44,0.666,47,0.522,55,0.418,68,0.812,74,0.246,75,0.302,87,0.314,89,0.917,133,1.139,148,0.546,149,0.812,150,1.292,151,0.866,152,0.838,153,0.866,154,0.866,156,1.627,157,0.866,158,2.571,159,2.49,160,1.334,162,1.334,165,1.828,171,1.006,193,0.866,194,1.334,195,1.334,196,0.866,197,1.828,198,0.866,199,0.866,200,0.763,201,0.866,202,0.739,203,0.866,204,0.763,205,0.866,206,0.763,207,0.866,208,0.763,209,1.006,210,0.866,211,0.763,212,1.334,213,0.763,214,0.866,215,0.763,216,0.866,217,0.763,218,0.653,219,0.866,220,0.763,221,0.866,222,0.763,223,0.866,224,0.763,225,0.787,226,0.866,227,0.763,228,0.866,229,0.763,230,0.866,231,0.763,232,0.673,233,0.763,234,0.866,235,1.61,236,2.105,237,0.866,238,0.763,239,0.866,240,0.763,241,0.866,242,0.763,243,0.866,244,0.763,245,0.866,246,0.763,247,0.866,248,0.866,311,1.522,324,5.908,327,5.48,328,2.951,329,5.387,331,2.114,332,5.053,333,3.499,334,2.951,337,2.114,342,1.949,345,4.077,348,3.89,356,2.249,357,1.459,358,2.88,363,4.162,445,5.406,645,3.974,719,2.334,802,4.033,907,1.949,917,3.974,1124,2.88,1436,4.388,1440,3.974,1484,4.822,1715,2.334,1716,6.209,1727,4.388,1729,3.597,1731,4.388,1736,3.597,1737,3.597,2163,2.334,2196,3.597,2213,4.388,2230,4.388,2231,2.334,2232,5.018,2233,4.113,2234,2.669,2235,2.669,2236,4.113,2237,4.113,2238,4.93,2239,2.669,2240,4.113,2241,2.669,2242,2.669,2243,2.669,2244,2.669,2245,2.669,2246,2.669,2247,2.669,2248,2.669,2249,2.669,2250,7.808,2251,5.638,2252,7.1,2253,5.018,2254,6.089,2255,2.669,2256,2.669,2257,2.669,2258,2.669,2259,2.669,2260,2.669,2261,1.949,2262,2.669,2263,4.113,2264,2.669,2265,4.113,2266,2.669,2267,2.669,2268,2.669,2269,2.669,2270,2.669,2271,2.669,2272,2.669,2273,7.1,2274,6.432,2275,4.113,2276,4.113,2277,4.113,2278,4.113,2279,5.638,2280,4.113,2281,4.113,2282,4.113,2283,5.018,2284,2.669,2285,5.018,2286,6.432,2287,4.113,2288,2.669,2289,4.113,2290,4.113,2291,5.018,2292,2.669,2293,5.018,2294,7.25,2295,2.669,2296,2.669,2297,2.669,2298,2.669,2299,2.669,2300,2.669,2301,2.669,2302,4.113,2303,2.669,2304,2.669,2305,4.113,2306,6.432,2307,2.669,2308,4.113,2309,2.334,2310,2.669,2311,2.114,2312,2.334,2313,5.018,2314,2.669,2315,2.669,2316,4.113,2317,2.669,2318,2.669,2319,4.113,2320,2.669,2321,2.669]],["title/components/SidebarComponent.html",[148,0.45,238,1.182]],["body/components/SidebarComponent.html",[3,0.121,4,0.108,5,0.096,8,0.197,9,0.875,11,0.677,17,0.499,18,0.012,20,0.121,21,0.008,22,0.008,35,0.904,41,0.934,44,1.221,46,0.835,47,0.789,54,1.337,55,0.975,56,2.257,66,2.411,68,1.176,74,0.719,75,0.437,78,1.213,87,0.455,89,0.862,96,1.43,133,1.495,148,0.733,149,1.176,150,1.696,151,1.253,152,1.213,153,1.253,154,1.253,156,2.018,157,1.253,158,2.672,159,2.589,160,1.751,162,1.751,165,2.185,171,1.797,172,1.337,173,1.383,178,1.405,193,1.253,194,1.751,195,1.751,196,1.253,197,2.185,198,1.253,199,1.253,200,1.104,201,1.253,202,1.07,203,1.253,204,1.104,205,1.253,206,1.104,207,1.253,208,1.104,209,1.321,210,1.253,211,1.104,212,1.751,213,1.104,214,1.253,215,1.104,216,1.253,217,1.104,218,0.945,219,1.253,220,1.104,221,1.253,222,1.104,223,1.253,224,1.104,225,1.139,226,1.253,227,1.104,228,1.253,229,1.104,230,1.253,231,1.104,232,0.975,233,1.104,234,1.253,235,1.104,236,1.176,237,1.253,238,1.925,239,1.253,240,1.104,241,1.253,242,1.104,243,1.253,244,1.104,245,1.253,246,1.104,247,1.253,248,1.253,249,2.337,253,4.015,257,2.113,275,2.822,280,2.631,283,2.113,285,2.473,301,3.677,303,1.808,304,2.391,316,2.018,317,1.852,318,2.018,321,2.983,358,2.218,359,2.983,433,4.92,516,3.38,713,2.473,720,2.018,733,3.677,838,2.473,1043,5.336,1124,2.218,1139,2.218,1425,4.722,1426,3.06,1429,4.929,1430,3.06,1686,3.38,2322,3.38,2323,6.224,2324,6.224,2325,5.399,2326,6.224,2327,5.133,2328,5.399,2329,3.864,2330,3.864,2331,3.864,2332,3.864,2333,3.864,2334,3.38,2335,3.38,2336,3.864,2337,3.38,2338,3.864,2339,3.864,2340,3.864,2341,3.38,2342,3.864,2343,3.864,2344,3.864,2345,3.864,2346,3.864,2347,4.722,2348,3.38,2349,3.38,2350,3.38]],["title/injectables/SidebarService.html",[31,0.84,2327,2.817]],["body/injectables/SidebarService.html",[3,0.159,4,0.143,5,0.127,8,0.259,9,1.051,11,0.706,17,0.603,18,0.012,20,0.159,21,0.009,22,0.009,31,1.317,33,2.017,35,1.086,36,2.644,41,0.88,42,2.542,43,3.761,44,1.288,46,1.402,47,0.823,48,3.11,54,2.245,55,1.016,56,2.393,74,0.715,75,0.576,76,1.882,77,2.341,78,1.597,80,2.252,81,2.437,85,1.882,86,1.76,87,0.598,88,2.437,90,4.101,92,2.037,96,1.882,118,4.038,171,1.587,172,2.245,173,2.321,178,1.958,303,2.393,359,3.607,683,3.463,1226,3.075,1647,5.674,1690,6.248,2327,4.418,2351,4.447,2352,7.145,2353,5.959,2354,5.674,2355,6.488,2356,5.085,2357,6.488,2358,5.085,2359,6.488,2360,5.085,2361,5.085,2362,5.085,2363,5.085,2364,4.447,2365,5.085,2366,5.085]],["title/interfaces/Sunday.html",[0,0.564,672,1.832]],["body/interfaces/Sunday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.231,668,3.231,669,3.231,670,3.231,671,3.231,672,3.388,673,2.779,674,3.836,675,4.191,676,2.66]],["title/components/TabsComponent.html",[148,0.45,240,1.182]],["body/components/TabsComponent.html",[3,0.145,4,0.13,5,0.116,8,0.237,18,0.012,20,0.145,21,0.009,22,0.009,35,1.025,41,1.184,44,0.992,47,0.777,55,0.728,68,1.414,74,0.428,75,0.526,87,0.547,89,1.365,133,1.695,148,0.745,149,1.414,150,1.922,151,1.508,152,1.46,153,1.508,154,1.508,156,2.219,157,1.508,158,2.713,159,2.628,160,1.985,162,1.985,165,2.358,171,1.498,193,1.508,194,1.985,195,1.985,196,1.508,197,2.358,198,1.508,199,1.508,200,1.328,201,1.508,202,1.287,203,1.508,204,1.328,205,1.508,206,1.328,207,1.508,208,1.328,209,1.498,210,1.508,211,1.328,212,1.985,213,1.328,214,1.508,215,1.328,216,1.508,217,1.328,218,1.137,219,1.508,220,1.328,221,1.508,222,1.328,223,1.508,224,1.328,225,1.371,226,1.508,227,1.328,228,1.508,229,1.328,230,1.508,231,1.328,232,1.173,233,1.328,234,1.508,235,1.328,236,1.414,237,1.508,238,1.328,239,1.508,240,2.078,241,1.508,242,1.328,243,1.508,244,1.328,245,1.508,246,1.328,247,1.508,248,1.508,321,3.622,352,3.395,362,3.196,366,2.669,1324,4.139,2367,4.066,2368,6.122,2369,6.844,2370,6.122,2371,4.65,2372,4.65,2373,4.65,2374,7.76,2375,7.273,2376,4.65,2377,4.65,2378,4.65]],["title/interfaces/Thursday.html",[0,0.564,669,1.832]],["body/interfaces/Thursday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.231,668,3.231,669,3.388,670,3.231,671,3.231,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/components/TitleComponent.html",[148,0.45,242,1.182]],["body/components/TitleComponent.html",[3,0.137,4,0.123,5,0.109,8,0.223,16,1.634,17,0.472,18,0.012,20,0.137,21,0.008,22,0.008,35,0.986,41,1.15,44,1.151,47,0.747,52,2.838,55,0.687,68,1.333,74,0.403,75,0.496,87,0.516,89,1.312,133,1.63,148,0.723,149,1.333,150,1.848,151,1.421,152,1.376,153,1.421,154,1.421,156,2.155,157,1.421,158,2.7,159,2.616,160,1.908,162,1.908,164,5.308,165,2.304,171,1.44,193,1.421,194,1.908,195,1.908,196,1.421,197,2.304,198,1.421,199,1.421,200,1.252,201,1.421,202,1.213,203,1.421,204,1.252,205,1.421,206,1.252,207,1.421,208,1.252,209,1.44,210,1.421,211,1.252,212,1.908,213,1.252,214,1.421,215,1.252,216,1.421,217,1.252,218,1.072,219,1.421,220,1.252,221,1.421,222,1.252,223,1.421,224,1.252,225,1.292,226,1.421,227,1.252,228,1.421,229,1.252,230,1.421,231,1.252,232,1.106,233,1.252,234,1.421,235,1.252,236,1.333,237,1.421,238,1.252,239,1.421,240,1.252,241,1.421,242,2.029,243,1.421,244,1.252,245,1.421,246,1.252,247,1.421,248,1.421,342,3.2,348,2.65,363,3.378,366,3.378,713,2.804,716,3.471,717,2.516,914,2.516,915,2.804,1139,2.516,1140,3.633,1426,3.471,1429,5.263,1430,3.471,1440,3.471,1445,3.833,1616,5.147,2023,3.833,2210,3.833,2347,5.147,2348,3.833,2349,3.833,2350,3.833,2379,3.833,2380,6.645,2381,5.886,2382,5.886,2383,4.383,2384,4.383,2385,4.383,2386,4.383,2387,4.383,2388,4.383,2389,4.383,2390,4.383,2391,4.383]],["title/components/TopbarComponent.html",[148,0.45,244,1.182]],["body/components/TopbarComponent.html",[3,0.122,4,0.11,5,0.098,8,0.199,9,0.882,11,0.682,16,1.252,17,0.543,18,0.012,20,0.122,21,0.008,22,0.008,35,0.912,36,2.318,41,0.942,44,1.225,46,0.845,47,0.795,55,0.981,56,2.098,66,2.894,68,1.19,74,0.696,75,0.443,78,1.228,87,0.46,89,0.872,122,1.875,133,1.508,148,0.682,149,1.19,150,1.71,151,1.268,152,1.228,153,1.268,154,1.268,156,2.031,157,1.268,158,2.675,159,2.591,160,1.766,162,1.766,165,2.196,171,1.85,178,1.853,187,2.503,188,2.663,189,2.663,190,2.663,191,2.663,192,2.245,193,1.268,194,1.766,195,1.766,196,1.268,197,2.196,198,1.268,199,1.268,200,1.117,201,1.268,202,1.083,203,1.268,204,1.117,205,1.268,206,1.117,207,1.268,208,1.117,209,1.332,210,1.268,211,1.117,212,1.766,213,1.117,214,1.268,215,1.117,216,1.268,217,1.117,218,0.957,219,1.268,220,1.117,221,1.268,222,1.117,223,1.268,224,1.117,225,1.153,226,1.268,227,1.117,228,1.268,229,1.117,230,1.268,231,1.117,232,0.987,233,1.117,234,1.268,235,1.117,236,1.19,237,1.268,238,1.117,239,1.268,240,1.117,241,1.268,242,1.117,243,1.268,244,1.935,245,1.268,246,1.117,247,1.268,248,1.268,249,2.365,253,4.135,257,2.138,274,5.924,275,2.856,280,2.663,283,2.138,285,2.503,286,2.663,287,3.098,294,3.421,295,2.245,296,3.098,301,3.708,311,2.507,312,3.421,313,2.663,2327,5.15,2334,3.421,2335,3.421,2341,3.421,2392,3.421,2393,5.445,2394,6.264,2395,5.445,2396,6.264,2397,6.773,2398,5.445,2399,3.912,2400,3.912,2401,3.912,2402,3.912,2403,3.912,2404,3.912,2405,3.912]],["title/interfaces/Tuesday.html",[0,0.564,667,1.832]],["body/interfaces/Tuesday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.388,668,3.231,669,3.231,670,3.231,671,3.231,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/interfaces/User.html",[0,0.564,66,1.48]],["body/interfaces/User.html",[0,0.932,2,1.68,3,0.172,4,0.155,5,0.138,8,0.282,9,1.107,11,0.933,16,1.972,17,0.666,18,0.012,19,2.187,20,0.213,21,0.01,22,0.01,28,2.358,66,2.445,281,4.239,288,3.275,303,2.289,467,4.45,577,4.961,578,3.535,579,3.535,616,5.661,617,4.034,618,5.279,619,5.279,620,4.689,621,4.45]],["title/injectables/UserEffects.html",[31,0.84,404,2.817]],["body/injectables/UserEffects.html",[3,0.147,4,0.132,5,0.117,8,0.24,9,0.998,11,0.511,17,0.376,18,0.012,20,0.147,21,0.009,22,0.009,31,1.251,33,1.863,41,1.066,44,1.114,46,1.015,47,0.596,74,0.716,75,0.532,77,2.163,87,0.553,118,3.963,132,3.43,172,2.133,173,2.205,178,1.79,286,3.199,300,5.39,304,2.729,313,4.684,394,3.43,404,4.197,490,3.006,491,2.696,1649,6.016,1781,4.796,1825,5.537,1859,4.108,1862,4.401,2364,5.39,2406,4.108,2407,4.698,2408,6.163,2409,4.698,2410,7.931,2411,7.782,2412,6.163,2413,7.302,2414,6.163,2415,4.698,2416,6.163,2417,6.163,2418,6.163,2419,6.163,2420,4.698,2421,4.698,2422,4.698,2423,3.72,2424,4.698,2425,4.698,2426,4.698,2427,4.698,2428,4.698,2429,4.698,2430,4.698]],["title/injectables/UserService.html",[31,0.84,2431,3.276]],["body/injectables/UserService.html",[3,0.156,4,0.14,5,0.124,8,0.254,11,0.771,17,0.567,18,0.012,19,2.087,20,0.156,21,0.009,22,0.009,28,1.518,31,1.301,33,1.979,35,1.073,41,0.864,42,2.494,43,3.735,44,1.211,46,1.53,47,0.898,48,3.072,55,1.109,56,2.589,66,2.915,74,0.728,75,0.565,76,1.847,77,2.298,78,1.567,80,2.21,81,2.392,85,1.847,86,1.727,87,0.587,88,2.392,89,1.113,92,2.224,93,3.347,140,1.671,178,1.843,180,2.635,281,2.728,282,3.952,283,2.728,304,2.839,306,4.68,307,3.398,308,3.398,431,5.076,464,5.076,477,5.076,570,5.076,571,5.076,577,3.193,578,3.193,579,3.193,580,3.952,581,3.952,582,3.952,2431,5.076,2432,4.364,2433,7.473,2434,6.41,2435,4.99,2436,4.99,2437,6.41,2438,4.99,2439,4.99,2440,4.99,2441,4.99]],["title/interfaces/UserState.html",[0,0.564,2442,2.817]],["body/interfaces/UserState.html",[0,0.93,2,1.675,3,0.172,4,0.154,5,0.137,8,0.281,9,1.105,11,0.742,17,0.546,18,0.012,20,0.242,21,0.01,22,0.01,66,2.902,74,0.682,92,2.141,115,5.964,122,2.639,140,2.482,257,3.01,260,4.02,263,4.541,264,4.979,283,3.01,286,3.748,439,3.748,1825,6.003,2408,4.36,2442,5.045,2443,4.36,2444,5.964,2445,5.505,2446,4.814,2447,5.505,2448,5.505,2449,5.505,2450,5.505,2451,5.505,2452,5.505,2453,4.36,2454,5.4,2455,4.814,2456,4.36,2457,4.814,2458,5.964,2459,4.814]],["title/components/UsersComponent.html",[148,0.45,246,1.182]],["body/components/UsersComponent.html",[3,0.058,4,0.052,5,0.047,8,0.095,9,0.501,11,0.43,17,0.573,18,0.012,19,1.617,20,0.058,21,0.004,22,0.004,28,1.203,35,0.518,41,0.535,44,1.229,46,0.855,47,0.646,55,1.017,66,2.734,68,1.848,74,0.534,75,0.211,83,0.827,87,0.22,89,0.416,96,1.144,122,1.895,133,0.856,140,0.626,148,0.43,149,0.568,150,0.971,151,0.606,152,1.242,153,0.606,154,0.606,156,1.282,157,0.606,158,2.442,159,2.366,160,1.002,162,1.002,164,2.105,165,1.49,171,1.869,172,1.07,173,1.415,177,0.827,178,1.834,180,1.889,193,0.606,194,1.002,195,1.002,196,0.606,197,1.651,198,0.606,199,0.606,200,0.534,201,0.606,202,0.517,203,0.606,204,0.534,205,0.606,206,0.534,207,0.606,208,0.534,209,0.756,210,0.606,211,0.534,212,1.002,213,0.534,214,0.606,215,0.534,216,0.606,217,0.534,218,0.457,219,0.606,220,0.534,221,0.606,222,0.534,223,0.606,224,0.534,225,0.55,226,0.606,227,0.534,228,0.606,229,0.534,230,0.606,231,0.534,232,0.471,233,0.534,234,0.606,235,0.534,236,0.568,237,0.606,238,0.534,239,0.606,240,0.534,241,0.606,242,0.534,243,0.606,244,0.534,245,0.606,246,1.313,247,0.606,248,0.606,283,1.021,301,3.736,303,1.838,304,2.43,311,2.332,316,2.659,317,2.441,318,2.659,321,3.727,330,2.784,333,0.975,334,2.591,345,0.933,355,1.021,356,1.021,357,2.999,359,2.912,360,1.021,361,1.072,362,0.975,364,2.391,366,1.774,389,0.768,417,1.481,445,1.195,467,1.072,491,1.072,618,2.692,619,2.692,620,2.391,621,3.334,713,2.53,714,1.129,717,2.27,718,2.692,720,2.865,731,2.901,734,2.105,735,2.105,736,3.334,739,2.391,744,2.53,746,3.131,756,3.81,757,2.27,758,2.4,789,1.195,795,1.195,801,0.933,802,1.021,809,2.162,810,2.27,811,2.53,812,1.978,815,2.692,816,2.692,817,2.105,828,2.53,837,1.272,838,1.195,841,3.674,846,3.149,847,3.149,848,2.692,849,3.149,850,2.692,851,2.999,852,2.27,853,1.195,864,1.272,866,1.195,868,1.272,869,1.364,870,1.272,871,2.105,872,1.272,873,1.272,874,1.272,875,2.105,878,1.364,879,2.53,880,2.887,881,2.27,882,2.391,883,2.784,886,1.869,888,1.272,889,2.779,891,3.356,900,2.257,901,2.448,902,2.257,903,2.257,908,2.105,909,1.272,910,1.195,914,1.774,930,2.941,933,2.391,934,2.779,953,1.129,966,1.129,967,1.129,969,3.079,1041,4.019,1042,2.941,1071,2.53,1075,1.479,1104,1.633,1112,1.272,1115,2.105,1119,1.364,1124,1.072,1130,2.941,1131,1.195,1132,1.978,1133,1.195,1134,1.195,1135,1.195,1136,2.53,1137,2.53,1138,2.53,1139,1.774,1140,1.69,1141,1.195,1142,1.195,1143,1.129,1144,1.195,1145,1.195,1258,1.633,1295,1.364,1327,2.692,1328,2.887,1329,3.718,1336,3.64,1384,3.458,1394,3.64,1398,1.633,1399,1.633,1402,1.633,1404,1.479,1405,1.479,1406,1.479,1417,1.479,1422,3.131,1451,3.458,1452,1.633,1453,3.458,1454,1.633,1455,1.633,1456,1.479,1457,1.633,1458,1.633,1459,1.633,1460,4.453,1461,2.448,1462,1.633,1463,5.824,1464,3.458,1465,3.356,1466,1.633,1467,2.703,1468,4.798,1469,2.703,1470,3.458,1471,1.633,1472,1.364,1473,1.633,1474,1.633,1475,1.633,1476,3.458,1477,1.364,1478,1.364,1479,1.633,1480,1.633,1481,1.479,1482,1.479,1483,1.633,1484,1.479,1485,1.633,1486,4.019,1487,1.479,1488,1.364,1489,1.633,1491,1.479,1827,1.633,1830,1.633,1832,1.633,1833,1.633,1834,1.633,1835,1.633,1840,4.019,1841,4.019,1842,4.019,1843,3.458,1844,3.458,1862,2.941,2353,1.479,2460,1.633,2461,3.954,2462,3.091,2463,3.954,2464,3.954,2465,3.954,2466,4.596,2467,3.091,2468,4.019,2469,3.091,2470,1.868,2471,3.511,2472,3.091,2473,1.868,2474,3.091,2475,1.868,2476,1.868,2477,1.868,2478,1.868,2479,1.868,2480,1.868,2481,3.091,2482,1.868,2483,1.868,2484,1.868,2485,1.868,2486,1.868,2487,1.868,2488,1.868,2489,1.868,2490,1.868,2491,1.868,2492,1.868,2493,1.868,2494,1.633,2495,3.954,2496,5.092,2497,3.091,2498,3.091,2499,1.868,2500,1.868,2501,1.868,2502,1.868,2503,1.868,2504,1.868,2505,1.868,2506,1.868,2507,1.868,2508,3.091,2509,4.596,2510,1.868,2511,1.868,2512,1.868,2513,1.868,2514,3.091,2515,1.868,2516,1.868,2517,3.091,2518,1.868,2519,1.868,2520,3.091,2521,3.091,2522,3.091,2523,3.091,2524,6.075]],["title/modules/UsersModule.html",[371,2.16,2525,3.021]],["body/modules/UsersModule.html",[3,0.147,4,0.132,5,0.117,18,0.012,20,0.147,21,0.009,22,0.009,74,0.792,75,0.532,76,1.738,87,0.553,109,4.467,111,3.006,112,2.841,140,1.573,148,0.511,176,1.863,177,2.08,180,1.931,246,2.265,328,2.003,373,2.163,374,2.837,377,3.08,378,2.348,380,3.369,385,3.369,386,2.453,387,3.944,388,3.727,389,1.931,390,3.218,391,4.401,392,2.568,396,3.727,397,2.841,409,2.568,411,2.453,412,2.841,417,2.954,622,3.369,636,4.881,637,3.72,659,4.197,660,3.199,731,2.837,756,3.727,1152,4.5,1153,4.5,1154,4.5,1155,3.43,1156,4.5,1157,3.43,1158,4.5,1159,3.43,1160,4.5,1161,3.43,1162,4.5,1163,3.43,1164,4.5,1165,3.43,1169,4.5,1170,3.43,1175,3.43,1176,3.43,1179,3.43,1180,3.43,1181,3.43,1852,3.43,1854,5.39,1855,4.108,1856,5.39,1857,4.108,2471,4.979,2494,4.108,2525,5.997,2526,4.108,2527,4.108,2528,4.108,2529,4.698,2530,4.698]],["title/injectables/UsersService.html",[31,0.84,2471,2.647]],["body/injectables/UsersService.html",[3,0.186,4,0.101,5,0.089,8,0.183,11,0.803,17,0.591,18,0.012,19,2.263,20,0.112,21,0.007,22,0.007,28,1.982,31,1.039,33,1.421,35,0.857,36,3.094,41,0.62,42,1.791,43,3.256,44,1.222,46,1.594,47,0.936,48,2.453,50,3.612,52,2.495,53,2.999,54,2.48,55,1.268,56,2.728,64,3.428,66,3.077,68,1.557,72,3.052,74,0.659,75,0.406,76,1.326,77,1.65,78,1.125,80,1.587,81,1.717,83,1.587,84,2.167,85,1.326,86,1.24,87,0.422,88,1.717,89,0.799,90,4.235,92,2.317,93,2.673,95,3.276,96,2.652,97,3.096,99,3.256,101,2.293,107,2.293,138,4.054,171,0.877,260,3.738,283,1.959,428,4.054,430,4.477,439,3.486,467,4.235,490,2.293,1199,3.096,1223,3.134,1225,3.134,1226,2.167,1511,2.617,1862,3.276,2353,5.159,2468,4.477,2471,3.276,2531,3.134,2532,5.119,2533,5.119,2534,3.583,2535,5.119,2536,3.583,2537,6.515,2538,5.119,2539,3.583,2540,5.119,2541,5.119,2542,3.583,2543,5.119,2544,3.583,2545,3.583,2546,5.119,2547,5.119,2548,3.583,2549,5.119,2550,3.583,2551,5.972,2552,3.583,2553,5.119,2554,3.583,2555,3.583,2556,5.119,2557,3.583,2558,3.583,2559,3.583,2560,3.583,2561,3.583,2562,3.583,2563,3.583,2564,5.119,2565,3.583]],["title/interfaces/Wednesday.html",[0,0.564,668,1.832]],["body/interfaces/Wednesday.html",[0,1.144,2,1.619,3,0.166,4,0.149,5,0.133,8,0.271,9,1.082,11,0.833,16,1.76,17,0.535,18,0.012,20,0.262,21,0.009,22,0.009,661,4.019,662,2.66,663,3.337,664,3.337,665,2.038,666,3.231,667,3.231,668,3.388,669,3.231,670,3.231,671,3.231,672,3.231,673,2.779,674,3.836,675,4.191,676,2.66]],["title/coverage.html",[2566,4.483]],["body/coverage.html",[0,1.105,1,1.855,5,0.063,6,2.222,7,2.222,17,0.204,18,0.012,21,0.006,22,0.006,23,1.389,24,2.222,31,1.571,32,1.855,34,2.222,54,0.879,66,0.909,80,2.431,108,3.134,109,1.458,111,1.625,112,1.536,113,2.222,118,1.27,148,0.878,149,0.773,155,2.222,200,0.726,202,0.703,204,0.726,206,0.726,208,0.726,209,0.621,211,0.726,213,0.726,215,0.726,217,0.726,218,0.621,220,0.726,222,0.726,224,0.726,227,0.726,229,0.726,231,0.726,232,0.641,233,0.726,235,0.726,238,0.726,240,0.726,242,0.726,244,0.726,246,0.726,249,1.536,250,4.009,258,2.012,261,2.695,269,2.012,270,2.222,285,1.625,313,1.73,333,2.867,334,3.731,404,1.73,418,2.222,436,1.625,488,1.855,616,1.855,617,2.89,645,2.012,647,2.222,661,1.218,662,3.574,665,0.973,666,1.125,667,1.125,668,1.125,669,1.125,670,1.125,671,1.125,672,1.125,674,1.125,677,1.855,678,3.134,679,2.394,680,3.134,684,1.458,701,2.222,722,2.222,729,2.222,755,1.458,758,1.326,796,1.855,801,1.978,833,2.012,920,3.134,921,2.012,922,2.222,932,1.855,1036,3.134,1182,1.73,1183,2.222,1184,2.222,1188,2.222,1246,2.222,1252,2.012,1270,2.012,1271,2.222,1272,2.222,1273,2.222,1316,1.326,1317,1.625,1318,3.134,1319,2.222,1324,3.599,1325,2.222,1343,1.73,1344,1.73,1373,1.855,1374,2.695,1456,2.012,1492,2.222,1513,2.222,1514,2.222,1561,2.222,1584,3.134,1585,2.012,1587,3.134,1588,2.222,1589,2.222,1599,2.012,1600,2.222,1601,2.222,1613,2.222,1618,2.89,1634,2.222,1655,2.222,1678,2.222,1687,2.012,1688,2.222,1704,2.222,1705,2.012,1706,2.222,1747,1.458,1748,2.222,1753,2.222,1769,2.222,1781,1.536,1861,2.222,1862,1.625,1885,2.222,1893,1.458,1897,2.222,1898,1.855,1912,1.536,1945,2.012,1952,7.478,2065,2.222,2125,2.222,2216,2.222,2230,2.222,2231,2.222,2238,2.222,2261,1.855,2311,2.012,2322,2.222,2327,1.73,2351,2.222,2367,2.222,2379,2.222,2392,2.222,2406,2.222,2423,2.012,2431,2.012,2432,2.222,2442,1.73,2443,4.348,2453,2.012,2454,2.012,2456,2.012,2460,2.222,2471,1.625,2531,2.222,2566,2.012,2567,2.222,2568,2.54,2569,2.54,2570,2.222,2571,3.462,2572,8.543,2573,5.951,2574,6.808,2575,7.953,2576,4.863,2577,5.49,2578,2.54,2579,2.54,2580,2.54,2581,2.222,2582,2.54,2583,2.54,2584,2.54,2585,2.54,2586,2.54,2587,2.54,2588,2.54,2589,2.54,2590,2.222,2591,2.222,2592,4.253,2593,4.253,2594,2.222,2595,2.222,2596,2.222,2597,3.462,2598,2.222,2599,2.222,2600,4.253,2601,5.757,2602,2.222,2603,2.222,2604,2.222,2605,4.253,2606,2.222,2607,2.222,2608,2.222,2609,4.802,2610,2.222,2611,2.222,2612,2.222,2613,2.222,2614,4.802,2615,2.222,2616,2.222,2617,2.222,2618,2.222,2619,4.253,2620,2.222,2621,2.222,2622,2.222,2623,2.222,2624,2.222,2625,5.954,2626,2.222,2627,2.222,2628,2.222,2629,2.222,2630,2.222,2631,2.222,2632,2.222,2633,2.222,2634,5.49,2635,3.958,2636,3.851,2637,4.863,2638,2.54,2639,2.54,2640,2.54,2641,2.54,2642,2.54,2643,2.54,2644,2.54,2645,2.222,2646,2.54,2647,4.802,2648,5.49,2649,2.222,2650,2.54,2651,5.213,2652,2.012,2653,2.222,2654,2.222,2655,2.222,2656,2.222,2657,2.222,2658,2.222,2659,2.222,2660,2.222,2661,2.222,2662,2.222,2663,2.54]],["title/dependencies.html",[374,2.293,2664,2.731]],["body/dependencies.html",[18,0.012,21,0.01,22,0.01,75,0.633,78,1.756,176,2.218,252,4.89,253,3.057,257,3.764,374,2.574,386,2.919,389,2.299,394,4.083,409,3.057,479,4.89,480,4.89,788,4.89,1232,4.083,1853,4.428,2133,4.89,2566,4.428,2665,8.331,2666,5.592,2667,6.022,2668,5.592,2669,6.885,2670,6.022,2671,7.461,2672,5.592,2673,6.885,2674,5.592,2675,6.885,2676,5.592,2677,5.592,2678,5.592,2679,5.592,2680,5.592,2681,5.592,2682,4.89,2683,5.592,2684,5.592,2685,5.592,2686,5.592,2687,5.592,2688,5.592,2689,5.592,2690,5.592,2691,5.592,2692,5.592,2693,5.592,2694,5.592,2695,4.89,2696,5.592,2697,5.592,2698,5.592,2699,5.592,2700,4.428,2701,4.89,2702,5.592,2703,5.592,2704,5.592]],["title/miscellaneous/enumerations.html",[2705,1.979,2706,4.355]],["body/miscellaneous/enumerations.html",[8,0.289,18,0.012,21,0.01,22,0.01,53,2.606,64,4.306,66,2.025,72,2.507,83,3.072,97,4.195,101,4.439,173,3.093,174,3.854,209,1.385,263,3.095,281,3.793,362,3.622,433,4.133,461,4.951,467,3.982,492,5.494,854,4.133,900,4.133,1257,4.951,1644,4.483,2337,6.067,2705,3.249,2706,4.951,2707,6.938,2708,5.661,2709,5.661,2710,5.661,2711,5.661,2712,5.661,2713,5.661,2714,5.661,2715,5.661,2716,5.661,2717,6.938,2718,5.661,2719,4.951,2720,5.661,2721,5.661,2722,5.661,2723,5.661,2724,5.661,2725,5.661,2726,4.951,2727,5.661,2728,5.661,2729,5.661,2730,5.661,2731,5.661,2732,5.661,2733,5.661]],["title/miscellaneous/functions.html",[2705,1.979,2734,4.355]],["body/miscellaneous/functions.html",[8,0.322,11,0.806,17,0.593,18,0.012,21,0.01,22,0.01,46,1.6,47,0.939,55,1.16,66,2.257,250,4.606,254,6.872,262,5.516,281,4.047,303,2.113,2442,5.04,2446,5.516,2651,4.995,2652,5.862,2658,6.474,2705,3.62,2734,5.516,2735,5.516,2736,5.516,2737,5.516]],["title/index.html",[8,0.176,2738,3.016,2739,3.448]],["body/index.html",[4,0.119,18,0.011,21,0.008,22,0.008,28,1.747,47,0.536,53,1.946,54,1.463,133,1.17,138,5.166,148,0.625,152,1.327,159,1.286,174,5.351,187,2.704,225,1.246,236,1.984,288,2.026,317,3.861,321,2.753,328,1.802,352,3.086,381,3.347,487,3.696,523,3.696,676,2.112,714,2.556,744,3.675,852,2.426,910,2.704,1143,2.556,1285,6.873,1439,4.763,1644,3.347,1852,5.513,1853,5.166,1948,3.347,2027,3.696,2194,6.602,2261,3.086,2354,3.696,2567,5.023,2636,4.548,2664,3.347,2667,3.696,2682,3.696,2695,5.023,2700,3.347,2701,5.023,2719,5.023,2738,3.696,2740,7.319,2741,5.743,2742,4.226,2743,6.524,2744,5.743,2745,4.226,2746,6.524,2747,4.226,2748,7.549,2749,4.226,2750,5.743,2751,4.226,2752,3.696,2753,4.226,2754,4.226,2755,4.226,2756,4.226,2757,6.524,2758,6.524,2759,4.226,2760,6.754,2761,4.226,2762,4.226,2763,4.226,2764,4.226,2765,5.743,2766,5.743,2767,6.999,2768,4.226,2769,5.743,2770,5.743,2771,4.226,2772,4.226,2773,4.226,2774,6.524,2775,3.696,2776,4.226,2777,4.226,2778,4.226,2779,6.524,2780,5.743,2781,4.226,2782,3.347,2783,5.743,2784,5.743,2785,4.226,2786,4.226,2787,4.226,2788,4.226,2789,4.226,2790,6.999,2791,6.999,2792,4.226,2793,4.226,2794,3.696,2795,4.226,2796,4.226,2797,4.226,2798,4.226,2799,4.226,2800,4.226,2801,4.226,2802,5.743,2803,4.226,2804,4.226,2805,5.743,2806,4.226,2807,4.226,2808,7.723,2809,4.226,2810,4.226,2811,4.226,2812,4.226,2813,5.743,2814,4.226,2815,4.226,2816,4.226,2817,4.226,2818,4.226,2819,4.226,2820,4.226,2821,4.226,2822,5.743,2823,4.226,2824,4.226,2825,4.226,2826,4.226,2827,5.743,2828,4.226,2829,5.743,2830,5.743,2831,4.226,2832,4.226,2833,4.226,2834,6.999,2835,4.226,2836,4.226,2837,4.226,2838,4.226,2839,4.226,2840,5.743,2841,4.226,2842,4.226,2843,4.226,2844,4.226,2845,4.226,2846,4.226,2847,4.226,2848,4.226,2849,4.226,2850,4.226,2851,5.743,2852,4.226,2853,4.226,2854,4.226,2855,4.226]],["title/modules.html",[373,2.606]],["body/modules.html",[18,0.01,21,0.01,22,0.01,372,4.482,373,2.826,622,3.356,652,4.179,1146,4.482,1262,4.482,1604,4.179,1759,4.482,1847,4.482,2040,4.482,2525,4.482,2670,7.49,2856,8.565,2857,8.565,2858,8.565]],["title/overview.html",[2782,4.483]],["body/overview.html",[2,1.274,18,0.012,21,0.008,22,0.008,33,1.661,109,4.322,150,1.315,200,1.855,202,2.133,204,2.201,206,1.855,208,1.855,211,1.855,213,2.201,215,1.855,217,1.855,220,2.201,222,1.855,224,1.855,227,1.855,229,1.855,231,1.855,233,1.855,235,1.855,238,2.201,240,1.855,242,2.201,244,2.201,246,1.855,328,1.786,372,5.497,373,1.928,374,2.628,375,3.662,376,3.662,377,2.852,378,2.093,622,4.62,623,3.662,624,3.662,625,3.662,652,5.476,653,3.662,654,3.662,655,3.662,755,3.727,801,2.093,1124,2.404,1146,5.974,1147,3.662,1148,3.662,1149,3.662,1262,5.327,1263,3.662,1264,3.662,1265,3.662,1586,3.316,1604,5.126,1605,3.662,1607,3.662,1759,5.726,1760,3.662,1761,3.662,1781,3.926,1847,5.726,1848,3.662,1849,3.662,1850,3.662,1912,3.926,2040,6.106,2041,3.662,2042,3.662,2043,3.662,2471,4.155,2525,5.726,2526,3.662,2527,3.662,2528,3.662,2636,3.316,2782,3.316,2859,4.188,2860,4.188]],["title/properties.html",[9,0.807,2664,2.731]],["body/properties.html",[9,1.093,18,0.011,21,0.011,22,0.011,2700,5.342,2861,6.746]],["title/miscellaneous/typealiases.html",[2705,1.979,2862,4.98]],["body/miscellaneous/typealiases.html",[8,0.34,17,0.612,18,0.011,21,0.011,22,0.011,467,4.386,617,4.864,2705,3.824,2863,6.662,2864,6.662,2865,6.662]],["title/miscellaneous/variables.html",[2705,1.979,2866,4.355]],["body/miscellaneous/variables.html",[5,0.116,8,0.097,9,0.309,16,1.913,17,0.657,18,0.012,21,0.004,22,0.004,23,1.719,25,1.51,26,1.392,27,1.51,28,2.3,29,1.51,30,1.51,47,0.885,52,2.432,54,1.088,55,0.299,57,1.51,66,2.744,72,0.844,73,1.667,80,2.713,92,1.617,148,0.342,158,0.987,168,1.094,172,2.898,173,2.996,174,2.732,180,2.117,209,0.769,218,0.981,232,1.398,250,1.392,251,1.667,253,1.719,255,1.667,256,1.667,258,2.49,259,1.392,263,2.545,264,2.93,269,2.49,271,2.49,281,2.545,285,2.567,288,3.213,295,1.805,304,2.454,307,1.298,308,2.141,313,2.141,317,1.507,345,3.714,412,1.153,433,1.392,439,3.169,524,1.667,531,1.667,577,1.22,578,1.22,579,1.22,598,2.75,618,3.991,619,3.991,620,3.705,621,3.516,663,3.541,664,3.541,665,0.73,666,0.844,667,0.844,668,0.844,669,0.844,670,0.844,671,0.844,672,0.844,674,2.596,675,2.929,714,2.426,723,1.667,724,1.51,725,1.667,726,1.667,801,2.326,1124,3.644,1182,2.141,1185,2.296,1186,2.141,1316,2.095,1320,2.49,1321,2.012,1323,1.719,1618,3.399,1707,2.75,1747,2.672,1749,3.509,1750,3.509,1751,3.509,1752,4.078,1770,2.75,1825,4.047,1862,2.012,1886,2.75,1887,2.49,1888,2.296,1889,2.49,1890,2.296,1891,2.75,1893,2.672,1948,1.51,2212,2.75,2261,1.392,2309,3.509,2311,1.51,2312,1.667,2408,1.51,2423,2.49,2442,1.298,2443,1.51,2444,1.667,2453,2.49,2454,3.177,2455,1.667,2456,2.49,2457,1.667,2458,2.75,2459,1.667,2570,1.667,2571,4.071,2581,1.667,2590,1.667,2591,3.509,2592,1.667,2593,4.071,2594,3.509,2595,3.509,2596,2.75,2597,1.667,2598,3.509,2599,2.75,2600,1.667,2601,5.553,2602,4.071,2603,4.071,2604,2.75,2605,1.667,2606,3.509,2607,3.509,2608,4.071,2609,1.667,2610,4.071,2611,3.509,2612,3.509,2613,3.509,2614,1.667,2615,2.75,2616,3.509,2617,4.503,2618,3.509,2619,1.667,2620,4.071,2621,4.071,2622,2.75,2623,1.667,2624,2.75,2625,1.667,2626,4.071,2627,3.509,2628,3.509,2629,2.75,2630,2.75,2631,2.75,2632,2.75,2633,2.75,2645,2.75,2647,1.667,2649,2.75,2651,1.51,2652,1.51,2653,3.509,2654,3.509,2655,2.75,2656,2.75,2657,3.509,2659,1.667,2660,1.667,2661,1.667,2662,1.667,2705,1.094,2726,3.509,2735,4.847,2736,2.75,2737,2.75,2752,2.75,2760,4.071,2775,1.667,2794,2.75,2866,1.667,2867,1.907,2868,1.907,2869,1.907,2870,1.907,2871,4.012,2872,4.654,2873,1.907,2874,3.144,2875,4.012,2876,4.012,2877,4.654,2878,4.012,2879,4.654,2880,1.907,2881,4.012,2882,6.126,2883,1.907,2884,1.907,2885,3.144,2886,3.144,2887,1.907,2888,1.907,2889,1.907,2890,1.907,2891,4.654,2892,3.144,2893,4.012,2894,1.907,2895,4.012,2896,4.012,2897,4.012,2898,4.012,2899,4.012,2900,3.144,2901,3.144,2902,3.144,2903,3.144,2904,3.144,2905,3.144,2906,3.144,2907,3.144,2908,3.144,2909,3.144,2910,1.907,2911,3.144,2912,1.907,2913,1.907,2914,1.907,2915,1.907,2916,1.907,2917,1.907,2918,1.907,2919,1.907,2920,1.907,2921,1.907,2922,1.907,2923,1.907,2924,3.144,2925,1.907,2926,1.907,2927,1.907,2928,4.012,2929,4.012,2930,1.907,2931,1.907,2932,1.907,2933,1.907,2934,1.907,2935,1.907,2936,1.907,2937,1.907,2938,1.907,2939,1.907,2940,1.907,2941,1.907,2942,1.907,2943,1.907,2944,1.907,2945,1.907,2946,1.907,2947,4.012,2948,4.012,2949,1.907,2950,1.907,2951,1.907,2952,1.907,2953,3.144,2954,3.144,2955,3.144,2956,3.144,2957,3.144,2958,5.149,2959,5.149,2960,5.149,2961,5.149,2962,1.907,2963,1.907,2964,1.907,2965,1.907,2966,1.907,2967,1.907,2968,1.907,2969,1.907,2970,1.907,2971,1.907]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":334,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2861,"title":{},"body":{"properties.html":{}}}],["0.0.0.0:8181",{"_index":2831,"title":{},"body":{"index.html":{}}}],["0.0.6",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["0.053",{"_index":1633,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0.07",{"_index":808,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["0.096",{"_index":2207,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1.2",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":2209,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.12.7",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":2208,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.16",{"_index":2199,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1s",{"_index":2316,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.2",{"_index":2289,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.23",{"_index":2200,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.258",{"_index":368,"title":{},"body":{"components/AuthComponent.html":{}}}],["0.25em",{"_index":2344,"title":{},"body":{"components/SidebarComponent.html":{}}}],["0.25rem",{"_index":2034,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.2s",{"_index":917,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/ServerErrorComponent.html":{}}}],["0.325",{"_index":2024,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.3s",{"_index":2318,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.41",{"_index":1723,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.49",{"_index":1722,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.4rem",{"_index":1486,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["0.4s",{"_index":2308,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5",{"_index":2263,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5em",{"_index":2190,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.5rem",{"_index":734,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["0.5s",{"_index":2299,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.676",{"_index":2388,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.7",{"_index":2266,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.75",{"_index":2257,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.7s",{"_index":2307,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8",{"_index":2254,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8rem",{"_index":2180,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.8s",{"_index":2292,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.95",{"_index":2272,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.97",{"_index":1724,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.9rem",{"_index":2201,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0/1",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0fe271d28c2d",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":1742,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0rem",{"_index":2028,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0s",{"_index":2310,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1",{"_index":345,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["1.05",{"_index":2255,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.1",{"_index":2253,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.15",{"_index":2258,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.2.0",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["1.3s",{"_index":2301,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.5rem",{"_index":1466,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["1.5s",{"_index":326,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["1.6s",{"_index":2300,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.7s",{"_index":2305,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.jpg",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":801,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.1",{"_index":1135,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["100",{"_index":333,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["1000",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["10000",{"_index":843,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["100px",{"_index":2196,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["109.75px",{"_index":2315,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["10px",{"_index":719,"title":{},"body":{"components/FooterComponent.html":{},"components/ServerErrorComponent.html":{}}}],["10rem",{"_index":737,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["11",{"_index":1143,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["11111111",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1421,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{}}}],["12.0",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345678",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124px",{"_index":351,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["13.0.2",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["13.1.2",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["13.2.6",{"_index":2744,"title":{},"body":{"index.html":{}}}],["13.3.1",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["13.3.2",{"_index":2667,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.0.0",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1431,"title":{},"body":{"components/IngredientComponent.html":{}}}],["14rem",{"_index":913,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["14s",{"_index":1720,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15",{"_index":2259,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15.0",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150px",{"_index":1327,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["156px",{"_index":1732,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15px",{"_index":2284,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15rem",{"_index":2031,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["16",{"_index":2636,"title":{},"body":{"coverage.html":{},"index.html":{},"overview.html":{}}}],["16.13.02",{"_index":2789,"title":{},"body":{"index.html":{}}}],["17px",{"_index":2038,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["18",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2032,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["1px",{"_index":1481,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1rem",{"_index":1422,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1s",{"_index":1727,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["2",{"_index":1124,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0a",{"_index":2804,"title":{},"body":{"index.html":{}}}],["2.2.1",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/11",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":346,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["201",{"_index":2718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2021",{"_index":710,"title":{},"body":{"components/FooterComponent.html":{}}}],["2022",{"_index":711,"title":{},"body":{"components/FooterComponent.html":{}}}],["204",{"_index":2717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["20deg",{"_index":1738,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["20px",{"_index":721,"title":{},"body":{"components/FooterComponent.html":{}}}],["213",{"_index":1137,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["22",{"_index":2645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["221",{"_index":2205,"title":{},"body":{"components/RecipesComponent.html":{}}}],["227",{"_index":2377,"title":{},"body":{"components/TabsComponent.html":{}}}],["229",{"_index":2206,"title":{},"body":{"components/RecipesComponent.html":{}}}],["23",{"_index":2859,"title":{},"body":{"overview.html":{}}}],["230",{"_index":1138,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["234",{"_index":2023,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/TitleComponent.html":{}}}],["24",{"_index":2860,"title":{},"body":{"overview.html":{}}}],["24.2mbaprès",{"_index":2814,"title":{},"body":{"index.html":{}}}],["24t14:15:22z",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2238,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["250px",{"_index":2193,"title":{},"body":{"components/RecipesComponent.html":{}}}],["254",{"_index":2387,"title":{},"body":{"components/TitleComponent.html":{}}}],["255",{"_index":2378,"title":{},"body":{"components/TabsComponent.html":{}}}],["25px",{"_index":2276,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["25rem",{"_index":1459,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["26.67",{"_index":2246,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["28.33",{"_index":2239,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["280px",{"_index":2192,"title":{},"body":{"components/RecipesComponent.html":{}}}],["28cb65260f81",{"_index":2812,"title":{},"body":{"index.html":{}}}],["28d1",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":2203,"title":{},"body":{"components/RecipesComponent.html":{}}}],["2rem",{"_index":1328,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["2s",{"_index":1729,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["3",{"_index":2309,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["3.jpg",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/5",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1487,"title":{},"body":{"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UsersComponent.html":{}}}],["300",{"_index":1743,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{}}}],["3000",{"_index":880,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["30px",{"_index":916,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["31",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["310px",{"_index":1733,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["33",{"_index":2261,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["35px",{"_index":350,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["378.729px",{"_index":2314,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["38000",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":2035,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["3s",{"_index":1714,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4",{"_index":2311,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":337,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["400",{"_index":1295,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["401",{"_index":1305,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["401b",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1307,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["4200:4200",{"_index":2819,"title":{},"body":{"index.html":{}}}],["4201docker",{"_index":2850,"title":{},"body":{"index.html":{}}}],["44",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":2240,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["45deg",{"_index":2277,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["46.67",{"_index":2247,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["47",{"_index":2264,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["476.268px",{"_index":2295,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["48.33",{"_index":2241,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["485.125px",{"_index":2303,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["495057",{"_index":1432,"title":{},"body":{"components/IngredientComponent.html":{}}}],["4b4b62",{"_index":1745,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4e00",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":2210,"title":{},"body":{"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["4s",{"_index":1731,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["5",{"_index":2312,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":348,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["500",{"_index":1310,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["5000",{"_index":1296,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["50px",{"_index":2278,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.33px",{"_index":2304,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.67",{"_index":2242,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["55",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["550px",{"_index":839,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["576px",{"_index":2211,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6/19",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":833,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["607d8b",{"_index":1455,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["63",{"_index":2267,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["640px",{"_index":2039,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["65",{"_index":2256,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["66",{"_index":339,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["6px",{"_index":2198,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6rem",{"_index":740,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["6s",{"_index":331,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["7",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2163,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["700",{"_index":2179,"title":{},"body":{"components/RecipesComponent.html":{}}}],["75",{"_index":2213,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["75px",{"_index":2281,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["77",{"_index":2270,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["7rem",{"_index":912,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["7s",{"_index":1726,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1846,"title":{},"body":{"components/ProfileComponent.html":{}}}],["80",{"_index":341,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["80/tcp",{"_index":2832,"title":{},"body":{"index.html":{}}}],["85",{"_index":2271,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["86a8c0",{"_index":1443,"title":{},"body":{"components/IngredientComponent.html":{}}}],["89",{"_index":349,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["8px",{"_index":1450,"title":{},"body":{"components/IngredientComponent.html":{},"components/LoginComponent.html":{}}}],["8rem",{"_index":2185,"title":{},"body":{"components/RecipesComponent.html":{}}}],["90",{"_index":342,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["93.33",{"_index":2243,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["95",{"_index":2248,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["950",{"_index":370,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["96.67",{"_index":2244,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["960px",{"_index":1479,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["96560464",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96b05134",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97px",{"_index":2296,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["9]{9",{"_index":1834,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["9c39",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fb7ed",{"_index":336,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["_franchisee",{"_index":861,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["_httprequest",{"_index":2707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_recipe",{"_index":2174,"title":{},"body":{"components/RecipesComponent.html":{}}}],["_recipetype",{"_index":1899,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["_res",{"_index":1113,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["_title",{"_index":2385,"title":{},"body":{"components/TitleComponent.html":{}}}],["_user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isadmin",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isfranchisee",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.roles.foreach((e",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["a952",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absolute",{"_index":354,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/LoadingComponent.html":{}}}],["acceder",{"_index":1303,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["accept",{"_index":875,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["acceptbuttonstyleclass",{"_index":874,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["access",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["accesstoken",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired(data",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenmodel",{"_index":1,"title":{"interfaces/AccessTokenModel.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["action",{"_index":264,"title":{},"body":{"interfaces/AppState.html":{},"components/RecipesComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["action's",{"_index":2450,"title":{},"body":{"interfaces/UserState.html":{}}}],["action.userdetails",{"_index":2458,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":254,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":255,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2408,"title":{},"body":{"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":1593,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["active",{"_index":803,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["actual_component",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":138,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["addrecipe",{"_index":1189,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["addrecipe(item",{"_index":1196,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["address",{"_index":23,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.model",{"_index":727,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["address_id",{"_index":57,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":69,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressservice",{"_index":32,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["addrole",{"_index":2532,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrole(user",{"_index":2535,"title":{},"body":{"injectables/UsersService.html":{}}}],["addstarrecipe",{"_index":1237,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["admin",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["adminaccess",{"_index":2653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["adresse",{"_index":892,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ago",{"_index":2813,"title":{},"body":{"index.html":{}}}],["ajout",{"_index":1403,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ajouter",{"_index":829,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["aliases",{"_index":2863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":364,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["allergen",{"_index":1320,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":2283,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["alternate",{"_index":1715,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["angular",{"_index":1852,"title":{},"body":{"modules/ProfileModule.html":{},"components/RecipesComponent.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["angular.json",{"_index":2794,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":788,"title":{},"body":{"components/FranchiseeComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":76,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["animate",{"_index":787,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["animate('400ms",{"_index":805,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["animation",{"_index":324,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["animations",{"_index":798,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["antialiased",{"_index":1435,"title":{},"body":{"components/IngredientComponent.html":{}}}],["api",{"_index":135,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["apibaseurl",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitokeninterceptorservice",{"_index":109,"title":{"interceptors/ApiTokenInterceptorService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiurl",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":149,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["application",{"_index":2838,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2836,"title":{},"body":{"index.html":{}}}],["appstate",{"_index":249,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["appurl",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":2761,"title":{},"body":{"index.html":{}}}],["asobservable",{"_index":1695,"title":{},"body":{"injectables/MessagesService.html":{}}}],["assign",{"_index":960,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["async",{"_index":114,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["attached",{"_index":1500,"title":{},"body":{"injectables/IngredientService.html":{}}}],["attachment",{"_index":1446,"title":{},"body":{"components/IngredientComponent.html":{}}}],["attachpictures",{"_index":2066,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(picture",{"_index":2075,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(this.picture",{"_index":2001,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["attched",{"_index":1569,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["attention",{"_index":60,"title":{},"body":{"injectables/AddressService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["au",{"_index":1313,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["auth",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component.html",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/auth.component",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_code_verifier",{"_index":2730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_state",{"_index":2728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_user_token",{"_index":2732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcomponent",{"_index":200,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticated",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated.guard.ts",{"_index":1589,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authenticated.guard.ts:15",{"_index":1591,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated.guard.ts:18",{"_index":1594,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated/is",{"_index":1588,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":372,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":145,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["authorization_code",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken(code",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize?${query.tostring",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":302,"title":{},"body":{"components/AuthComponent.html":{}}}],["authservice",{"_index":118,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["auto",{"_index":841,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["automatically",{"_index":2753,"title":{},"body":{"index.html":{}}}],["autorisation",{"_index":616,"title":{"interfaces/Autorisation.html":{}},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["autorisations",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autorise",{"_index":1302,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["available_at",{"_index":1886,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["availabledate",{"_index":1977,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["avatarmodule",{"_index":1267,"title":{},"body":{"modules/HomeModule.html":{}}}],["await",{"_index":141,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["b94a",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":2297,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["backend",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["background",{"_index":366,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["badgemodule",{"_index":628,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["bahar",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baixo",{"_index":1718,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["base",{"_index":2018,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["base_price",{"_index":1887,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":2449,"title":{},"body":{"interfaces/UserState.html":{}}}],["basezindex",{"_index":842,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["basic",{"_index":2026,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["bearer",{"_index":146,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["before",{"_index":266,"title":{},"body":{"interfaces/AppState.html":{}}}],["behaviorsubject",{"_index":683,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(false",{"_index":1647,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":686,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["between",{"_index":910,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["bezier(0.1",{"_index":1721,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bezier(0.86",{"_index":807,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["bien",{"_index":854,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bientôt",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{},"components/RecipesComponent.html":{}}}],["bill",{"_index":2320,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["blink",{"_index":2236,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":1329,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["body",{"_index":1425,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{}}}],["bold",{"_index":1489,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["boolean",{"_index":303,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":914,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["bottom",{"_index":356,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":918,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["break",{"_index":1304,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["browse",{"_index":2858,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2670,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":2760,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":733,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{}}}],["buttonmodule",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["c",{"_index":2786,"title":{},"body":{"index.html":{}}}],["c47406527d49",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["calc(100",{"_index":911,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["calendar",{"_index":1457,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["calendarmodule",{"_index":2052,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["calibri",{"_index":2349,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["canaccess",{"_index":2652,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canaccess(user",{"_index":2737,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":1590,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["canactivate(route",{"_index":1592,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["capabilities",{"_index":2777,"title":{},"body":{"index.html":{}}}],["card",{"_index":2202,"title":{},"body":{"components/RecipesComponent.html":{}}}],["case",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["catalog",{"_index":1213,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["catch",{"_index":1675,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["catcherror",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["catcherror((err",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror((httperrorresponse",{"_index":1244,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["category",{"_index":2187,"title":{},"body":{"components/RecipesComponent.html":{}}}],["causing",{"_index":689,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["ccbe1c",{"_index":343,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{}}}],["ce",{"_index":877,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["cell",{"_index":1772,"title":{},"body":{"components/ProfileComponent.html":{}}}],["center",{"_index":363,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["cette",{"_index":2168,"title":{},"body":{"components/RecipesComponent.html":{}}}],["challenge",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["challenger",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["champ",{"_index":1121,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["change",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["changed",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1784,"title":{},"body":{"components/ProfileComponent.html":{}}}],["check",{"_index":2701,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["checkboxmodule",{"_index":634,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["checkerror",{"_index":1904,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["checkerror(controlname",{"_index":1914,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["chez",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":2773,"title":{},"body":{"index.html":{}}}],["choose",{"_index":2027,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{}}}],["chrome",{"_index":1131,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["cima",{"_index":1725,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["circle",{"_index":323,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["city",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["class*=\"col",{"_index":1420,"title":{},"body":{"components/IngredientComponent.html":{}}}],["clear",{"_index":1485,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":2743,"title":{},"body":{"index.html":{}}}],["client",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["client_id",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["clone",{"_index":2803,"title":{},"body":{"index.html":{}}}],["closed_at",{"_index":663,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["closeerrorhttp",{"_index":694,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["cluster_authmodule",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":623,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":624,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":625,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_defaultmodule",{"_index":653,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_declarations",{"_index":654,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_exports",{"_index":655,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule",{"_index":1147,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_declarations",{"_index":1149,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_providers",{"_index":1148,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1263,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1265,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_exports",{"_index":1264,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule",{"_index":1605,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_exports",{"_index":1607,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_imports",{"_index":1606,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["cluster_principalmodule",{"_index":1760,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_declarations",{"_index":1761,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_imports",{"_index":1762,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["cluster_profilemodule",{"_index":1848,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1849,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":1850,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule",{"_index":2041,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_declarations",{"_index":2042,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_providers",{"_index":2043,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2526,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":2528,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":2527,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":288,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/IngreType.html":{},"components/ProfileComponent.html":{},"interfaces/RecipeType.html":{},"interfaces/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code_challenge",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_challenge_method",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verifier",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verify",{"_index":2729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":1419,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{}}}],["color",{"_index":330,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["column",{"_index":908,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["command",{"_index":2774,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["complete",{"_index":314,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["compodoc",{"_index":2834,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2840,"title":{},"body":{"index.html":{}}}],["component",{"_index":148,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/components.module",{"_index":658,"title":{},"body":{"modules/DefaultModule.html":{}}}],["componentsmodule",{"_index":622,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["compose",{"_index":2851,"title":{},"body":{"index.html":{}}}],["compte",{"_index":2724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["concatmap",{"_index":1649,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/UserEffects.html":{}}}],["concatmap((action",{"_index":2417,"title":{},"body":{"injectables/UserEffects.html":{}}}],["config",{"_index":1039,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.address",{"_index":1067,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.franchisee",{"_index":1066,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.ingredients",{"_index":1955,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.ingredientstypes",{"_index":1958,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.mode",{"_index":1065,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.pictures",{"_index":1962,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipe",{"_index":1954,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipetype",{"_index":1957,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.schedule",{"_index":1068,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["configuration",{"_index":2841,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":869,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["confirmation",{"_index":738,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["confirmationservice",{"_index":756,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/ProfileModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["confirmdialogmodule",{"_index":1169,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["console.info('complete",{"_index":315,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log",{"_index":887,"title":{},"body":{"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["console.log(\"désol",{"_index":1306,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log(\"service",{"_index":2558,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('[authervice",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('[authservice",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('[intercept",{"_index":134,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["console.log('actions",{"_index":267,"title":{},"body":{"interfaces/AppState.html":{}}}],["console.log('auth",{"_index":293,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('désol",{"_index":1308,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log('erreur",{"_index":1804,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('get",{"_index":964,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["console.log('je",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('picture",{"_index":2011,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('profile",{"_index":1826,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('refresh",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('res",{"_index":1554,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{}}}],["console.log('return",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('selected",{"_index":2005,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('service",{"_index":1224,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["console.log('set",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('state",{"_index":265,"title":{},"body":{"interfaces/AppState.html":{}}}],["console.log('topbar",{"_index":312,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["console.log('try",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('user",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.user",{"_index":1799,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":140,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["constants/message.const",{"_index":84,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["constants/role.const",{"_index":1868,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(actions",{"_index":2407,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(authservice",{"_index":117,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(franchiseeservice",{"_index":754,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["constructor(http",{"_index":42,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(ingredientservice",{"_index":1342,"title":{},"body":{"components/IngredientComponent.html":{}}}],["constructor(ingredienttypeservice",{"_index":1523,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["constructor(loadingservice",{"_index":1619,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(messageservice",{"_index":1275,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(primengconfig",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":1629,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(recipeservice",{"_index":2130,"title":{},"body":{"components/RecipesComponent.html":{}}}],["constructor(ref",{"_index":1044,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["constructor(store",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(usersservice",{"_index":2470,"title":{},"body":{"components/UsersComponent.html":{}}}],["contactdialog",{"_index":742,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["container",{"_index":352,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["conteneur",{"_index":2817,"title":{},"body":{"index.html":{}}}],["content",{"_index":362,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contentstyle",{"_index":836,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["continue",{"_index":1284,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["contractor",{"_index":2726,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":1917,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["cookie",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["copyright",{"_index":707,"title":{},"body":{"components/FooterComponent.html":{}}}],["country",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":1444,"title":{},"body":{"components/IngredientComponent.html":{}}}],["coverage",{"_index":2566,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["cr",{"_index":1555,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["create",{"_index":53,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create_by",{"_index":723,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[auth",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaddress",{"_index":37,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(create",{"_index":49,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(this.address",{"_index":1108,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["created",{"_index":2719,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["created_by",{"_index":1896,"title":{},"body":{"interfaces/Recipe.html":{}}}],["createeffect",{"_index":2410,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createfeatureselector('user",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createingredient",{"_index":1493,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(item",{"_index":1496,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredienttype",{"_index":1562,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(item",{"_index":1565,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(this.ingretype",{"_index":1553,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["createnewfranchisee",{"_index":751,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["createnewrecipe",{"_index":2129,"title":{},"body":{"components/RecipesComponent.html":{}}}],["createnewuser",{"_index":2466,"title":{},"body":{"components/UsersComponent.html":{}}}],["createrecipe",{"_index":2067,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createrecipe(item",{"_index":2077,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createreducer",{"_index":2444,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["createschedule",{"_index":2217,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createschedule(create",{"_index":2219,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createselector",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserdetails",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserstate",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["création",{"_index":1115,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["crée",{"_index":855,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["créer",{"_index":2816,"title":{},"body":{"index.html":{}}}],["csprng",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["csuppression",{"_index":884,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ctrl",{"_index":2785,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":806,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["current",{"_index":1452,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["current_user",{"_index":2733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currentrole",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":1471,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["custom",{"_index":319,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["customers",{"_index":1464,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d",{"_index":2818,"title":{},"body":{"index.html":{}}}],["d'alerte",{"_index":2138,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'ingredient",{"_index":1400,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["d'ingrédient",{"_index":1417,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["d'une",{"_index":2137,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'utilisateur",{"_index":2517,"title":{},"body":{"components/UsersComponent.html":{}}}],["d.p",{"_index":2373,"title":{},"body":{"components/TabsComponent.html":{}}}],["d4dff7",{"_index":338,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["d8dadc",{"_index":1454,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d8f6f6",{"_index":2019,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["d\\'ingredient",{"_index":1490,"title":{},"body":{"components/IngredientComponent.html":{}}}],["d\\'ingrédient",{"_index":1491,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["daemon",{"_index":2828,"title":{},"body":{"index.html":{}}}],["dans",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["dash",{"_index":325,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dasharray",{"_index":344,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashoffset",{"_index":347,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["data",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["data.expire_at",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.expires_in",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.refresh_token",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expire_at",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expires_in",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["datatable",{"_index":1463,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["datatable.p",{"_index":1462,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["dataviewmodule",{"_index":2046,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["date",{"_index":1892,"title":{},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{}}}],["date('2019",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().getdate",{"_index":1969,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date().setdate(new",{"_index":1968,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(new",{"_index":1967,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(this.recipe?.available_at",{"_index":1970,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date.now",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["datepicker",{"_index":1458,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["daygrid",{"_index":1448,"title":{},"body":{"components/IngredientComponent.html":{}}}],["days",{"_index":673,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{}}}],["dbe6fdd7",{"_index":2390,"title":{},"body":{"components/TitleComponent.html":{}}}],["de",{"_index":883,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["declarations",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dee2e6",{"_index":2191,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deep",{"_index":318,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["default.component",{"_index":657,"title":{},"body":{"modules/DefaultModule.html":{}}}],["default.component.html",{"_index":649,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":648,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default/default.component",{"_index":1610,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["default/default.module",{"_index":1611,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["defaultcomponent",{"_index":202,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultmodule",{"_index":652,"title":{"modules/DefaultModule.html":{}},"body":{"modules/DefaultModule.html":{},"modules/LayoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["defined",{"_index":44,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["defining",{"_index":2451,"title":{},"body":{"interfaces/UserState.html":{}}}],["defone",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["delay",{"_index":2294,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["delete",{"_index":64,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["delete(`${environment.apibaseurl}/addresses/${id",{"_index":106,"title":{},"body":{"injectables/AddressService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/${id",{"_index":1512,"title":{},"body":{"injectables/IngredientService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/types/${id",{"_index":1583,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["delete(`${environment.apibaseurl}/users/${id",{"_index":2565,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete(franchisee",{"_index":761,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["deleteaddress",{"_index":38,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteaddress(id",{"_index":58,"title":{},"body":{"injectables/AddressService.html":{}}}],["deletefranchisee",{"_index":1190,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deletefranchisee(id",{"_index":1200,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deleteingredient",{"_index":1335,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["deleteingredient(id",{"_index":1498,"title":{},"body":{"injectables/IngredientService.html":{}}}],["deleteingredient(ingredient",{"_index":1346,"title":{},"body":{"components/IngredientComponent.html":{}}}],["deleteingredienttype",{"_index":1519,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(id",{"_index":1567,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(ingretype",{"_index":1525,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleteingredienttype(ingretype.id",{"_index":1557,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleterecipe",{"_index":2068,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["deleterecipe(id",{"_index":2080,"title":{},"body":{"injectables/RecipeService.html":{}}}],["deleterecipe(recipe",{"_index":2134,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deletes",{"_index":61,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteuser",{"_index":2533,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":2538,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":374,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":2518,"title":{},"body":{"components/UsersComponent.html":{}}}],["description",{"_index":52,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/TitleComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dessert",{"_index":2088,"title":{},"body":{"injectables/RecipeService.html":{}}}],["detail",{"_index":851,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["detail'},{'name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["detail.component",{"_index":1178,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["detail.component.html",{"_index":924,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.scss",{"_index":923,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts",{"_index":922,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:100",{"_index":937,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:108",{"_index":943,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:112",{"_index":940,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":947,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":946,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":948,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":944,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":952,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":951,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":945,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":936,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":949,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":941,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:61",{"_index":939,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":938,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail.component.ts:90",{"_index":942,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["detail/franchisee",{"_index":921,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"coverage.html":{}}}],["details",{"_index":1948,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["details.module.ts",{"_index":2045,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/ingredient",{"_index":1513,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts",{"_index":1325,"title":{},"body":{"components/IngredientComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts:107",{"_index":1358,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:115",{"_index":1356,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:162",{"_index":1347,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:191",{"_index":1352,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:201",{"_index":1348,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:32",{"_index":1361,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:34",{"_index":1363,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:36",{"_index":1369,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:37",{"_index":1366,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:39",{"_index":1365,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:40",{"_index":1367,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:42",{"_index":1359,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:43",{"_index":1364,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:44",{"_index":1368,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:46",{"_index":1360,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:48",{"_index":1362,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:49",{"_index":1345,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:61",{"_index":1355,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:66",{"_index":1349,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:77",{"_index":1350,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:85",{"_index":1353,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:99",{"_index":1354,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/recipe",{"_index":2044,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/recipe/recipe",{"_index":1897,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts",{"_index":2125,"title":{},"body":{"components/RecipesComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts:103",{"_index":2132,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:137",{"_index":2135,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:166",{"_index":2143,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:41",{"_index":2152,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:43",{"_index":2150,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:44",{"_index":2151,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:45",{"_index":2145,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:46",{"_index":2146,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:47",{"_index":2148,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:49",{"_index":2154,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:50",{"_index":2153,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:51",{"_index":2149,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:52",{"_index":2131,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:58",{"_index":2144,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:59",{"_index":2147,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:64",{"_index":2139,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:75",{"_index":2141,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:88",{"_index":2140,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/tabs/tabs.component.ts",{"_index":2367,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["details/tabs/tabs.component.ts:13",{"_index":2372,"title":{},"body":{"components/TabsComponent.html":{}}}],["details/tabs/tabs.component.ts:8",{"_index":2371,"title":{},"body":{"components/TabsComponent.html":{}}}],["detectroutingongoing",{"_index":1617,"title":{},"body":{"components/LoadingComponent.html":{}}}],["determining",{"_index":2448,"title":{},"body":{"interfaces/UserState.html":{}}}],["dev",{"_index":2750,"title":{},"body":{"index.html":{}}}],["development",{"_index":2745,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["dgitflow",{"_index":2852,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":739,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dialog'},{'name",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dialog.component",{"_index":797,"title":{},"body":{"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["dialog.component.html",{"_index":1038,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1037,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1036,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:109",{"_index":1919,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:110",{"_index":1047,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:121",{"_index":1929,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1920,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:138",{"_index":1053,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:158",{"_index":1051,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:159",{"_index":1933,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:174",{"_index":1926,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":1928,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:183",{"_index":1923,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:188",{"_index":1930,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":1932,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:201",{"_index":1916,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1059,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1056,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1058,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1057,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1054,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1061,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1938,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1062,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1046,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1934,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1060,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1055,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1936,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1942,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1937,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1941,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1940,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":1913,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":1050,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1939,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1935,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":1049,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":1921,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:80",{"_index":1918,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":1048,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1925,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:99",{"_index":1052,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog/franchisee",{"_index":796,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"coverage.html":{}}}],["dialog/recipe",{"_index":1898,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":1156,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dialogservice",{"_index":730,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["dimanche",{"_index":1033,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["diner",{"_index":661,"title":{"interfaces/Diner.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["direction",{"_index":907,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["directive",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2759,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2764,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{},"injectables/UserEffects.html":{}}}],["display",{"_index":359,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{}}}],["disponiblit",{"_index":2015,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dist",{"_index":2763,"title":{},"body":{"index.html":{}}}],["div",{"_index":1424,"title":{},"body":{"components/IngredientComponent.html":{}}}],["dividermodule",{"_index":2058,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["docker",{"_index":2808,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":2805,"title":{},"body":{"index.html":{}}}],["dockerize",{"_index":2806,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2567,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dosign",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["dot",{"_index":1449,"title":{},"body":{"components/IngredientComponent.html":{}}}],["down",{"_index":1950,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["drop",{"_index":1949,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dropdown",{"_index":1472,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dropdownmodule",{"_index":636,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["du",{"_index":885,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["dubeau",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dubois",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duration",{"_index":2293,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["during",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2133,"title":{},"body":{"components/RecipesComponent.html":{},"dependencies.html":{}}}],["dynamicdialog",{"_index":835,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["dynamicdialogconfig",{"_index":1045,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dynamicdialogmodule",{"_index":1166,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["dynamicdialogref",{"_index":778,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["définitivement",{"_index":2170,"title":{},"body":{"components/RecipesComponent.html":{}}}],["désol",{"_index":1299,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["e",{"_index":1011,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["e.id",{"_index":1009,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["e.roles",{"_index":2498,"title":{},"body":{"components/UsersComponent.html":{}}}],["e2e",{"_index":2771,"title":{},"body":{"index.html":{}}}],["e['code",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["ease",{"_index":327,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["edge",{"_index":1145,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["edit",{"_index":1235,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["editing",{"_index":1773,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmode",{"_index":743,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["editmodeemail",{"_index":1775,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodefirstname",{"_index":1776,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodelastname",{"_index":1777,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodephone",{"_index":1778,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editprofilecomponent",{"_index":1860,"title":{},"body":{"modules/ProfileModule.html":{}}}],["edituser",{"_index":2467,"title":{},"body":{"components/UsersComponent.html":{}}}],["edituser(user",{"_index":2474,"title":{},"body":{"components/UsersComponent.html":{}}}],["effect",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["effectsmodule.forfeature([usereffects",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["element",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ellipsis",{"_index":2184,"title":{},"body":{"components/RecipesComponent.html":{}}}],["email",{"_index":621,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["ember",{"_index":2273,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["emitted",{"_index":2302,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["en",{"_index":900,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["end",{"_index":2194,"title":{},"body":{"components/RecipesComponent.html":{},"index.html":{}}}],["endpoints",{"_index":2337,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["endpoints.logout",{"_index":2343,"title":{},"body":{"components/SidebarComponent.html":{}}}],["entotal",{"_index":1559,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["entrycomponents",{"_index":1151,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["enumerations",{"_index":2706,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":80,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/contractors/${create.id}/times",{"_index":2228,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/recipes",{"_index":1229,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/times",{"_index":2227,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${id}/recipes/${recipe.id",{"_index":1241,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${update.id}/recipes/${recipe.id",{"_index":1239,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/users/${user.id}/roles",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apibaseurl}/users/current",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthcallbackuri",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthclientid",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthproviderbaseurl",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.prod.ts",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1803,"title":{},"body":{"components/ProfileComponent.html":{}}}],["err.message",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.statustext",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["erreur",{"_index":881,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error",{"_index":311,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'name",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error('failed",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('state",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('user",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('workflow",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error.message",{"_index":1315,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error(httperrorresponse",{"_index":2103,"title":{},"body":{"injectables/RecipeService.html":{}}}],["error.component",{"_index":646,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["error.component.html",{"_index":2233,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":2232,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":2231,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:13",{"_index":2235,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:8",{"_index":2234,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":886,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error.error.message",{"_index":2515,"title":{},"body":{"components/UsersComponent.html":{}}}],["error.interceptor.ts",{"_index":1273,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:13",{"_index":1276,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:18",{"_index":1288,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:30",{"_index":1278,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":1294,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error/http",{"_index":1272,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error/server",{"_index":645,"title":{},"body":{"modules/ComponentsModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error?.error?.message",{"_index":1298,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errordatahttp",{"_index":677,"title":{"interfaces/ErrorDataHttp.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["errorhttp",{"_index":687,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorhttpservice",{"_index":684,"title":{"injectables/ErrorHttpService.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["errorhttpsubject",{"_index":685,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorname",{"_index":1915,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["errors",{"_index":1689,"title":{},"body":{"injectables/MessagesService.html":{}}}],["est",{"_index":853,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["etes",{"_index":1404,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["event",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["event.checked",{"_index":1410,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["event.files",{"_index":2009,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.files[0",{"_index":2006,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.target",{"_index":819,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["event.url",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url.match",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value",{"_index":826,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["eventtarget",{"_index":2160,"title":{},"body":{"components/RecipesComponent.html":{}}}],["example",{"_index":2807,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":872,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["execute",{"_index":2769,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2159,"title":{},"body":{"components/RecipesComponent.html":{}}}],["exit",{"_index":2784,"title":{},"body":{"index.html":{}}}],["expire_at",{"_index":12,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["explorer",{"_index":1142,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["exports",{"_index":627,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{}}}],["express",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["external_link",{"_index":1749,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["eyes",{"_index":2319,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["f10f652d3da9",{"_index":2825,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1281,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["false",{"_index":304,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1426,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["fancy",{"_index":2237,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fb",{"_index":933,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["fc",{"_index":1447,"title":{},"body":{"components/IngredientComponent.html":{}}}],["feature",{"_index":259,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"miscellaneous/variables.html":{}}}],["ffa62b",{"_index":340,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["ffffff",{"_index":1442,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ffffffc7",{"_index":2391,"title":{},"body":{"components/TitleComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":2755,"title":{},"body":{"index.html":{}}}],["fileupload",{"_index":2025,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploader",{"_index":2029,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploadmodule",{"_index":2048,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["fill",{"_index":1744,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["filter",{"_index":1701,"title":{},"body":{"injectables/MessagesService.html":{},"components/ProfileComponent.html":{}}}],["filter((user",{"_index":1811,"title":{},"body":{"components/ProfileComponent.html":{}}}],["finalize",{"_index":789,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["firefox",{"_index":1132,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["first",{"_index":744,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["first_line",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":618,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(response",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(userroles",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(usr",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["fish",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["flame",{"_index":2250,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["flex",{"_index":360,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["flicker",{"_index":2251,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["float",{"_index":1484,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["flow",{"_index":2854,"title":{},"body":{"index.html":{}}}],["font",{"_index":713,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["food",{"_index":709,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer",{"_index":702,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["footer'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":704,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":703,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":641,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["footercomponent",{"_index":204,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":809,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/UsersComponent.html":{}}}],["formbuilder",{"_index":934,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formcontrol",{"_index":1370,"title":{},"body":{"components/IngredientComponent.html":{}}}],["formdata",{"_index":1870,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/RecipeService.html":{}}}],["formdata.append('email",{"_index":1882,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('file_uuid",{"_index":2122,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('filename",{"_index":2119,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('firstname",{"_index":1879,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('lastname",{"_index":1880,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('name",{"_index":2117,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('phone",{"_index":1881,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formgroup",{"_index":810,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formsmodule",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["formvalue",{"_index":1813,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.email.trim",{"_index":1822,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.firstname.trim",{"_index":1816,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.lastname.trim",{"_index":1818,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.phone.trim",{"_index":1820,"title":{},"body":{"components/ProfileComponent.html":{}}}],["forroot",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["found",{"_index":1707,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["found.component",{"_index":1768,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["found.component.html",{"_index":1709,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1708,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1706,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:13",{"_index":1711,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1710,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1705,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{}}}],["fr",{"_index":1900,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["france",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["franch",{"_index":2546,"title":{},"body":{"injectables/UsersService.html":{}}}],["franchis",{"_index":832,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["franchisee",{"_index":209,"title":{"interfaces/Franchisee.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["franchisee'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["franchisee.address.city",{"_index":898,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.country",{"_index":899,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.first_line",{"_index":895,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.second_line",{"_index":896,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.address.zip_code",{"_index":897,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.component.html",{"_index":741,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.component.scss",{"_index":732,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.email",{"_index":894,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.name",{"_index":857,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee.owned_by",{"_index":1230,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["franchisee.phone",{"_index":893,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["franchisee/franchisee.component",{"_index":1177,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["franchisee_id",{"_index":1202,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["franchiseeaccess",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchiseearray",{"_index":1040,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["franchiseecomponent",{"_index":206,"title":{"components/FranchiseeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseedetailcomponent",{"_index":208,"title":{"components/FranchiseeDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseedialogcomponent",{"_index":211,"title":{"components/FranchiseeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseemodule",{"_index":1146,"title":{"modules/FranchiseeModule.html":{}},"body":{"modules/FranchiseeModule.html":{},"modules.html":{},"overview.html":{}}}],["franchiseerecipe",{"_index":1182,"title":{"interfaces/FranchiseeRecipe.html":{}},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchisees",{"_index":745,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"injectables/FranchiseeService.html":{}}}],["franchisees.length",{"_index":904,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchiseeservice",{"_index":755,"title":{"injectables/FranchiseeService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"overview.html":{}}}],["franchisés",{"_index":1260,"title":{},"body":{"components/HomeComponent.html":{}}}],["freshaccesstoken",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["freshaccesstoken.access_token",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["friday",{"_index":670,"title":{"interfaces/Friday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["from(this.handle(req",{"_index":139,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["fromauth",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["fromauth.userreducer",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["front",{"_index":2290,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fruit",{"_index":1574,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["function",{"_index":261,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["functionality",{"_index":681,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["functions",{"_index":2734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundo",{"_index":1712,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["further",{"_index":2778,"title":{},"body":{"index.html":{}}}],["g",{"_index":2827,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2757,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2742,"title":{},"body":{"index.html":{}}}],["generates",{"_index":2837,"title":{},"body":{"index.html":{}}}],["get(`${environment.apibaseurl}/contractors",{"_index":1222,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["get(`${environment.apibaseurl}/ingredients",{"_index":1506,"title":{},"body":{"injectables/IngredientService.html":{}}}],["get(`${environment.apibaseurl}/ingredients/types",{"_index":1579,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id",{"_index":2100,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id}/ingredients",{"_index":2105,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/types",{"_index":2106,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes?includes[]=pictures",{"_index":2102,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/users/${id",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${environment.apibaseurl}/users/${id}/roles",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/addresses",{"_index":94,"title":{},"body":{"injectables/AddressService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/roles",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${environment.apibaseurl}/users/current",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["get(`${environment.apibaseurl}/users/current?includes[]=roles",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["get(`${environment.oauthproviderbaseurl}/token",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(key",{"_index":1658,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getaccesstoken",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaddresses",{"_index":39,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddresses(user",{"_index":65,"title":{},"body":{"injectables/AddressService.html":{}}}],["getauthorizationcode",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuserremote",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["getformvalues",{"_index":1041,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["getfranchiseebyid",{"_index":926,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["getfranchiseerecipes",{"_index":1191,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchiseerecipes(franchisee",{"_index":1203,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchisees",{"_index":814,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{}}}],["getingredients",{"_index":1494,"title":{},"body":{"injectables/IngredientService.html":{}}}],["getingredientsbyrecipeid",{"_index":2069,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientsbyrecipeid(id",{"_index":2082,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientstypes",{"_index":1563,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["getnewuser",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole(id",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["getpkce",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpkce(128",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrecipe",{"_index":2070,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipe(id",{"_index":2084,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipes",{"_index":2071,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["getrecipetype",{"_index":2072,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrole",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrole(user",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote(user",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["getschedule",{"_index":927,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{}}}],["getschedule(franchisee",{"_index":2222,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["getting",{"_index":2738,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["getuser(id",{"_index":2541,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbyid(id",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserrole",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["getuserrole(id",{"_index":2543,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserrole(user",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":2353,"title":{},"body":{"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["gill",{"_index":2347,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["git",{"_index":2802,"title":{},"body":{"index.html":{}}}],["global",{"_index":2839,"title":{},"body":{"index.html":{}}}],["glow",{"_index":2313,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["go",{"_index":2781,"title":{},"body":{"index.html":{}}}],["good",{"_index":708,"title":{},"body":{"components/FooterComponent.html":{}}}],["goodfood",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gradient(135deg",{"_index":2389,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(147.38deg",{"_index":1441,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grant_type",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["grayscale",{"_index":1438,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grenoble",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1418,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["guard",{"_index":1584,"title":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1586,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"overview.html":{}}}],["handle",{"_index":115,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/UserState.html":{}}}],["handle(req",{"_index":120,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["handle(request",{"_index":1290,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handleerror",{"_index":1274,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handleerror(error",{"_index":1277,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handler",{"_index":1282,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handles",{"_index":1279,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["has(key",{"_index":1661,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["header",{"_index":828,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["height",{"_index":838,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["help",{"_index":2779,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1428,"title":{},"body":{"components/IngredientComponent.html":{}}}],["here",{"_index":1839,"title":{},"body":{"components/ProfileComponent.html":{}}}],["hidden",{"_index":2183,"title":{},"body":{"components/RecipesComponent.html":{}}}],["hidedialog",{"_index":1336,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["hidehomebtn",{"_index":2326,"title":{},"body":{"components/SidebarComponent.html":{}}}],["highlight",{"_index":2321,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["home",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":1269,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":213,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1262,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horaires",{"_index":1012,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["host",{"_index":316,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["hours",{"_index":676,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["htmltextareaelement).value",{"_index":820,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["http",{"_index":48,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["http.service",{"_index":1220,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["http.service.ts",{"_index":680,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["http.service.ts:10",{"_index":696,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:21",{"_index":699,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:29",{"_index":697,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:9",{"_index":700,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http/error",{"_index":679,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["http://localhost/4000",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/4100",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/8085/api",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2752,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200/login/redirect",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/api",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8085/oauth",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8090/storage/files/string",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":1153,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httpclient",{"_index":43,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":1152,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httperrorinterceptor",{"_index":1270,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["httperrorresponse",{"_index":682,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["httpevent",{"_index":129,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":123,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":130,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":121,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.google.fr",{"_index":2715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://www.tektutorialshub.com/angular/property",{"_index":2158,"title":{},"body":{"components/RecipesComponent.html":{}}}],["ici",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["icon",{"_index":870,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["icons",{"_index":1423,"title":{},"body":{"components/IngredientComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["idfranchisee",{"_index":2463,"title":{},"body":{"components/UsersComponent.html":{}}}],["igredients",{"_index":1198,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{}}}],["il",{"_index":902,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["image",{"_index":1439,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"index.html":{}}}],["imagesrepository",{"_index":2809,"title":{},"body":{"index.html":{}}}],["img",{"_index":2195,"title":{},"body":{"components/RecipesComponent.html":{}}}],["img.flag",{"_index":2037,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["implements",{"_index":133,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":74,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/DefaultComponent.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indigo/theme.css",{"_index":2798,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":329,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["informations",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["ingredient",{"_index":218,"title":{"interfaces/Ingredient.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingredient'},{'name",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ingredient.allergen",{"_index":1387,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.html",{"_index":1330,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.scss",{"_index":1326,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.id",{"_index":1391,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/RecipeService.html":{}}}],["ingredient.model",{"_index":1894,"title":{},"body":{"interfaces/Recipe.html":{}}}],["ingredient.name",{"_index":1385,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.types",{"_index":1389,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient/ingredient.component",{"_index":2062,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["ingredient_type",{"_index":1571,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["ingredientcomponent",{"_index":215,"title":{"components/IngredientComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientdialog",{"_index":1331,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredients",{"_index":1323,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["ingredients.length",{"_index":1416,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredientsdetails",{"_index":1901,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["ingredientservice",{"_index":1343,"title":{"injectables/IngredientService.html":{}},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["ingredientstypes",{"_index":2164,"title":{},"body":{"components/RecipesComponent.html":{}}}],["ingredienttype",{"_index":1332,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["ingredienttypecomponent",{"_index":217,"title":{"components/IngredientTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredienttypedialog",{"_index":1518,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingredienttypeservice",{"_index":1344,"title":{"injectables/IngredientTypeService.html":{}},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["ingretype",{"_index":1316,"title":{"interfaces/IngreType.html":{}},"body":{"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingretype.description",{"_index":1544,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.id",{"_index":1546,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.name",{"_index":1543,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["init",{"_index":1337,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["initauth",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initauth(user",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initform",{"_index":1042,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["initial",{"_index":2452,"title":{},"body":{"interfaces/UserState.html":{}}}],["initialstate",{"_index":2454,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initschedule",{"_index":928,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["inizialized",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":31,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":1488,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["inner",{"_index":2291,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["input",{"_index":1140,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["inputnumbermodule",{"_index":1162,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputs",{"_index":1616,"title":{},"body":{"components/LoadingComponent.html":{},"components/TitleComponent.html":{}}}],["inputtextareamodule",{"_index":1164,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputtextmodule",{"_index":1158,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["install",{"_index":2791,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2790,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["intercept",{"_index":116,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":127,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["intercept(request",{"_index":1287,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":108,"title":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":1176,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["interceptor.service.ts",{"_index":113,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:15",{"_index":119,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:18",{"_index":128,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:33",{"_index":124,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptors",{"_index":110,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"overview.html":{}}}],["internet",{"_index":1141,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["introuvable",{"_index":1309,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["isadmin",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isallergen",{"_index":1338,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isallergen(event",{"_index":1351,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isauthenticated",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["isauthenticatedguard",{"_index":1585,"title":{"guards/IsAuthenticatedGuard.html":{}},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["iscreate",{"_index":746,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["isere",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfranchisee",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istanbul",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["isunauthenticatedguard",{"_index":1599,"title":{"guards/IsUnauthenticatedGuard.html":{}},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["item",{"_index":1199,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UsersService.html":{}}}],["item).pipe(map((res",{"_index":2562,"title":{},"body":{"injectables/UsersService.html":{}}}],["item.ingredients.map((ingredient",{"_index":2108,"title":{},"body":{"injectables/RecipeService.html":{}}}],["items",{"_index":365,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"injectables/IngredientService.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["jeudi",{"_index":1024,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["jour",{"_index":1399,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":1674,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(action.userdetails",{"_index":2427,"title":{},"body":{"injectables/UserEffects.html":{}}}],["json.stringify(newuserdetails.email",{"_index":1878,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.firstname",{"_index":1872,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.lastname",{"_index":1874,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.phone",{"_index":1876,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(value",{"_index":1669,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":361,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["karma",{"_index":2682,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1660,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyfiltermodule",{"_index":1167,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["keyframes",{"_index":332,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["l'ingrédient",{"_index":1408,"title":{},"body":{"components/IngredientComponent.html":{}}}],["la",{"_index":2002,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["label",{"_index":2033,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["label:not(.p",{"_index":1473,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["ladate",{"_index":1965,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["lastname",{"_index":619,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":131,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["lastvaluefrom(next.handle(req",{"_index":147,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["latest",{"_index":2811,"title":{},"body":{"index.html":{}}}],["lato",{"_index":1427,"title":{},"body":{"components/IngredientComponent.html":{}}}],["layer",{"_index":1483,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["layout",{"_index":905,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["layouts/components/page",{"_index":1767,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layouts/layouts.module",{"_index":1765,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layoutsmodule",{"_index":1604,"title":{"modules/LayoutsModule.html":{}},"body":{"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["le",{"_index":852,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["left",{"_index":357,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["length",{"_index":1785,"title":{},"body":{"components/ProfileComponent.html":{}}}],["les",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lets",{"_index":1283,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["life",{"_index":879,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["light",{"_index":2797,"title":{},"body":{"index.html":{}}}],["lightgoldenrodyellow",{"_index":712,"title":{},"body":{"components/FooterComponent.html":{}}}],["ligne",{"_index":1123,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["line",{"_index":2345,"title":{},"body":{"components/SidebarComponent.html":{}}}],["linear",{"_index":1440,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1750,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":2212,"title":{},"body":{"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":2865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["livraison",{"_index":1129,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["load",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadappuser",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["loaded",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":757,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["loading'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["loading.component.html",{"_index":1615,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1614,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":644,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["loadingcomponent",{"_index":220,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingoff",{"_index":1636,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingon",{"_index":1637,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":758,"title":{"injectables/LoadingService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loadingsubject",{"_index":1635,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loaduser",{"_index":313,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["localhost:8080/api/addresses",{"_index":98,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/addresses/{address_id",{"_index":102,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/contractors",{"_index":1221,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes",{"_index":1228,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id",{"_index":1238,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/times",{"_index":2221,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["localhost:8080/api/contractors/{contractors_id",{"_index":1242,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/ingredients",{"_index":1505,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/ingredients/types",{"_index":1578,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/types/{ingredient_type_id",{"_index":1581,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/{ingredient_id",{"_index":1509,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/recipes",{"_index":2101,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id",{"_index":2099,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/ingredients",{"_index":2104,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/pictures",{"_index":2121,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/users",{"_index":2553,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id",{"_index":2551,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id}/addresses",{"_index":91,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/users/{user_id}/roles",{"_index":2556,"title":{},"body":{"injectables/UsersService.html":{}}}],["localstorage",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["localstorage.getitem(key",{"_index":1676,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1677,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem",{"_index":2426,"title":{},"body":{"injectables/UserEffects.html":{}}}],["localstorage.setitem(key",{"_index":1671,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":436,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["logger",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(reducer",{"_index":262,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.html",{"_index":1680,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1679,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":222,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logoutaction",{"_index":2428,"title":{},"body":{"injectables/UserEffects.html":{}}}],["lose",{"_index":1501,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["lower",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["lunch",{"_index":674,"title":{"interfaces/Lunch.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lundi",{"_index":1015,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["main",{"_index":1741,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["make",{"_index":2093,"title":{},"body":{"injectables/RecipeService.html":{}}}],["makeingredienttype",{"_index":1520,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["makerecipe",{"_index":1339,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["map",{"_index":77,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["map((res",{"_index":1226,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["map((userdetails",{"_index":2413,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map((value",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["mardi",{"_index":1018,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["margin",{"_index":720,"title":{},"body":{"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materialrun",{"_index":2845,"title":{},"body":{"index.html":{}}}],["max",{"_index":837,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["max_delivery_radius",{"_index":724,"title":{},"body":{"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["meat",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1477,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["medium",{"_index":2186,"title":{},"body":{"components/RecipesComponent.html":{}}}],["menubarmodule",{"_index":638,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["mercredi",{"_index":1021,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["message",{"_index":83,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["message.create",{"_index":1508,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/ScheduleService.html":{}}}],["message.delete",{"_index":107,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["message.update",{"_index":105,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["message.update_success",{"_index":1511,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["messageservice",{"_index":731,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["messagesservice",{"_index":1687,"title":{"injectables/MessagesService.html":{}},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["metadata",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["metareducer",{"_index":256,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":269,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":35,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["microsoft",{"_index":1144,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["middle",{"_index":2189,"title":{},"body":{"components/RecipesComponent.html":{}}}],["midi",{"_index":1013,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["min",{"_index":735,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["minutes",{"_index":2829,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":2705,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":1398,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["mockaddress",{"_index":2591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchisee",{"_index":2598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseearray",{"_index":2599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe1",{"_index":2594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe2",{"_index":2595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipearray",{"_index":2596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre1",{"_index":2606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre2",{"_index":2607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingredientarray",{"_index":2608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockpicturearray",{"_index":2610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe1",{"_index":2620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe2",{"_index":2621,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipearray",{"_index":2622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipetypearray",{"_index":2615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockschedule",{"_index":2624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype1",{"_index":2602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype2",{"_index":2603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktypearray",{"_index":2604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser1",{"_index":2626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser2",{"_index":2627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser3",{"_index":2628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserarray",{"_index":2629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth",{"_index":2630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth1",{"_index":2631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth2",{"_index":2632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserwithauth",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":844,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["models/access",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/address.model",{"_index":79,"title":{},"body":{"injectables/AddressService.html":{}}}],["models/franchisee",{"_index":1218,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["models/franchisee.model",{"_index":1219,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/ScheduleService.html":{}}}],["models/ingredient",{"_index":1577,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["models/ingredient.model",{"_index":2098,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/picture.model",{"_index":2096,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe",{"_index":2097,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe.model",{"_index":2095,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/schedule.model",{"_index":2226,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["models/user.model",{"_index":82,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["modifi",{"_index":862,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["modification",{"_index":1119,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["modifications",{"_index":2721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":371,"title":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":373,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["moi",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":882,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["monday",{"_index":666,"title":{"interfaces/Monday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2780,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1436,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{}}}],["ms",{"_index":1139,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["msg",{"_index":1697,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msg.length",{"_index":1698,"title":{},"body":{"injectables/MessagesService.html":{}}}],["mt",{"_index":2348,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["multi",{"_index":1181,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["multiselect",{"_index":2030,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["multiselectmodule",{"_index":2056,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["n'etes",{"_index":1300,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2824,"title":{},"body":{"index.html":{}}}],["nav",{"_index":2375,"title":{},"body":{"components/TabsComponent.html":{}}}],["navigate",{"_index":2751,"title":{},"body":{"index.html":{}}}],["navigationcancel",{"_index":1624,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationend",{"_index":1625,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationerror",{"_index":1626,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationstart",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["need",{"_index":2775,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newerrorhttp",{"_index":692,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["newerrorhttp(httperrorresponse",{"_index":698,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["newfranchisee",{"_index":1110,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{}}}],["newfranchisee(create",{"_index":1207,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["newingredient",{"_index":1340,"title":{},"body":{"components/IngredientComponent.html":{}}}],["newingredienttype",{"_index":1521,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["newrecipe",{"_index":1905,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["newschedule",{"_index":929,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["newuser",{"_index":2468,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["newuser(item",{"_index":2547,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser(this.user",{"_index":2512,"title":{},"body":{"components/UsersComponent.html":{}}}],["newuserdetails",{"_index":1869,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.email",{"_index":1877,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.firstname",{"_index":1871,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.lastname",{"_index":1873,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.phone",{"_index":1875,"title":{},"body":{"injectables/ProfileService.html":{}}}],["next",{"_index":122,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{}}}],["next.handle(req",{"_index":137,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["ng",{"_index":317,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nginx",{"_index":2826,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ngrx/effects",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":252,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":257,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["ngx",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["night",{"_index":675,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":1314,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["node",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["node_modules/.bin/compodoc",{"_index":2847,"title":{},"body":{"index.html":{}}}],["node_modules/primeicons/primeicons.css",{"_index":2795,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/primeng.min.css",{"_index":2799,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/themes/lara",{"_index":2796,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":2788,"title":{},"body":{"index.html":{}}}],["nom",{"_index":889,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["non",{"_index":1415,"title":{},"body":{"components/IngredientComponent.html":{}}}],["none",{"_index":1476,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["normal",{"_index":2178,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nosonar",{"_index":89,"title":{},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["nous",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["nouveau",{"_index":831,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["nouvel",{"_index":1402,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["nouvelle",{"_index":2162,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nowrap",{"_index":2182,"title":{},"body":{"components/RecipesComponent.html":{}}}],["npm",{"_index":2748,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2842,"title":{},"body":{"index.html":{}}}],["null",{"_index":295,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["numéro",{"_index":890,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{}}}],["o",{"_index":2747,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["oauthcallbackuri",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthclientid",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthproviderbaseurl",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":1225,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["obligatoire",{"_index":1122,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["obs",{"_index":1645,"title":{},"body":{"injectables/LoadingService.html":{}}}],["observable",{"_index":56,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["occurred",{"_index":1286,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["of(null).pipe",{"_index":1650,"title":{},"body":{"injectables/LoadingService.html":{}}}],["oftype",{"_index":2421,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.loaduser",{"_index":2412,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logoutaction.logoutflowinitiated.type",{"_index":2429,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.updateuser",{"_index":2416,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.userloaded",{"_index":2424,"title":{},"body":{"injectables/UserEffects.html":{}}}],["olhos",{"_index":1728,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["on(useractions.updateuser",{"_index":2459,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["on(useractions.userloaded",{"_index":2457,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["onchange",{"_index":1906,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchange(event",{"_index":1922,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchangevalue",{"_index":752,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onchangevalue(event",{"_index":764,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onclick",{"_index":2007,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar",{"_index":1907,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar(event",{"_index":1924,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclose",{"_index":1043,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["ondelete",{"_index":2469,"title":{},"body":{"components/UsersComponent.html":{}}}],["ondelete(user",{"_index":2481,"title":{},"body":{"components/UsersComponent.html":{}}}],["one",{"_index":260,"title":{},"body":{"interfaces/AppState.html":{},"injectables/RecipeService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["onfieldcancel",{"_index":1779,"title":{},"body":{"components/ProfileComponent.html":{}}}],["onfieldcancel(user",{"_index":1787,"title":{},"body":{"components/ProfileComponent.html":{}}}],["oninit",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["onlogin",{"_index":1681,"title":{},"body":{"components/LoginComponent.html":{}}}],["onselectpicture",{"_index":1908,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onselectpicture(event",{"_index":1927,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onsortchange",{"_index":753,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsortchange(event",{"_index":766,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsubmit",{"_index":930,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["ont",{"_index":2722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupload",{"_index":1909,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic",{"_index":1910,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic(event",{"_index":1931,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["opacity",{"_index":802,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["open",{"_index":2354,"title":{},"body":{"injectables/SidebarService.html":{},"index.html":{}}}],["open(display",{"_index":2357,"title":{},"body":{"injectables/SidebarService.html":{}}}],["opened_at",{"_index":664,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["opensidebar",{"_index":2397,"title":{},"body":{"components/TopbarComponent.html":{}}}],["opera",{"_index":1133,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["operation",{"_index":1280,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["optima",{"_index":2346,"title":{},"body":{"components/SidebarComponent.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Diner.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1716,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["osx",{"_index":1437,"title":{},"body":{"components/IngredientComponent.html":{}}}],["oui",{"_index":1414,"title":{},"body":{"components/IngredientComponent.html":{}}}],["out",{"_index":328,"title":{},"body":{"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/ServerErrorComponent.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":2317,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["over",{"_index":2094,"title":{},"body":{"injectables/RecipeService.html":{}}}],["overflow",{"_index":840,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/RecipesComponent.html":{}}}],["overview",{"_index":2782,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned_by",{"_index":725,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["ownedby",{"_index":726,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1208,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["p",{"_index":321,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["package",{"_index":2664,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["page",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":224,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":1451,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["panelmodule",{"_index":1171,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["pao",{"_index":1717,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["param",{"_index":99,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters['code",{"_index":290,"title":{},"body":{"components/AuthComponent.html":{}}}],["parameters['state",{"_index":291,"title":{},"body":{"components/AuthComponent.html":{}}}],["params",{"_index":863,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["params['id",{"_index":959,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["part",{"_index":1838,"title":{},"body":{"components/ProfileComponent.html":{}}}],["partial",{"_index":50,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pas",{"_index":1301,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["passe",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{}}}],["path",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/PageNotFoundComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["pays",{"_index":1127,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["phone",{"_index":620,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["pi",{"_index":871,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["picture",{"_index":1747,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture.model",{"_index":1895,"title":{},"body":{"interfaces/Recipe.html":{}}}],["picture.name",{"_index":2118,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture.uuid",{"_index":2123,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture1",{"_index":2611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture2",{"_index":2612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture3",{"_index":2613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pictures",{"_index":1888,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["pipe(catcherror((err",{"_index":1291,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["pipe(filter((msg",{"_index":1696,"title":{},"body":{"injectables/MessagesService.html":{}}}],["pipe(finalize",{"_index":815,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["pipe(map((res",{"_index":95,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pipe(map((user",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["pkce",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["placeholder",{"_index":1130,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["plat",{"_index":2014,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["platform",{"_index":2772,"title":{},"body":{"index.html":{}}}],["porc",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ports",{"_index":2823,"title":{},"body":{"index.html":{}}}],["position",{"_index":353,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/LoadingComponent.html":{}}}],["post",{"_index":97,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["post(`${environment.apibaseurl}/addresses",{"_index":100,"title":{},"body":{"injectables/AddressService.html":{}}}],["post(`${environment.apibaseurl}/contractors",{"_index":1231,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/contractors/${item.id}/recipes",{"_index":1236,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/ingredients",{"_index":1507,"title":{},"body":{"injectables/IngredientService.html":{}}}],["post(`${environment.apibaseurl}/ingredients/types",{"_index":1580,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["post(`${environment.apibaseurl}/recipes",{"_index":2107,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.apibaseurl}/recipes/${recipe.id}/pictures",{"_index":2124,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.oauthproviderbaseurl}/token",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["postal",{"_index":1125,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["price",{"_index":1185,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":2036,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["primeflex",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2695,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng",{"_index":1853,"title":{},"body":{"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["primeng/avatar",{"_index":1268,"title":{},"body":{"modules/HomeModule.html":{}}}],["primeng/badge",{"_index":629,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["primeng/button",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/calendar",{"_index":2053,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/checkbox",{"_index":635,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/confirmdialog",{"_index":1170,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/dataview",{"_index":2047,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dialog",{"_index":1157,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/divider",{"_index":2059,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dropdown",{"_index":637,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/dynamicdialog",{"_index":790,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["primeng/fileupload",{"_index":2049,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/inputnumber",{"_index":1163,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtext",{"_index":1159,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtextarea",{"_index":1165,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/keyfilter",{"_index":1168,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/menubar",{"_index":639,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["primeng/multiselect",{"_index":2057,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/panel",{"_index":1172,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/progressbar",{"_index":1857,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/progressspinner",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/radiobutton",{"_index":2051,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/ripple",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/selectbutton",{"_index":1174,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/sidebar",{"_index":633,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["primeng/slider",{"_index":1855,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/table",{"_index":1155,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tabview",{"_index":2055,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/toast",{"_index":660,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/toolbar",{"_index":1161,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tooltip",{"_index":631,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primengconfig",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["principal",{"_index":1754,"title":{},"body":{"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{}}}],["principal'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["principal.component",{"_index":1766,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["principal.component.html",{"_index":1756,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principal.component.scss",{"_index":1755,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principalcomponent",{"_index":227,"title":{"components/PrincipalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["principalmodule",{"_index":1759,"title":{"modules/PrincipalModule.html":{}},"body":{"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["prises",{"_index":2723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["prix",{"_index":2017,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["problem",{"_index":691,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["prod",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":1516,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["product@description.com",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.fr",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.org",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1770,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":1774,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1771,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1858,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profilecomponent",{"_index":229,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":1847,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1781,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":322,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["progressbar",{"_index":1453,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["progressbarmodule",{"_index":1856,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["progressspinnermodule",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["project",{"_index":2741,"title":{},"body":{"index.html":{}}}],["promise",{"_index":126,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"interfaces/Wednesday.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["props",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1179,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["providedin",{"_index":85,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["prénom",{"_index":1840,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["pscontainer",{"_index":2821,"title":{},"body":{"index.html":{}}}],["public",{"_index":36,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UsersService.html":{}}}],["pulse",{"_index":2286,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["put",{"_index":101,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["put(`${environment.apibaseurl}/addresses/${update.id",{"_index":103,"title":{},"body":{"injectables/AddressService.html":{}}}],["put(`${environment.apibaseurl}/contractors/${update.id}/times",{"_index":2229,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/${update.id",{"_index":1510,"title":{},"body":{"injectables/IngredientService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/types/${update.id",{"_index":1582,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["put(`${environment.apibaseurl}/recipes/${update.id",{"_index":2109,"title":{},"body":{"injectables/RecipeService.html":{}}}],["put(`${environment.apibaseurl}/users/${update.id",{"_index":2563,"title":{},"body":{"injectables/UsersService.html":{}}}],["put(`${environment.apibaseurl}/users/${user.id",{"_index":1883,"title":{},"body":{"injectables/ProfileService.html":{}}}],["query",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["r",{"_index":2849,"title":{},"body":{"index.html":{}}}],["radiobuttonmodule",{"_index":2050,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["radius",{"_index":915,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["reactiveformsmodule",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["readonly",{"_index":2352,"title":{},"body":{"injectables/SidebarService.html":{}}}],["recette",{"_index":2003,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recipe",{"_index":232,"title":{"interfaces/Recipe.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.available_at",{"_index":2016,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["recipe.base_price",{"_index":2175,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.id",{"_index":1240,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["recipe.mock.ts",{"_index":2593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.model",{"_index":1187,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{}}}],["recipe.model.ts",{"_index":1184,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["recipe.name",{"_index":2166,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.recipe_type.code",{"_index":2176,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe/recipe",{"_index":2061,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe/recipes/recipes.component",{"_index":2064,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe_id",{"_index":1186,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipe_type",{"_index":1889,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipedialog",{"_index":2128,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipedialogcomponent",{"_index":231,"title":{"components/RecipeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipemanagementmodule",{"_index":2040,"title":{"modules/RecipeManagementModule.html":{}},"body":{"modules/RecipeManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["recipepostmodel",{"_index":2079,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipes",{"_index":1205,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["recipes'},{'name",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["recipes.component.html",{"_index":2127,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipes.component.scss",{"_index":2126,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipescomponent",{"_index":233,"title":{"components/RecipesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeservice",{"_index":1912,"title":{"injectables/RecipeService.html":{}},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipestype",{"_index":1902,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recipetype",{"_index":1893,"title":{"interfaces/RecipeType.html":{}},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype1",{"_index":2616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype2",{"_index":2617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype3",{"_index":2618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["redirect_uri",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["reducer",{"_index":2446,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":268,"title":{},"body":{"interfaces/AppState.html":{}}}],["reducers",{"_index":258,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":747,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["ref.onclose.subscribe((franchisee",{"_index":845,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ref.onclose.subscribe((recipe",{"_index":2165,"title":{},"body":{"components/RecipesComponent.html":{}}}],["reference",{"_index":2783,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{}}}],["refreshed",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(data",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["related",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":2754,"title":{},"body":{"index.html":{}}}],["remote",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":1212,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/LocalStorageService.html":{}}}],["remove(key",{"_index":1663,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removerecipe",{"_index":1192,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["removerecipe(id",{"_index":1210,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["repeat",{"_index":1445,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["replaced",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reporter",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":125,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["req.clone",{"_index":143,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["req.urlwithparams.startswith(environment.apibaseurl",{"_index":136,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["request",{"_index":1289,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/RecipeService.html":{}}}],["required",{"_index":2524,"title":{},"body":{"components/UsersComponent.html":{}}}],["res",{"_index":96,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["res.id",{"_index":1109,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["res[\"data",{"_index":2555,"title":{},"body":{"injectables/UsersService.html":{}}}],["res[\"message",{"_index":2564,"title":{},"body":{"injectables/UsersService.html":{}}}],["res['data",{"_index":1227,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{}}}],["res['message",{"_index":104,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["res['payload",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["response_type",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1475,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["return",{"_index":92,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reverse",{"_index":2298,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["revoke",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgb(193",{"_index":1136,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["rgb(227",{"_index":2376,"title":{},"body":{"components/TabsComponent.html":{}}}],["rgba(0",{"_index":367,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{}}}],["rgba(198",{"_index":2204,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rgba(213",{"_index":2386,"title":{},"body":{"components/TitleComponent.html":{}}}],["rgba(255",{"_index":2022,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["right",{"_index":358,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{}}}],["ripplemodule",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["role",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rolearraytype",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid(_user",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.franchisee",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":86,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["rotate",{"_index":1737,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(0",{"_index":2279,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotate(0deg",{"_index":1736,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(45deg",{"_index":2282,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotatepao",{"_index":1719,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(0deg",{"_index":1739,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(30deg",{"_index":1740,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["route",{"_index":935,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routeconfigloadend",{"_index":1627,"title":{},"body":{"components/LoadingComponent.html":{}}}],["routeconfigloadstart",{"_index":1628,"title":{},"body":{"components/LoadingComponent.html":{}}}],["router",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forchild",{"_index":1612,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["routermodule.forchild(routes",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerreducer",{"_index":251,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routerstatesnapshot.tostring",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["routes",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routesub",{"_index":925,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["routing",{"_index":1618,"title":{},"body":{"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":1764,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["routing.module.ts",{"_index":2571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":2215,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rue",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["run",{"_index":1285,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"index.html":{}}}],["running",{"_index":2765,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":78,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeDetailComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{}}}],["rôle",{"_index":2520,"title":{},"body":{"components/UsersComponent.html":{}}}],["s",{"_index":2848,"title":{},"body":{"index.html":{}}}],["s256",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["safari",{"_index":1134,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["samedi",{"_index":1030,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["sans",{"_index":1429,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["sara",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saturday",{"_index":671,"title":{"interfaces/Saturday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saumon",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":2792,"title":{},"body":{"index.html":{}}}],["savein",{"_index":2793,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":2756,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2285,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.8",{"_index":2287,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.98",{"_index":1734,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1",{"_index":1735,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1.1",{"_index":2288,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.65",{"_index":2269,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.7",{"_index":2265,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.72",{"_index":2268,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.9",{"_index":2260,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1",{"_index":2252,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1.2",{"_index":2262,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scales",{"_index":1713,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scaley(0.1",{"_index":2249,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaley(1",{"_index":2245,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["schedule",{"_index":665,"title":{"interfaces/Schedule.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schedule.friday.lunch",{"_index":1028,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.friday.night",{"_index":1029,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.monday.lunch",{"_index":1016,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.monday.night",{"_index":1017,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.saturday.lunch",{"_index":1031,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.saturday.night",{"_index":1032,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.sunday.lunch",{"_index":1034,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.sunday.night",{"_index":1035,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.thursday.lunch",{"_index":1025,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.thursday.night",{"_index":1026,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.tuesday.lunch",{"_index":1019,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.tuesday.night",{"_index":1020,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.wednesday.lunch",{"_index":1022,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["schedule.wednesday.night",{"_index":1023,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["scheduledialog",{"_index":748,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["scheduleservice",{"_index":932,"title":{"injectables/ScheduleService.html":{}},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["scope",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["screen",{"_index":1478,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["script",{"_index":2846,"title":{},"body":{"index.html":{}}}],["sdqi",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second_line",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["select(selectuserdetails",{"_index":1810,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selectbuttonmodule",{"_index":1173,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["selectedingredients",{"_index":1333,"title":{},"body":{"components/IngredientComponent.html":{}}}],["selectedusers",{"_index":2464,"title":{},"body":{"components/UsersComponent.html":{}}}],["selectisloggedin",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["selectprofileuser",{"_index":2656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserdetails",{"_index":285,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserstate",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":2214,"title":{},"body":{"components/RecipesComponent.html":{}}}],["sera",{"_index":2169,"title":{},"body":{"components/RecipesComponent.html":{}}}],["serif",{"_index":1430,"title":{},"body":{"components/IngredientComponent.html":{},"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":2746,"title":{},"body":{"index.html":{}}}],["server",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["servererrorcomponent",{"_index":235,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serveur",{"_index":690,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["service",{"_index":1232,"title":{},"body":{"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/ProfileModule.html":{},"dependencies.html":{}}}],["services/user/auth/auth.service",{"_index":1596,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["set",{"_index":1656,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set(key",{"_index":1665,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setheaders",{"_index":144,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["severity",{"_index":847,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["shadow",{"_index":2197,"title":{},"body":{"components/RecipesComponent.html":{}}}],["shared/models/picture.model",{"_index":1946,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/models/schedule.model",{"_index":793,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["shared/services/loading/loading.service",{"_index":1943,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/services/profile/profile.service",{"_index":1797,"title":{},"body":{"components/ProfileComponent.html":{}}}],["shared/services/user/auth/auth.service",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/store/state/user",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["shared/store/state/user/user.reducer",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["showerrors",{"_index":1691,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showerrors(...errors",{"_index":1692,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showloaderuntilcompleted",{"_index":1638,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showloaderuntilcompleted(obs",{"_index":1642,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sidebar",{"_index":2323,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component.html",{"_index":2325,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2324,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":640,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarcomponent",{"_index":238,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":632,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarservice",{"_index":2327,"title":{"injectables/SidebarService.html":{}},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["size",{"_index":714,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"interfaces/Picture.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["size_unit",{"_index":1751,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":919,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{}}}],["slidermodule",{"_index":1854,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["small",{"_index":715,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["smoke",{"_index":2306,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["smoothing",{"_index":1434,"title":{},"body":{"components/IngredientComponent.html":{}}}],["soir",{"_index":1014,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["solid",{"_index":1482,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sonar",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["sortfield",{"_index":749,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["sortorder",{"_index":750,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["space",{"_index":909,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sparks",{"_index":1730,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["spinner",{"_index":320,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["src/.../address.mock.ts",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoints.const.ts",{"_index":2709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.example.ts",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stage.ts",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fracnhisee",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../franchisee.mock.ts",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httprequest.const.ts",{"_index":2708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ingredient",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ingredients.mock.ts",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.const.ts",{"_index":2710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../picture.mock.ts",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../principal",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe.mock.ts",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.const.ts",{"_index":2711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../schedule.mock.ts",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storagekeys.const.ts",{"_index":2712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../store.reducer.ts",{"_index":2736,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":2864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.ts",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.selector.ts",{"_index":2735,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.mock.ts",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":2570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/auth/auth.module.ts",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.module.ts:40",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth/auth.component.ts",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth/auth.component.ts:19",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:30",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:42",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1678,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":1683,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":1684,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:9",{"_index":1682,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layouts/components/components.module",{"_index":1175,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["src/app/layouts/components/components.module.ts",{"_index":626,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/layouts/components/footer/footer.component.ts",{"_index":701,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:13",{"_index":706,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:8",{"_index":705,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts",{"_index":1613,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:20",{"_index":1621,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:23",{"_index":1620,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:25",{"_index":1623,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:29",{"_index":1622,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/page",{"_index":1704,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/server",{"_index":2230,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts",{"_index":2322,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:17",{"_index":2332,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:18",{"_index":2333,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:19",{"_index":2328,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:28",{"_index":2330,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:36",{"_index":2331,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:40",{"_index":2329,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts",{"_index":2379,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/title/title.component.ts:10",{"_index":2382,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:16",{"_index":2384,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:9",{"_index":2383,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts",{"_index":2392,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:18",{"_index":2403,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:19",{"_index":2402,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:20",{"_index":2398,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:28",{"_index":2400,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:33",{"_index":2399,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:48",{"_index":2401,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":647,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:13",{"_index":651,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:8",{"_index":650,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.module.ts",{"_index":656,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/layouts/layouts.module.ts",{"_index":1608,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/layouts/layouts.module.ts:14",{"_index":1609,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/principal/franchisee/franchisee",{"_index":920,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee.module.ts",{"_index":1150,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts",{"_index":729,"title":{},"body":{"components/FranchiseeComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:108",{"_index":767,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:119",{"_index":765,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:130",{"_index":760,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:156",{"_index":769,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:184",{"_index":762,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:66",{"_index":779,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:68",{"_index":776,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:69",{"_index":775,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:71",{"_index":770,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:72",{"_index":780,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:74",{"_index":771,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:75",{"_index":781,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:77",{"_index":783,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:78",{"_index":782,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:80",{"_index":777,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:81",{"_index":773,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:84",{"_index":774,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:85",{"_index":759,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:91",{"_index":772,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:97",{"_index":763,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/home/home.component.ts",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/principal/home/home.component.ts:14",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.component.ts:9",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.module.ts",{"_index":1266,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/principal/principal",{"_index":2581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/principal/principal.component.ts",{"_index":1753,"title":{},"body":{"components/PrincipalComponent.html":{},"coverage.html":{}}}],["src/app/principal/principal.component.ts:13",{"_index":1758,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.component.ts:8",{"_index":1757,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.module.ts",{"_index":1763,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["src/app/principal/profile/profile.module.ts",{"_index":1851,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/principal/profile/profile/profile.component.ts",{"_index":1769,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:110",{"_index":1783,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:145",{"_index":1788,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:29",{"_index":1792,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:30",{"_index":1793,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:31",{"_index":1791,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:32",{"_index":1794,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:34",{"_index":1796,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:35",{"_index":1795,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:37",{"_index":1782,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:47",{"_index":1786,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:71",{"_index":1790,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/recipe",{"_index":1324,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["src/app/principal/user/users.module.ts",{"_index":2529,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/principal/user/users/users.component.ts",{"_index":2460,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/principal/user/users/users.component.ts:104",{"_index":2475,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:112",{"_index":2483,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:127",{"_index":2473,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:153",{"_index":2484,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:177",{"_index":2482,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:212",{"_index":2477,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:27",{"_index":2493,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:28",{"_index":2491,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:29",{"_index":2489,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:31",{"_index":2486,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:33",{"_index":2488,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:34",{"_index":2490,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:35",{"_index":2492,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:37",{"_index":2485,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:39",{"_index":2487,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:40",{"_index":2472,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:52",{"_index":2480,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:67",{"_index":2478,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:80",{"_index":2476,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/user/users/users.component.ts:96",{"_index":2479,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/constants/endpoints.const",{"_index":2338,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/constants/endpoints.const.ts",{"_index":2714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/httprequest.const.ts",{"_index":2713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/message.const.ts",{"_index":2716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/role.const",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["src/app/shared/constants/role.const.ts",{"_index":2725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/storagekeys.const",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/constants/storagekeys.const.ts",{"_index":2727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/guards/is",{"_index":1587,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/api",{"_index":111,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/http",{"_index":1271,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/mock/address.mock.ts",{"_index":2590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/fracnhisee",{"_index":2592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/franchisee.mock.ts",{"_index":2597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredient",{"_index":2600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredients.mock.ts",{"_index":2605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/picture.mock.ts",{"_index":2609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe",{"_index":2614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe.mock.ts",{"_index":2619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/schedule.mock.ts",{"_index":2623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/users.mock.ts",{"_index":2625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/access",{"_index":6,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["src/app/shared/models/address.model",{"_index":792,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/address.model.ts",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee",{"_index":1183,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee.model",{"_index":791,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/franchisee.model.ts",{"_index":722,"title":{},"body":{"interfaces/Franchisee.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient",{"_index":1317,"title":{},"body":{"interfaces/IngreType.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient.model",{"_index":1371,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/ingredient.model.ts",{"_index":1319,"title":{},"body":{"interfaces/Ingredient.html":{},"coverage.html":{}}}],["src/app/shared/models/picture.model",{"_index":2155,"title":{},"body":{"components/RecipesComponent.html":{}}}],["src/app/shared/models/picture.model.ts",{"_index":1748,"title":{},"body":{"interfaces/Picture.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe",{"_index":1945,"title":{},"body":{"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe.model",{"_index":1944,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/recipe.model.ts",{"_index":1885,"title":{},"body":{"interfaces/Recipe.html":{},"coverage.html":{}}}],["src/app/shared/models/schedule.model",{"_index":954,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/schedule.model.ts",{"_index":662,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["src/app/shared/models/user.model",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["src/app/shared/models/user.model.ts",{"_index":617,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/address/address.service",{"_index":1063,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/services/address/address.service.ts",{"_index":34,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/shared/services/address/address.service.ts:13",{"_index":45,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:22",{"_index":67,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:33",{"_index":51,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:44",{"_index":71,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:56",{"_index":59,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/error",{"_index":678,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service",{"_index":794,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts",{"_index":1188,"title":{},"body":{"injectables/FranchiseeService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:110",{"_index":1217,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:131",{"_index":1211,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:14",{"_index":1195,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:150",{"_index":1201,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:26",{"_index":1206,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:40",{"_index":1204,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:58",{"_index":1209,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:80",{"_index":1215,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:93",{"_index":1197,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/ingredient",{"_index":1373,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service",{"_index":1372,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts",{"_index":1492,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:12",{"_index":1495,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:21",{"_index":1502,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:32",{"_index":1497,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:43",{"_index":1504,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:55",{"_index":1499,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/loading/loading.service",{"_index":795,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/shared/services/loading/loading.service.ts",{"_index":1634,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/shared/services/loading/loading.service.ts:15",{"_index":1648,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:17",{"_index":1639,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:23",{"_index":1643,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:31",{"_index":1641,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:35",{"_index":1640,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/messages/messages.service.ts",{"_index":1688,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/app/shared/services/messages/messages.service.ts:10",{"_index":1699,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:14",{"_index":1693,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:8",{"_index":1700,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/profile/profile.service",{"_index":1859,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/profile/profile.service.ts",{"_index":1861,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/shared/services/profile/profile.service.ts:12",{"_index":1863,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:17",{"_index":1864,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:28",{"_index":1865,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:48",{"_index":1867,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/recipe/recipe.service",{"_index":1947,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts",{"_index":2065,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:103",{"_index":2090,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:130",{"_index":2081,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:152",{"_index":2092,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:16",{"_index":2074,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:166",{"_index":2076,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:28",{"_index":2085,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:38",{"_index":2086,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:58",{"_index":2083,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:68",{"_index":2087,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:80",{"_index":2078,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/schedule/schedule.service",{"_index":955,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts",{"_index":2216,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:14",{"_index":2218,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:27",{"_index":2223,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:40",{"_index":2220,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:66",{"_index":2225,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service",{"_index":2334,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts",{"_index":2351,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:11",{"_index":2361,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:13",{"_index":2360,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:15",{"_index":2355,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:21",{"_index":2358,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:25",{"_index":2356,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/user/auth/auth.service",{"_index":132,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:114",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:119",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:141",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:152",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:158",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:164",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:17",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:170",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:185",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:205",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:221",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:229",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:250",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:265",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:284",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:304",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:35",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:70",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/local",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts:12",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:17",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:22",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:27",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/users/users.service",{"_index":2494,"title":{},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["src/app/shared/services/users/users.service.ts",{"_index":2531,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/shared/services/users/users.service.ts:12",{"_index":2534,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:21",{"_index":2542,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:29",{"_index":2545,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:37",{"_index":2544,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:50",{"_index":2536,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:60",{"_index":2548,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:69",{"_index":2550,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:80",{"_index":2539,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/store",{"_index":284,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["src/app/shared/store/state/user",{"_index":287,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/state/user/index",{"_index":2422,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.actions.ts",{"_index":2647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.effects.ts",{"_index":2406,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:16",{"_index":2415,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:24",{"_index":2420,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:9",{"_index":2409,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.reducer.ts",{"_index":2443,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.selector",{"_index":2336,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/store/state/user/user.selector.ts",{"_index":2651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/store.reducer",{"_index":2335,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/store.reducer.ts",{"_index":250,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":81,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["src/environments/environment.example.ts",{"_index":2659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.stage.ts",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/styles.scss",{"_index":1686,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["star",{"_index":1890,"title":{},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2749,"title":{},"body":{"index.html":{}}}],["started",{"_index":2739,"title":{"index.html":{}},"body":{}}],["state",{"_index":263,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"index.html":{}}}],["statiques",{"_index":1259,"title":{},"body":{"components/HomeComponent.html":{}}}],["status",{"_index":2822,"title":{},"body":{"index.html":{}}}],["storage",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["storage.service.ts",{"_index":1655,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1666,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:24",{"_index":1659,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:35",{"_index":1664,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:39",{"_index":1662,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:6",{"_index":1657,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storagekeys",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":253,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2762,"title":{},"body":{"index.html":{}}}],["storemodule",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["storemodule.forfeature('user",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature(fromauth.userfeaturekey",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"injectables/LocalStorageService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["stringservice",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["stroke",{"_index":335,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["style",{"_index":785,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["styleclass",{"_index":834,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["styles",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["styleurls",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["subject",{"_index":1690,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["submitted",{"_index":811,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":1112,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe((data",{"_index":1069,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["subscribe((recipes",{"_index":2156,"title":{},"body":{"components/RecipesComponent.html":{}}}],["subscribe((res",{"_index":817,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe(async",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscription",{"_index":950,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["success",{"_index":848,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["succès",{"_index":850,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["summary",{"_index":849,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sunday",{"_index":672,"title":{"interfaces/Sunday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2856,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":888,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["suppresssion",{"_index":2136,"title":{},"body":{"components/RecipesComponent.html":{}}}],["supprim",{"_index":878,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["supprimer",{"_index":868,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["survenue",{"_index":1312,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["svg",{"_index":2857,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1293,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["sync",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":62,"title":{},"body":{"injectables/AddressService.html":{}}}],["sûre",{"_index":1405,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["t",{"_index":1644,"title":{},"body":{"injectables/LoadingService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["table",{"_index":1456,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablemodule",{"_index":1154,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2368,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["tabs.component.html",{"_index":2370,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2369,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":2063,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["tabscomponent",{"_index":240,"title":{"components/TabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabview",{"_index":2374,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabviewmodule",{"_index":2054,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["tag",{"_index":2810,"title":{},"body":{"index.html":{}}}],["tap",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/LoadingService.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"injectables/UsersService.html":{}}}],["tap((action",{"_index":2425,"title":{},"body":{"injectables/UserEffects.html":{}}}],["tap((obj",{"_index":1223,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["tap((res",{"_index":1884,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tbody",{"_index":1470,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["td",{"_index":1460,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["template",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":2768,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2776,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2767,"title":{},"body":{"index.html":{}}}],["text",{"_index":1465,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["tfoot",{"_index":1480,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["th",{"_index":1469,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["thead",{"_index":1467,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["theme",{"_index":2844,"title":{},"body":{"index.html":{}}}],["themes",{"_index":2800,"title":{},"body":{"index.html":{}}}],["this._recipetype",{"_index":1956,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.accesstokenisexpired(useraccesstoken",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.actions$.pipe",{"_index":2411,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.activatedroute.queryparams.subscribe((parameters",{"_index":289,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.address",{"_index":859,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.address.id",{"_index":1102,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.addressservice",{"_index":1107,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.allergen",{"_index":1409,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.authservice.authorizationcodetoaccesstoken(code",{"_index":292,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.getaccesstoken",{"_index":142,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["this.authservice.getauthorizationcode",{"_index":1685,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getuser",{"_index":2364,"title":{},"body":{"injectables/SidebarService.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.isauthenticated",{"_index":1597,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["this.authservice.logout",{"_index":2430,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.confirmationservice.confirm",{"_index":864,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.create",{"_index":1106,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.createnewuser",{"_index":2511,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.detectroutingongoing",{"_index":1630,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.dialogservice.open(franchiseedialogcomponent",{"_index":827,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.dialogservice.open(recipedialogcomponent",{"_index":2161,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.display",{"_index":2340,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.editmode",{"_index":1005,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.editmodeemail",{"_index":1807,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodefirstname",{"_index":1805,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodelastname",{"_index":1806,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodephone",{"_index":1808,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.errorhttpservice.newerrorhttp",{"_index":1245,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["this.errorhttpsubject.asobservable",{"_index":688,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(errordatahttp",{"_index":693,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(undefined",{"_index":695,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.fb.group",{"_index":967,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form",{"_index":966,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form.controls['ingredientsdetails'].value",{"_index":1991,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls['ingredienttype'].value.code",{"_index":1390,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.controls['recipetype'].value.code",{"_index":1987,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls['role'].value.code",{"_index":2506,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.controls[controlname].dirty",{"_index":2012,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls[controlname].haserror(errorname",{"_index":2013,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.get('allergen').setvalue(false",{"_index":1412,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('allergen').setvalue(true",{"_index":1411,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('allergen').value",{"_index":1388,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('description').value",{"_index":1545,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.form.get('email').value",{"_index":2504,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('firstname').value",{"_index":2501,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('lastname').value",{"_index":2502,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('name').value",{"_index":1386,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.form.get('phone').value",{"_index":2503,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('star').setvalue(false",{"_index":1981,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.get('star').setvalue(true",{"_index":1980,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.patchvalue(this.user",{"_index":1802,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.valid",{"_index":1995,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value",{"_index":1814,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.value.availabledate",{"_index":1983,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.city",{"_index":1098,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.country",{"_index":1100,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.description",{"_index":1994,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.email",{"_index":1088,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.first_line",{"_index":1092,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.friday.lunch",{"_index":993,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.friday.night",{"_index":995,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.max_delivery_radius",{"_index":1090,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.monday.lunch",{"_index":977,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.monday.night",{"_index":979,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.name",{"_index":1084,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.phone",{"_index":1086,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.price",{"_index":1989,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.saturday.lunch",{"_index":997,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.saturday.night",{"_index":999,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.second_line",{"_index":1094,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.star",{"_index":1992,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.sunday.lunch",{"_index":1001,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.sunday.night",{"_index":1003,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.thursday.lunch",{"_index":989,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.thursday.night",{"_index":991,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.title",{"_index":1985,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.tuesday.lunch",{"_index":981,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.tuesday.night",{"_index":983,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.wednesday.lunch",{"_index":985,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.wednesday.night",{"_index":987,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.form.value.zip_code",{"_index":1096,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee",{"_index":1010,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address",{"_index":1101,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.city",{"_index":1097,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.country",{"_index":1099,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.first_line",{"_index":1091,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.second_line",{"_index":1093,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.zip_code",{"_index":1095,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address_id",{"_index":1103,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.email",{"_index":1087,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.max_delivery_radius",{"_index":1089,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.name",{"_index":1083,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.phone",{"_index":1085,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address",{"_index":1077,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.city",{"_index":1081,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.country",{"_index":1082,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.first_line",{"_index":1078,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.second_line",{"_index":1079,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.zip_code",{"_index":1080,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.email",{"_index":1074,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.max_delivery_radius",{"_index":1076,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.name",{"_index":1072,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.phone",{"_index":1073,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseearray",{"_index":1070,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisees",{"_index":818,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["this.franchisees.foreach((e",{"_index":1008,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.franchiseeservice",{"_index":813,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseeservice.deletefranchisee(franchisee.id).subscribe",{"_index":876,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.franchiseeservice.getfranchisees().subscribe((res",{"_index":961,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.franchiseeservice.updatefranchisee(this.franchisee).subscribe",{"_index":1117,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.getcurrentuser",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getformvalues",{"_index":1104,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.getfranchiseebyid",{"_index":962,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.getrole(currentuser",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getroleremote(currentuser",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getschedule",{"_index":1004,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.handleerror(err",{"_index":1292,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["this.has(key",{"_index":1672,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.http",{"_index":93,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/contractors/${id}`).pipe",{"_index":1243,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/recipes/${id}`).pipe",{"_index":2116,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.get",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/${id}/roles`).pipe",{"_index":2557,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/${id}`).pipe(map((res",{"_index":2552,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/current",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users`).pipe",{"_index":2366,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users`).pipe(map((res",{"_index":2554,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apibaseurl}/files",{"_index":2120,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.post(`${environment.apibaseurl}/users",{"_index":2561,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apibaseurl}/users/${user.id",{"_index":2559,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.put(`${environment.apibaseurl}/contractors",{"_index":1233,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.id",{"_index":958,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.ingredient",{"_index":1393,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient.id",{"_index":1392,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.allergen",{"_index":1382,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.name",{"_index":1381,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.types",{"_index":1383,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientdialog",{"_index":1395,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredients",{"_index":1378,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ingredients.foreach((x",{"_index":1959,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.createingredient(this.ingredient).subscribe",{"_index":1401,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.deleteingredient(ingredient.id).subscribe",{"_index":1407,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.getingredients().subscribe((res",{"_index":1377,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.updateingredient(this.ingredient).subscribe",{"_index":1397,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredienttype",{"_index":2171,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.ingredienttypedialog",{"_index":1556,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice",{"_index":1551,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice.getingredientstypes().subscribe((res",{"_index":1379,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.ingretype",{"_index":1548,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingretype.id",{"_index":1550,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.description",{"_index":1542,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.id",{"_index":1547,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.name",{"_index":1541,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.init",{"_index":1376,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.initauth(user",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.initauth(value",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initform",{"_index":1071,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.initschedule",{"_index":965,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.iscreate",{"_index":1384,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadappuser",{"_index":2404,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.loading.loadingoff",{"_index":816,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loading.loadingon",{"_index":812,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadingoff",{"_index":1652,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingon",{"_index":1651,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.loadingoff",{"_index":1632,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.loadingon",{"_index":1631,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":1646,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(false",{"_index":1654,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(true",{"_index":1653,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.localstorageservice.get(storagekeys.code_verify",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.role",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.state",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user)).id",{"_index":1111,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.localstorageservice.get(storagekeys.user_token",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.code_verify",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.role",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.state",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user_token",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.code_verify",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.state",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.user",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.code_verify",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.role",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.state",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user_token",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.makeingredienttype",{"_index":1549,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.makerecipe",{"_index":1396,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.messageservice.add",{"_index":846,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.mode",{"_index":1064,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.newrecipe",{"_index":1997,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.newschedule",{"_index":1007,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.picture",{"_index":1961,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.pictures",{"_index":2172,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.primengconfig.ripple",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this.profileservice.getcurrentuser",{"_index":1800,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.getuser().subscribe",{"_index":1801,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.updateuser(action.userdetails",{"_index":2418,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.recipe",{"_index":1953,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.available_at",{"_index":1982,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.base_price",{"_index":1988,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.description",{"_index":1993,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.ingredients",{"_index":1990,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.name",{"_index":1984,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.recipe_type",{"_index":1986,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.star",{"_index":1979,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.available_at",{"_index":1966,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.base_price",{"_index":1973,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.description",{"_index":1975,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.ingredients",{"_index":1974,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.name",{"_index":1971,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.recipe_type",{"_index":1972,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.star",{"_index":1976,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipes",{"_index":2157,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice",{"_index":1998,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.recipeservice.createrecipe(this.recipe).subscribe",{"_index":2000,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.deleterecipe(recipe.id).subscribe",{"_index":2167,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice.getrecipetype().subscribe((res",{"_index":1963,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.updaterecipe(this.recipe).subscribe",{"_index":2004,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.uploadpicture(this.picture).subscribe((res",{"_index":2008,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipestype",{"_index":1964,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref",{"_index":856,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref.close",{"_index":1120,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(_res",{"_index":1114,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(res",{"_index":1118,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.onclose.subscribe((_franchisee",{"_index":860,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.ref.onclose.subscribe((_recipe",{"_index":2173,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.refreshtoken(useraccesstoken",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolebyid(user",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.route.params.subscribe((params",{"_index":957,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["this.router.navigate(['/home",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["this.router.navigate(['/login",{"_index":1598,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["this.router.navigate([event.url.replace",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl",{"_index":310,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/home",{"_index":309,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.routesub",{"_index":956,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule",{"_index":858,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.schedule.friday.lunch",{"_index":992,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.friday.night",{"_index":994,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.monday.lunch",{"_index":976,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.monday.night",{"_index":978,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.saturday.lunch",{"_index":996,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.saturday.night",{"_index":998,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.sunday.lunch",{"_index":1000,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.sunday.night",{"_index":1002,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.thursday.lunch",{"_index":988,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.thursday.night",{"_index":990,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.tuesday.lunch",{"_index":980,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.tuesday.night",{"_index":982,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.wednesday.lunch",{"_index":984,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule.wednesday.night",{"_index":986,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.friday",{"_index":973,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.monday",{"_index":968,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.saturday",{"_index":974,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.sunday",{"_index":975,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.thursday",{"_index":972,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.tuesday",{"_index":970,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.schedule?.wednesday",{"_index":971,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.scheduleservice.getschedule(this.franchisee).subscribe((res",{"_index":963,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.sidebarservice.display$.subscribe((res",{"_index":2339,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(false",{"_index":2342,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(true",{"_index":2405,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.sortfield",{"_index":823,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.sortorder",{"_index":822,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.star",{"_index":1978,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.store",{"_index":1809,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.dispatch",{"_index":1823,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.dispatch(useractions.loaduser",{"_index":296,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails",{"_index":2341,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe",{"_index":294,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe((user",{"_index":1798,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.subject",{"_index":1694,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.subject.asobservable",{"_index":2359,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(display",{"_index":2365,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(errors",{"_index":1702,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.submitted",{"_index":1394,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["this.typearray",{"_index":1380,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.update",{"_index":1105,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.updaterecipe",{"_index":1996,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.updateschedule",{"_index":1006,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["this.updateuser",{"_index":2510,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.uploadedfiles.push(picture",{"_index":2010,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.url",{"_index":2363,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.user",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["this.user.email",{"_index":1821,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.firstname",{"_index":1815,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.id",{"_index":2508,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user.lastname",{"_index":1817,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.phone",{"_index":1819,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.email",{"_index":1835,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.firstname",{"_index":1827,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.lastname",{"_index":1830,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.phone",{"_index":1832,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.roles",{"_index":2500,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userdialog",{"_index":2509,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.users",{"_index":2496,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.users.foreach((e",{"_index":2497,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice",{"_index":2495,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.addrole(this.user).subscribe",{"_index":2513,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.deleteuser(user.id).subscribe",{"_index":2519,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.getuserrole(this.id).subscribe((role",{"_index":2499,"title":{},"body":{"components/UsersComponent.html":{}}}],["throw",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["thursday",{"_index":669,"title":{"interfaces/Thursday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2801,"title":{},"body":{"index.html":{}}}],["title",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["title'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["title.component.html",{"_index":2381,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":2380,"title":{},"body":{"components/TitleComponent.html":{}}}],["title/title.component",{"_index":643,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["titlebar",{"_index":2021,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["titlecomponent",{"_index":242,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["titre1",{"_index":2396,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toastmodule",{"_index":659,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["todo",{"_index":1837,"title":{},"body":{"components/ProfileComponent.html":{}}}],["token",{"_index":112,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["token.model",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.model.ts",{"_index":7,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["token_type",{"_index":15,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["tool",{"_index":2835,"title":{},"body":{"index.html":{}}}],["toolbarmodule",{"_index":1160,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tooltipmodule",{"_index":630,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["top",{"_index":355,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["topbar",{"_index":2393,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["topbar.component.html",{"_index":2395,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":2394,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar/topbar.component",{"_index":642,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["topbarcomponent",{"_index":244,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":901,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["tr",{"_index":1468,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["transform",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["transition",{"_index":786,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["transitions",{"_index":2447,"title":{},"body":{"interfaces/UserState.html":{}}}],["translate",{"_index":2280,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(0",{"_index":2274,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(10px",{"_index":2275,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate/core",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["translatex",{"_index":800,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["translatex(0",{"_index":804,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["transparent",{"_index":1746,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["trashed_at",{"_index":1891,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["trebuchet",{"_index":2350,"title":{},"body":{"components/SidebarComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["triangle",{"_index":873,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["trigger",{"_index":784,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["trigger('rowexpansiontrigger",{"_index":799,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["trouvons",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LocalStorageService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1673,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tsconfig.doc.json",{"_index":2843,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":667,"title":{"interfaces/Tuesday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tutorial",{"_index":2853,"title":{},"body":{"index.html":{}}}],["tyoe",{"_index":1558,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["type.component",{"_index":2060,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["type.component.html",{"_index":1517,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.scss",{"_index":1515,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts",{"_index":1514,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:105",{"_index":1531,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:112",{"_index":1535,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:119",{"_index":1526,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:150",{"_index":1527,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1539,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1540,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:28",{"_index":1537,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1536,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:32",{"_index":1538,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:33",{"_index":1524,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1532,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:49",{"_index":1528,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:56",{"_index":1529,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:63",{"_index":1530,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:72",{"_index":1533,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.mock.ts",{"_index":2601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.model",{"_index":1322,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["type.model.ts",{"_index":1318,"title":{},"body":{"interfaces/IngreType.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["type.service",{"_index":1375,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["type.service.ts",{"_index":1561,"title":{},"body":{"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["type.service.ts:13",{"_index":1564,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:25",{"_index":1572,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:46",{"_index":1566,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:65",{"_index":1576,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:86",{"_index":1568,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type/ingredient",{"_index":1374,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"modules/RecipeManagementModule.html":{},"coverage.html":{}}}],["type_id",{"_index":1570,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["typealiases",{"_index":2862,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typearray",{"_index":1334,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["typearray.length",{"_index":1560,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["typeof",{"_index":1668,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["types",{"_index":1321,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["téléphone",{"_index":891,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["ui",{"_index":2020,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["un",{"_index":830,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["unauthenticated",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthenticated.guard.ts",{"_index":1601,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["unauthenticated.guard.ts:15",{"_index":1602,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated.guard.ts:18",{"_index":1603,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated/is",{"_index":1600,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["undefined",{"_index":2455,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["une",{"_index":1311,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["unit",{"_index":2766,"title":{},"body":{"index.html":{}}}],["up",{"_index":2830,"title":{},"body":{"index.html":{}}}],["update",{"_index":72,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["update(franchisee",{"_index":768,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["update).pipe",{"_index":1234,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["update.base_price",{"_index":2113,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.description",{"_index":2112,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.ingredients.map((ingredient",{"_index":2110,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.name",{"_index":2111,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.recipe_type",{"_index":2115,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.star",{"_index":2114,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update_success",{"_index":2720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updateaddress",{"_index":40,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(this.address",{"_index":1116,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["updateaddress(update",{"_index":70,"title":{},"body":{"injectables/AddressService.html":{}}}],["updated",{"_index":73,"title":{},"body":{"injectables/AddressService.html":{},"miscellaneous/variables.html":{}}}],["updatefield",{"_index":1780,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefield(type",{"_index":1789,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefranchisee",{"_index":1193,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updatefranchisee(update",{"_index":1214,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateingredient",{"_index":1341,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["updateingredient(ingredient",{"_index":1357,"title":{},"body":{"components/IngredientComponent.html":{}}}],["updateingredient(update",{"_index":1503,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updateingredienttype",{"_index":1522,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["updateingredienttype(ingretype",{"_index":1534,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(this.ingretype",{"_index":1552,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(update",{"_index":1575,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["updaterecipe",{"_index":1911,"title":{},"body":{"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["updaterecipe(recipe",{"_index":2142,"title":{},"body":{"components/RecipesComponent.html":{}}}],["updaterecipe(update",{"_index":2089,"title":{},"body":{"injectables/RecipeService.html":{}}}],["updaterecipeprice",{"_index":1194,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updaterecipeprice(update",{"_index":1216,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateschedule",{"_index":931,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"injectables/ScheduleService.html":{}}}],["updateschedule(update",{"_index":2224,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["updateuser",{"_index":1862,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuser(this.user",{"_index":2516,"title":{},"body":{"components/UsersComponent.html":{}}}],["updateuser(update",{"_index":2549,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":1866,"title":{},"body":{"injectables/ProfileService.html":{}}}],["upload",{"_index":1951,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadedfiles",{"_index":1903,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadpicture",{"_index":2073,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(picture",{"_index":2091,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(this.picture",{"_index":1999,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uppercase",{"_index":1474,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["url",{"_index":90,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"interfaces/Ingredient.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["urlsearchparams",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["urltree",{"_index":1595,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["use",{"_index":2758,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1180,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["used",{"_index":63,"title":{},"body":{"injectables/AddressService.html":{}}}],["usehash",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{"interfaces/User.html":{}},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user.actions",{"_index":2445,"title":{},"body":{"interfaces/UserState.html":{}}}],["user.autorisations.isadmin",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.autorisations.isfranchisee",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":1844,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.firstname",{"_index":1841,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.id",{"_index":2507,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.lastname",{"_index":1842,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.model",{"_index":728,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["user.phone",{"_index":1843,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.roles",{"_index":2505,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.roles).pipe(map((res",{"_index":2560,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.roles.code",{"_index":2521,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.roles.foreach((e",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["user.roles.push(currentrole",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userdetails",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user/auth/auth.service",{"_index":2362,"title":{},"body":{"injectables/SidebarService.html":{}}}],["user@example.com",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":2540,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_token",{"_index":2731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useraccesstoken",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractions",{"_index":286,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{}}}],["useractions.updateuser",{"_index":1824,"title":{},"body":{"components/ProfileComponent.html":{}}}],["useractions.userloaded",{"_index":2414,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.userupdated",{"_index":2419,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercurrentroles",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercurrentroles[0",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":1825,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["userdialog",{"_index":2465,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereffects",{"_index":404,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["userfeaturekey",{"_index":2453,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloaded",{"_index":2423,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":2537,"title":{},"body":{"injectables/UsersService.html":{}}}],["userreducer",{"_index":2456,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":68,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["users.component.html",{"_index":2462,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":2461,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.length",{"_index":2522,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":2530,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscomponent",{"_index":246,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":2431,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":2525,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":2471,"title":{"injectables/UsersService.html":{}},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstate",{"_index":2442,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userupdate",{"_index":1812,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userupdated",{"_index":2649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usr",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilidateurs",{"_index":2523,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateur",{"_index":2514,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateurs",{"_index":1261,"title":{},"body":{"components/HomeComponent.html":{}}}],["uuid",{"_index":1752,"title":{},"body":{"interfaces/Picture.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["uuis",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["va",{"_index":2815,"title":{},"body":{"index.html":{}}}],["validators",{"_index":953,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["validators.email",{"_index":1075,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.maxlength(100",{"_index":1836,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(30",{"_index":1829,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(40",{"_index":1831,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.minlength(3",{"_index":1828,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.pattern('/^[0][0",{"_index":1833,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.required",{"_index":969,"title":{},"body":{"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["value",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.code",{"_index":1413,"title":{},"body":{"components/IngredientComponent.html":{}}}],["value.indexof",{"_index":821,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.length",{"_index":825,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.name",{"_index":2177,"title":{},"body":{"components/RecipesComponent.html":{}}}],["value.substring(1",{"_index":824,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.tostring",{"_index":1670,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["valueserialized",{"_index":1667,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1952,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2866,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetebale",{"_index":1573,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["vendredi",{"_index":1027,"title":{},"body":{"components/FranchiseeDetailComponent.html":{}}}],["verifier",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["version",{"_index":2700,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":2787,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2188,"title":{},"body":{"components/RecipesComponent.html":{}}}],["via",{"_index":2770,"title":{},"body":{"index.html":{}}}],["ville",{"_index":1126,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["void",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["voulez",{"_index":865,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["vouloir",{"_index":1406,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["vous",{"_index":866,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["vraiment",{"_index":867,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["w",{"_index":1845,"title":{},"body":{"components/ProfileComponent.html":{}}}],["warn",{"_index":1297,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["web",{"_index":2740,"title":{},"body":{"index.html":{}}}],["webhttp://localhost:4200",{"_index":2833,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":1433,"title":{},"body":{"components/IngredientComponent.html":{}}}],["websee",{"_index":2820,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":668,"title":{"interfaces/Wednesday.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeDetailComponent.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":1461,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["white",{"_index":2181,"title":{},"body":{"components/RecipesComponent.html":{}}}],["width",{"_index":736,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["window.location.href",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["window.scrollto(0",{"_index":1703,"title":{},"body":{"injectables/MessagesService.html":{}}}],["workflow",{"_index":2855,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":906,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDetailComponent.html":{}}}],["written",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["x.name",{"_index":1960,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["xxxxxx",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":903,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["z",{"_index":369,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["zara",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_code",{"_index":30,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1128,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["zone.js",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenModel.html":{"url":"interfaces/AccessTokenModel.html","title":"interface - AccessTokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/access-token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expire_at\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expire_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expire_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenModel {\n  token_type: string;\n  expires_in: number;\n  access_token: string;\n  refresh_token: string;\n  expire_at?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/address.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            second_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zip_code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        second_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n  id?: number;\n  first_line?: string;\n  second_line?: string;\n  zip_code?: string;\n  city?: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAddress\n                            \n                            \n                                    Public\n                                deleteAddress\n                            \n                            \n                                    Public\n                                getAddresses\n                            \n                            \n                                    Public\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/address/address.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(create: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        address_id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAddress(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:56\n                \n            \n\n\n            \n                \n                    Attention : Deletes an address from the system, only if it is not used\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete address\nAttention : Deletes an address from the system, only if it is not used\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddresses(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users addresses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAddress(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated address\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\nimport { Address } from '../../models/address.model';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/user.model';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/addresses\n   * @returns all users addresses\n   */\n  public getAddresses(user: User): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/addresses`)\n      .pipe(map((res) => [res]));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/addresses\n   * @param create new address\n   * @returns address_id\n   */\n  public createAddress(create: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/addresses`, create)\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/addresses/{address_id}\n   * @param update address\n   * @returns updated address\n   */\n  public updateAddress(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/addresses/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/addresses/{address_id}\n   * @param id address_id\n   * @returns Delete address\n   * Attention : Deletes an address from the system, only if it is not used\n   */\n  public deleteAddress(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/addresses/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiTokenInterceptorService.html":{"url":"interceptors/ApiTokenInterceptorService.html","title":"interceptor - ApiTokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiTokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/api-token-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { from, lastValueFrom, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTokenInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    console.log('[INTERCEPT API TOKEN] handle', req);\n\n    if (!req.urlWithParams.startsWith(environment.apiBaseUrl)) {\n      return next.handle(req);\n    }\n\n    console.log('[INTERCEPT API TOKEN] add');\n\n    return from(this.handle(req, next));\n  }\n\n  async handle(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Promise> {\n    const token = await this.authService.getAccessToken();\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return lastValueFrom(next.handle(req));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GOODFOOD'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'GOODFOOD';\n\n  constructor(private primengConfig: PrimeNGConfig, private router: Router) {}\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        if (!!event.url && event.url.match(/^\\/#/)) {\n          this.router.navigate([event.url.replace('/#', '')]);\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/store.reducer.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { routerReducer } from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\n\n/**\n * @ActionReducerMap Map of all the reducers in this feature of which we have only one\n */\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap = {\n  router: routerReducer,\n};\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state, action) => {\n    console.log('state before: ', state);\n    console.log('actions', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer[] = [];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, activatedRoute: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { AppState } from 'src/app/shared/store';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    let code: string = '';\n    let state: string = '';\n\n    this.activatedRoute.queryParams.subscribe((parameters) => {\n      code = parameters['code'];\n      state = parameters['state'];\n    });\n    this.authService.authorizationCodeToAccessToken(code, state);\n    console.log('auth component');\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n          console.log('je passe dans *** auth dispatch ***', user);\n        } else {\n          this.user = user;\n          let authorized: boolean = false;\n          user.roles.forEach((e) => {\n            if (e['code'] === Roles.ADMIN || e['code'] === Roles.FRANCHISEE) {\n              authorized = true;\n            }\n          });\n          if (authorized) {\n            this.router.navigateByUrl('/home');\n          } else {\n            this.router.navigateByUrl('/');\n          }\n        }\n      },\n      error: (error): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n      complete: () => {\n        console.info('complete');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.258);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { UserEffects } from '../shared/store/state/user';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { AuthService } from '../shared/services/user/auth/auth.service';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'redirect', component: AuthComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    //StoreModule.forFeature('user', fromAuth.userReducer),\n    ProgressSpinnerModule,\n    EffectsModule.forFeature([UserEffects]),\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n  ],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthModule,\n      providers: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessTokenIsExpired\n                            \n                            \n                                    Async\n                                authorizationCodeToAccessToken\n                            \n                            \n                                doSign\n                            \n                            \n                                    Async\n                                getAccessToken\n                            \n                            \n                                getAuthorizationCode\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                getCurrentUserRemote\n                            \n                            \n                                    Async\n                                getRole\n                            \n                            \n                                    Async\n                                getRoleRemote\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                roleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http client object\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        accessTokenIsExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    accessTokenIsExpired(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authorizationCodeToAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizationCodeToAccessToken(code: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Transform authorization code to AccessToken\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSign\n                        \n                    \n                \n            \n            \n                \ndoSign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthorizationCode\n                        \n                    \n                \n            \n            \n                \ngetAuthorizationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n                    Redirect user to login backend page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUserRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserRemote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleRemote(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:152\n                \n            \n\n\n            \n                \n                    Get user by id as a franchisee or an admin (goodfood)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:114\n                \n            \n\n\n            \n                \n                    Revoke the authenticated user token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        roleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleById(_user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:265\n                \n            \n\n\n            \n                \n                    Verify user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport getPkce from 'oauth-pkce';\nimport { catchError, firstValueFrom, Observable, throwError } from 'rxjs';\nimport { Router, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AccessTokenModel } from '../../../models/access-token.model';\nimport { User } from '../../../models/user.model';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { map, tap } from 'rxjs/operators';\nimport { StorageKeys } from 'src/app/shared/constants/storageKeys.const';\nimport { Roles } from 'src/app/shared/constants/role.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /**\n   *\n   * Constructor\n   * @param http The http client object\n   * @param stringService\n   * @param localStorageService\n   * @param router\n   */\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirect user to login backend page\n   */\n  getAuthorizationCode(): void {\n    if (this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      this.router.navigate(['/home']);\n      return;\n    }\n\n    this.localStorageService.remove(StorageKeys.STATE);\n    this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n    const state = RouterStateSnapshot.toString();\n\n    getPkce(128, (error, { verifier, challenge }) => {\n      if (!error) {\n        this.localStorageService.set(StorageKeys.CODE_VERIFY, verifier);\n        this.localStorageService.set(StorageKeys.STATE, state);\n\n        const query = new URLSearchParams({\n          client_id: environment.oAuthClientId,\n          redirect_uri: environment.oAuthCallbackUri,\n          response_type: 'code',\n          scope: '',\n          state: state,\n          code_challenge: challenge,\n          code_challenge_method: 'S256',\n        });\n\n        window.location.href = `${\n          environment.oAuthProviderBaseUrl\n        }/authorize?${query.toString()}`;\n      } else {\n        throw new Error('failed to get code challenger');\n      }\n    });\n  }\n\n  /** Transform authorization code to AccessToken */\n  async authorizationCodeToAccessToken(\n    code: string,\n    state: string\n  ): Promise {\n    console.log('try to change authorization code to access token');\n\n    if (\n      !this.localStorageService.has(StorageKeys.STATE) ||\n      !this.localStorageService.has(StorageKeys.CODE_VERIFY)\n    ) {\n      throw new Error('Workflow auth is not inizialized');\n    }\n\n    if (this.localStorageService.get(StorageKeys.STATE) !== state) {\n      throw new Error('State has changed');\n    }\n\n    this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'authorization_code',\n        client_id: environment.oAuthClientId,\n        redirect_uri: environment.oAuthCallbackUri,\n        code_verifier: this.localStorageService.get(StorageKeys.CODE_VERIFY),\n        code: code,\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      )\n      .subscribe(async (data) => {\n        console.log('Set to local storage token access');\n        data.expire_at = Date.now() + data.expires_in * 1000;\n        this.localStorageService.set(StorageKeys.USER_TOKEN, data);\n        this.localStorageService.remove(StorageKeys.STATE);\n        this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n        await this.getCurrentUser();\n\n        this.router.navigate(['/home']);\n      });\n  }\n\n  /** Revoke the authenticated user token */\n  logout() {\n    this.localStorageService.remove(StorageKeys.USER);\n    this.router.navigateByUrl('/');\n  }\n\n  async getAccessToken(): Promise {\n    if (!this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      throw new Error('user unauthenticated');\n    }\n\n    const userAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n\n    if (this.accessTokenIsExpired(userAccessToken)) {\n      console.log('REFRESH USER TOKEN');\n      await this.refreshToken(userAccessToken);\n      console.log('USER TOKEN REFRESHED');\n    }\n    console.log('RETURN ACCESS TOKEN FROM STORAGE');\n\n    const freshAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n    return freshAccessToken.access_token;\n  }\n\n  isAuthenticated(): boolean {\n    return (\n      !!this.localStorageService.has(StorageKeys.USER) &&\n      !!this.localStorageService.has(StorageKeys.ROLE) &&\n      !!this.localStorageService.has(StorageKeys.USER_TOKEN)\n    );\n  }\n\n  /**\n   * Get user by id as a franchisee or an admin (goodfood)\n   */\n  getUserById(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  doSign(): Observable {\n    return this.http\n      .get(`${environment.oAuthProviderBaseUrl}/token`)\n      .pipe(map((res) => res['payload']));\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  getUserRole(user: User): Observable {\n    const currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/roles`)\n      .pipe(\n        tap(() => currentRole),\n        map((value) => this.initAuth(value))\n      );\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  async getCurrentUser(): Promise {\n    let currentUser: User;\n    if (this.localStorageService.has(StorageKeys.USER)) {\n      console.log('[AUTHSERVICE] Retrieve USER from CACHE');\n      currentUser = this.localStorageService.get(StorageKeys.USER);\n    } else {\n      console.log('[AUTHSERVICE] Retrieve USER from remote');\n      const usr = this.http.get(\n        `${environment.apiBaseUrl}/users/current`\n      );\n      currentUser = await firstValueFrom(usr);\n      this.localStorageService.set(StorageKeys.USER, currentUser);\n    }\n    return this.getRole(currentUser);\n  }\n\n  async getCurrentUserRemote(): Promise {\n    let currentUser: User;\n    const usr = this.http.get(`${environment.apiBaseUrl}/users/current`);\n    currentUser = await firstValueFrom(usr);\n\n    return this.getRoleRemote(currentUser);\n  }\n\n  async getRole(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    if (this.localStorageService.has(StorageKeys.ROLE)) {\n      console.log('[AUTHSERVICE] Retrieve ROLE from CACHE');\n      currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    } else {\n      console.log('[AUTHERVICE] Retrieve ROLE from remote');\n      const userRoles = this.http.get(\n        `${environment.apiBaseUrl}/users/${user.id}/roles`\n      );\n      const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n      currentRole = userCurrentRoles[0];\n      this.localStorageService.set(StorageKeys.ROLE, currentRole);\n    }\n    user.roles.push(currentRole);\n\n    return this.roleById(user);\n  }\n\n  async getRoleRemote(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    const userRoles = this.http.get(\n      `${environment.apiBaseUrl}/users/${user.id}/roles`\n    );\n    const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n    currentRole = userCurrentRoles[0];\n\n    user.roles.push(currentRole);\n    return this.roleById(user);\n  }\n\n  /** Verify user role */\n  public roleById(_user: User): User {\n    const user = {\n      ..._user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        user.autorisations.isFranchisee = true;\n      }\n    });\n    return user;\n  }\n\n  private async refreshToken(data: AccessTokenModel): Promise {\n    const response = this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'refresh_token',\n        refresh_token: data.refresh_token,\n        client_id: environment.oAuthClientId,\n        scope: '',\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      );\n    const dataResponse = await firstValueFrom(response);\n\n    dataResponse.expire_at = Date.now() + dataResponse.expires_in * 1000;\n    this.localStorageService.set(StorageKeys.USER_TOKEN, dataResponse);\n  }\n\n  private accessTokenIsExpired(data: AccessTokenModel): boolean {\n    return (\n      !!data.expire_at && data.expire_at > 0 && Date.now() >= data.expire_at\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Autorisation.html":{"url":"interfaces/Autorisation.html","title":"interface - Autorisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Autorisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isFranchisee\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFranchisee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFranchisee:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MenubarModule } from 'primeng/menubar';\nimport { RippleModule } from 'primeng/ripple';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { TitleComponent } from './title/title.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\n\n@NgModule({\n  declarations: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n    ServerErrorComponent,\n  ],\n  exports: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    CheckboxModule,\n    BadgeModule,\n    ButtonModule,\n    TooltipModule,\n    SidebarModule,\n    DropdownModule,\n    MenubarModule,\n    RippleModule,\n  ],\n})\nexport class ComponentsModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                styleUrls\n                ./default.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss'],\n})\nexport class DefaultComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./default.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DefaultModule.html":{"url":"modules/DefaultModule.html","title":"module - DefaultModule","body":"\n                   \n\n\n\n\n    Modules\n    DefaultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/default/default.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { DefaultComponent } from './default.component';\nimport { ComponentsModule } from './../components/components.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  declarations: [DefaultComponent],\n  exports: [DefaultComponent],\n  imports: [CommonModule, RouterModule, ComponentsModule, ToastModule],\n})\nexport class DefaultModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Diner.html":{"url":"interfaces/Diner.html","title":"interface - Diner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Diner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorDataHttp.html":{"url":"interfaces/ErrorDataHttp.html","title":"interface - ErrorDataHttp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorDataHttp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            functionality\n                                        \n                                \n                                \n                                        \n                                            httpErrorResponse\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        functionality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        functionality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpErrorResponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpErrorResponse:         HttpErrorResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpErrorResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHttpService.html":{"url":"injectables/ErrorHttpService.html","title":"injectable - ErrorHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorHttp$\n                            \n                            \n                                    Private\n                                errorHttpSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeErrorHttp\n                            \n                            \n                                    Public\n                                newErrorHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeErrorHttp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    newErrorHttp(httpErrorResponse: HttpErrorResponse, functionality: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:21\n                \n            \n\n\n            \n                \n                    Retrieve the error and the feature causing the error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    httpErrorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        serveur response\n\n                                    \n                                \n                                \n                                    functionality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function causing the problem\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorHttp$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.errorHttpSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorHttpSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/footer/footer.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    Copyright © GOOD FOOD 2021-2022\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  color: lightgoldenrodyellow;\n  font-size: small;\n  position: fixed !important;\n  padding-right: 10px;\n  margin-bottom: -20px;\n  bottom: 0%;\n  right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Copyright © GOOD FOOD 2021-2022  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Franchisee.html":{"url":"interfaces/Franchisee.html","title":"interface - Franchisee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Franchisee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            create_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_delivery_radius\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owned_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        create_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_delivery_radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_delivery_radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedBy:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from './address.model';\nimport { User } from './user.model';\n\nexport interface Franchisee {\n  id?: number;\n  name?: string;\n  phone?: string;\n  email?: string;\n  max_delivery_radius?: number;\n  address_id?: number;\n  ownedBy?: User;\n  owned_by?: number;\n  create_by?: number;\n  address?: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeComponent.html":{"url":"components/FranchiseeComponent.html","title":"component - FranchiseeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee/franchisee.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-franchisee\n            \n\n            \n                styleUrls\n                ./franchisee.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./franchisee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contactDialog\n                            \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                editMode\n                            \n                            \n                                first\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchisees\n                            \n                            \n                                id\n                            \n                            \n                                isCreate\n                            \n                            \n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                scheduleDialog\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewFranchisee\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, messageService: MessageService, confirmationService: ConfirmationService, dialogService: DialogService, loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewFranchisee\n                        \n                    \n                \n            \n            \n                \ncreateNewFranchisee()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:184\n                \n            \n\n\n            \n                \n                    Delete a franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scheduleDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport { finalize } from 'rxjs/operators';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\nimport { Address } from 'src/app/shared/models/address.model';\nimport { Schedule } from './../../../shared/models/schedule.model';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { FranchiseeDialogComponent } from '../franchisee-dialog/franchisee-dialog.component';\n\n@Component({\n  selector: 'app-franchisee',\n  templateUrl: './franchisee.component.html',\n  styleUrls: ['./franchisee.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n  animations: [\n    trigger('rowExpansionTrigger', [\n      state(\n        'void',\n        style({\n          transform: 'translateX(-10%)',\n          opacity: 0,\n        })\n      ),\n      state(\n        'active',\n        style({\n          transform: 'translateX(0)',\n          opacity: 1,\n        })\n      ),\n      transition('*  *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n    ]),\n  ],\n})\nexport class FranchiseeComponent implements OnInit {\n  // form: FormGroup;\n  ref: DynamicDialogRef;\n\n  franchisees: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  contactDialog: boolean;\n  scheduleDialog: boolean;\n\n  sortOrder: number;\n  sortField: string;\n\n  isCreate: boolean;\n  editMode: boolean;\n\n  // submitted: boolean;\n  first: number = 0;\n  id: number;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    public dialogService: DialogService,\n    private loading: LoadingService\n  ) {\n    // NOSONAR\n  }\n\n  ngOnInit(): void {\n    /* retrieve franchisees */\n    this.loading.loadingOn();\n    this.franchiseeService\n      .getFranchisees()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.franchisees = res;\n      });\n  }\n\n  onSortChange(event) {\n    let value = (event.target as HTMLTextAreaElement).value;\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  createNewFranchisee(): void {\n    const ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: 'Ajouter un nouveau franchisé',\n      width: '60%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        franchisee: [],\n        address: {},\n        schedule: {},\n      },\n    });\n    ref.onClose.subscribe((franchisee: Franchisee) => {\n      if (franchisee) {\n        this.franchisees = [...this.franchisees];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'Le franchisé est bien crée.',\n        });\n      }\n    });\n  }\n\n  update(franchisee: Franchisee): void {\n    this.ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: `${franchisee.name}`,\n      width: '60%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        schedule: this.schedule,\n        address: this.address,\n        franchisee,\n      },\n    });\n    this.ref.onClose.subscribe((_franchisee: Franchisee): void => {\n      if (_franchisee) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'Le franchisé est bien modifié.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id franchisee\n   * Delete a franchisee\n   */\n  delete(franchisee: Franchisee): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer le franchisé \"${franchisee.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.franchiseeService.deleteFranchisee(franchisee.id).subscribe({\n          next: (): void => {\n            this.franchisees = [...this.franchisees];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Ce franchisé est supprimé.',\n              life: 3000,\n            });\n          },\n          error: (error: any): void => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de csuppression du franchisé',\n              detail: error.error,\n            });\n            console.log(\n              'erreur le moment de suppression du franchisé : ',\n              error\n            );\n          },\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n      \n    \n    \n      \n        \n          \n           Nom de franchisé \n            \n          \n           Numéro de téléphone \n            \n          \n           Email \n          \n           Adresse \n          \n          \n        \n      \n      \n        \n          \n            \n          \n          {{ franchisee.name }}\n          {{ franchisee.phone }}\n          {{ franchisee.email }}\n          \n            {{ franchisee.address.first_line }}, \n              {{ franchisee.address.second_line }},\n            \n            {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}\n          \n          \n            \n            \n          \n        \n      \n      \n         En total\n          il y a {{ franchisees ? franchisees.length : 0 }} franchisees. \n      \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./franchisee.component.scss\n                \n                \n.layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                             Nom de franchisé                                  Numéro de téléphone                                  Email                      Adresse                                                                                           {{ franchisee.name }}          {{ franchisee.phone }}          {{ franchisee.email }}                      {{ franchisee.address.first_line }},               {{ franchisee.address.second_line }},                        {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}                                                                                   En total          il y a {{ franchisees ? franchisees.length : 0 }} franchisees.                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeDetailComponent.html":{"url":"components/FranchiseeDetailComponent.html","title":"component - FranchiseeDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee-detail\n            \n\n            \n                styleUrls\n                ./franchisee-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchisees\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Private\n                                routeSub\n                            \n                            \n                                schedule\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFranchiseeById\n                            \n                            \n                                    Private\n                                getSchedule\n                            \n                            \n                                initSchedule\n                            \n                            \n                                newSchedule\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, scheduleService: ScheduleService, messageService: MessageService, loading: LoadingService, fb: FormBuilder, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleService\n                                                  \n                                                        \n                                                                        ScheduleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFranchiseeById\n                        \n                    \n                \n            \n            \n                \ngetFranchiseeById()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSchedule\n                        \n                    \n                \n            \n            \n                \ninitSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSchedule\n                        \n                    \n                \n            \n            \n                \nnewSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \nupdateSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Wednesday,\n  Thursday,\n  Lunch,\n} from './../../../shared/models/schedule.model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { Subscription } from 'rxjs';\nimport { Address } from 'src/app/shared/models/address.model';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\nimport { Schedule } from 'src/app/shared/models/schedule.model';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { ScheduleService } from 'src/app/shared/services/schedule/schedule.service';\n\n@Component({\n  selector: 'app-franchisee-detail',\n  templateUrl: './franchisee-detail.component.html',\n  styleUrls: ['./franchisee-detail.component.scss'],\n})\nexport class FranchiseeDetailComponent implements OnInit {\n  franchisees: Franchisee[] = [];\n  franchisee: Franchisee;\n  id: number;\n  address: Address;\n  schedule: Schedule;\n  private routeSub: Subscription;\n  form: FormGroup;\n  editMode: boolean;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    private scheduleService: ScheduleService,\n    public messageService: MessageService,\n    private loading: LoadingService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.routeSub = this.route.params.subscribe((params) => {\n      this.id = params['id']; //assign the value of id\n    });\n    this.franchiseeService.getFranchisees().subscribe((res) => {\n      this.franchisees = res;\n      this.getFranchiseeById();\n      this.scheduleService.getSchedule(this.franchisee).subscribe((res) => {\n        this.schedule = res;\n        console.log('get schedule ---> ', res);\n      });\n    });\n\n    this.initSchedule();\n  }\n\n  initSchedule(): void {\n    this.form = this.fb.group({\n      monday: [this.schedule?.monday, [Validators.required]],\n      tuesday: [this.schedule?.tuesday, [Validators.required]],\n      Wednesday: [this.schedule?.wednesday, [Validators.required]],\n      Thursday: [this.schedule?.thursday, [Validators.required]],\n      friday: [this.schedule?.friday, [Validators.required]],\n      saturday: [this.schedule?.saturday, [Validators.required]],\n      sunday: [this.schedule?.sunday, [Validators.required]],\n    });\n  }\n\n  private getSchedule(): void {\n    this.schedule.monday.lunch = this.form.value.monday.lunch;\n    this.schedule.monday.night = this.form.value.monday.night;\n    this.schedule.tuesday.lunch = this.form.value.tuesday.lunch;\n    this.schedule.tuesday.night = this.form.value.tuesday.night;\n    this.schedule.wednesday.lunch = this.form.value.wednesday.lunch;\n    this.schedule.wednesday.night = this.form.value.wednesday.night;\n    this.schedule.thursday.lunch = this.form.value.thursday.lunch;\n    this.schedule.thursday.night = this.form.value.thursday.night;\n    this.schedule.friday.lunch = this.form.value.friday.lunch;\n    this.schedule.friday.night = this.form.value.friday.night;\n    this.schedule.saturday.lunch = this.form.value.saturday.lunch;\n    this.schedule.saturday.night = this.form.value.saturday.night;\n    this.schedule.sunday.lunch = this.form.value.sunday.lunch;\n    this.schedule.sunday.night = this.form.value.sunday.night;\n  }\n\n  public onSubmit(): void {\n    this.loading.loadingOn();\n    this.getSchedule();\n    if (this.editMode) {\n      this.updateSchedule();\n    } else {\n      this.newSchedule();\n    }\n  }\n\n  getFranchiseeById(): void {\n    this.franchisees.forEach((e) => {\n      if (e.id == this.id) {\n        this.franchisee = e;\n      }\n    });\n  }\n\n  updateSchedule(): void {\n    //NOSONAR\n  }\n\n  newSchedule(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n \n\n\n  \n\n\n  \n  \n\n\n\n  \n  \n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  {{ franchisee.name }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n              \n                {{ franchisee.phone }}\n              \n            \n          \n          \n            \n              \n              \n                {{ franchisee.email }}\n              \n            \n          \n          \n            \n            \n              {{ franchisee.address.first_line }}, \n                {{ franchisee.address.second_line }},\n              \n              {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          Horaires\n          \n        \n        \n          \n          Midi\n          Soir\n        \n        \n          \n            Lundi\n            {{schedule.monday.lunch}}\n            {{schedule.monday.night}}\n          \n          \n            Mardi\n            {{schedule.tuesday.lunch}}\n            {{schedule.tuesday.night}}\n          \n          \n            Mercredi\n            {{schedule.wednesday.lunch}}\n            {{schedule.wednesday.night}}\n          \n          \n            Jeudi\n            {{schedule.thursday.lunch}}\n            {{schedule.thursday.night}}\n          \n          \n            Vendredi\n            {{schedule.friday.lunch}}\n            {{schedule.friday.night}}\n          \n          \n            Samedi\n            {{schedule.saturday.lunch}}\n            {{schedule.saturday.night}}\n          \n          \n            Dimanche\n            {{schedule.sunday.lunch}}\n            {{schedule.sunday.night}}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./franchisee-detail.component.scss\n                \n                .layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                     {{ franchisee.name }}                                                                                                                                      {{ franchisee.phone }}                                                                                                      {{ franchisee.email }}                                                                                    {{ franchisee.address.first_line }},                 {{ franchisee.address.second_line }},                            {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}                                                                        Horaires                                              Midi          Soir                                      Lundi            {{schedule.monday.lunch}}            {{schedule.monday.night}}                                Mardi            {{schedule.tuesday.lunch}}            {{schedule.tuesday.night}}                                Mercredi            {{schedule.wednesday.lunch}}            {{schedule.wednesday.night}}                                Jeudi            {{schedule.thursday.lunch}}            {{schedule.thursday.night}}                                Vendredi            {{schedule.friday.lunch}}            {{schedule.friday.night}}                                Samedi            {{schedule.saturday.lunch}}            {{schedule.saturday.night}}                                Dimanche            {{schedule.sunday.lunch}}            {{schedule.sunday.night}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeDialogComponent.html":{"url":"components/FranchiseeDialogComponent.html","title":"component - FranchiseeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee-dialog\n            \n\n            \n                styleUrls\n                ./franchisee-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchiseeArray\n                            \n                            \n                                localStorageService\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                create\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Private\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, loading: LoadingService, franchiseeService: FranchiseeService, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\nimport { Address } from 'src/app/shared/models/address.model';\nimport { Schedule } from 'src/app/shared/models/schedule.model';\nimport { AddressService } from 'src/app/shared/services/address/address.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { User } from 'src/app/shared/models/user.model';\nimport { StorageKeys } from 'src/app/shared/constants/storageKeys.const';\n\n@Component({\n  selector: 'app-franchisee-dialog',\n  templateUrl: './franchisee-dialog.component.html',\n  styleUrls: ['./franchisee-dialog.component.scss'],\n})\nexport class FranchiseeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n  form: FormGroup;\n\n  franchiseeArray: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  submitted: boolean;\n  localStorageService: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private loading: LoadingService,\n    private franchiseeService: FranchiseeService,\n    private addressService: AddressService\n  ) {\n    this.mode = config.data.mode;\n    this.franchisee = config.data.franchisee;\n    this.address = config.data.address;\n    this.schedule = config.data.schedule;\n  }\n\n  ngOnInit(): void {\n    this.franchiseeService\n      .getFranchisees()\n      .subscribe((data: Franchisee[]): void => {\n        this.franchiseeArray = data;\n      });\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.franchisee?.name || '', [Validators.required]],\n      phone: [this.franchisee?.phone || '', [Validators.required]],\n      email: [\n        this.franchisee?.email || '',\n        [Validators.required, Validators.email],\n      ],\n      max_delivery_radius: [\n        this.franchisee?.max_delivery_radius,\n        [Validators.required],\n      ],\n      address: [this.franchisee?.address, [Validators.required]],\n      first_line: [this.franchisee?.address?.first_line, [Validators.required]],\n      second_line: [this.franchisee?.address?.second_line || ''],\n      zip_code: [\n        this.franchisee?.address?.zip_code || '',\n        [Validators.required],\n      ],\n      city: [this.franchisee?.address?.city || '', [Validators.required]],\n      country: [this.franchisee?.address?.country || '', [Validators.required]],\n    });\n  }\n\n  private getFormValues(): void {\n    this.franchisee.name = this.form.value.name;\n    this.franchisee.phone = this.form.value.phone;\n    this.franchisee.email = this.form.value.email;\n    this.franchisee.max_delivery_radius = this.form.value.max_delivery_radius;\n    this.franchisee.address.first_line = this.form.value.first_line;\n    this.franchisee.address.second_line = this.form.value.second_line;\n    this.franchisee.address.zip_code = this.form.value.zip_code;\n    this.franchisee.address.city = this.form.value.city;\n    this.franchisee.address.country = this.form.value.country;\n    if (this.mode === 'UPDATE') {\n      this.address = this.franchisee.address;\n      this.address.id = this.franchisee.address_id;\n    }\n  }\n\n  public onSubmit(): void {\n    this.getFormValues();\n    this.loading.loadingOn();\n\n    if (this.mode === 'UPDATE') {\n      this.update();\n    } else {\n      this.create();\n    }\n  }\n\n  private create(): void {\n    this.addressService\n      .createAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.address = res;\n        this.franchisee.address_id = res.id;\n        this.franchiseeService\n          .newFranchisee(\n            this.franchisee,\n            (this.localStorageService.get(StorageKeys.USER)).id\n          )\n          .subscribe({\n            next: (_res) => {\n              this.ref.close(_res);\n              this.franchisee = _res;\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création du franchisé.',\n                detail: error.error,\n              });\n            },\n          });\n      });\n  }\n\n  private update(): void {\n    this.addressService\n      .updateAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((): void => {\n        this.franchiseeService.updateFranchisee(this.franchisee).subscribe({\n          next: (res) => {\n            this.ref.close(res);\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de modification du franchisé.',\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de franchisé\n      \n      Champ obligatoire\n    \n    \n      Numéro de téléphone\n      \n      Champ obligatoire\n    \n    \n      Email\n      \n      Champ obligatoire\n    \n  \n  \n    \n      Ligne 1\n      \n    \n    \n      Ligne 2\n      \n    \n    \n      Code postal\n      \n    \n  \n  \n    \n      Ville\n      \n    \n    \n      Pays\n      \n    \n    \n      Zone de livraison\n      \n      \n      Champ obligatoire\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./franchisee-dialog.component.scss\n                \n                ::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de franchisé            Champ obligatoire              Numéro de téléphone            Champ obligatoire              Email            Champ obligatoire                  Ligne 1                    Ligne 2                    Code postal                        Ville                    Pays                    Zone de livraison                  Champ obligatoire                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FranchiseeModule.html":{"url":"modules/FranchiseeModule.html","title":"module - FranchiseeModule","body":"\n                   \n\n\n\n\n    Modules\n    FranchiseeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDetailComponent\n\nFranchiseeDetailComponent\n\nFranchiseeModule -->\n\nFranchiseeDetailComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/franchisee/franchisee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FranchiseeComponent\n                        \n                        \n                            FranchiseeDetailComponent\n                        \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            FranchiseeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { SelectButtonModule } from 'primeng/selectbutton';\n\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\nimport { FranchiseeComponent } from './franchisee/franchisee.component';\nimport { FranchiseeDialogComponent } from './franchisee-dialog/franchisee-dialog.component';\nimport { FranchiseeDetailComponent } from './franchisee-detail/franchisee-detail.component';\n\nconst routes: Routes = [\n  { path: '', component: FranchiseeComponent },\n  { path: ':id', component: FranchiseeDetailComponent },\n];\n\n@NgModule({\n  declarations: [\n    FranchiseeComponent,\n    FranchiseeDialogComponent,\n    FranchiseeDetailComponent,\n  ],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DynamicDialogModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    KeyFilterModule,\n  ],\n  entryComponents: [FranchiseeDialogComponent],\n  providers: [\n    FranchiseeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class FranchiseeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FranchiseeRecipe.html":{"url":"interfaces/FranchiseeRecipe.html","title":"interface - FranchiseeRecipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FranchiseeRecipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee-recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe:         Recipe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recipe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Recipe } from './recipe.model';\n\nexport interface FranchiseeRecipe {\n\tid?: number;\n\tprice?: number;\n\trecipe_id?: number;\n\trecipe?: Recipe;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FranchiseeService.html":{"url":"injectables/FranchiseeService.html","title":"injectable - FranchiseeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FranchiseeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/franchisee/franchisee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRecipe\n                            \n                            \n                                    Public\n                                deleteFranchisee\n                            \n                            \n                                    Public\n                                getFranchiseeRecipes\n                            \n                            \n                                    Public\n                                getFranchisees\n                            \n                            \n                                    Public\n                                newFranchisee\n                            \n                            \n                                    Public\n                                removeRecipe\n                            \n                            \n                                    Public\n                                updateFranchisee\n                            \n                            \n                                    Public\n                                updateRecipePrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/franchisee/franchisee.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRecipe(item: Franchisee, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:93\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients for franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee (recipe)\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFranchisee(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchiseeRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchiseeRecipes(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        franchisee recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchisees\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchisees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all Franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    newFranchisee(create: Partial, owner_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new franchisee\n\n                                    \n                                \n                                \n                                    owner_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee id - message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRecipe(id: number, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Remove a recipe from franchisee catalog\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFranchisee(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipePrice\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipePrice(update: Partial, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map, Observable, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { FranchiseeRecipe } from '../../models/franchisee-recipe.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FranchiseeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors\n   * @returns all Franchisee\n   */\n  public getFranchisees(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/contractors`)\n      .pipe(\n        tap((obj: any) => console.log('service -> get franchisees : ', obj)),\n        map((res: any) => res['data'])\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors/{contractor_id}/recipes\n   * @param recipe\n   * @returns franchisee recipes\n   */\n  public getFranchiseeRecipes(\n    franchisee: Franchisee\n  ): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/recipes`\n      )\n      .pipe(\n        tap((obj): void => console.log('service -> All recipes : ', obj)),\n        map((res): any => res['data'])\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors\n   * @param create new franchisee\n   * @returns franchisee id - message\n   */\n  public newFranchisee(\n    create: Partial,\n    owner_id: number\n  ): Observable {\n    let franchisee: Franchisee;\n    franchisee = {\n      ...create,\n    };\n    franchisee.owned_by = owner_id;\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors`, franchisee)\n      .pipe(\n        tap((obj) => console.log(' service -> new franchisee : ', obj)),\n        map((res) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors\n   * @param update franchisee\n   * @returns update franchisee\n   */\n  public updateFranchisee(update: Partial): Observable {\n    return this.http.put(`${environment.apiBaseUrl}/contractors`, update).pipe(\n      tap((obj) => console.log('service -> edit franchisee : ', obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors/{contractor_id}/recipes\n   * Create new recipe with igredients for franchisee\n   * @param item franchisee (recipe)\n   * @returns new recipe\n   */\n  public addRecipe(\n    item: Franchisee,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors/${item.id}/recipes`, recipe)\n      .pipe(\n        // tap((obj: any) => console.log('service -> addStarRecipe : ', obj)),\n        map((res: any) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param update franchisee schedule\n   * @returns update recipe\n   */\n  public updateRecipePrice(\n    update: Partial,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .put(\n        `${environment.apiBaseUrl}/contractors/${update.id}/recipes/${recipe.id}`,\n        recipe\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> updateRecipePrice : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.UPDATE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param id franchisee_id\n   * @param recipe.id recipe_id\n   * @returns Remove a recipe from franchisee catalog\n   */\n  public removeRecipe(\n    id: number,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .delete(\n        `${environment.apiBaseUrl}/contractors/${id}/recipes/${recipe.id}`\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> Remove removeRecipe : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.DELETE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractors_id}\n   * @param id franchisee_id\n   * @returns Delete a franchisee\n   */\n  public deleteFranchisee(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/contractors/${id}`).pipe(\n      // tap((obj) => console.log('service -> deleteFranchisee : ', obj)),\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(() => httpErrorResponse);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Friday.html":{"url":"interfaces/Friday.html","title":"interface - Friday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Friday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/home/home.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'src/app/shared/services/user/local-storage/local-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Bientôt\n            Ici nous trouvons les informations statiques de franchisés, utilisateurs, ...\n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Bientôt            Ici nous trouvons les informations statiques de franchisés, utilisateurs, ...                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RippleModule } from 'primeng/ripple';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    AvatarModule,\n    BadgeModule,\n    TooltipModule,\n    RippleModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-error/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { MessageService } from 'primeng/api';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private messageService: MessageService) {\n    //NOSONAR\n  }\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError((err) => this.handleError(err)));\n  }\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    switch (error.status) {\n      case 400:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log(\n          \"Désolé, vous n'etes pas autorise a acceder a ce page.\",\n          error?.error?.message\n        );\n        break;\n      case 401:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, vous n'etes pas autorise a acceder a ce page.\");\n        break;\n      case 404:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé, page introuvable.');\n        break;\n      case 500:\n        this.messageService.add({\n          life: 5000,\n          severity: 'error',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé, une erreur est survenue au niveau serveur.');\n        break;\n      default:\n        this.messageService.add({\n          life: 5000,\n          severity: 'error',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé une erreur est survenue: ', error?.error?.message);\n    }\n    return throwError(() => new Error(error.message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngreType.html":{"url":"interfaces/IngreType.html","title":"interface - IngreType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngreType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngreType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ingredient.html":{"url":"interfaces/Ingredient.html","title":"interface - Ingredient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allergen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            types\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allergen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        types:         IngreType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IngreType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngreType } from './ingredient-type.model';\n\n/*\n * url : /ingredients\n */\nexport interface Ingredient {\n  id?: number;\n  name?: string;\n  allergen?: boolean;\n  types?: IngreType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientComponent.html":{"url":"components/IngredientComponent.html","title":"component - IngredientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient/ingredient.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient\n            \n\n            \n                styleUrls\n                ./ingredient.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allergen\n                            \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                ingredient\n                            \n                            \n                                ingredientDialog\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                isCreate\n                            \n                            \n                                selectedIngredients\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredient\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                isAllergen\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                newIngredient\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientService: IngredientService, ingredientTypeService: IngredientTypeService, messageService: MessageService, confirmationService: ConfirmationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllergen\n                        \n                    \n                \n            \n            \n                \nisAllergen(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredient\n                        \n                    \n                \n            \n            \n                \nnewIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \nupdateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allergen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder,\n  FormControl,\n} from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientComponent implements OnInit {\n  form: FormGroup;\n\n  ingredient: Ingredient;\n\n  typeArray: IngreType[] = [];\n  ingredientType: IngreType;\n\n  ingredients: Ingredient[] = [];\n  selectedIngredients: Ingredient[];\n\n  allergen: boolean;\n  ingredientDialog: boolean;\n  submitted: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private ingredientService: IngredientService,\n    private ingredientTypeService: IngredientTypeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingredient?.name || '', [Validators.required]],\n      allergen: this.ingredient?.allergen || false,\n      ingredientType: this.ingredient?.types || new FormControl([]),\n    });\n  }\n\n  private makeRecipe(): void {\n    const ingredient: Ingredient = {};\n    if (this.isCreate) {\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n      ingredient.types = [this.form.controls['ingredientType'].value.code];\n    } else {\n      ingredient.id = this.ingredient.id;\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n    }\n    this.ingredient = ingredient;\n  }\n\n  newIngredient(): void {\n    this.ingredient = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  updateIngredient(ingredient: Ingredient): void {\n    this.ingredient = { ...ingredient };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeRecipe();\n\n    if (this.ingredient.id) {\n      this.ingredientService.updateIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Mise à jour d'ingredient\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreur le moment de modification',\n            detail: error.error,\n          });\n        },\n      });\n    } else {\n      this.ingredientService.createIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: 'Nouvel ingredient ajouté',\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreur le moment de création',\n            detail: error.error,\n          });\n        },\n      });\n    }\n    // this.ingredients = [...this.ingredients];\n    this.ingredientDialog = false;\n    this.ingredients = [...this.ingredients, this.ingredient];\n    // this.ingredient = {};\n  }\n\n  deleteIngredient(ingredient: Ingredient): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingredient.name + '\"?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientService.deleteIngredient(ingredient.id).subscribe({\n          next: () => {\n            this.ingredients = [...this.ingredients, this.ingredient];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: \"L'ingrédient est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: \"Erreur le moment de suppression de l'ingrédient!\",\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  isAllergen(event: any): void {\n    this.allergen = event.checked;\n    if (event.checked) {\n      this.allergen = true;\n      this.form.get('allergen').setValue(true);\n    } else {\n      this.form.get('allergen').setValue(false);\n    }\n  }\n\n  hideDialog(): void {\n    this.ingredientDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom d'ingredient \n        \n        \n          Type d'ingredient  \n        \n        \n          Allergen \n        \n        \n      \n    \n    \n      \n        {{ ingredient.name }}\n        {{ value.code }}\n        Oui\n        Non\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom d'ingrédient\n      \n      Nom est obligatoire.\n    \n    \n      \n        Type d'ingrédient\n        \n        \n      \n    \n    \n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./ingredient.component.scss\n                \n                .grid > .col,\n.grid > [class*=\"col\"] {\n  box-sizing: border-box;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  padding: 1rem;\n  width: 100%;\n}\n#icons {\n  justify-content: center !important;\n  right: 50%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ndiv {\n  display: block;\n}\n\nbody {\n  font-family: Lato, Helvetica, sans-serif;\n  font-size: 14px;\n  color: #495057;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 0;\n  margin: 0;\n  min-height: 100%;\n  background-image: linear-gradient(147.38deg, #ffffff 0%, #86a8c0 100%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n:root {\n  --fc-daygrid-event-dot-width: 8px;\n}\n\n// ---------------------\n\n:host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom d\\'ingredient                           Type d\\'ingredient                            Allergen                                             {{ ingredient.name }}        {{ value.code }}        Oui        Non                                                                En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.                        Nom d\\'ingrédient            Nom est obligatoire.                      Type d\\'ingrédient                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredient\n                            \n                            \n                                    Public\n                                deleteIngredient\n                            \n                            \n                                    Public\n                                getIngredients\n                            \n                            \n                                    Public\n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredient(item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create new ingredient\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredient(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:55\n                \n            \n\n\n            \n                \n                    Attention : All recipes attached to this ingredient will lose their ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\nAttention : All recipes attached to this ingredient will lose their ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredients\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredient(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update ingredient\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/ingredients\n   * @returns all ingredients\n   */\n  public getIngredients(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients`)\n      .pipe(map((res) => res['data']));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/ingredients\n   * @param item Create new ingredient\n   * @returns new ingredient\n   */\n  public createIngredient(item: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients`, item)\n      .pipe(map((res) => (res ? res['message'] : Message.CREATE)));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/ingredients/{ingredient_id}\n   * @param update ingredient items\n   * @returns update ingredient\n   */\n  public updateIngredient(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/ingredients/{ingredient_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   * Attention : All recipes attached to this ingredient will lose their ingredient\n   */\n  public deleteIngredient(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientTypeComponent.html":{"url":"components/IngredientTypeComponent.html","title":"component - IngredientTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient-type\n            \n\n            \n                styleUrls\n                ./ingredient-type.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                ingredientTypeDialog\n                            \n                            \n                                ingreType\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredientType\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeIngredientType\n                            \n                            \n                                newIngredientType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientTypeService: IngredientTypeService, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \ndeleteIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredientType\n                        \n                    \n                \n            \n            \n                \nnewIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \nupdateIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientTypeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient-type',\n  templateUrl: './ingredient-type.component.html',\n  styleUrls: ['./ingredient-type.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientTypeComponent implements OnInit {\n  ingreType: IngreType;\n  typeArray: IngreType[] = [];\n\n  form: FormGroup;\n\n  first: number = 0;\n\n  ingredientTypeDialog: boolean;\n  submitted: boolean;\n\n  constructor(\n    private ingredientTypeService: IngredientTypeService,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingreType?.name || '', Validators.required],\n      description: this.ingreType?.description || '',\n    });\n  }\n\n  private makeIngredientType(): void {\n    let ingreType: IngreType = {};\n\n    ingreType.name = this.form.get('name').value;\n    ingreType.description = this.form.get('description').value;\n    ingreType.id = this.ingreType?.id || null;\n    this.ingreType = ingreType;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeIngredientType();\n    if (this.ingreType.id) {\n      this.ingredientTypeService\n        .updateIngredientType(this.ingreType)\n        .subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Le type d'ingrédient est bien modifié.\",\n            life: 3000,\n          });\n        });\n    } else {\n      this.ingredientTypeService\n        .createIngredientType(this.ingreType)\n        .subscribe((res) => {\n          console.log('res : ', res);\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"le type d'ingrédient est bien créé.\",\n            life: 3000,\n          });\n        });\n    }\n\n    this.typeArray = [...this.typeArray];\n    this.ingredientTypeDialog = false;\n    this.ingreType = {};\n  }\n\n  newIngredientType(): void {\n    this.ingreType = {};\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  updateIngredientType(ingreType: IngreType): void {\n    this.ingreType = { ...ingreType };\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  deleteIngredientType(ingreType: IngreType): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingreType.name + '\"?',\n      header: 'Confirmation de suppression',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientTypeService\n          .deleteIngredientType(ingreType.id)\n          .subscribe({\n            next: () => {\n              this.typeArray = [...this.typeArray];\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Succès',\n                detail: \"Création de type d'ingredient\",\n                life: 3000,\n              });\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création de type',\n                detail: error.error,\n              });\n            },\n          });\n      },\n    });\n  }\n\n  hideDialog(): void {\n    this.ingredientTypeDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom de tyoe d'ingrédient\n        \n        \n          Description\n        \n        \n      \n    \n    \n      \n        {{ ingreType.name }}\n        {{ ingreType.description }}\n        \n          \n          \n        \n      \n    \n    \n      \n        Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom de type d'ingrédient\n      \n      Champ obligatoire.\n    \n    \n      Description\n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./ingredient-type.component.scss\n                \n                ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder { /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n            \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom de tyoe d\\'ingrédient                          Description                                            {{ ingreType.name }}        {{ ingreType.description }}                                                                Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.                        Nom de type d\\'ingrédient            Champ obligatoire.              Description                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientTypeService.html":{"url":"injectables/IngredientTypeService.html","title":"injectable - IngredientTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient-type/ingredient-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredientType\n                            \n                            \n                                    Public\n                                deleteIngredientType\n                            \n                            \n                                    Public\n                                getIngredientsTypes\n                            \n                            \n                                    Public\n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredientType(item: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:46\n                \n            \n\n\n            \n                \n                    Create new ingredient type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredientType(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:86\n                \n            \n\n\n            \n                \n                    Attention : All ingredients attched to this type will lose their type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient-type_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a ingredient_type\nAttention : All ingredients attched to this type will lose their type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsTypes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredients types as Vegetebale, fruit, ...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredientType(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { IngreType } from '../../models/ingredient-type.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientTypeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * @returns ingredients types as Vegetebale, fruit, ...\n   */\n  public getIngredientsTypes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients/types`)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all ingredient-types'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * Create new ingredient type\n   * @param item\n   * @returns\n   */\n  public createIngredientType(item: IngreType): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients/types`, item)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param update\n   */\n  public updateIngredientType(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/types/${update.id}`, update)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param id ingredient-type_id\n   * @returns Delete a ingredient_type\n   * Attention : All ingredients attched to this type will lose their type\n   */\n  public deleteIngredientType(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/types/${id}`)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.DELETE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'delete ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAuthenticatedGuard.html":{"url":"guards/IsAuthenticatedGuard.html","title":"guard - IsAuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n\n    return isAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsUnauthenticatedGuard.html":{"url":"guards/IsUnauthenticatedGuard.html","title":"guard - IsUnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsUnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsUnauthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (isAuthenticated) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutsModule.html":{"url":"modules/LayoutsModule.html","title":"module - LayoutsModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\n\nDefaultModule\n\nDefaultModule\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/layouts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/layouts.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DefaultComponent } from './default/default.component';\nimport { DefaultModule } from './default/default.module';\n\n@NgModule({\n  imports: [\n    DefaultModule,\n    RouterModule.forChild([{ path: '', component: DefaultComponent }]),\n  ],\n  exports: [DefaultModule],\n})\nexport class LayoutsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LayoutsModule,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRoutingOnGoing\n                            \n                            \n                                routing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRoutingOnGoing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/loading/loading.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/loading/loading.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  RouteConfigLoadEnd,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Input()\n  routing: boolean = false;\n\n  @Input()\n  detectRoutingOnGoing: boolean = false;\n\n  constructor(public loadingService: LoadingService, private router: Router) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    if (this.detectRoutingOnGoing) {\n      this.router.events.subscribe((event): void => {\n        if (\n          event instanceof NavigationStart ||\n          event instanceof RouteConfigLoadStart\n        ) {\n          this.loadingService.loadingOn();\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationError ||\n          event instanceof NavigationCancel ||\n          event instanceof RouteConfigLoadEnd\n        ) {\n          this.loadingService.loadingOff();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.053);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingOff\n                            \n                            \n                                    Public\n                                loadingOn\n                            \n                            \n                                    Public\n                                showLoaderUntilCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showLoaderUntilCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoaderUntilCompleted(obs$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  concatMap,\n  finalize,\n  Observable,\n  of,\n  tap,\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n\n  loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  public showLoaderUntilCompleted(obs$: Observable): Observable {\n    return of(null).pipe(\n      tap(() => this.loadingOn()),\n      concatMap(() => obs$),\n      finalize(() => this.loadingOff())\n    );\n  }\n\n  public loadingOn(): void {\n    this.loadingSubject.next(true);\n  }\n\n  public loadingOff(): void {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/local-storage/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | object | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: string | object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {\n    //NOSONAR\n  }\n\n  set(key: string, value: string | object): void {\n    let valueSerialized: string = '';\n\n    switch (typeof value) {\n      case 'object':\n        valueSerialized = JSON.stringify(value);\n        break;\n      default:\n        valueSerialized = value.toString();\n    }\n    localStorage.setItem(key, valueSerialized);\n  }\n\n  get(key: string): string | object | null {\n    if (this.has(key)) {\n      try {\n        return JSON.parse(localStorage.getItem(key));\n      } catch {\n        return localStorage.getItem(key);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  has(key: string): boolean {\n    return localStorage.getItem(key) === null ? false : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n     //NOSONAR\n  }\n\n  onLogin() {\n    this.authService.getAuthorizationCode();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/styles.scss\";\n\nbutton {\n  background: #ccbe1c !important;\n  border-radius: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lunch.html":{"url":"interfaces/Lunch.html","title":"interface - Lunch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lunch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/messages/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors$\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors(...errors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/messages/messages.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  private subject = new BehaviorSubject([]);\n\n  errors$: Observable = this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0));\n\n  showErrors(...errors: string[]) {\n    this.subject.next(errors);\n    window.scrollTo(0, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monday.html":{"url":"interfaces/Monday.html","title":"interface - Monday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n        \n        \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n              \n            \n          \n        \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                .fundo {\n  animation: scales 3s alternate infinite;\n  transform-origin: center;\n}\n\n.pao-baixo {\n  animation: rotatepao 14s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.pao-cima {\n  animation: rotatepao 7s 1s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.olhos {\n  animation: olhos 2s alternate infinite;\n  transform-origin: center;\n}\n\n.left-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 150px 156px;\n}\n\n.right-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 310px 150px;\n}\n\n@keyframes scales {\n  from {\n    transform: scale(0.98);\n  }\n\n  to {\n    transform: scale(1);\n  }\n}\n\n@keyframes rotatepao {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50%,\n  60% {\n    transform: rotate(-20deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes olhos {\n  0% {\n    transform: rotateX(0deg);\n  }\n\n  100% {\n    transform: rotateX(30deg);\n  }\n}\n\n@keyframes left-sparks {\n  0% {\n    opacity: 0;\n  }\n}\n\n.main {\n  margin: 0px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.path {\n  stroke-dasharray: 300;\n  stroke-dashoffset: 300;\n  animation: dash 4s alternate infinite;\n}\n\n@keyframes dash {\n  0%,\n  30% {\n    fill: #4b4b62;\n    stroke-dashoffset: 0;\n  }\n\n  80%,\n  100% {\n    fill: transparent;\n    stroke-dashoffset: -200;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/picture.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            external_link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size_unit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size_unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size_unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Picture {\n  uuid?: string;\n  name?: string;\n  size?: number;\n  size_unit?: string;\n  link?: string;\n  external_link?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrincipalComponent.html":{"url":"components/PrincipalComponent.html","title":"component - PrincipalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrincipalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/principal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-principal\n            \n\n            \n                styleUrls\n                ./principal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./principal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/principal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/principal.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.scss'],\n})\nexport class PrincipalComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./principal.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrincipalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrincipalModule.html":{"url":"modules/PrincipalModule.html","title":"module - PrincipalModule","body":"\n                   \n\n\n\n\n    Modules\n    PrincipalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_PrincipalModule_imports\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/principal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            PrincipalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LayoutsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MessageService } from 'primeng/api';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { UserEffects } from '../shared/store/state/user';\n\nimport { routing } from './principal-routing.module';\nimport { LayoutsModule } from '../layouts/layouts.module';\n\nimport { PrincipalComponent } from './principal.component';\nimport { PageNotFoundComponent } from '../layouts/components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [PrincipalComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    routing,\n    LayoutsModule,\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    EffectsModule.forFeature([UserEffects]),\n  ],\n  providers: [MessageService],\n})\nexport class PrincipalModule {\n  // NOSONAR\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/profile/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                editModeEmail\n                            \n                            \n                                    Optional\n                                editModeFirstname\n                            \n                            \n                                    Optional\n                                editModeLastname\n                            \n                            \n                                    Optional\n                                editModePhone\n                            \n                            \n                                form\n                            \n                            \n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldCancel\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileService: ProfileService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:110\n                \n            \n\n\n            \n                \n                    In input form : + Verify value form (character form and length)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldCancel\n                        \n                    \n                \n            \n            \n                \nonFieldCancel(user: User, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeFirstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeLastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModePhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ProfileService } from './../../../shared/services/profile/profile.service';\nimport { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { MessageService } from 'primeng/api';\nimport { Observable, filter, first } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppState } from 'src/app/shared/store';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  providers: [MessageService],\n  styleUrls: ['./profile.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    `,\n  ],\n})\nexport class ProfileComponent implements OnInit {\n  editModeFirstname?: boolean;\n  editModeLastname?: boolean;\n  editModeEmail?: boolean;\n  editModePhone?: boolean;\n\n  user$: Observable;\n  user: User;\n\n  form: FormGroup;\n\n  constructor(\n    private store: Store,\n    private profileService: ProfileService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    // this.store.pipe(select(selectUserDetails)).subscribe((user) => {\n    //   console.log(this.user);\n    //   if (user == null) {\n    //     this.store.dispatch(UserActions.loadUser());\n    //   }\n    // });\n    //this.user = this.profileService.getCurrentUser();\n    this.profileService.getUser().subscribe(\n      (res) => {\n        this.user = res;\n        this.form.patchValue(this.user);\n        console.log('res in profile : ', res);\n      },\n      (err) => console.log('erreur dans profile component : ', err)\n    );\n    this.editModeFirstname = false;\n    this.editModeLastname = false;\n    this.editModeEmail = false;\n    this.editModePhone = false;\n\n    this.initForm();\n  }\n\n  updateField(type: string): User {\n    this.store\n      .pipe(\n        select(selectUserDetails),\n        filter((user) => user != null),\n        first()\n      )\n      .subscribe(\n        (user) => {\n          const userUpdate = { ...user } as User;\n          const formValue = this.form.value;\n          switch (type) {\n            case 'FIRSTNAME':\n              this.user.firstname = formValue.firstname.trim();\n              break;\n            case 'LASTNAME':\n              this.user.lastname = formValue.lastname.trim();\n              break;\n            case 'PHONE':\n              this.user.phone = formValue.phone.trim();\n              break;\n            case 'EMAIL':\n              this.user.email = formValue.email.trim();\n              break;\n            default:\n              break;\n          }\n          this.store.dispatch(\n            UserActions.updateUser({ userDetails: this.user })\n          );\n        },\n        (error) => console.log('profile component > update user: ', error)\n      );\n    return this.user;\n  }\n\n  /**\n   * In input form : + Verify value form (character form and length)\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstname: [\n        this.user?.firstname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(30),\n        ],\n      ],\n      lastname: [\n        this.user?.lastname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      phone: [\n        this.user?.phone,\n        [Validators.required, Validators.pattern('/^[0][0-9]{9}$')],\n      ],\n      email: [\n        this.user?.email,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n    });\n  }\n\n  // TODO : *** code this part ***\n  onFieldCancel(user: User, index: number) {\n    // Complete here\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  Prénom\n                \n                \n                  \n                    {{ user.firstname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Nom\n                \n                  \n                    {{ user.lastname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Numéro de téléphone\n                \n                \n                  \n                    {{ user.phone }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Email\n                \n                \n                  \n                    {{ user.email }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .w-8 {\n  width: 100% !important;\n}\n\n.col-12 {\n  width: 10% !important;\n}\n\n            \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Prénom                                                                      {{ user.firstname }}                                                                                                                                                                                                                            Nom                                                      {{ user.lastname }}                                                                                                                                                                                                                                              Numéro de téléphone                                                                      {{ user.phone }}                                                                                                                                                                                                                                              Email                                                                      {{ user.email }}                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// PrimeNG\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\n// Component\nimport { ProfileComponent } from './profile/profile.component';\n// Service\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: ProfileComponent }];\n\n@NgModule({\n  declarations: [ProfileComponent], //EditProfileComponent\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    ProfileService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/profile/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Roles } from '../../constants/role.const';\nimport { User } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  updateUser(user: User): Observable {\n    const newUserDetails: User = { ...user };\n\n    const formData = new FormData();\n    if (newUserDetails != null) {\n      newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n      newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n      newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n      newUserDetails.email = JSON.stringify(newUserDetails.email);\n\n      formData.append('firstname', newUserDetails.firstname);\n      formData.append('lastname', newUserDetails.lastname);\n      formData.append('phone', newUserDetails.phone);\n      formData.append('email', newUserDetails.email);\n    }\n\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${user.id}`, formData)\n      .pipe(\n        tap((res) => {\n          if (res != null) {\n            newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n            newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n            newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n            newUserDetails.email = JSON.stringify(newUserDetails.email);\n          }\n        }),\n        map((res) => res)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recipe.html":{"url":"interfaces/Recipe.html","title":"interface - Recipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            available_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            base_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pictures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            star\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trashed_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         Ingredient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ingredient[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_type:         RecipeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RecipeType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trashed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trashed_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ingredient } from './ingredient.model';\nimport { Picture } from './picture.model';\nimport { RecipeType } from './recipe-type.model';\n\nexport interface Recipe {\n  id?: number;\n  name?: string;\n  star?: boolean;\n  base_price?: number;\n  description?: string;\n  recipe_type?: RecipeType;\n  ingredients?: Ingredient[];\n  //created_by: number;\n  available_at?: Date;\n  trashed_at?: Date;\n  pictures?: Picture[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeDialogComponent.html":{"url":"components/RecipeDialogComponent.html","title":"component - RecipeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-dialog\n            \n\n            \n                styleUrls\n                ./recipe-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recipe-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _recipeType\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                fr\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientsDetails\n                            \n                            \n                                ingreType\n                            \n                            \n                                mode\n                            \n                            \n                                picture\n                            \n                            \n                                recipe\n                            \n                            \n                                recipesType\n                            \n                            \n                                recipeType\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                star\n                            \n                            \n                                submitted\n                            \n                            \n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkError\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                    Private\n                                newRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClickStar\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                onSelectPicture\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                onUploadPic\n                            \n                            \n                                    Private\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, recipeService: RecipeService, loading: LoadingService, ingredientService: IngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkError\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkError(controlName: string, errorName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        newRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    newRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickStar\n                        \n                    \n                \n            \n            \n                \nonClickStar(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPicture\n                        \n                    \n                \n            \n            \n                \nonSelectPicture(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadPic\n                        \n                    \n                \n            \n            \n                \nonUploadPic(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        star\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LoadingService } from './../../../../shared/services/loading/loading.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { RecipeType } from 'src/app/shared/models/recipe-type.model';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from '../../../../shared/models/picture.model';\n\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\n\n@Component({\n  selector: 'app-recipe-dialog',\n  templateUrl: './recipe-dialog.component.html',\n  styleUrls: ['./recipe-dialog.component.scss'],\n})\nexport class RecipeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n\n  form: FormGroup;\n  //------------------------------- Recipe Type : dropdown (1)\n  recipesType: Recipe[] = [];\n  recipe: Recipe;\n  recipeType: RecipeType;\n  _recipeType: RecipeType[] = [];\n  //------------------------------- Ingredients details : drop down (2)\n  ingredients: Ingredient[] = [];\n  ingredientsDetails: Ingredient;\n\n  ingreType: IngreType[] = [];\n\n  uploadedFiles: any[] = []; // Upload image\n  picture: Picture = null; // Variable to store picture\n\n  submitted: boolean;\n  star: boolean;\n\n  \n\n  fr: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private recipeService: RecipeService,\n    private loading: LoadingService,\n    private ingredientService: IngredientService\n  ) {\n    this.recipe = config.data.recipe;\n    this.ingredients = config.data.ingredients;\n    this._recipeType = config.data.recipeType;\n    this.ingreType = config.data.ingredientsTypes;\n    this.ingredients.forEach((x) => x.name);\n    this.mode = config.data.mode;\n    this.picture = config.data.pictures;\n  }\n\n  ngOnInit(): void {\n    /* retrieve recipe types */\n    this.recipeService.getRecipeType().subscribe((res) => {\n      this.recipesType = res;\n    });\n    /* retrieve ingredients data */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    this.initForm();\n  }\n\n  initForm(): void {\n    let laDate: Date;\n    if (!this.recipe?.available_at) {\n      laDate = new Date(new Date().setDate(new Date().getDate() + 10));\n    } else {\n      laDate = new Date(this.recipe?.available_at);\n    }\n    this.form = this.fb.group({\n      title: [this.recipe?.name, [Validators.required]],\n      recipeType: [this.recipe?.recipe_type, [Validators.required]],\n      price: [this.recipe?.base_price, [Validators.required]],\n      ingredientsDetails: [this.recipe?.ingredients, Validators.required],\n      description: [this.recipe?.description],\n      star: this.recipe?.star || false,\n      availableDate: [laDate, [Validators.required]],\n    });\n  }\n\n  onClickStar(event: any): void {\n    this.star = event.checked;\n    this.recipe.star = event.checked;\n    if (event.checked) {\n      this.star = true;\n      this.form.get('star').setValue(true);\n    } else {\n      this.form.get('star').setValue(false);\n    }\n  }\n\n  private makeRecipe(): void {\n    if (this.mode === 'CREATE') {\n      this.recipe.available_at = this.form.value.availableDate;\n    }\n    this.recipe.name = this.form.value.title;\n    this.recipe.recipe_type = this.form.controls['recipeType'].value.code;\n    this.recipe.base_price = this.form.value.price;\n    this.recipe.ingredients = this.form.controls['ingredientsDetails'].value;\n    this.recipe.star = this.form.value.star;\n    this.recipe.description = this.form.value.description;\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.makeRecipe();\n      this.loading.loadingOn();\n\n      if (this.mode === 'UPDATE') {\n        this.updateRecipe();\n      } else {\n        this.newRecipe();\n      }\n    }\n  }\n\n  private newRecipe(): void {\n    this.recipeService\n      .uploadPicture(this.picture)\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.picture = res;\n        this.recipeService.createRecipe(this.recipe).subscribe({\n          next: (_res) => {\n            this.ref.close(_res);\n            this.recipe = _res;\n            this.recipeService\n              .attachPictures(this.picture, this.recipe)\n              .subscribe();\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création de la recette',\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  private updateRecipe(): void {\n    this.recipeService.updateRecipe(this.recipe).subscribe({\n      next: (res) => {\n        this.ref.close(res);\n      },\n      error: (error) => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erreur le moment de modification de de la recette',\n          detail: error.error,\n        });\n      },\n    });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n\n  onSelectPicture(event) {\n    console.log('Selected picture', event);\n  }\n\n  // On picture Select\n  onChange(event) {\n    this.picture = event.files[0];\n  }\n\n  // OnClick of button Upload\n  onUpload() {\n    this.recipeService.uploadPicture(this.picture).subscribe((res) => {\n      this.picture = res;\n    });\n  }\n\n  onUploadPic(event) {\n    for (let picture of event.files) {\n      this.uploadedFiles.push(picture);\n      console.log('picture : ', picture);\n    }\n  }\n\n  public checkError(controlName: string, errorName: string): boolean {\n    return (\n      this.form.controls[controlName].dirty &&\n      this.form.controls[controlName].hasError(errorName)\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de plat\n      \n    \n    \n      Type de recette\n      \n      \n    \n    \n      Ingredients\n      Champ obligatoire\n      \n      \n    \n    \n      Date disponiblité\n      {{ recipe.available_at }}\n    \n  \n  \n    \n      \n        \n          Prix de base\n          \n          \n        \n        \n          \n        \n        \n          \n          \n        \n      \n    \n    \n      Description\n      \n    \n  \n  \n    \n    Plat star\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-dialog.component.scss\n                \n                :host ::ng-deep .p-dropdown {\n  width: 14rem;\n}\n\n.DynamicDialog {\n  :host ::ng-deep {\n    .p-dialog .p-dialog-header {\n      background: #d8f6f6 !important;\n    }\n  }\n}\n\n:host ::ng-deep .ui-dialog .ui-dialog-titlebar {\n  background-color: rgba(255, 234, 0, 0.325);\n}\n\n.p-fileupload .p-fileupload-basic .p-fileupload-choose {\n  border-radius: 50% !important;\n  min-width: 0rem !important;\n}\n\n#fileUploader {\n  min-width: 0rem;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 15rem;\n  width: 18rem;\n}\n\n:host ::ng-deep .multiselect-custom {\n  .p-multiselect-label {\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .country-item-value {\n    padding: 0.25rem 0.5rem;\n    border-radius: 3px;\n    display: inline-flex;\n    margin-right: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--primary-color-text);\n\n    img.flag {\n      width: 17px;\n    }\n  }\n\n  .country-placeholder {\n    padding: 0.25rem;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n:host ::ng-deep {\n  @media screen and (max-width: 640px) {\n    .p-multiselect {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de plat                    Type de recette                          Ingredients      Champ obligatoire                          Date disponiblité      {{ recipe.available_at }}                                    Prix de base                                                                                                              Description                      Plat star              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipeManagementModule.html":{"url":"modules/RecipeManagementModule.html","title":"module - RecipeManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipeManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/recipe-details/recipe-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IngredientComponent\n                        \n                        \n                            IngredientTypeComponent\n                        \n                        \n                            RecipeDialogComponent\n                        \n                        \n                            RecipesComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RecipeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            RecipeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DataViewModule } from 'primeng/dataview';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { PanelModule } from 'primeng/panel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TabViewModule } from 'primeng/tabview';\nimport { TableModule } from 'primeng/table';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { DividerModule } from 'primeng/divider';\n\nimport { IngredientTypeComponent } from './ingredient-type/ingredient-type.component';\nimport { RecipeDialogComponent } from './recipe/recipe-dialog/recipe-dialog.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { RecipesComponent } from './recipe/recipes/recipes.component';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: TabsComponent }];\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeDialogComponent,\n    IngredientComponent,\n    TabsComponent,\n    IngredientTypeComponent,\n  ],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DataViewModule,\n    DropdownModule,\n    DynamicDialogModule,\n    FileUploadModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    DialogModule,\n    CheckboxModule,\n    CalendarModule,\n    TabViewModule,\n    MultiSelectModule,\n    KeyFilterModule,\n    DividerModule,\n  ],\n  entryComponents: [RecipeDialogComponent],\n  providers: [\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class RecipeManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/recipe/recipe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachPictures\n                            \n                            \n                                    Public\n                                createRecipe\n                            \n                            \n                                    Public\n                                deleteRecipe\n                            \n                            \n                                    Public\n                                getIngredientsByRecipeId\n                            \n                            \n                                    Public\n                                getRecipe\n                            \n                            \n                                    Public\n                                getRecipes\n                            \n                            \n                                    Public\n                                getRecipeType\n                            \n                            \n                                    Public\n                                updateRecipe\n                            \n                            \n                                    Public\n                                uploadPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/recipe/recipe.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachPictures\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachPictures(picture: Partial, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        all pictures of recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRecipe(item: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:80\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RecipePostModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsByRecipeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsByRecipeId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients of a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipeType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipeType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipes type as dessert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        uploadPicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPicture(picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:152\n                \n            \n\n\n            \n                \n                    Store form name as \"picture\" with picture data\nMake http post request over api with formData as req\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport { Picture } from '../../models/picture.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { RecipeType } from '../../models/recipe-type.model';\nimport { Ingredient } from '../../models/ingredient.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}\n   * @returns one recipes\n   */\n  public getRecipe(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes\n   * @returns all recipes\n   */\n  public getRecipes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes?includes[]=pictures`)\n      .pipe(\n        map((res) => res['data']),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}/ingredients\n   * @param id recipe_id\n   * @returns all ingredients of a recipe\n   */\n  public getIngredientsByRecipeId(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}/ingredients`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   *\n   * @returns recipes type as dessert\n   */\n  public getRecipeType(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/types`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes\n   * Create new recipe with igredients\n   * @param item RecipePostModel\n   * @returns new recipe\n   */\n  public createRecipe(item: Recipe): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes`, {\n        ...item,\n        ingredients: item.ingredients.map((ingredient) => ingredient.id),\n      })\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/recipes/{recipe_id}\n   * @param update recipe items\n   * @returns update recipe\n   */\n  public updateRecipe(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/recipes/${update.id}`, {\n        ingredients: update.ingredients.map((ingredient) => ingredient.id),\n        name: update.name,\n        description: update.description,\n        base_price: update.base_price,\n        star: update.star,\n        recipe_type: update.recipe_type,\n      })\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/recipes/{recipe_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   */\n  public deleteRecipe(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/recipes/${id}`).pipe(\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(()=> (httpErrorResponse));\n      })\n    );\n  }\n\n  /**\n   * @param FormData() Create form data\n   *\n   * Store form name as \"picture\" with picture data\n   * Make http post request over api with formData as req\n   *\n   * @param picture\n   * @returns\n   */\n  public uploadPicture(picture): Observable {\n    const formData = new FormData();\n\n    formData.append('name', picture.name);\n    formData.append('filename', picture);\n\n    return this.http.post(`${environment.apiBaseUrl}/files`, formData);\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes/{recipe_id}/pictures\n   * @param id uuid\n   * @returns all pictures of recipe\n   */\n  public attachPictures(\n    picture: Partial,\n    recipe: Recipe\n  ): Observable {\n    const formData = new FormData();\n    formData.append('file_uuid', picture.uuid);\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes/${recipe.id}/pictures`, formData)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecipeType.html":{"url":"interfaces/RecipeType.html","title":"interface - RecipeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecipeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RecipeType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipesComponent.html":{"url":"components/RecipesComponent.html","title":"component - RecipesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-recipes\n            \n\n            \n                styleUrls\n                ./recipes.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./recipes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                id\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                pictures\n                            \n                            \n                                recipeDialog\n                            \n                            \n                                recipes\n                            \n                            \n                                recipesType\n                            \n                            \n                                ref\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateNewRecipe\n                            \n                            \n                                deleteRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, confirmationService: ConfirmationService, loading: LoadingService, dialogService: DialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateNewRecipe\n                        \n                    \n                \n            \n            \n                \nCreateNewRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:103\n                \n            \n\n\n            \n                \n                    Create new recipe button : DYNAMIC DIALOG\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \ndeleteRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:137\n                \n            \n\n\n            \n                \n                    Suppresssion d'une recette\nLe message d'alerte de suppression\nLe message de confirmation de suppression\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \nupdateRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from 'src/app/shared/models/picture.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { RecipeDialogComponent } from '../recipe-dialog/recipe-dialog.component';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n})\nexport class RecipesComponent implements OnInit {\n  ref: DynamicDialogRef;\n\n  recipes: Recipe[] = [];\n  recipesType: Recipe[] = [];\n  ingredients: Ingredient[] = [];\n  ingredientType: IngreType[] = [];\n  pictures: Picture[] = [];\n\n  sortOrder: number;\n  sortField: string;\n  recipeDialog: boolean;\n  id: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    public dialogService: DialogService,\n    public messageService: MessageService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit() {\n    this.loading.loadingOn();\n\n    this.recipeService\n      .getRecipes()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((recipes: Recipe[]): void => {\n        this.recipes = recipes;\n      });\n  }\n\n  onSortChange(event) {\n    // https://www.tektutorialshub.com/angular/property-value-does-not-exist-on-type-eventtarget-error-in-angular/\n    let value = (event.target as HTMLTextAreaElement).value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  /**\n   * Create new recipe button : DYNAMIC DIALOG\n   */\n  CreateNewRecipe(): void {\n    const ref = this.dialogService.open(RecipeDialogComponent, {\n      header: 'Ajouter une nouvelle recette',\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        recipe: [],\n        recipeType: [],\n        ingredientsTypes: [],\n        ingredients: [],\n        pictures: [],\n      },\n    });\n    ref.onClose.subscribe((recipe: Recipe) => {\n      if (recipe) {\n        this.recipes = [...this.recipes];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien crée.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id recipe\n   * Suppresssion d'une recette\n   * Le message d'alerte de suppression\n   * Le message de confirmation de suppression\n   */\n  deleteRecipe(recipe: Recipe): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer la recette \"${recipe.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: () => {\n        this.recipeService.deleteRecipe(recipe.id).subscribe({\n          next: () => {\n            this.recipes = [...this.recipes];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Cette recette sera supprimé définitivement bientôt.',\n              life: 5000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression de la recette.',\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  updateRecipe(recipe: Recipe): void {\n    this.ref = this.dialogService.open(RecipeDialogComponent, {\n      header: `${recipe.name}`,\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        recipeType: this.recipesType,\n        ingredientsTypes: this.ingredientType,\n        ingredients: this.ingredients,\n        pictures: this.pictures,\n        recipe,\n      },\n    });\n    this.ref.onClose.subscribe((_recipe: Recipe) => {\n      if (_recipe) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien modifié.',\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n            \n            \n              \n                \n                \n                \n              \n              {{ recipe.name }}\n              € {{ recipe.base_price }}\n              \n                \n                {{ recipe.recipe_type.code }}\n              \n              \n                \n                   {{ value.name + \", \" }} \n                   {{ value.name }} \n                \n              \n              \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recipes.component.scss\n                \n                :host ::ng-deep {\n  .p-dropdown {\n    width: 14rem;\n    font-weight: normal;\n  }\n\n  .product-name {\n    font-size: 1rem;\n    font-weight: 700;\n    margin-bottom: 0.8rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis ellipsis !important;\n    max-width: 8rem;\n  }\n\n  .product-description {\n    margin: 0 0 1rem 0;\n    font-size: medium;\n  }\n\n  .product-category-icon {\n    vertical-align: middle;\n  }\n\n  .product-category {\n    font-weight: 400;\n    font-size: small;\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .product-grid-item {\n    margin: 0.5em;\n    border: 1px solid #dee2e6;\n    max-width: 280px !important;\n    max-height: 250px !important;\n\n    .product-grid-item-top,\n    .product-grid-item-bottom {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .product-grid-item-footer {\n      justify-content: end;\n    }\n\n    img {\n      width: 100px;\n      height: 150px;\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n      margin: 1rem 0;\n    }\n\n    .product-grid-item-content {\n      text-align: center;\n    }\n\n    .product-price {\n      font-size: small;\n      font-weight: 300;\n    }\n  }\n}\n\n.inline-block {\n  font-size: 0.9rem;\n}\n\n.card {\n  box-shadow: 0 2px 1px -1px rgba(198, 221, 229, 0.096),\n    0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 576px) {\n  :host ::ng-deep .product-list-item {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      width: 75%;\n      margin: 1rem 0;\n    }\n\n    .product-list-detail {\n      text-align: left;\n    }\n\n    .product-price {\n      align-self: left;\n    }\n\n    .product-list-action {\n      margin-top: 2rem;\n      display: flex;\n      flex-direction: column;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                              {{ recipe.name }}              € {{ recipe.base_price }}                                              {{ recipe.recipe_type.code }}                                                               {{ value.name + \", \" }}                    {{ value.name }}                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Saturday.html":{"url":"interfaces/Saturday.html","title":"interface - Saturday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Saturday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schedule.html":{"url":"interfaces/Schedule.html","title":"interface - Schedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            friday\n                                        \n                                \n                                \n                                        \n                                            monday\n                                        \n                                \n                                \n                                        \n                                            saturday\n                                        \n                                \n                                \n                                        \n                                            sunday\n                                        \n                                \n                                \n                                        \n                                            thursday\n                                        \n                                \n                                \n                                        \n                                            tuesday\n                                        \n                                \n                                \n                                        \n                                            wednesday\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        friday:         Friday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Friday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monday:         Monday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Monday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saturday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saturday:         Saturday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Saturday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sunday:         Sunday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sunday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thursday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thursday:         Thursday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thursday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuesday:         Tuesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tuesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wednesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wednesday:         Wednesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wednesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/schedule/schedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createSchedule\n                            \n                            \n                                    Public\n                                getSchedule\n                            \n                            \n                                    Public\n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/schedule/schedule.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchedule(create: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:40\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:27\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchedule(update: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:66\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError, of } from 'rxjs';\n\nimport { Schedule } from '../../models/schedule.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScheduleService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param franchisee\n   * @returns\n   */\n  public getSchedule(franchisee: Franchisee): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/times`\n      )\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param create franchisee schedule\n   * @returns update schedule\n   */\n  public createSchedule(\n    create: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .post(\n        `${environment.apiBaseUrl}/contractors/${create.id}/times`,\n        schedule\n      )\n      .pipe(\n        map((res: any) => (res ? res['message'] : Message.CREATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create schedule'\n          );\n          return throwError(() => httpErrorResponse);\n        })\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param update franchisee schedule\n   * @returns update schedule\n   */\n  public updateSchedule(\n    update: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/contractors/${update.id}/times`, schedule)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update schedule'\n          );\n          return throwError(() => httpErrorResponse);\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/server-error/server-error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/server-error/server-error.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss'],\n})\nexport class ServerErrorComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n    \n  \n  \n  \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n      \n      \n      \n    \n    \n      \n        \n        \n        \n        \n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n        \n        \n      \n      \n      \n    \n    \n      \n      \n    \n    \n    \n      \n      \n      \n      \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                @keyframes blink-fancy {\n  0%,\n  25%,\n  28.33%,\n  45%,\n  48.33%,\n  51.67%,\n  93.33%,\n  96.67% {\n    transform: scaleY(1);\n  }\n  26.67%,\n  46.67%,\n  50%,\n  95% {\n    transform: scaleY(0.1);\n  }\n}\n\n@keyframes flame-flicker-1 {\n  25% {\n    transform: scale3d(1, 1.1, 1);\n  }\n  40% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  50% {\n    transform: scale3d(1, 1.05, 1);\n  }\n  65% {\n    transform: scale3d(1, 0.75, 1);\n  }\n  75% {\n    transform: scale3d(1, 1, 1);\n  }\n  90% {\n    transform: scale3d(1, 1.15, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-flicker-2 {\n  15% {\n    transform: scale3d(0.9, 0.8, 1);\n  }\n  33% {\n    transform: scale3d(1.2, 0.5, 1);\n  }\n  47% {\n    transform: scale3d(0.7, 0.7, 1);\n  }\n  63% {\n    transform: scale3d(0.72, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.65, 1, 1);\n  }\n  77% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  85% {\n    transform: scale3d(0.7, 0.95, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-ember {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(10px, -25px) rotate(-45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(-10px, -75px) rotate(45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-alt {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(-15px, -25px) rotate(45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(10px, -75px) rotate(-45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-opacity {\n  45% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes scale-pulse {\n  0% {\n    transform: scale(0.8, 0.8);\n  }\n  50% {\n    transform: scale(1.1, 1.1);\n  }\n  100% {\n    transform: scale(0.8, 0.8);\n  }\n}\n\n@keyframes opacity-pulse {\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0.2;\n  }\n}\n\n.flame-front {\n  transform-origin: center bottom;\n  animation: flame-flicker-1 1s ease-in-out infinite;\n}\n\n.flame-inner {\n  transform-origin: center bottom;\n  animation: flame-flicker-2 0.8s ease-in-out infinite;\n}\n\n#flame-inner-right {\n  animation-duration: 1s;\n  animation-delay: -1s;\n  transform-origin: center center;\n  -moz-transform-origin: 476.268px 97px;\n}\n\n#flame-back {\n  animation-direction: reverse;\n  animation-delay: 0.5s;\n  animation-duration: 1.6s;\n}\n\n#flame-front-right {\n  animation-duration: 1.3s;\n  animation-delay: 0.2s;\n}\n\n.emitted-ember {\n  transform-origin: center center;\n  -moz-transform-origin: 485.125px 51.33px;\n  animation: flame-ember 2s linear infinite,\n    flame-ember-opacity 2s ease-out infinite;\n}\n\n.emitted-ember-alt {\n  animation: flame-ember-alt 1.7s linear infinite,\n    flame-ember-opacity 1.7s ease-out infinite;\n}\n\n.smoke {\n  transform-origin: center center;\n  animation: scale-pulse 0.7s ease-in-out infinite;\n}\n\n#smoke-float-1 {\n  animation-delay: 0.4s;\n}\n#smoke-float-2 {\n  animation-delay: 0.2s;\n}\n#smoke-float-3 {\n  animation-delay: 0s;\n}\n#smoke-float-4 {\n  animation-delay: -0.2s;\n}\n#smoke-float-5 {\n  animation-delay: -0.4s;\n}\n\n.glow {\n  transform-origin: center center;\n  -moz-transform-origin: 378.729px 109.75px;\n  animation: opacity-pulse 4s ease-in-out infinite 0.1s,\n    scale-pulse 4s ease-in-out alternate infinite;\n}\n\n#glow-outer-1 {\n  animation-delay: -0.1s;\n}\n#glow-inner {\n  animation-delay: -0.3s;\n}\n\n#eyes-left,\n#eyes-right {\n  animation: blink-fancy 6s linear infinite;\n}\n\n.bill-highlight {\n  animation: opacity-pulse 4s ease-in-out infinite;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        varn    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                hideHomeBtn\n                            \n                            \n                                    Optional\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideHomeBtn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport { selectUserDetails } from 'src/app/shared/store/state/user/user.selector';\nimport { EndPoints } from 'src/app/shared/constants/endpoints.const';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  display!: boolean;\n  hideHomeBtn = false;\n  user$?: Observable;\n\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.sidebarService.display$.subscribe((res) => (this.display = res));\n\n    if (this.user$ != new Observable()) {\n      this.user$ = this.store.pipe(select(selectUserDetails));\n    }\n  }\n\n  onClose(): void {\n    this.sidebarService.open(false);\n  }\n\n  logOut(): void {\n    window.location.href = EndPoints.LOGOUT;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                @import \"src/styles.scss\";\n\n:host ::ng-deep button {\n  margin-right: 0.25em;\n}\n.p-button {\n  line-height: 2;\n}\n\nbody,\nbody .p-component .p-sidebar {\n  font-family: \"Optima\", \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\",\n    sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/sidebar/sidebar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display$\n                            \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(display: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarService {\n  private subject = new BehaviorSubject(false);\n\n  display$: Observable = this.subject.asObservable();\n\n  readonly url: any;\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    this.url = this.authService.getUser;\n  }\n\n  public open(display: boolean): void {\n    this.subject.next(display);\n  }\n\n  getUsers() {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sunday.html":{"url":"interfaces/Sunday.html","title":"interface - Sunday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sunday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.component.scss\n                \n                .d.p-tabview-nav-content .p-tabview .p-tabview .p-tabview-nav .p-tabview-nav-container .p-tabview-nav-content {\n  background: rgb(227, 227, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thursday.html":{"url":"interfaces/Thursday.html","title":"interface - Thursday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thursday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/title/title.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-title\n            \n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/title/title.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title: string;\n  @Input() description: string;\n\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  {{ description }}\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                ._title {\n  // background: rgba(213, 234, 254, 0.676);\n  background: linear-gradient(135deg, #dbe6fdd7 50%, #ffffffc7 90%) no-repeat center center fixed;\n  border-radius: 4px !important;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',\n      sans-serif;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  {{ description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/topbar/topbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titre1\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSidebar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        titre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss'],\n})\nexport class TopbarComponent implements OnInit {\n  user$: Observable;\n  user?: User;\n  titre1!: string;\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loadAppUser();\n    this.user$ = this.store.pipe(select(selectUserDetails));\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n        } else {\n          this.user = user;\n        }\n      },\n      error: (error: any): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n    });\n  }\n\n  public openSidebar(): void {\n    this.sidebarService.open(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tuesday.html":{"url":"interfaces/Tuesday.html","title":"interface - Tuesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tuesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorisations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorisations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorisations:         Autorisation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Autorisation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadUser$\n                            \n                            \n                                updateUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/user/user.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { concatMap, map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { UserActions } from 'src/app/shared/store/state/user/index';\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private profileService: ProfileService\n  ) {}\n\n  loadUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  );\n\n  updateUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  );\n\n  // userLoaded$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.userLoaded),\n  //       tap((action) =>\n  //         localStorage.setItem(\n  //           'userDetails',\n  //           JSON.stringify(action.userDetails)\n  //         )\n  //       )\n  //     ),\n  //   { dispatch: false }\n  // );\n\n  // logOutAction$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.logOutAction.logOutFlowInitiated.type),\n  //       tap(() => this.authService.logOut())\n  //     ),\n  //   { dispatch: false }\n  // );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewUser\n                            \n                            \n                                getNewUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUser\n                        \n                    \n                \n            \n            \n                \ngetNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUserRole\n                        \n                    \n                \n            \n            \n                \ngetNewUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, map } from 'rxjs';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getNewUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  getNewUserRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n    return _user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            userDetails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userDetails:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { User } from 'src/app/shared/models/user.model';\nimport * as UserActions from './user.actions';\n\n/**\n * @Reducer handle transitions from one state to the next state\n * by determining which actions to handle based on the action's type.\n */\n\n/**\n * Defining the interface for the user state object and its initial state\n */\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  userDetails?: User;\n}\n\nexport const initialState: UserState = {\n  userDetails: undefined,\n};\n\nexport const userReducer = createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/user/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                idFranchisee\n                            \n                            \n                                isCreate\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                submitted\n                            \n                            \n                                user\n                            \n                            \n                                userDialog\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNewUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                hideDialog\n                            \n                            \n                                initForm\n                            \n                            \n                                newUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, messageService: MessageService, confirmationService: ConfirmationService, loading: LoadingService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/user/users/users.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNewUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUser\n                        \n                    \n                \n            \n            \n                \nnewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/user/users/users.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/user/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { finalize } from 'rxjs/operators';\n\nimport { User } from 'src/app/shared/models/user.model';\n\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class UsersComponent implements OnInit {\n  users: User[] = [];\n  user: User;\n  selectedUsers: User[];\n\n  form: FormGroup;\n\n  idFranchisee: number;\n  submitted: boolean;\n  userDialog: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loading.loadingOn();\n\n    this.usersService\n      .getUsers()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.users = res;\n        // this.users.forEach((e) => e.roles);\n      });\n    // this.usersService.getUserRole(this.id).subscribe((role) => this.users.forEach((e) => e.roles));\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      firstname: [this.user?.firstname, [Validators.required]],\n      lastname: [this.user?.lastname, [Validators.required]],\n      phone: [\n        this.user?.phone,\n        [Validators.required, Validators.pattern('/^[0][0-9]{9}$')],\n      ],\n      email: [this.user?.email, [Validators.required, Validators.email]],\n      role: [this.user?.roles, [Validators.required]],\n    });\n  }\n\n  private getFormValues(): void {\n    const user: User = {};\n\n    user.firstname = this.form.get('firstname').value;\n    user.lastname = this.form.get('lastname').value;\n    user.phone = this.form.get('phone').value;\n    user.email = this.form.get('email').value;\n    user.roles = [this.form.controls['role'].value.code];\n\n    if (!this.isCreate) {\n      user.id = this.user.id;\n    }\n\n    this.user = user;\n  }\n\n  newUser(): void {\n    this.user = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  editUser(user: User): void {\n    this.user = { ...user };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.getFormValues();\n    this.loading.loadingOn();\n\n    if (this.user.id) {\n      this.updateUser();\n    } else {\n      this.createNewUser();\n    }\n    this.users = [...this.users];\n    this.userDialog = false;\n    this.user = {};\n  }\n\n  private createNewUser(): void {\n    this.usersService\n      .newUser(this.user)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.user = res;\n        this.usersService.AddRole(this.user).subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Création de nouvel utilisateur.',\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création!',\n              detail: error.error.Message,\n            });\n          },\n        });\n      });\n  }\n\n  private updateUser(): void {\n    this.usersService\n      .updateUser(this.user)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Mise à jour d'utilisateur.\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary:\n              \"Erreur le moment de modification des informations d'utilisateur!\",\n            detail: error.error,\n          });\n        },\n      });\n  }\n\n  onDelete(user: User): void {\n    this.confirmationService.confirm({\n      message:\n        'Etes-vous sûre de vouloir supprimer \"' +\n        user.firstname +\n        ' ' +\n        user.lastname +\n        '\" ?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.usersService.deleteUser(user.id).subscribe({\n          next: () => {\n            this.user = {};\n            this.users = [...this.users];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Utilisateur est supprimé.',\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression!',\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  hideDialog() {\n    this.userDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n \n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n        Prénom \n        Nom \n        Email \n        Téléphone \n        Rôle \n        \n      \n    \n    \n      \n        {{ user.firstname }}\n        {{ user.lastname }}\n        {{ user.email }}\n        {{ user.phone }}\n        {{ user.roles.code }}\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.\n      \n    \n  \n\n\n\n\n  \n    \n      Prénom\n      \n      Firstname is required.\n    \n    \n      Nom\n      \n      Lastname is required.\n    \n    \n      Email\n      \n      Email is required.\n    \n    \n      Téléphone\n      \n      Phone is required.\n    \n    \n      Type d'ingrédient\n      \n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                :host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                               Prénom         Nom         Email         Téléphone         Rôle                                     {{ user.firstname }}        {{ user.lastname }}        {{ user.email }}        {{ user.phone }}        {{ user.roles.code }}                                                                En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.                        Prénom            Firstname is required.              Nom            Lastname is required.              Email            Email is required.              Téléphone            Phone is required.              Type d\\'ingrédient                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDetailComponent', 'selector': 'app-franchisee-detail'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nUsersComponent\n\nUsersComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/user/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { TableModule } from \"primeng/table\";\nimport { ToastModule } from \"primeng/toast\";\nimport { SliderModule } from \"primeng/slider\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { ButtonModule } from \"primeng/button\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ConfirmationService, MessageService } from \"primeng/api\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\n\nimport { UsersComponent } from \"./users/users.component\";\nimport { UsersService } from \"src/app/shared/services/users/users.service\";\nimport { ComponentsModule } from \"src/app/layouts/components/components.module\";\nimport { ApiTokenInterceptorService } from \"src/app/shared/interceptors/api-token-interceptor.service\";\n\nconst routes: Routes = [{ path: \"\", component: UsersComponent }];\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    UsersService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AddRole\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserRole\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                newUser\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        AddRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:50\n                \n            \n\n\n            \n                \n                    Create new user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Add role to an user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        user role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users (franch)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    newUser(item: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:60\n                \n            \n\n\n            \n                \n                    Create new user user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map, tap, Observable } from \"rxjs\";\n\nimport { environment } from \"src/environments/environment\";\nimport { User } from \"src/app/shared/models/user.model\";\nimport { Message } from \"../../constants/message.const\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UsersService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}\n   * @returns one user\n   */\n  public getUser(id: number): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users/${id}`).pipe(map((res: User): User => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users\n   * @returns all users (franch)\n   */\n  public getUsers(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(map((res: User[]): any => res[\"data\"]));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/roles\n   * @returns user role\n   */\n  public getUserRole(id: number): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users/${id}/roles`).pipe(\n      tap((obj: User): void => console.log(\"service -> get user role: \", obj)),\n      map((res: User): User => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users/{user_id}/roles\n   * Create new user role\n   * @param user userModel\n   * @returns Add role to an user\n   */\n  public AddRole(user: User): Observable {\n    return this.http.post(`${environment.apiBaseUrl}/users/${user.id}`, user.roles).pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users\n   * Create new user user\n   * @param item userModel\n   * @returns new user\n   */\n  public newUser(item: User): Observable {\n    return this.http.post(`${environment.apiBaseUrl}/users`, item).pipe(map((res) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/users/{user_id}\n   * @param update user info\n   * @returns update user\n   */\n  public updateUser(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${update.id}`, update)\n      .pipe(map((res: Object): any => (res ? res[\"message\"] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/users/{user_id}\n   * @param id user_id\n   * @returns Delete a user\n   */\n  public deleteUser(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res: Object): any => (res ? res[\"message\"] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wednesday.html":{"url":"interfaces/Wednesday.html","title":"interface - Wednesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wednesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layouts/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layouts/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee-detail/franchisee-detail.component.ts\n            \n            component\n            FranchiseeDetailComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n            \n            component\n            FranchiseeDialogComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee/franchisee.component.ts\n            \n            component\n            FranchiseeComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/principal/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/principal-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/principal/principal.component.ts\n            \n            component\n            PrincipalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/profile/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n            \n            component\n            IngredientTypeComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient/ingredient.component.ts\n            \n            component\n            IngredientComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n            \n            component\n            RecipeDialogComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n            \n            component\n            RecipesComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/user/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n            guard\n            IsAuthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n            guard\n            IsUnauthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/api-token-interceptor.service.ts\n            \n            interceptor\n            ApiTokenInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-error/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/mock/address.mock.ts\n            \n            variable\n            mockAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchisee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchiseeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngredientArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            mockpictureArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            mockRecipeTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/schedule.mock.ts\n            \n            variable\n            mockSchedule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/access-token.model.ts\n            \n            interface\n            AccessTokenModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/address.model.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee-recipe.model.ts\n            \n            interface\n            FranchiseeRecipe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee.model.ts\n            \n            interface\n            Franchisee\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient-type.model.ts\n            \n            interface\n            IngreType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient.model.ts\n            \n            interface\n            Ingredient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/picture.model.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe-type.model.ts\n            \n            interface\n            RecipeType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe.model.ts\n            \n            interface\n            Recipe\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Diner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Friday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Lunch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Monday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Saturday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Schedule\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Sunday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Thursday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Tuesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Wednesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            Autorisation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            injectable\n            ErrorHttpService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            interface\n            ErrorDataHttp\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/franchisee/franchisee.service.ts\n            \n            injectable\n            FranchiseeService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient-type/ingredient-type.service.ts\n            \n            injectable\n            IngredientTypeService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/recipe/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/sidebar/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                31 %\n                (6/19)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            loadUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            updateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userUpdated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            function\n            canAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            adminAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            franchiseeAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectIsLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectProfileUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.stage.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.1\n        \n            @angular/cdk : ^13.3.2\n        \n            @angular/common : ~13.3.1\n        \n            @angular/compiler : ~13.3.1\n        \n            @angular/core : ~13.3.1\n        \n            @angular/forms : ~13.3.1\n        \n            @angular/platform-browser : ~13.3.1\n        \n            @angular/platform-browser-dynamic : ~13.3.1\n        \n            @angular/router : ~13.3.1\n        \n            @ngrx/effects : ^13.0.2\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.0.2\n        \n            @ngrx/store : ^13.0.2\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            csprng : ^0.1.2\n        \n            express : ^4.17.3\n        \n            karma-coverage-istanbul-reporter : ^3.0.3\n        \n            ngx-cookie-service : ^13.1.2\n        \n            node-localstorage : ^2.2.1\n        \n            oauth-pkce : ^0.0.6\n        \n            path : ^0.12.7\n        \n            primeflex : ^3.1.3\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.3.2\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            version-check : ^1.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _HttpRequest   (src/.../httpRequest.const.ts)\n                        \n                        \n                            EndPoints   (src/.../endpoints.const.ts)\n                        \n                        \n                            Message   (src/.../message.const.ts)\n                        \n                        \n                            Roles   (src/.../role.const.ts)\n                        \n                        \n                            StorageKeys   (src/.../storageKeys.const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/constants/httpRequest.const.ts\n    \n        \n            \n                \n                    \n                        \n                        _HttpRequest\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/shared/constants/endpoints.const.ts\n    \n        \n            \n                \n                    \n                        \n                        EndPoints\n                    \n                \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : https://www.google.fr\n                            \n                        \n            \n        \n\n    src/app/shared/constants/message.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Message\n                    \n                \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : 201 Created\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 UPDATE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : Les modifications ont bien été prises en compte.\n                            \n                        \n            \n        \n\n    src/app/shared/constants/role.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : goodfood\n                            \n                        \n                        \n                            \n                                 FRANCHISEE\n                            \n                        \n                        \n                            \n                                Value : contractor\n                            \n                        \n            \n        \n\n    src/app/shared/constants/storageKeys.const.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : AUTH_STATE\n                            \n                        \n                        \n                            \n                                 CODE_VERIFY\n                            \n                        \n                        \n                            \n                                Value : AUTH_CODE_VERIFIER\n                            \n                        \n                        \n                            \n                                 USER_TOKEN\n                            \n                        \n                        \n                            \n                                Value : AUTH_USER_TOKEN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canAccess   (src/.../user.selector.ts)\n                        \n                        \n                            logger   (src/.../store.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canAccess\n                        \n                    \n                \n            \n            \n                \ncanAccess(user: UserState, roles)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGoodFood - web\nAngular\nThis project was generated with Angular CLI version 13.2.6.\nDevelopment server\nRun ng serve (or ng serve --open or ng serve -o or npm start) for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component  to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nExit\nRun ctrl c to exit a dev server.\nVersions\n\nNodejs : 16.13.02\nAngular : 13.2.6\nPrimeNG : 13.3.2\n\nInstallation\nPrimeNG\nprimeicons\nnpm install primeng --save\nnpm install primeicons --savein angular.json > Styles we will add also\nnode_modules/primeicons/primeicons.css\nnode_modules/primeng/resources/themes/lara-light-indigo/theme.css\nnode_modules/primeng/resources/primeng.min.css\nThere is more than 33 themes and we can choose between them.\n\nGetting for first time\ngit clone GOODFOOD-2.0A\nnpm install\nDockerfile\n\nDockerfile reference\nDockerize example\n\nCreate image in Docker\ndocker build -t goodfood-web .Check :\ndocker imagesREPOSITORY TAG IMAGE ID CREATED SIZE\n\ngoodfood-web latest  28cb65260f81 11 hours ago  24.2MBAprès build on va créer le conteneur docker :\ndocker run -d -p 4200:4200 --name GoodFood-web goodfood-webSee container details :\ndocker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nf10f652d3da9 goodfood-web \"nginx -g 'daemon of…\" 16 minutes ago Up 16 minutes 0.0.0.0:8181->80/tcp GoodFood-webhttp://localhost:4200/\nCompodoc\nCompodoc is a documentation tool for Angular applications. It generates a static documentation of your application.\nInstallation\n\nGlobal installation\n\nnpm install -g @compodoc/compodoc\nLocal installation\n\nng add @compodoc/compodoc\nConfiguration\n\nnpx compodoc -p tsconfig.doc.json --theme materialRun script :\nnpm run compodoc\n./node_modules/.bin/compodoc -s -r 4201docker compose\ndocker compose up --build -dGITFLOW\nTutorial Git flow workflow\n\n\nSonar Status : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DefaultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FranchiseeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrincipalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipeManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_exports\n\n\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDetailComponent\n\nFranchiseeDetailComponent\n\nFranchiseeModule -->\n\nFranchiseeDetailComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            role   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    role\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminAccess   (src/.../user.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            franchiseeAccess   (src/.../user.selector.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            loadUser   (src/.../user.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../store.reducer.ts)\n                        \n                        \n                            mockAddress   (src/.../address.mock.ts)\n                        \n                        \n                            mockFranchisee   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeArray   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe1   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe2   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipeArray   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockIngre1   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngre2   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngredientArray   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockpictureArray   (src/.../picture.mock.ts)\n                        \n                        \n                            mockRecipe1   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipe2   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeArray   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeTypeArray   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            mockSchedule   (src/.../schedule.mock.ts)\n                        \n                        \n                            mockType1   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockType2   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockTypeArray   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockUser1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser3   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserArray   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserWithAuth   (src/.../users.mock.ts)\n                        \n                        \n                            picture1   (src/.../picture.mock.ts)\n                        \n                        \n                            picture2   (src/.../picture.mock.ts)\n                        \n                        \n                            picture3   (src/.../picture.mock.ts)\n                        \n                        \n                            recipeType1   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType2   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType3   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            reducers   (src/.../store.reducer.ts)\n                        \n                        \n                            routing   (src/.../app-routing.module.ts)\n                        \n                        \n                            routing   (src/.../principal-routing.module.ts)\n                        \n                        \n                            selectIsLoggedIn   (src/.../user.selector.ts)\n                        \n                        \n                            selectProfileUser   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserDetails   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserState   (src/.../user.selector.ts)\n                        \n                        \n                            updateUser   (src/.../user.actions.ts)\n                        \n                        \n                            userFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            userLoaded   (src/.../user.actions.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            userUpdated   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.ADMIN, Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserDetails,\n  (userDetails) => !!userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProfileUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserDetails, (user) => {\n  return { user };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserState,\n  (user) => user.userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('user')\n                    \n                \n\n            \n                \n                    Feature selector\nand\na selector that returns the userDetails\naccess these properties :\n\nisLoggedIn,\ncanAccess,\nadminAccess | franchiseeAccess\n\n\n                \n            \n\n        \n    \n\n    src/environments/environment.example.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost/8085/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'http://localhost/4000',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96560464-28d1-401b-9c39-0fe271d28c2d',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost/4100'\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96b05134-a952-4e00-b94a-c47406527d49',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/app/shared/store/state/user/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  userDetails: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/user/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Auth] Load User')\n                    \n                \n\n            \n                \n                    User-related Actions that we need for our user Store. Logout,\nand user changed Action to keep the user details in our Store in sync with Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] Update User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Auth Effect] User Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] User Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: routerReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/address.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  first_line: '4 rue isere',\n  second_line: '',\n  zip_code: '38000',\n  city: 'Grenoble',\n  country: 'France',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/franchisee.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'chez moi',\n  phone: '01 22 33 44 55',\n  email: 'user@example.com',\n  max_delivery_radius: 5,\n  address_id: 1,\n  ownedBy: mockUser1,\n  owned_by: 1,\n  create_by: 1,\n  address: mockAddress,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : [mockFranchisee]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/fracnhisee-recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  price: 12.0,\n  recipe_id: 1,\n  recipe: mockRecipe1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  price: 15.0,\n  recipe_id: 2,\n  recipe: mockRecipe2,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  mockFranchiseeRecipe1,\n  mockFranchiseeRecipe2,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredients.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockIngre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'Porc',\n  allergen: false,\n  types: [mockType2],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngre2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'Saumon',\n  allergen: true,\n  types: [mockType1],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngredientArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : [mockIngre1, mockIngre2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/picture.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockpictureArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : [picture1, picture2, picture3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-1',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-1.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuis-2',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-2.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-3',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-3.jpg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'string',\n  star: false,\n  base_price: 22,\n  description: 'string',\n  recipe_type: recipeType1,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'string',\n  star: true,\n  base_price: 10,\n  description: 'string',\n  recipe_type: recipeType2,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [mockRecipe1, mockRecipe2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipeTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  recipeType2,\n  recipeType2,\n  recipeType3,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/schedule.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockSchedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                \n                    \n                        Default value : {\n  monday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  tuesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  wednesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  thursday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  friday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  saturday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  sunday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredient-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'fish',\n  name: 'fish',\n  description: 'description 1',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'meat',\n  name: 'meat',\n  description: 'description 2',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : [mockType1, mockType2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/users.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockUser1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  firstname: 'Zara',\n  lastname: 'Dubeau',\n  email: 'Product@Description.com',\n  phone: '11111111',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  firstname: 'Bahar',\n  lastname: 'Sdqi',\n  email: 'Product@Description.org',\n  phone: '00000000',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [mockUser1, mockUser2, mockUser3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n    {\n      code: 'contractor',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'contractor',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserWithAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n    {\n      code: 'contractor',\n    },\n  ],\n  autorisations: {\n    isAdmin: true,\n    isFranchisee: true,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forRoot(ROUTES, { useHash: false })\n                    \n                \n\n\n        \n    \n\n    src/app/principal/principal-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild(ROUTES)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

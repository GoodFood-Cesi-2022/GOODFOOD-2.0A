var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/interfaces/AccessTokenModel.html", [0, 0.547, 1, 3.034]],
      [
        "body/interfaces/AccessTokenModel.html",
        [
          0, 0.778, 1, 5.202, 2, 1.743, 3, 0.185, 4, 0.166, 5, 0.148, 6, 5.172,
          7, 5.172, 8, 0.302, 9, 1.079, 10, 7.937, 11, 0.714, 12, 7.937, 13,
          7.937, 14, 6.941, 15, 7.937, 16, 1.775, 17, 0.589, 18, 0.012, 19,
          2.432, 20, 0.185, 21, 0.01, 22, 0.01,
        ],
      ],
      ["title/interfaces/Address.html", [0, 0.547, 23, 2.659]],
      [
        "body/interfaces/Address.html",
        [
          0, 0.741, 2, 1.66, 3, 0.176, 4, 0.158, 5, 0.141, 8, 0.287, 9, 1.047,
          11, 0.856, 16, 1.814, 17, 0.591, 18, 0.012, 19, 2.206, 20, 0.176, 21,
          0.01, 22, 0.01, 23, 4.426, 24, 4.926, 25, 7.806, 26, 6.827, 27, 7.806,
          28, 2.793, 29, 7.806, 30, 7.806, 31, 5.632, 32, 5.632,
        ],
      ],
      ["title/guards/AdminGuard.html", [33, 2.659, 34, 3.291]],
      [
        "body/guards/AdminGuard.html",
        [
          3, 0.119, 4, 0.107, 5, 0.095, 8, 0.194, 11, 0.619, 17, 0.448, 18,
          0.012, 20, 0.119, 21, 0.007, 22, 0.007, 34, 4.234, 35, 2.594, 36,
          3.332, 37, 2.539, 38, 4.675, 39, 5.856, 40, 5.925, 41, 3.904, 42,
          4.675, 43, 3.069, 44, 0.987, 45, 5.339, 46, 6.167, 47, 1.854, 48,
          5.856, 49, 0.703, 50, 3.017, 51, 3.824, 52, 3.753, 53, 1.121, 54,
          3.81, 55, 1.58, 56, 0.842, 57, 2.782, 58, 5.687, 59, 3.733, 60, 5.339,
          61, 3.81, 62, 0.813, 63, 4.891, 64, 6.176, 65, 6.176, 66, 4.513, 67,
          5.585, 68, 6.176, 69, 6.176, 70, 2.138, 71, 7.052, 72, 5.346, 73,
          7.052, 74, 5.346, 75, 1.22, 76, 2.687, 77, 4.675, 78, 5.856, 79,
          6.394, 80, 3.81, 81, 3.225, 82, 6.176, 83, 6.176, 84, 4.675, 85,
          3.069, 86, 3.421, 87, 5.346, 88, 5.346, 89, 3.81, 90, 0.673, 91,
          1.052, 92, 0.466, 93, 2.782, 94, 1.363, 95, 2.304, 96, 1.754, 97,
          1.904, 98, 1.235, 99, 2.083, 100, 3.332, 101, 3.017, 102, 3.332, 103,
          1.764, 104, 3.233, 105, 3.332, 106, 4.675, 107, 3.904, 108, 1.679,
          109, 4.675, 110, 3.332, 111, 1.459, 112, 1.363, 113, 0.483, 114,
          1.687, 115, 1.764, 116, 3.332, 117, 3.81, 118, 3.332, 119, 2.594, 120,
          2.782, 121, 3.661, 122, 4.675,
        ],
      ],
      [
        "title/interceptors/ApiTokenInterceptorService.html",
        [123, 3.291, 124, 2.513],
      ],
      [
        "body/interceptors/ApiTokenInterceptorService.html",
        [
          3, 0.151, 4, 0.136, 5, 0.121, 8, 0.247, 11, 0.7, 17, 0.506, 18, 0.012,
          20, 0.151, 21, 0.009, 22, 0.009, 44, 1.161, 49, 0.894, 53, 1.169, 55,
          1.509, 56, 0.952, 75, 1.088, 76, 2.498, 90, 0.705, 91, 1.237, 92,
          0.592, 98, 1.571, 103, 1.384, 111, 1.855, 112, 1.733, 113, 0.614, 114,
          2.145, 115, 1.994, 124, 3.803, 125, 4.236, 126, 5.031, 127, 5.182,
          128, 4.236, 129, 6.106, 130, 6.462, 131, 6.106, 132, 3.537, 133,
          3.761, 134, 4.844, 135, 4.844, 136, 6.987, 137, 4.586, 138, 6.987,
          139, 4.844, 140, 6.214, 141, 4.591, 142, 4.236, 143, 4.844, 144,
          4.236, 145, 5.499, 146, 2.066, 147, 4.844, 148, 2.322, 149, 2.529,
          150, 3.537, 151, 6.288, 152, 5.499, 153, 4.844, 154, 4.844, 155,
          4.236, 156, 4.844, 157, 1.571, 158, 4.236, 159, 4.844, 160, 4.844,
          161, 4.844, 162, 4.236, 163, 4.844, 164, 4.844,
        ],
      ],
      ["title/components/AppComponent.html", [62, 0.547, 165, 1.392]],
      [
        "body/components/AppComponent.html",
        [
          3, 0.136, 4, 0.122, 5, 0.109, 8, 0.222, 9, 0.888, 11, 0.437, 16,
          0.913, 17, 0.425, 18, 0.012, 20, 0.136, 21, 0.008, 22, 0.008, 44,
          1.083, 47, 1.207, 49, 0.805, 51, 3.731, 53, 1.11, 55, 0.942, 56,
          0.904, 62, 0.872, 70, 1.509, 75, 0.754, 90, 0.61, 92, 0.533, 94, 1.56,
          103, 1.675, 112, 2.099, 113, 0.553, 114, 1.931, 165, 2.374, 166, 2.03,
          167, 1.56, 168, 1.509, 169, 1.56, 170, 3.813, 171, 2.372, 172, 1.56,
          173, 2.959, 174, 2.684, 175, 2.099, 176, 6.628, 177, 2.099, 178,
          5.865, 179, 4.513, 180, 2.536, 181, 4.36, 182, 7.619, 183, 5.865, 184,
          4.36, 185, 1.207, 186, 1.369, 187, 1.414, 188, 4.283, 189, 5.13, 190,
          2.276, 191, 4.36, 192, 1.859, 193, 3.813, 194, 2.503, 195, 2.969, 196,
          4.36, 197, 4.36, 198, 4.36, 199, 1.56, 200, 2.099, 201, 2.099, 202,
          1.56, 203, 2.536, 204, 1.56, 205, 1.56, 206, 1.369, 207, 1.56, 208,
          1.326, 209, 1.56, 210, 1.369, 211, 1.56, 212, 1.369, 213, 1.56, 214,
          1.369, 215, 1.56, 216, 1.326, 217, 1.56, 218, 1.369, 219, 1.1, 220,
          1.56, 221, 1.369, 222, 1.56, 223, 1.369, 224, 1.56, 225, 1.369, 226,
          1.369, 227, 1.56, 228, 1.369, 229, 1.56, 230, 1.369, 231, 1.56, 232,
          1.369, 233, 1.135, 234, 1.56, 235, 1.369, 236, 1.56, 237, 1.369, 238,
          1.56, 239, 1.369, 240, 1.56, 241, 1.369, 242, 1.56, 243, 1.369, 244,
          1.56, 245, 1.369, 246, 1.509, 247, 1.56, 248, 1.56,
        ],
      ],
      ["title/interfaces/AppState.html", [0, 0.547, 99, 2.272]],
      [
        "body/interfaces/AppState.html",
        [
          0, 0.734, 2, 1.644, 3, 0.174, 4, 0.156, 5, 0.139, 18, 0.012, 20,
          0.249, 21, 0.01, 22, 0.01, 51, 2.673, 52, 2.787, 59, 3.572, 90, 0.716,
          96, 2.568, 99, 3.758, 104, 3.373, 108, 1.751, 115, 1.964, 157, 2.416,
          249, 4.072, 250, 6.012, 251, 4.877, 252, 6.517, 253, 6.803, 254,
          6.012, 255, 5.577, 256, 4.072, 257, 5.577, 258, 2.568, 259, 5.901,
          260, 4.877, 261, 4.072, 262, 4.877, 263, 4.769, 264, 5.577, 265,
          5.577, 266, 5.577, 267, 5.577, 268, 4.417, 269, 5.577,
        ],
      ],
      ["title/modules/AuthModule.html", [270, 2.17, 271, 3.034]],
      [
        "body/modules/AuthModule.html",
        [
          3, 0.15, 4, 0.135, 5, 0.12, 18, 0.012, 20, 0.15, 21, 0.009, 22, 0.009,
          43, 3.998, 44, 0.89, 53, 0.807, 62, 0.825, 75, 0.834, 81, 3.272, 90,
          0.78, 92, 0.589, 94, 1.724, 96, 2.219, 113, 0.611, 115, 1.377, 133,
          3.004, 157, 1.563, 206, 2.506, 223, 2.506, 271, 5.971, 272, 2.219,
          273, 2.885, 274, 4.215, 275, 4.215, 276, 3.132, 277, 2.408, 278,
          2.134, 279, 4.819, 280, 3.426, 281, 4.963, 282, 6.091, 283, 4.819,
          284, 6.091, 285, 4.215, 286, 3.636, 287, 3.426, 288, 2.516, 289, 4.01,
          290, 2.775, 291, 4.01, 292, 3.79, 293, 2.914, 294, 4.01, 295, 3.084,
          296, 4.819, 297, 4.819, 298, 2.635, 299, 4.215, 300, 4.215, 301,
          4.215, 302, 4.215, 303, 3.084, 304, 4.819, 305, 4.267, 306, 3.281,
          307, 2.635, 308, 3.816, 309, 2.516, 310, 2.914, 311, 4.215, 312,
          5.481, 313, 4.819, 314, 4.215, 315, 2.635,
        ],
      ],
      ["title/injectables/AuthService.html", [91, 0.817, 133, 1.992]],
      [
        "body/injectables/AuthService.html",
        [
          1, 4.31, 3, 0.06, 4, 0.054, 5, 0.048, 8, 0.099, 11, 0.659, 14, 2.786,
          16, 1.338, 17, 0.516, 18, 0.012, 19, 1.196, 20, 0.06, 21, 0.004, 22,
          0.004, 28, 1.452, 37, 1.31, 44, 0.588, 47, 1.94, 49, 0.868, 51, 2.955,
          53, 1.249, 55, 1.421, 56, 0.897, 59, 2.955, 75, 1.29, 76, 2.285, 90,
          0.633, 91, 0.627, 92, 0.237, 94, 0.693, 97, 1.592, 98, 0.628, 108,
          2.594, 111, 0.742, 112, 0.693, 113, 0.246, 115, 2.086, 120, 1.414,
          121, 2.839, 127, 3.777, 129, 6.681, 133, 1.527, 141, 5.196, 146,
          0.826, 148, 0.928, 149, 1.011, 157, 2.394, 158, 5.392, 162, 3.548,
          185, 1.123, 188, 2.326, 192, 2.382, 226, 1, 258, 0.892, 308, 2.523,
          316, 0.768, 317, 1.694, 318, 3.185, 319, 4.057, 320, 4.7, 321, 4.7,
          322, 4.7, 323, 4.11, 324, 4.7, 325, 3.185, 326, 3.185, 327, 4.11, 328,
          3.185, 329, 3.185, 330, 2.523, 331, 3.722, 332, 3.432, 333, 3.185,
          334, 1.796, 335, 3.185, 336, 1.059, 337, 2.569, 338, 4.502, 339,
          3.945, 340, 1.937, 341, 2.839, 342, 3.185, 343, 2.326, 344, 3.185,
          345, 1.937, 346, 3.007, 347, 1.682, 348, 1.937, 349, 1.937, 350,
          2.038, 351, 2.984, 352, 3.185, 353, 1.937, 354, 1.937, 355, 1.937,
          356, 2.326, 357, 3.185, 358, 1.937, 359, 1.937, 360, 3.185, 361,
          1.937, 362, 3.185, 363, 1.937, 364, 1.937, 365, 3.185, 366, 1.937,
          367, 1.741, 368, 2.786, 369, 3.185, 370, 1.937, 371, 2.523, 372,
          1.937, 373, 2.786, 374, 3.976, 375, 1.937, 376, 1.937, 377, 3.185,
          378, 3.185, 379, 3.185, 380, 1.937, 381, 3.185, 382, 1.937, 383,
          2.523, 384, 3.722, 385, 1.937, 386, 1.937, 387, 1.694, 388, 1.694,
          389, 1.319, 390, 1.937, 391, 1.694, 392, 1.937, 393, 3.213, 394,
          1.937, 395, 1.937, 396, 1.534, 397, 2.786, 398, 1.319, 399, 1.534,
          400, 1.937, 401, 1.112, 402, 1.534, 403, 1.319, 404, 1.112, 405,
          4.057, 406, 2.786, 407, 3.185, 408, 3.185, 409, 1.937, 410, 1.937,
          411, 2.164, 412, 3.185, 413, 3.185, 414, 1.937, 415, 1.937, 416,
          1.937, 417, 2.341, 418, 1.937, 419, 4.057, 420, 4.057, 421, 3.185,
          422, 3.185, 423, 1.937, 424, 3.185, 425, 1.937, 426, 1.937, 427,
          1.937, 428, 1.694, 429, 1.937, 430, 1.937, 431, 3.722, 432, 1.937,
          433, 1.937, 434, 1.937, 435, 1.694, 436, 3.213, 437, 1.937, 438,
          1.937, 439, 1.937, 440, 1.694, 441, 1.937, 442, 1.937, 443, 1.937,
          444, 1.694, 445, 3.053, 446, 3.185, 447, 3.185, 448, 1.937, 449,
          1.937, 450, 1.937, 451, 2.329, 452, 2.786, 453, 3.185, 454, 3.185,
          455, 3.185, 456, 1.937, 457, 1.937, 458, 3.185, 459, 4.7, 460, 4.057,
          461, 1.937, 462, 3.185, 463, 3.185, 464, 1.937, 465, 1.937, 466,
          1.937, 467, 1.937, 468, 1.937, 469, 1.937, 470, 3.185, 471, 1.937,
          472, 1.937, 473, 1.937, 474, 1.937, 475, 1.937, 476, 1.937, 477,
          1.937, 478, 1.937, 479, 3.185, 480, 3.185, 481, 1.937, 482, 2.169,
          483, 0.826, 484, 1.937, 485, 1.937, 486, 1.694, 487, 1.534, 488,
          2.523, 489, 5.392, 490, 2.786, 491, 1.937, 492, 1.937, 493, 2.169,
          494, 2.169, 495, 2.081, 496, 2.169, 497, 1.534, 498, 3.432, 499,
          2.762, 500, 1.534, 501, 2.762, 502, 1.534, 503, 4.884, 504, 4.057,
          505, 3.432, 506, 3.185, 507, 1.694, 508, 2.523, 509, 3.185, 510,
          4.057, 511, 1.937, 512, 3.185, 513, 1.937, 514, 1.937, 515, 1.937,
          516, 1.937, 517, 1.937, 518, 4.7, 519, 2.786, 520, 1.937, 521, 3.185,
          522, 3.185, 523, 3.185, 524, 3.185, 525, 3.185, 526, 1.937, 527,
          3.185, 528, 3.185, 529, 1.694, 530, 3.185, 531, 3.185, 532, 1.937,
          533, 1.937, 534, 1.534, 535, 1.937, 536, 3.185, 537, 1.937, 538,
          1.937, 539, 1.937, 540, 0.892,
        ],
      ],
      ["title/interfaces/Autorisation.html", [0, 0.547, 541, 3.034]],
      [
        "body/interfaces/Autorisation.html",
        [
          0, 0.94, 2, 1.751, 3, 0.185, 4, 0.167, 5, 0.148, 8, 0.303, 9, 1.082,
          16, 1.73, 17, 0.555, 18, 0.012, 19, 1.751, 20, 0.223, 21, 0.01, 22,
          0.01, 28, 2.125, 108, 1.865, 347, 2.955, 351, 3.163, 374, 4.319, 401,
          3.409, 493, 4.044, 494, 5.412, 496, 5.412, 541, 5.593, 542, 4.337,
          543, 4.044, 544, 4.044, 545, 3.8, 546, 3.8,
        ],
      ],
      ["title/components/CallbackComponent.html", [62, 0.547, 206, 1.305]],
      [
        "body/components/CallbackComponent.html",
        [
          3, 0.099, 4, 0.089, 5, 0.079, 8, 0.238, 9, 0.707, 11, 0.317, 16,
          0.978, 17, 0.339, 18, 0.012, 20, 0.099, 21, 0.007, 22, 0.007, 44,
          0.862, 47, 1.965, 49, 0.862, 51, 3.401, 52, 3.546, 53, 1.028, 55,
          0.682, 56, 0.758, 59, 2.663, 62, 0.862, 70, 1.093, 75, 0.808, 90,
          0.67, 92, 0.386, 94, 1.13, 95, 1.909, 96, 1.453, 99, 1.726, 103,
          1.334, 108, 2.376, 113, 0.4, 120, 2.305, 133, 3.401, 150, 2.305, 165,
          1.057, 166, 1.616, 167, 1.13, 168, 1.093, 169, 1.13, 171, 1.988, 172,
          1.13, 173, 2.861, 174, 2.596, 175, 1.67, 177, 1.67, 180, 2.196, 185,
          1.7, 192, 1.346, 199, 1.13, 200, 1.67, 201, 1.67, 202, 1.13, 203,
          2.196, 204, 1.13, 205, 1.13, 206, 1.928, 207, 1.13, 208, 0.96, 209,
          1.13, 210, 0.991, 211, 1.13, 212, 0.991, 213, 1.13, 214, 0.991, 215,
          1.13, 216, 0.96, 217, 1.13, 218, 0.991, 219, 0.797, 220, 1.13, 221,
          0.991, 222, 1.13, 223, 0.991, 224, 1.13, 225, 0.991, 226, 0.991, 227,
          1.13, 228, 0.991, 229, 1.13, 230, 0.991, 231, 1.13, 232, 0.991, 233,
          0.822, 234, 1.13, 235, 0.991, 236, 1.13, 237, 0.991, 238, 1.13, 239,
          0.991, 240, 1.13, 241, 0.991, 242, 1.13, 243, 0.991, 244, 1.13, 245,
          0.991, 246, 1.093, 247, 1.13, 248, 1.13, 278, 2.067, 347, 1.13, 351,
          2.067, 401, 1.812, 403, 2.15, 411, 1.453, 495, 1.398, 498, 3.409, 499,
          2.15, 501, 2.15, 529, 2.761, 540, 3.425, 547, 2.761, 548, 5.555, 549,
          5.555, 550, 4.669, 551, 5.368, 552, 2.305, 553, 7.095, 554, 4.669,
          555, 3.157, 556, 3.157, 557, 1.812, 558, 2.761, 559, 2.02, 560, 2.15,
          561, 2.5, 562, 0.874, 563, 3.157, 564, 3.157, 565, 3.157, 566, 3.157,
          567, 3.157, 568, 2.761, 569, 2.02, 570, 2.5, 571, 3.157, 572, 3.157,
          573, 2.761, 574, 2.761, 575, 2.15, 576, 5.555, 577, 3.157, 578, 3.697,
          579, 3.157, 580, 2.305, 581, 1.726, 582, 1.578, 583, 1.726, 584,
          5.188, 585, 6.205, 586, 1.578, 587, 5.729, 588, 2.761, 589, 2.5, 590,
          3.697, 591, 2.761, 592, 4.083, 593, 3.697, 594, 2.987, 595, 2.761,
          596, 3.697, 597, 2.552, 598, 5.993, 599, 2.761, 600, 2.761, 601,
          2.761, 602, 2.761, 603, 2.761, 604, 2.5, 605, 2.5, 606, 2.5, 607,
          4.399, 608, 1.812, 609, 4.056, 610, 4.399, 611, 2.02, 612, 4.083, 613,
          2.761, 614, 2.761, 615, 2.305, 616, 2.305, 617, 2.5, 618, 1.812, 619,
          1.812, 620, 1.909, 621, 1.909, 622, 1.578, 623, 1.812, 624, 1.909,
          625, 1.812, 626, 2.987, 627, 2.02, 628, 2.02, 629, 1.812, 630, 2.5,
          631, 3.157, 632, 2.761, 633, 2.761,
        ],
      ],
      ["title/modules/ComponentsModule.html", [270, 2.17, 634, 2.272]],
      [
        "body/modules/ComponentsModule.html",
        [
          3, 0.14, 4, 0.126, 5, 0.112, 18, 0.012, 20, 0.14, 21, 0.008, 22,
          0.008, 90, 0.779, 92, 0.55, 94, 1.609, 113, 0.571, 210, 2.598, 221,
          2.598, 237, 2.598, 241, 2.598, 243, 2.598, 272, 2.071, 273, 2.757,
          276, 2.993, 277, 2.248, 278, 1.992, 280, 3.274, 286, 3.127, 287,
          3.274, 288, 2.349, 289, 3.832, 290, 1.992, 292, 3.622, 293, 2.72, 294,
          3.832, 295, 2.878, 305, 4.078, 306, 3.063, 307, 3.274, 309, 2.349,
          351, 1.992, 634, 4.654, 635, 3.934, 636, 3.934, 637, 3.934, 638,
          4.498, 639, 4.373, 640, 4.743, 641, 3.562, 642, 4.373, 643, 3.285,
          644, 5.989, 645, 4.498, 646, 5.238, 647, 3.934, 648, 4.373, 649,
          3.285, 650, 4.498, 651, 4.498, 652, 4.498, 653, 4.498, 654, 4.498,
        ],
      ],
      ["title/components/DefaultComponent.html", [62, 0.547, 208, 1.264]],
      [
        "body/components/DefaultComponent.html",
        [
          3, 0.149, 4, 0.134, 5, 0.119, 8, 0.244, 18, 0.012, 20, 0.149, 21,
          0.009, 22, 0.009, 44, 1.152, 49, 1.281, 53, 1.045, 56, 0.851, 62,
          0.913, 70, 1.657, 75, 0.828, 90, 0.44, 92, 0.585, 103, 1.782, 113,
          0.607, 165, 1.603, 166, 2.159, 167, 1.713, 168, 1.657, 169, 1.713,
          171, 2.484, 172, 1.713, 173, 2.982, 174, 2.706, 175, 2.232, 177,
          2.232, 180, 2.632, 185, 1.728, 186, 1.959, 199, 1.713, 200, 2.232,
          201, 2.232, 202, 1.713, 203, 2.632, 204, 1.713, 205, 1.713, 206,
          1.503, 207, 1.713, 208, 2.238, 209, 1.713, 210, 1.503, 211, 1.713,
          212, 1.503, 213, 1.713, 214, 1.503, 215, 1.713, 216, 1.456, 217,
          1.713, 218, 1.503, 219, 1.208, 220, 1.713, 221, 1.503, 222, 1.713,
          223, 1.503, 224, 1.713, 225, 1.503, 226, 1.503, 227, 1.713, 228,
          1.503, 229, 1.713, 230, 1.503, 231, 1.713, 232, 1.503, 233, 1.246,
          234, 1.713, 235, 1.503, 236, 1.713, 237, 1.503, 238, 1.713, 239,
          1.503, 240, 1.713, 241, 1.503, 242, 1.713, 243, 1.503, 244, 1.713,
          245, 1.503, 246, 1.657, 247, 1.713, 248, 1.713, 562, 1.728, 655,
          4.186, 656, 6.942, 657, 6.239, 658, 4.787, 659, 4.787,
        ],
      ],
      ["title/modules/DefaultModule.html", [270, 2.17, 660, 2.83]],
      [
        "body/modules/DefaultModule.html",
        [
          3, 0.178, 4, 0.16, 5, 0.142, 18, 0.012, 20, 0.178, 21, 0.01, 22, 0.01,
          90, 0.752, 92, 0.695, 94, 2.035, 113, 0.722, 208, 2.601, 272, 2.619,
          273, 3.204, 276, 3.478, 277, 2.843, 278, 2.519, 280, 3.804, 286,
          3.633, 287, 3.804, 288, 2.97, 307, 3.804, 309, 2.97, 351, 2.519, 634,
          3.804, 639, 5.081, 660, 5.637, 661, 4.975, 662, 4.975, 663, 4.975,
          664, 5.689, 665, 5.689, 666, 5.689, 667, 4.738, 668, 3.874,
        ],
      ],
      ["title/interfaces/Diner.html", [0, 0.547, 669, 1.992]],
      [
        "body/interfaces/Diner.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.719, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 3.97, 670, 2.584, 671, 4.079, 672, 4.079, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.094, 683, 4.234, 684, 2.584,
        ],
      ],
      ["title/components/FooterComponent.html", [62, 0.547, 210, 1.305]],
      [
        "body/components/FooterComponent.html",
        [
          3, 0.141, 4, 0.127, 5, 0.113, 8, 0.231, 18, 0.012, 20, 0.141, 21,
          0.008, 22, 0.008, 44, 1.111, 49, 1.248, 53, 1.008, 56, 0.821, 62,
          0.889, 70, 1.569, 75, 0.785, 90, 0.417, 92, 0.554, 103, 1.72, 113,
          0.575, 165, 1.519, 166, 2.084, 167, 1.622, 168, 1.569, 169, 1.622,
          171, 2.419, 172, 1.622, 173, 2.969, 174, 2.694, 175, 2.154, 177,
          2.154, 180, 2.577, 185, 1.667, 199, 1.622, 200, 2.154, 201, 2.154,
          202, 1.622, 203, 2.577, 204, 1.622, 205, 1.622, 206, 1.424, 207,
          1.622, 208, 1.379, 209, 1.622, 210, 2.261, 211, 1.622, 212, 1.424,
          213, 1.622, 214, 1.424, 215, 1.622, 216, 1.379, 217, 1.622, 218,
          1.424, 219, 1.144, 220, 1.622, 221, 1.424, 222, 1.622, 223, 1.424,
          224, 1.622, 225, 1.424, 226, 1.424, 227, 1.622, 228, 1.424, 229,
          1.622, 230, 1.424, 231, 1.622, 232, 1.424, 233, 1.18, 234, 1.622, 235,
          1.424, 236, 1.622, 237, 1.424, 238, 1.622, 239, 1.424, 240, 1.622,
          241, 1.424, 242, 1.622, 243, 1.424, 244, 1.622, 245, 1.424, 246,
          1.569, 247, 1.622, 248, 1.622, 540, 2.772, 562, 1.667, 594, 2.901,
          616, 3.311, 619, 3.456, 621, 3.641, 685, 3.965, 686, 5.912, 687, 6.76,
          688, 6.021, 689, 4.534, 690, 4.534, 691, 6.021, 692, 6.021, 693,
          6.021, 694, 6.021, 695, 6.021, 696, 4.534, 697, 3.087, 698, 2.901,
          699, 3.965, 700, 3.591, 701, 2.603, 702, 3.087, 703, 4.534, 704,
          2.479, 705, 4.534,
        ],
      ],
      ["title/interfaces/Franchisee.html", [0, 0.547, 367, 2.272]],
      [
        "body/interfaces/Franchisee.html",
        [
          0, 0.663, 2, 1.486, 3, 0.157, 4, 0.141, 5, 0.126, 8, 0.257, 9, 0.977,
          11, 0.868, 16, 1.763, 17, 0.607, 18, 0.012, 19, 2.51, 20, 0.157, 21,
          0.009, 22, 0.009, 23, 5.225, 28, 2.684, 56, 1.023, 90, 0.594, 108,
          2.356, 367, 3.527, 545, 4.8, 546, 4.8, 706, 4.409, 707, 7.501, 708,
          7.501, 709, 7.501, 710, 7.501, 711, 7.501, 712, 7.501, 713, 5.042,
          714, 5.042,
        ],
      ],
      ["title/components/FranchiseeComponent.html", [62, 0.547, 212, 1.305]],
      [
        "body/components/FranchiseeComponent.html",
        [
          3, 0.089, 4, 0.08, 5, 0.071, 8, 0.146, 9, 0.656, 11, 0.286, 17, 0.498,
          18, 0.012, 20, 0.089, 21, 0.006, 22, 0.006, 23, 4.226, 44, 0.799, 47,
          1.199, 49, 0.799, 53, 1.256, 55, 0.617, 56, 0.713, 62, 0.688, 67,
          3.429, 70, 0.988, 75, 1.01, 86, 1.827, 90, 0.666, 92, 0.349, 103,
          1.237, 113, 0.362, 165, 0.956, 166, 1.499, 167, 1.022, 168, 0.988,
          169, 1.022, 171, 1.872, 172, 1.022, 173, 2.826, 174, 2.564, 175,
          1.549, 177, 1.549, 180, 2.089, 185, 1.957, 186, 0.897, 187, 0.926,
          190, 1.491, 199, 1.022, 200, 1.549, 201, 1.549, 202, 1.022, 203,
          2.089, 204, 1.022, 205, 1.022, 206, 0.897, 207, 1.022, 208, 0.869,
          209, 1.022, 210, 0.897, 211, 1.022, 212, 1.833, 213, 1.022, 214,
          0.897, 215, 1.022, 216, 0.869, 217, 1.022, 218, 0.897, 219, 0.72, 220,
          1.022, 221, 0.897, 222, 1.022, 223, 0.897, 224, 1.022, 225, 0.897,
          226, 0.897, 227, 1.022, 228, 0.897, 229, 1.022, 230, 0.897, 231,
          1.022, 232, 0.897, 233, 0.743, 234, 1.022, 235, 0.897, 236, 1.022,
          237, 0.897, 238, 1.022, 239, 0.897, 240, 1.022, 241, 0.897, 242,
          1.022, 243, 0.897, 244, 1.022, 245, 0.897, 246, 0.988, 247, 1.022,
          248, 1.022, 290, 1.264, 334, 2.316, 347, 1.549, 367, 3.431, 404,
          1.639, 483, 1.847, 562, 1.617, 608, 4.236, 616, 2.085, 617, 2.261,
          618, 2.486, 620, 1.727, 622, 1.427, 623, 2.486, 624, 1.727, 625,
          2.486, 673, 2.925, 704, 1.561, 715, 2.497, 716, 5.231, 717, 4.33, 718,
          5.838, 719, 5.231, 720, 3.347, 721, 4.035, 722, 5.838, 723, 5.838,
          724, 5.838, 725, 2.855, 726, 4.226, 727, 3.347, 728, 3.351, 729, 4.33,
          730, 2.855, 731, 2.855, 732, 2.855, 733, 2.855, 734, 2.855, 735,
          2.855, 736, 3.562, 737, 2.855, 738, 2.855, 739, 2.855, 740, 1.944,
          741, 2.855, 742, 2.497, 743, 2.085, 744, 2.855, 745, 2.855, 746,
          2.085, 747, 2.855, 748, 2.497, 749, 2.085, 750, 2.085, 751, 2.085,
          752, 2.855, 753, 2.855, 754, 2.855, 755, 2.855, 756, 4.33, 757, 4.33,
          758, 4.33, 759, 4.33, 760, 4.33, 761, 7.381, 762, 4.33, 763, 4.33,
          764, 4.33, 765, 4.33, 766, 4.33, 767, 4.33, 768, 4.33, 769, 4.33, 770,
          4.33, 771, 5.838, 772, 4.33, 773, 7.604, 774, 7.604, 775, 7.604, 776,
          7.604, 777, 4.33, 778, 4.33, 779, 4.33, 780, 4.33, 781, 4.33, 782,
          3.162, 783, 3.162, 784, 4.33, 785, 4.33, 786, 4.33, 787, 2.497, 788,
          2.085, 789, 2.085, 790, 2.497, 791, 1.827, 792, 1.944, 793, 4.33, 794,
          4.33, 795, 1.727, 796, 2.261, 797, 2.619, 798, 1.944, 799, 2.855, 800,
          2.855, 801, 2.855, 802, 3.429, 803, 2.497,
        ],
      ],
      ["title/guards/FranchiseeGuard.html", [33, 2.659, 804, 3.291]],
      [
        "body/guards/FranchiseeGuard.html",
        [
          3, 0.126, 4, 0.114, 5, 0.101, 8, 0.206, 11, 0.64, 17, 0.463, 18,
          0.012, 20, 0.126, 21, 0.008, 22, 0.008, 33, 4.082, 35, 2.757, 37,
          2.293, 38, 4.877, 39, 6.012, 40, 5.834, 41, 4.072, 42, 4.877, 43,
          3.201, 44, 1.03, 45, 5.442, 46, 6.305, 47, 1.903, 48, 6.012, 49,
          0.747, 50, 3.206, 51, 3.572, 52, 3.816, 53, 1.151, 55, 1.379, 56,
          0.87, 57, 2.957, 58, 5.02, 59, 3.058, 60, 5.02, 75, 1.248, 76, 2.732,
          77, 4.877, 78, 6.012, 79, 6.012, 90, 0.686, 91, 1.097, 92, 0.495, 93,
          5.442, 94, 1.449, 95, 2.449, 96, 1.864, 97, 2.024, 98, 1.313, 99,
          2.214, 100, 3.541, 102, 3.541, 103, 1.822, 104, 3.373, 105, 3.541,
          106, 4.877, 107, 5.02, 108, 2.159, 109, 4.877, 110, 3.541, 111, 1.551,
          112, 1.449, 113, 0.514, 114, 1.793, 115, 1.822, 116, 3.541, 118,
          3.541, 119, 4.344, 120, 2.957, 121, 3.049, 122, 4.877, 226, 1.751,
          308, 4.417, 356, 4.072, 367, 3.942, 383, 4.417, 417, 2.531, 436,
          4.417, 804, 4.417, 805, 3.541, 806, 4.049, 807, 4.049, 808, 4.049,
          809, 7.21, 810, 6.38, 811, 5.052, 812, 5.577, 813, 4.049, 814, 4.877,
          815, 5.577, 816, 4.877, 817, 3.206, 818, 4.049, 819, 4.049,
        ],
      ],
      ["title/modules/FranchiseeModule.html", [270, 2.17, 820, 3.034]],
      [
        "body/modules/FranchiseeModule.html",
        [
          3, 0.146, 4, 0.131, 5, 0.117, 18, 0.012, 20, 0.146, 21, 0.009, 22,
          0.009, 43, 3.94, 62, 0.615, 81, 2.442, 90, 0.786, 92, 0.572, 94,
          1.673, 113, 0.593, 124, 4.7, 126, 3.184, 127, 2.992, 146, 1.994, 157,
          1.516, 192, 1.994, 212, 2.488, 272, 2.153, 273, 2.829, 276, 3.071,
          277, 2.337, 278, 2.071, 280, 3.359, 286, 3.208, 287, 3.359, 288,
          2.442, 289, 3.932, 290, 2.071, 291, 3.932, 292, 3.716, 293, 2.828,
          294, 3.932, 295, 2.992, 307, 2.556, 309, 2.442, 310, 2.828, 315,
          3.359, 634, 3.359, 648, 4.487, 649, 3.415, 667, 4.184, 668, 3.184,
          726, 4.973, 742, 4.09, 820, 5.992, 821, 4.09, 822, 4.09, 823, 4.09,
          824, 4.676, 825, 4.676, 826, 4.487, 827, 4.866, 828, 5.374, 829, 4.09,
          830, 4.866, 831, 3.703, 832, 4.487, 833, 3.415, 834, 4.487, 835,
          3.415, 836, 4.487, 837, 3.415, 838, 6.145, 839, 4.676, 840, 3.415,
          841, 3.703, 842, 3.703, 843, 3.703, 844, 3.703,
        ],
      ],
      ["title/interfaces/FranchiseeRecipe.html", [0, 0.547, 845, 3.034]],
      [
        "body/interfaces/FranchiseeRecipe.html",
        [
          0, 0.775, 2, 1.736, 3, 0.184, 4, 0.165, 5, 0.147, 8, 0.3, 9, 1.076,
          11, 0.843, 17, 0.575, 18, 0.012, 19, 2.496, 20, 0.184, 21, 0.01, 22,
          0.01, 28, 2.836, 90, 0.542, 233, 2.189, 845, 5.189, 846, 5.151, 847,
          5.151, 848, 6.277, 849, 5.787, 850, 5.151,
        ],
      ],
      ["title/injectables/FranchiseeService.html", [91, 0.817, 726, 2.659]],
      [
        "body/injectables/FranchiseeService.html",
        [
          3, 0.07, 4, 0.063, 5, 0.056, 8, 0.115, 11, 0.707, 16, 1.176, 17, 0.52,
          18, 0.012, 19, 1.325, 20, 0.07, 21, 0.005, 22, 0.005, 28, 1.837, 37,
          2.584, 44, 0.664, 47, 1.658, 49, 0.416, 53, 1.202, 55, 1.551, 56,
          0.994, 75, 1.365, 76, 2.807, 85, 3.437, 90, 0.619, 91, 0.708, 92,
          0.275, 97, 1.126, 98, 0.73, 104, 2.177, 108, 0.707, 111, 0.863, 112,
          0.806, 113, 0.286, 114, 0.997, 115, 1.972, 121, 3.774, 146, 0.961,
          148, 1.079, 149, 1.176, 157, 0.73, 174, 1.13, 185, 0.624, 186, 0.707,
          187, 0.73, 194, 1.293, 195, 1.534, 233, 2.127, 258, 1.037, 316, 0.893,
          334, 3.573, 336, 1.231, 337, 2.808, 341, 2.808, 350, 2.303, 351,
          0.997, 367, 4.492, 389, 1.534, 411, 3.178, 417, 2.59, 431, 2.851, 445,
          3.569, 451, 3.747, 483, 2.784, 508, 1.784, 534, 1.784, 562, 0.624,
          673, 2.891, 726, 2.303, 748, 4.491, 811, 1.784, 845, 3.75, 849, 1.645,
          850, 1.97, 851, 1.97, 852, 3.6, 853, 3.6, 854, 4.496, 855, 3.6, 856,
          2.851, 857, 3.56, 858, 3.148, 859, 2.851, 860, 4.496, 861, 3.6, 862,
          2.252, 863, 3.6, 864, 2.252, 865, 3.436, 866, 3.148, 867, 2.719, 868,
          3.6, 869, 4.583, 870, 2.252, 871, 5.987, 872, 3.643, 873, 2.252, 874,
          2.252, 875, 4.445, 876, 2.252, 877, 3.6, 878, 2.252, 879, 3.148, 880,
          2.252, 881, 1.534, 882, 2.851, 883, 5.17, 884, 2.851, 885, 2.851, 886,
          2.851, 887, 2.851, 888, 2.628, 889, 2.851, 890, 3.56, 891, 3.283, 892,
          2.851, 893, 2.252, 894, 3.281, 895, 3.6, 896, 2.252, 897, 3.148, 898,
          2.252, 899, 3.148, 900, 3.932, 901, 4.496, 902, 2.252, 903, 2.252,
          904, 3.6, 905, 2.252, 906, 1.534, 907, 2.252, 908, 2.252, 909, 1.97,
          910, 2.252, 911, 3.6, 912, 2.252, 913, 4.307, 914, 2.252, 915, 1.784,
          916, 4.496, 917, 2.628, 918, 1.534, 919, 2.252, 920, 3.6, 921, 2.252,
          922, 4.767, 923, 4.767, 924, 4.767, 925, 1.645, 926, 2.451, 927,
          2.252, 928, 2.252, 929, 2.252, 930, 2.252, 931, 2.252, 932, 2.252,
          933, 2.252, 934, 2.252, 935, 2.252, 936, 2.451, 937, 3.6, 938, 2.252,
          939, 3.497, 940, 3.6, 941, 2.177, 942, 2.252, 943, 2.252, 944, 2.252,
          945, 2.252, 946, 1.97, 947, 2.252, 948, 2.851, 949, 1.97, 950, 1.97,
          951, 1.97, 952, 1.97, 953, 1.97, 954, 1.97, 955, 1.97, 956, 1.97, 957,
          1.97, 958, 1.784, 959, 1.97, 960, 2.581, 961, 1.784, 962, 1.645, 963,
          1.784, 964, 1.97, 965, 1.97, 966, 1.97, 967, 1.97, 968, 1.97, 969,
          2.252,
        ],
      ],
      ["title/interfaces/Friday.html", [0, 0.547, 678, 1.992]],
      [
        "body/interfaces/Friday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.629, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      [
        "title/interceptors/GlobalHttpInterceptorService.html",
        [123, 3.291, 970, 3.291],
      ],
      [
        "body/interceptors/GlobalHttpInterceptorService.html",
        [
          3, 0.156, 4, 0.14, 5, 0.125, 8, 0.255, 9, 0.972, 11, 0.643, 17, 0.514,
          18, 0.012, 20, 0.156, 21, 0.009, 22, 0.009, 44, 1.184, 49, 0.923, 50,
          3.958, 51, 3.946, 53, 1.187, 55, 1.387, 56, 0.875, 75, 0.865, 76,
          2.535, 90, 0.712, 91, 1.262, 92, 0.611, 94, 1.788, 98, 1.62, 103,
          1.428, 113, 0.634, 115, 1.833, 125, 4.371, 131, 6.197, 136, 6.539,
          137, 4.067, 138, 6.539, 140, 5.081, 142, 4.371, 144, 4.371, 145,
          5.611, 146, 2.131, 194, 2.869, 195, 4.369, 334, 2.841, 389, 3.403,
          393, 3.958, 404, 2.869, 411, 2.301, 891, 4.685, 960, 2.869, 962,
          4.685, 970, 5.081, 971, 4.371, 972, 4.997, 973, 4.997, 974, 4.997,
          975, 4.371, 976, 4.997, 977, 4.997, 978, 4.997, 979, 4.997, 980,
          4.997, 981, 4.371, 982, 4.997, 983, 4.997, 984, 4.997, 985, 4.997,
          986, 4.997, 987, 4.997, 988, 4.997, 989, 4.997, 990, 4.371,
        ],
      ],
      ["title/components/HomeComponent.html", [62, 0.547, 214, 1.305]],
      [
        "body/components/HomeComponent.html",
        [
          3, 0.143, 4, 0.129, 5, 0.115, 8, 0.234, 18, 0.012, 20, 0.143, 21,
          0.008, 22, 0.008, 44, 1.121, 49, 1.256, 53, 1.017, 56, 0.828, 62,
          0.895, 70, 1.59, 75, 0.795, 90, 0.559, 92, 0.561, 103, 1.735, 113,
          0.583, 165, 1.538, 166, 2.102, 167, 1.643, 168, 1.59, 169, 1.643, 171,
          2.434, 172, 1.643, 173, 2.972, 174, 2.697, 175, 2.173, 177, 2.173,
          180, 2.59, 185, 1.681, 199, 1.643, 200, 2.173, 201, 2.173, 202, 1.643,
          203, 2.59, 204, 1.643, 205, 1.643, 206, 1.442, 207, 1.643, 208, 1.397,
          209, 1.643, 210, 1.442, 211, 1.643, 212, 1.442, 213, 1.643, 214,
          2.273, 215, 1.643, 216, 1.397, 217, 1.643, 218, 1.442, 219, 1.159,
          220, 1.643, 221, 1.442, 222, 1.643, 223, 1.442, 224, 1.643, 225,
          1.442, 226, 1.442, 227, 1.643, 228, 1.442, 229, 1.643, 230, 1.442,
          231, 1.643, 232, 1.442, 233, 1.195, 234, 1.643, 235, 1.442, 236,
          1.643, 237, 1.442, 238, 1.643, 239, 1.442, 240, 1.643, 241, 1.442,
          242, 1.643, 243, 1.442, 244, 1.643, 245, 1.442, 246, 1.59, 247, 1.643,
          248, 1.643, 339, 2.939, 398, 3.127, 399, 3.637, 562, 1.681, 991,
          4.017, 992, 6.072, 993, 6.803, 994, 6.072, 995, 4.593, 996, 4.593,
          997, 3.354, 998, 5.311, 999, 6.072, 1000, 6.072, 1001, 6.072, 1002,
          6.072, 1003, 3.672, 1004, 6.072, 1005, 6.072,
        ],
      ],
      ["title/modules/HomeModule.html", [270, 2.17, 1006, 3.034]],
      [
        "body/modules/HomeModule.html",
        [
          3, 0.164, 4, 0.148, 5, 0.131, 18, 0.012, 20, 0.164, 21, 0.009, 22,
          0.009, 43, 4.168, 62, 0.693, 81, 2.75, 90, 0.775, 92, 0.644, 94,
          1.884, 113, 0.668, 157, 1.708, 214, 2.669, 272, 2.425, 273, 3.054,
          276, 3.315, 277, 2.632, 278, 2.332, 280, 3.626, 286, 3.463, 287,
          3.626, 288, 2.75, 289, 4.245, 290, 2.332, 292, 4.011, 293, 3.185, 294,
          4.245, 295, 3.37, 305, 4.517, 306, 3.586, 307, 2.879, 309, 2.75, 310,
          3.185, 639, 4.844, 640, 5.253, 641, 4.171, 642, 4.844, 643, 3.846,
          1006, 5.946, 1007, 4.606, 1008, 4.606, 1009, 4.606, 1010, 5.266, 1011,
          5.801, 1012, 4.606, 1013, 5.266,
        ],
      ],
      ["title/interfaces/IngreType.html", [0, 0.547, 1014, 2.272]],
      [
        "body/interfaces/IngreType.html",
        [
          0, 0.749, 2, 1.677, 3, 0.178, 4, 0.16, 5, 0.142, 8, 0.29, 9, 1.054,
          11, 0.857, 16, 1.764, 17, 0.593, 18, 0.012, 19, 2.216, 20, 0.178, 21,
          0.01, 22, 0.01, 28, 2.803, 37, 3.22, 56, 1.068, 351, 3.469, 1014,
          3.804, 1015, 3.64, 1016, 4.505, 1017, 7.833, 1018, 7.833, 1019, 6.474,
        ],
      ],
      ["title/interfaces/Ingredient.html", [0, 0.547, 219, 1.048]],
      [
        "body/interfaces/Ingredient.html",
        [
          0, 0.765, 2, 1.715, 3, 0.182, 4, 0.163, 5, 0.145, 8, 0.297, 9, 1.068,
          11, 0.841, 16, 1.59, 17, 0.572, 18, 0.012, 19, 2.238, 20, 0.182, 21,
          0.01, 22, 0.01, 28, 2.824, 56, 1.076, 85, 3.339, 90, 0.535, 219,
          1.915, 347, 2.716, 1014, 4.315, 1020, 5.087, 1021, 6.903, 1022, 5.374,
          1023, 3.518, 1024, 3.339,
        ],
      ],
      ["title/components/IngredientComponent.html", [62, 0.547, 216, 1.264]],
      [
        "body/components/IngredientComponent.html",
        [
          3, 0.049, 4, 0.044, 5, 0.039, 8, 0.081, 9, 0.407, 11, 0.415, 17,
          0.527, 18, 0.012, 19, 1.219, 20, 0.049, 21, 0.004, 22, 0.004, 28,
          1.254, 44, 0.496, 47, 1.633, 49, 0.496, 51, 2.576, 53, 1.247, 55,
          0.894, 56, 0.733, 62, 0.461, 66, 2.646, 70, 0.547, 75, 1.057, 86,
          1.012, 90, 0.521, 92, 0.193, 94, 0.566, 103, 0.768, 107, 1.154, 112,
          0.566, 113, 0.201, 137, 2.012, 165, 0.53, 166, 0.93, 167, 0.566, 168,
          1.213, 169, 0.566, 171, 1.254, 172, 0.566, 173, 2.558, 174, 2.321,
          175, 0.962, 177, 0.962, 179, 1.83, 180, 1.479, 185, 2.029, 186, 1.101,
          187, 1.341, 190, 0.825, 192, 1.976, 194, 1.543, 199, 0.566, 200,
          0.962, 201, 0.962, 202, 0.566, 203, 1.803, 204, 0.566, 205, 0.566,
          206, 0.496, 207, 0.566, 208, 0.481, 209, 0.566, 210, 0.496, 211,
          0.566, 212, 0.496, 213, 0.566, 214, 0.496, 215, 0.566, 216, 1.258,
          217, 0.566, 218, 0.496, 219, 1.937, 220, 0.566, 221, 0.496, 222,
          0.566, 223, 0.496, 224, 0.566, 225, 0.496, 226, 0.496, 227, 0.566,
          228, 0.496, 229, 0.566, 230, 0.496, 231, 0.566, 232, 0.496, 233,
          0.411, 234, 0.566, 235, 0.496, 236, 0.566, 237, 0.496, 238, 0.566,
          239, 0.496, 240, 0.566, 241, 0.496, 242, 0.566, 243, 0.496, 244,
          0.566, 245, 0.496, 246, 0.547, 247, 0.566, 248, 0.566, 290, 0.7, 315,
          1.469, 347, 2.024, 350, 1.012, 411, 2.812, 417, 0.627, 451, 1.543,
          483, 1.146, 495, 2.38, 505, 1.962, 540, 3.236, 562, 0.438, 581, 2.533,
          582, 2.316, 583, 2.533, 586, 3.773, 594, 2.646, 597, 2.755, 611,
          1.012, 618, 0.907, 619, 0.907, 620, 3.047, 621, 0.956, 622, 2.948,
          623, 1.543, 624, 1.625, 625, 1.543, 626, 1.012, 627, 2.243, 629,
          3.506, 697, 4.283, 698, 2.965, 700, 2.128, 701, 2.373, 702, 3.431,
          704, 3.093, 720, 2.243, 721, 3.225, 736, 2.387, 788, 1.962, 789,
          1.154, 791, 3.775, 792, 2.387, 795, 3.568, 797, 3.047, 802, 3.99, 803,
          3.066, 894, 0.825, 917, 1.154, 960, 2.012, 963, 2.128, 1003, 3.25,
          1014, 2.533, 1015, 1.012, 1021, 4.407, 1022, 1.076, 1023, 0.956, 1024,
          3.085, 1025, 4.535, 1026, 1.383, 1027, 4.017, 1028, 3.505, 1029, 2.56,
          1030, 2.56, 1031, 2.776, 1032, 3.679, 1033, 2.688, 1034, 2.56, 1035,
          3.505, 1036, 3.616, 1037, 3.505, 1038, 3.505, 1039, 2.56, 1040, 3.066,
          1041, 2.688, 1042, 3.274, 1043, 3.616, 1044, 3.019, 1045, 2.688, 1046,
          3.616, 1047, 4.135, 1048, 3.274, 1049, 2.128, 1050, 1.581, 1051,
          3.224, 1052, 3.66, 1053, 2.56, 1054, 3.019, 1055, 2.688, 1056, 2.688,
          1057, 1.581, 1058, 1.581, 1059, 1.581, 1060, 1.581, 1061, 2.688, 1062,
          1.581, 1063, 1.581, 1064, 1.581, 1065, 1.581, 1066, 1.581, 1067,
          2.688, 1068, 1.581, 1069, 1.581, 1070, 1.581, 1071, 1.581, 1072,
          1.581, 1073, 1.581, 1074, 1.581, 1075, 1.581, 1076, 1.581, 1077,
          1.581, 1078, 1.581, 1079, 1.581, 1080, 1.252, 1081, 2.688, 1082,
          1.076, 1083, 1.252, 1084, 1.154, 1085, 1.076, 1086, 1.383, 1087,
          1.383, 1088, 4.135, 1089, 1.581, 1090, 2.56, 1091, 1.383, 1092, 3.669,
          1093, 1.383, 1094, 1.383, 1095, 1.154, 1096, 1.154, 1097, 1.581, 1098,
          1.252, 1099, 1.581, 1100, 1.581, 1101, 4.634, 1102, 2.35, 1103, 2.688,
          1104, 2.688, 1105, 1.581, 1106, 1.581, 1107, 1.383, 1108, 2.688, 1109,
          4.634, 1110, 1.581, 1111, 3.274, 1112, 1.383, 1113, 2.688, 1114,
          1.581, 1115, 1.962, 1116, 3.431, 1117, 3.431, 1118, 2.56, 1119, 3.431,
          1120, 2.56, 1121, 3.431, 1122, 1.252, 1123, 1.252, 1124, 3.066, 1125,
          2.56, 1126, 2.776, 1127, 2.646, 1128, 2.5, 1129, 1.383, 1130, 1.581,
          1131, 1.581, 1132, 1.383, 1133, 1.581, 1134, 2.387, 1135, 4.135, 1136,
          1.154, 1137, 1.252, 1138, 1.076, 1139, 1.252, 1140, 1.252, 1141,
          1.154, 1142, 2.387, 1143, 1.252, 1144, 1.154, 1145, 1.962, 1146,
          1.154, 1147, 1.154, 1148, 1.252, 1149, 1.962, 1150, 1.581, 1151,
          3.505, 1152, 2.243, 1153, 1.252, 1154, 2.688, 1155, 2.35, 1156, 1.581,
          1157, 1.581, 1158, 3.431, 1159, 2.688, 1160, 2.688, 1161, 2.688, 1162,
          2.128, 1163, 2.35, 1164, 2.128, 1165, 2.128, 1166, 2.688, 1167, 2.128,
          1168, 2.128, 1169, 2.35, 1170, 2.35, 1171, 1.581, 1172, 1.383, 1173,
          3.274, 1174, 1.581, 1175, 1.581, 1176, 2.35, 1177, 2.688, 1178, 2.688,
          1179, 2.35, 1180, 2.35, 1181, 2.688, 1182, 2.688, 1183, 2.688, 1184,
          4.135, 1185, 2.688, 1186, 2.688, 1187, 2.688, 1188, 2.688, 1189,
          3.019, 1190, 1.962, 1191, 2.35, 1192, 2.688, 1193, 2.688, 1194, 2.688,
          1195, 2.688, 1196, 3.616, 1197, 2.688, 1198, 1.581, 1199, 1.581, 1200,
          1.581, 1201, 1.383, 1202, 3.066, 1203, 3.066, 1204, 1.962, 1205,
          1.383, 1206, 1.383, 1207, 1.252, 1208, 1.383, 1209, 1.383, 1210,
          1.383, 1211, 4.052, 1212, 2.128, 1213, 1.252, 1214, 1.383, 1215,
          5.501, 1216, 3.066, 1217, 3.019, 1218, 1.383, 1219, 2.35, 1220, 4.407,
          1221, 2.35, 1222, 3.066, 1223, 1.383, 1224, 1.154, 1225, 1.383, 1226,
          1.252, 1227, 1.383, 1228, 1.383, 1229, 3.616, 1230, 1.154, 1231,
          1.154, 1232, 1.154, 1233, 1.383, 1234, 1.383, 1235, 1.252, 1236,
          1.252, 1237, 1.383, 1238, 1.076, 1239, 1.383, 1240, 1.383, 1241,
          3.616, 1242, 1.252, 1243, 1.154, 1244, 1.383, 1245, 2.688, 1246, 2.35,
        ],
      ],
      ["title/injectables/IngredientService.html", [91, 0.817, 1051, 2.659]],
      [
        "body/injectables/IngredientService.html",
        [
          3, 0.118, 4, 0.106, 5, 0.094, 8, 0.193, 11, 0.705, 17, 0.51, 18,
          0.012, 19, 2.15, 20, 0.118, 21, 0.007, 22, 0.007, 28, 2.387, 37,
          2.743, 44, 0.981, 49, 0.698, 53, 1.221, 55, 1.52, 56, 0.959, 75,
          1.363, 76, 2.85, 85, 4.036, 90, 0.671, 91, 1.046, 92, 0.462, 97,
          1.889, 98, 1.225, 111, 1.448, 112, 1.352, 113, 0.479, 114, 1.674, 115,
          2.008, 121, 3.648, 146, 1.612, 148, 1.811, 149, 1.973, 219, 2.108,
          233, 1.383, 258, 1.74, 316, 1.499, 334, 3.635, 336, 2.066, 337, 3.648,
          341, 2.906, 417, 2.647, 445, 3.844, 482, 4.788, 483, 2.845, 562,
          1.046, 628, 3.402, 849, 3.882, 865, 2.906, 867, 3.719, 869, 4.966,
          872, 3.514, 875, 4.187, 894, 1.973, 906, 2.573, 925, 2.76, 926, 2.573,
          936, 2.573, 939, 4.187, 941, 3.719, 946, 3.305, 1024, 3.051, 1049,
          4.21, 1051, 3.402, 1082, 2.573, 1247, 3.305, 1248, 5.316, 1249, 5.316,
          1250, 6.672, 1251, 5.316, 1252, 3.779, 1253, 5.316, 1254, 3.779, 1255,
          5.316, 1256, 3.779, 1257, 3.779, 1258, 5.316, 1259, 3.779, 1260,
          5.378, 1261, 6.149, 1262, 5.378, 1263, 5.316, 1264, 3.779, 1265,
          5.316, 1266, 3.779, 1267, 6.149, 1268, 3.779, 1269, 3.779, 1270,
          3.779, 1271, 2.76, 1272, 3.779,
        ],
      ],
      ["title/interfaces/IngredientState.html", [0, 0.547, 1273, 3.034]],
      [
        "body/interfaces/IngredientState.html",
        [
          0, 0.744, 2, 1.667, 3, 0.176, 4, 0.159, 5, 0.141, 8, 0.288, 9, 1.05,
          11, 0.695, 17, 0.41, 18, 0.012, 20, 0.244, 21, 0.01, 22, 0.01, 59,
          3.746, 90, 0.69, 96, 2.603, 115, 1.98, 157, 2.431, 219, 2.155, 263,
          4.436, 1082, 3.85, 1273, 5.475, 1274, 4.478, 1275, 5.063, 1276, 4.945,
          1277, 5.655, 1278, 4.478, 1279, 4.721, 1280, 4.129, 1281, 4.478, 1282,
          4.945, 1283, 6.063, 1284, 4.945,
        ],
      ],
      [
        "title/components/IngredientTypeComponent.html",
        [62, 0.547, 218, 1.305],
      ],
      [
        "body/components/IngredientTypeComponent.html",
        [
          3, 0.072, 4, 0.065, 5, 0.058, 8, 0.118, 9, 0.557, 11, 0.459, 17, 0.56,
          18, 0.012, 19, 1.084, 20, 0.072, 21, 0.005, 22, 0.005, 37, 2.339, 44,
          0.679, 47, 1.759, 49, 0.679, 53, 1.272, 55, 0.989, 56, 0.826, 62,
          0.602, 66, 2.353, 70, 0.8, 75, 1.175, 90, 0.524, 92, 0.283, 103, 1.05,
          113, 0.293, 137, 1.328, 165, 0.775, 166, 1.272, 167, 0.828, 168,
          1.584, 169, 0.828, 171, 1.637, 172, 0.828, 173, 2.742, 174, 2.488,
          175, 1.315, 177, 1.315, 180, 1.865, 185, 2.155, 186, 1.155, 187,
          1.192, 190, 1.208, 192, 1.951, 199, 0.828, 200, 1.315, 201, 1.315,
          202, 0.828, 203, 2.036, 204, 0.828, 205, 0.828, 206, 0.726, 207,
          0.828, 208, 0.704, 209, 0.828, 210, 0.726, 211, 0.828, 212, 0.726,
          213, 0.828, 214, 0.726, 215, 0.828, 216, 0.704, 217, 0.828, 218,
          1.637, 219, 1.713, 220, 0.828, 221, 0.726, 222, 0.828, 223, 0.726,
          224, 0.828, 225, 0.726, 226, 0.726, 227, 0.828, 228, 0.726, 229,
          0.828, 230, 0.726, 231, 0.828, 232, 0.726, 233, 0.602, 234, 0.828,
          235, 0.726, 236, 0.828, 237, 0.726, 238, 0.828, 239, 0.726, 240,
          0.828, 241, 0.726, 242, 0.828, 243, 0.726, 244, 0.828, 245, 0.726,
          246, 0.8, 247, 0.828, 248, 0.828, 290, 1.024, 315, 2.01, 347, 1.865,
          411, 2.4, 483, 1.568, 495, 2.519, 505, 1.689, 540, 2.924, 562, 0.64,
          581, 2.502, 582, 2.287, 583, 2.502, 586, 2.287, 622, 2.287, 704,
          2.502, 720, 2.928, 721, 3.712, 736, 3.116, 751, 1.689, 791, 3.876,
          795, 2.767, 894, 1.208, 960, 1.328, 1003, 3.986, 1014, 4.282, 1015,
          1.48, 1022, 3.116, 1023, 1.399, 1025, 4.634, 1027, 4.624, 1029, 3.341,
          1030, 3.341, 1031, 3.624, 1032, 3.341, 1034, 3.341, 1039, 3.341, 1040,
          4.975, 1042, 4.129, 1043, 4.559, 1044, 3.807, 1048, 4.129, 1052,
          4.125, 1053, 3.341, 1054, 3.807, 1084, 1.689, 1085, 5.26, 1086, 2.023,
          1087, 2.023, 1090, 3.807, 1093, 2.023, 1094, 4.975, 1095, 1.689, 1096,
          1.689, 1102, 2.023, 1111, 4.129, 1115, 2.685, 1116, 3.55, 1117, 3.55,
          1118, 3.341, 1119, 3.55, 1120, 3.341, 1121, 3.55, 1124, 2.023, 1125,
          3.341, 1126, 3.624, 1127, 1.48, 1128, 3.153, 1134, 3.116, 1136, 1.689,
          1137, 1.832, 1138, 1.575, 1139, 1.832, 1140, 1.832, 1141, 1.689, 1142,
          1.575, 1144, 1.689, 1145, 2.685, 1146, 1.689, 1147, 1.689, 1148,
          1.832, 1149, 2.685, 1152, 2.353, 1158, 3.55, 1164, 2.911, 1165, 2.911,
          1167, 3.624, 1168, 2.911, 1190, 3.341, 1246, 2.023, 1285, 6.702, 1286,
          2.023, 1287, 4.576, 1288, 4.002, 1289, 3.677, 1290, 4.576, 1291,
          3.677, 1292, 5.213, 1293, 5.213, 1294, 3.215, 1295, 2.313, 1296,
          3.677, 1297, 3.677, 1298, 2.313, 1299, 2.313, 1300, 2.313, 1301,
          2.313, 1302, 2.313, 1303, 2.313, 1304, 2.313, 1305, 2.313, 1306,
          3.677, 1307, 2.313, 1308, 2.313, 1309, 2.313, 1310, 2.313, 1311,
          2.313, 1312, 2.313, 1313, 2.313, 1314, 2.313, 1315, 5.213, 1316,
          4.576, 1317, 2.313, 1318, 4.559, 1319, 2.313, 1320, 2.313, 1321,
          4.576, 1322, 2.313, 1323, 2.911, 1324, 2.023, 1325, 2.313, 1326,
          2.023, 1327, 2.023, 1328, 5.213, 1329, 2.023, 1330, 1.832, 1331,
          2.313, 1332, 2.023, 1333, 3.677, 1334, 3.677, 1335, 3.215,
        ],
      ],
      ["title/injectables/IngredientTypeService.html", [91, 0.817, 1052, 2.83]],
      [
        "body/injectables/IngredientTypeService.html",
        [
          3, 0.101, 4, 0.091, 5, 0.081, 8, 0.166, 11, 0.695, 16, 1.184, 17,
          0.582, 18, 0.012, 19, 1.666, 20, 0.101, 21, 0.007, 22, 0.007, 28,
          1.707, 37, 1.337, 44, 0.881, 47, 1.919, 49, 0.6, 53, 1.199, 55, 1.498,
          56, 0.977, 75, 1.337, 76, 2.764, 85, 3.574, 90, 0.638, 91, 0.939, 92,
          0.397, 97, 1.625, 98, 1.054, 104, 2.885, 111, 1.245, 112, 1.163, 113,
          0.605, 114, 1.44, 115, 1.894, 121, 3.404, 146, 1.386, 148, 1.558, 149,
          1.697, 174, 1.498, 185, 0.9, 186, 1.021, 219, 1.673, 226, 1.021, 258,
          1.497, 316, 1.29, 334, 3.461, 336, 1.777, 337, 3.404, 341, 3.404, 346,
          2.08, 389, 2.214, 393, 2.575, 411, 3.052, 417, 1.892, 445, 3.404, 451,
          2.738, 452, 2.843, 482, 3.248, 483, 2.41, 562, 0.9, 856, 3.778, 857,
          3.778, 865, 2.608, 867, 3.418, 869, 3.848, 872, 2.824, 875, 3.248,
          882, 3.778, 883, 4.93, 884, 3.778, 885, 3.778, 886, 3.778, 887, 3.778,
          888, 3.484, 889, 3.778, 890, 2.575, 891, 4.546, 892, 3.778, 894,
          2.951, 906, 2.214, 913, 2.08, 915, 2.575, 918, 2.214, 922, 2.374, 923,
          2.374, 924, 2.374, 939, 2.214, 941, 2.885, 962, 2.374, 990, 2.843,
          1014, 3.404, 1022, 3.248, 1023, 1.966, 1024, 3.806, 1052, 3.248, 1084,
          5.364, 1085, 5.002, 1127, 2.08, 1138, 3.248, 1152, 2.08, 1260, 4.942,
          1262, 4.942, 1271, 2.374, 1294, 4.172, 1336, 2.843, 1337, 4.771, 1338,
          6.226, 1339, 4.771, 1340, 3.251, 1341, 4.771, 1342, 3.251, 1343,
          3.251, 1344, 4.771, 1345, 4.771, 1346, 4.771, 1347, 3.251, 1348,
          3.251, 1349, 4.771, 1350, 3.251, 1351, 5.651, 1352, 4.771, 1353,
          4.771, 1354, 4.771, 1355, 3.251, 1356, 3.251, 1357, 2.843, 1358,
          4.771, 1359, 3.251, 1360, 3.251, 1361, 2.843, 1362, 3.251, 1363,
          3.251, 1364, 3.251, 1365, 4.771, 1366, 3.251, 1367, 3.251, 1368,
          3.251, 1369, 3.251, 1370, 3.251, 1371, 2.575, 1372, 4.475, 1373,
          3.251, 1374, 4.771, 1375, 4.771, 1376, 4.771, 1377, 3.251, 1378,
          3.251, 1379, 3.251, 1380, 3.251, 1381, 4.475, 1382, 3.251, 1383,
          3.251, 1384, 3.251, 1385, 2.843, 1386, 3.251, 1387, 3.251, 1388,
          3.251, 1389, 3.251, 1390, 3.251, 1391, 3.251, 1392, 3.251,
        ],
      ],
      ["title/guards/IsAuthenticatedGuard.html", [33, 2.659, 1393, 3.291]],
      [
        "body/guards/IsAuthenticatedGuard.html",
        [
          3, 0.163, 4, 0.146, 5, 0.13, 8, 0.266, 11, 0.661, 17, 0.478, 18,
          0.012, 20, 0.163, 21, 0.009, 22, 0.009, 35, 3.553, 40, 4.815, 44,
          1.217, 45, 5.721, 47, 1.445, 49, 0.963, 51, 3.895, 53, 1.104, 55,
          1.425, 56, 0.899, 57, 3.81, 58, 5.547, 59, 3.466, 60, 5.547, 75,
          0.903, 76, 2.587, 90, 0.699, 91, 1.297, 92, 0.638, 93, 5.28, 94,
          1.867, 98, 1.692, 103, 1.491, 111, 1.999, 112, 1.867, 113, 0.662, 114,
          2.311, 115, 1.491, 132, 3.81, 133, 3.835, 141, 4.815, 157, 1.692, 331,
          5.726, 347, 2.587, 1393, 5.222, 1394, 5.726, 1395, 6.323, 1396, 4.563,
          1397, 5.218, 1398, 5.218, 1399, 4.563, 1400, 4.563, 1401, 5.218,
        ],
      ],
      ["title/guards/IsUnauthenticatedGuard.html", [33, 2.659, 1402, 3.291]],
      [
        "body/guards/IsUnauthenticatedGuard.html",
        [
          3, 0.163, 4, 0.146, 5, 0.13, 8, 0.266, 11, 0.661, 17, 0.478, 18,
          0.012, 20, 0.163, 21, 0.009, 22, 0.009, 35, 3.553, 40, 4.815, 44,
          1.217, 45, 5.721, 47, 1.445, 49, 0.963, 51, 3.895, 53, 1.104, 55,
          1.425, 56, 0.899, 57, 3.81, 58, 5.547, 59, 3.466, 60, 5.547, 75,
          0.903, 76, 2.587, 90, 0.699, 91, 1.297, 92, 0.638, 93, 5.28, 94,
          1.867, 98, 1.692, 103, 1.491, 111, 1.999, 112, 1.867, 113, 0.662, 114,
          2.311, 115, 1.491, 132, 3.81, 133, 3.835, 141, 4.815, 157, 1.692, 192,
          2.225, 331, 5.222, 347, 2.587, 406, 4.563, 1394, 5.726, 1399, 4.563,
          1400, 4.563, 1402, 5.222, 1403, 6.323, 1404, 4.563, 1405, 5.218, 1406,
          5.218,
        ],
      ],
      ["title/modules/LayoutsModule.html", [270, 2.17, 1407, 2.83]],
      [
        "body/modules/LayoutsModule.html",
        [
          3, 0.174, 4, 0.156, 5, 0.139, 18, 0.012, 20, 0.174, 21, 0.01, 22,
          0.01, 44, 1.027, 53, 0.932, 62, 0.732, 75, 0.963, 81, 2.906, 90,
          0.715, 92, 0.68, 94, 1.992, 113, 0.706, 115, 1.59, 208, 2.089, 272,
          2.563, 273, 3.161, 276, 3.431, 277, 2.782, 278, 2.465, 281, 5.437,
          282, 6.512, 284, 6.512, 286, 3.887, 307, 3.043, 309, 3.585, 639,
          5.014, 660, 5.805, 1407, 5.668, 1408, 4.868, 1409, 5.566, 1410, 4.868,
          1411, 5.566, 1412, 5.566, 1413, 5.566, 1414, 5.566, 1415, 5.566,
        ],
      ],
      ["title/components/LoadingComponent.html", [62, 0.547, 221, 1.305]],
      [
        "body/components/LoadingComponent.html",
        [
          3, 0.106, 4, 0.096, 5, 0.085, 8, 0.252, 9, 0.748, 11, 0.342, 17,
          0.462, 18, 0.012, 20, 0.106, 21, 0.007, 22, 0.007, 44, 0.912, 47,
          0.945, 49, 0.63, 51, 3.484, 53, 1.132, 55, 0.737, 56, 0.792, 62,
          0.764, 70, 1.181, 75, 0.59, 90, 0.535, 92, 0.417, 94, 1.221, 103,
          1.411, 113, 0.433, 165, 1.143, 166, 1.71, 167, 1.221, 168, 1.181, 169,
          1.221, 171, 2.079, 172, 1.221, 173, 2.887, 174, 2.619, 175, 1.768,
          177, 1.768, 180, 2.279, 185, 1.368, 186, 1.552, 187, 1.602, 189,
          4.321, 193, 2.983, 194, 4.046, 195, 4.799, 199, 1.221, 200, 1.768,
          201, 1.768, 202, 1.221, 203, 2.279, 204, 1.221, 205, 1.221, 206,
          1.071, 207, 1.221, 208, 1.038, 209, 1.221, 210, 1.071, 211, 1.221,
          212, 1.071, 213, 1.221, 214, 1.071, 215, 1.221, 216, 1.038, 217,
          1.221, 218, 1.071, 219, 0.861, 220, 1.221, 221, 2, 222, 1.221, 223,
          1.071, 224, 1.221, 225, 1.071, 226, 1.071, 227, 1.221, 228, 1.071,
          229, 1.221, 230, 1.071, 231, 1.221, 232, 1.071, 233, 0.888, 234,
          1.221, 235, 1.071, 236, 1.221, 237, 1.071, 238, 1.221, 239, 1.071,
          240, 1.221, 241, 1.071, 242, 1.221, 243, 1.071, 244, 1.221, 245,
          1.071, 246, 1.181, 247, 1.221, 248, 1.221, 278, 2.188, 334, 2.188,
          347, 1.768, 495, 2.82, 540, 3.493, 562, 0.945, 581, 1.865, 582, 1.705,
          583, 1.865, 584, 5.353, 585, 6.358, 586, 1.705, 587, 5.912, 588,
          2.983, 589, 2.701, 590, 3.913, 591, 2.983, 592, 4.321, 593, 3.913,
          594, 3.162, 595, 2.983, 596, 3.913, 597, 2.701, 598, 6.102, 599,
          2.983, 600, 2.983, 601, 2.983, 602, 2.983, 603, 2.983, 604, 2.701,
          605, 2.701, 606, 2.701, 607, 4.601, 608, 1.958, 609, 4.242, 610,
          4.601, 611, 2.183, 612, 4.321, 613, 2.983, 614, 2.983, 615, 2.491,
          616, 2.491, 617, 2.701, 618, 1.958, 619, 1.958, 620, 2.063, 621,
          2.063, 622, 1.705, 623, 1.958, 624, 2.063, 625, 1.958, 626, 3.162,
          627, 2.183, 628, 2.183, 629, 1.958, 630, 2.701, 632, 2.983, 633,
          2.983, 727, 3.162, 728, 4.355, 743, 2.491, 975, 2.983, 1416, 2.983,
          1417, 5.809, 1418, 4.941, 1419, 4.321, 1420, 5.809, 1421, 4.242, 1422,
          3.411, 1423, 4.941, 1424, 3.411, 1425, 3.411, 1426, 3.411, 1427,
          4.601, 1428, 4.941, 1429, 4.941, 1430, 4.941, 1431, 4.941, 1432,
          4.941, 1433, 3.411, 1434, 3.411, 1435, 3.411, 1436, 3.411,
        ],
      ],
      ["title/injectables/LoadingService.html", [91, 0.817, 728, 2.385]],
      [
        "body/injectables/LoadingService.html",
        [
          3, 0.157, 4, 0.141, 5, 0.126, 8, 0.257, 9, 0.977, 11, 0.506, 17,
          0.516, 18, 0.012, 20, 0.157, 21, 0.009, 22, 0.009, 44, 1.191, 47,
          1.97, 49, 1.314, 53, 1.328, 55, 1.394, 56, 0.688, 75, 1.231, 76,
          2.922, 90, 0.594, 91, 1.269, 92, 0.616, 97, 3.225, 98, 1.635, 111,
          1.931, 112, 1.804, 113, 0.64, 115, 1.44, 185, 2.077, 186, 2.026, 187,
          2.092, 316, 2, 334, 3.652, 417, 2.559, 562, 1.396, 727, 4.553, 728,
          3.704, 740, 4.393, 881, 3.433, 1437, 4.409, 1438, 7.116, 1439, 7.501,
          1440, 7.501, 1441, 6.452, 1442, 6.452, 1443, 5.042, 1444, 5.042, 1445,
          6.452, 1446, 5.042, 1447, 6.452, 1448, 6.452, 1449, 5.643, 1450,
          5.042, 1451, 3.993, 1452, 4.711, 1453, 5.042, 1454, 5.042, 1455,
          5.042, 1456, 5.042, 1457, 5.042,
        ],
      ],
      ["title/injectables/LocalStorageService.html", [91, 0.817, 339, 2.659]],
      [
        "body/injectables/LocalStorageService.html",
        [
          3, 0.146, 4, 0.131, 5, 0.117, 8, 0.239, 11, 0.731, 16, 1.786, 17,
          0.529, 18, 0.012, 20, 0.146, 21, 0.009, 22, 0.009, 44, 1.136, 49,
          1.268, 53, 1.269, 55, 1.576, 56, 0.995, 75, 1.262, 90, 0.431, 91,
          1.21, 92, 0.572, 111, 1.794, 112, 1.676, 113, 0.594, 115, 2.084, 185,
          2.02, 186, 1.471, 187, 2.365, 192, 1.998, 316, 1.858, 339, 3.936, 343,
          5.678, 347, 2.201, 398, 5.294, 495, 2.074, 562, 1.297, 569, 4.667,
          900, 5.38, 997, 5.678, 1371, 3.709, 1372, 3.709, 1381, 3.709, 1458,
          4.096, 1459, 6.151, 1460, 4.684, 1461, 6.151, 1462, 4.684, 1463,
          7.294, 1464, 6.151, 1465, 4.684, 1466, 6.151, 1467, 4.684, 1468,
          6.151, 1469, 4.684, 1470, 7.294, 1471, 4.684, 1472, 4.684, 1473,
          4.684, 1474, 4.684, 1475, 4.684, 1476, 4.684, 1477, 4.684, 1478,
          4.684, 1479, 6.151, 1480, 4.684,
        ],
      ],
      ["title/components/LoginComponent.html", [62, 0.547, 223, 1.305]],
      [
        "body/components/LoginComponent.html",
        [
          3, 0.141, 4, 0.127, 5, 0.113, 8, 0.23, 11, 0.453, 17, 0.327, 18,
          0.012, 20, 0.141, 21, 0.008, 22, 0.008, 44, 1.108, 49, 0.833, 53,
          1.129, 55, 0.975, 56, 0.92, 62, 0.887, 70, 1.562, 75, 1.039, 90,
          0.621, 92, 0.552, 103, 1.714, 113, 0.572, 114, 1.998, 132, 3.295, 133,
          3.688, 150, 3.295, 165, 1.511, 166, 2.077, 167, 1.615, 168, 1.562,
          169, 1.615, 171, 2.413, 172, 1.615, 173, 2.968, 174, 2.692, 175,
          2.147, 177, 2.147, 180, 2.572, 185, 1.867, 199, 1.615, 200, 2.147,
          201, 2.147, 202, 1.615, 203, 2.572, 204, 1.615, 205, 1.615, 206,
          1.417, 207, 1.615, 208, 1.373, 209, 1.615, 210, 1.417, 211, 1.615,
          212, 1.417, 213, 1.615, 214, 1.417, 215, 1.615, 216, 1.373, 217,
          1.615, 218, 1.417, 219, 1.139, 220, 1.615, 221, 1.417, 222, 1.615,
          223, 2.257, 224, 1.615, 225, 1.417, 226, 1.417, 227, 1.615, 228,
          1.417, 229, 1.615, 230, 1.417, 231, 1.615, 232, 1.417, 233, 1.174,
          234, 1.615, 235, 1.417, 236, 1.615, 237, 1.417, 238, 1.615, 239,
          1.417, 240, 1.615, 241, 1.417, 242, 1.615, 243, 1.417, 244, 1.615,
          245, 1.417, 246, 1.562, 247, 1.615, 248, 1.615, 356, 4.383, 562,
          1.249, 606, 3.574, 629, 2.59, 701, 2.59, 797, 2.729, 798, 3.073, 1201,
          3.947, 1481, 3.947, 1482, 6.744, 1483, 6.002, 1484, 7.188, 1485,
          4.513, 1486, 4.513, 1487, 4.513, 1488, 4.513, 1489, 3.947, 1490,
          3.295,
        ],
      ],
      ["title/interfaces/Lunch.html", [0, 0.547, 682, 1.992]],
      [
        "body/interfaces/Lunch.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.719, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 3.933, 670, 2.584, 671, 4.079, 672, 4.079, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.106, 683, 4.234, 684, 2.584,
        ],
      ],
      ["title/injectables/MessagesService.html", [91, 0.817, 1491, 3.291]],
      [
        "body/injectables/MessagesService.html",
        [
          3, 0.17, 4, 0.153, 5, 0.136, 8, 0.278, 9, 1.027, 11, 0.547, 16, 1.546,
          17, 0.492, 18, 0.012, 20, 0.17, 21, 0.009, 22, 0.009, 44, 1.252, 47,
          2.044, 53, 1.236, 55, 1.18, 56, 0.745, 75, 0.945, 76, 2.641, 90,
          0.624, 91, 1.335, 92, 0.667, 98, 1.77, 111, 2.091, 112, 1.953, 113,
          0.692, 185, 1.512, 186, 2.13, 187, 2.2, 316, 2.165, 417, 2.691, 540,
          3.398, 958, 6.114, 1451, 5.845, 1491, 5.372, 1492, 4.774, 1493, 6.455,
          1494, 6.784, 1495, 6.784, 1496, 5.459, 1497, 6.784, 1498, 6.784, 1499,
          6.784, 1500, 6.784, 1501, 6.784, 1502, 5.459, 1503, 5.459, 1504,
          4.774, 1505, 5.459, 1506, 5.459,
        ],
      ],
      ["title/interfaces/Monday.html", [0, 0.547, 674, 1.992]],
      [
        "body/interfaces/Monday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.629, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/components/PageNotFoundComponent.html", [62, 0.547, 225, 1.305]],
      [
        "body/components/PageNotFoundComponent.html",
        [
          3, 0.111, 4, 0.1, 5, 0.089, 8, 0.182, 18, 0.012, 20, 0.111, 21, 0.007,
          22, 0.007, 44, 0.942, 49, 1.099, 53, 0.854, 56, 0.696, 62, 0.784, 70,
          1.234, 75, 0.617, 81, 1.862, 90, 0.328, 92, 0.436, 103, 1.457, 113,
          0.452, 165, 1.194, 166, 1.765, 167, 1.276, 168, 1.234, 169, 1.276,
          171, 2.131, 172, 1.276, 173, 2.901, 174, 2.632, 175, 1.825, 177,
          1.825, 180, 2.326, 185, 1.412, 199, 1.276, 200, 1.825, 201, 1.825,
          202, 1.276, 203, 2.326, 204, 1.276, 205, 1.276, 206, 1.12, 207, 1.276,
          208, 1.085, 209, 1.276, 210, 1.12, 211, 1.276, 212, 1.12, 213, 1.276,
          214, 1.12, 215, 1.276, 216, 1.085, 217, 1.276, 218, 1.12, 219, 0.9,
          220, 1.276, 221, 1.12, 222, 1.276, 223, 1.12, 224, 1.276, 225, 2.041,
          226, 2.366, 227, 1.276, 228, 1.12, 229, 1.276, 230, 1.12, 231, 1.276,
          232, 1.12, 233, 0.928, 234, 1.276, 235, 1.12, 236, 1.276, 237, 1.12,
          238, 1.276, 239, 1.12, 240, 1.276, 241, 1.12, 242, 1.276, 243, 1.12,
          244, 1.276, 245, 1.12, 246, 1.234, 247, 1.276, 248, 1.276, 350, 5.135,
          540, 3.294, 562, 1.412, 589, 5.834, 590, 4.039, 593, 5.834, 596,
          5.447, 597, 3.256, 598, 5.148, 604, 2.824, 607, 2.824, 609, 2.604,
          610, 4.716, 611, 2.282, 620, 3.931, 621, 2.156, 622, 1.782, 623,
          2.047, 624, 2.156, 625, 2.047, 626, 4.578, 627, 2.282, 628, 2.282,
          704, 1.949, 791, 2.282, 1030, 3.725, 1242, 2.824, 1507, 5.209, 1508,
          4.716, 1509, 3.118, 1510, 4.461, 1511, 5.956, 1512, 5.101, 1513,
          3.566, 1514, 3.566, 1515, 3.566, 1516, 5.101, 1517, 3.566, 1518,
          6.878, 1519, 7.155, 1520, 5.101, 1521, 3.566, 1522, 5.956, 1523,
          3.566, 1524, 5.101, 1525, 5.101, 1526, 5.101, 1527, 5.101, 1528,
          5.101, 1529, 3.566, 1530, 3.566, 1531, 3.566, 1532, 5.956, 1533,
          3.566, 1534, 6.878, 1535, 5.956, 1536, 3.566, 1537, 3.566, 1538,
          3.566, 1539, 3.566, 1540, 5.101, 1541, 3.118, 1542, 3.566, 1543,
          3.566, 1544, 3.566, 1545, 3.566, 1546, 3.566, 1547, 3.566, 1548,
          3.566, 1549, 4.461, 1550, 5.101, 1551, 3.566, 1552, 3.566,
        ],
      ],
      ["title/interfaces/Picture.html", [0, 0.547, 1553, 2.513]],
      [
        "body/interfaces/Picture.html",
        [
          0, 0.75, 2, 1.68, 3, 0.178, 4, 0.16, 5, 0.142, 8, 0.291, 9, 1.055, 11,
          0.857, 16, 1.808, 17, 0.593, 18, 0.012, 19, 2.218, 20, 0.178, 21,
          0.01, 22, 0.01, 56, 1.069, 698, 5.016, 1553, 4.213, 1554, 4.985, 1555,
          7.838, 1556, 7.838, 1557, 7.838, 1558, 6.855,
        ],
      ],
      ["title/components/PrincipalComponent.html", [62, 0.547, 228, 1.305]],
      [
        "body/components/PrincipalComponent.html",
        [
          3, 0.15, 4, 0.135, 5, 0.12, 8, 0.245, 18, 0.012, 20, 0.15, 21, 0.009,
          22, 0.009, 44, 1.153, 49, 1.282, 53, 1.046, 56, 0.852, 62, 0.914, 70,
          1.659, 75, 0.83, 90, 0.441, 92, 0.586, 103, 1.784, 113, 0.608, 165,
          1.606, 166, 2.162, 167, 1.716, 168, 1.659, 169, 1.716, 171, 2.486,
          172, 1.716, 173, 2.983, 174, 2.706, 175, 2.235, 177, 2.235, 180,
          2.634, 185, 1.729, 199, 1.716, 200, 2.235, 201, 2.235, 202, 1.716,
          203, 2.634, 204, 1.716, 205, 1.716, 206, 1.506, 207, 1.716, 208,
          1.459, 209, 1.716, 210, 1.506, 211, 1.716, 212, 1.506, 213, 1.716,
          214, 1.506, 215, 1.716, 216, 1.459, 217, 1.716, 218, 1.506, 219, 1.21,
          220, 1.716, 221, 1.506, 222, 1.716, 223, 1.506, 224, 1.716, 225,
          1.506, 226, 1.506, 227, 1.716, 228, 2.311, 229, 1.716, 230, 1.506,
          231, 1.716, 232, 1.506, 233, 1.248, 234, 1.716, 235, 1.506, 236,
          1.716, 237, 1.506, 238, 1.716, 239, 1.506, 240, 1.716, 241, 1.506,
          242, 1.716, 243, 1.506, 244, 1.716, 245, 1.506, 246, 1.659, 247,
          1.716, 248, 1.716, 562, 1.729, 1559, 4.193, 1560, 5.463, 1561, 6.947,
          1562, 6.246, 1563, 4.795, 1564, 4.795,
        ],
      ],
      ["title/modules/PrincipalModule.html", [270, 2.17, 1565, 3.034]],
      [
        "body/modules/PrincipalModule.html",
        [
          3, 0.163, 4, 0.146, 5, 0.13, 18, 0.012, 20, 0.163, 21, 0.009, 22,
          0.009, 90, 0.778, 92, 0.638, 96, 2.402, 113, 0.662, 190, 2.724, 225,
          2.513, 228, 2.513, 272, 2.402, 273, 3.036, 276, 3.296, 277, 2.608,
          278, 2.311, 280, 3.605, 285, 4.563, 286, 3.443, 287, 3.605, 288,
          2.724, 290, 2.311, 291, 4.22, 298, 2.853, 299, 4.563, 300, 4.563, 301,
          4.563, 302, 4.563, 303, 3.339, 309, 3.443, 311, 4.563, 312, 4.563,
          314, 4.563, 315, 2.853, 351, 2.311, 721, 3.605, 1407, 5.449, 1421,
          4.815, 1508, 4.132, 1560, 4.563, 1565, 6.104, 1566, 4.563, 1567,
          5.218, 1568, 4.563, 1569, 5.218, 1570, 5.218, 1571, 5.218, 1572,
          5.218, 1573, 5.218, 1574, 5.218,
        ],
      ],
      ["title/components/ProfileComponent.html", [62, 0.547, 230, 1.305]],
      [
        "body/components/ProfileComponent.html",
        [
          3, 0.079, 4, 0.071, 5, 0.064, 8, 0.28, 9, 0.601, 11, 0.731, 16, 1.021,
          17, 0.537, 18, 0.012, 19, 1.436, 20, 0.079, 21, 0.006, 22, 0.006, 44,
          0.732, 47, 1.824, 49, 0.732, 52, 3.154, 53, 1.24, 55, 1.053, 56,
          0.813, 62, 0.784, 70, 0.882, 75, 0.951, 76, 1.743, 84, 2.228, 90,
          0.644, 92, 0.311, 95, 1.541, 96, 1.173, 98, 0.826, 99, 1.393, 103,
          1.133, 108, 2.512, 113, 0.323, 115, 0.728, 157, 1.286, 165, 0.853,
          166, 1.373, 167, 0.912, 168, 1.686, 169, 0.912, 171, 1.743, 172,
          0.912, 173, 2.782, 174, 2.524, 175, 1.419, 177, 1.419, 180, 1.967,
          185, 1.65, 186, 0.8, 187, 1.286, 190, 1.33, 199, 0.912, 200, 1.419,
          201, 1.419, 202, 0.912, 203, 1.967, 204, 0.912, 205, 0.912, 206, 0.8,
          207, 0.912, 208, 0.775, 209, 0.912, 210, 0.8, 211, 0.912, 212, 0.8,
          213, 0.912, 214, 0.8, 215, 0.912, 216, 0.775, 217, 0.912, 218, 0.8,
          219, 0.643, 220, 0.912, 221, 0.8, 222, 0.912, 223, 0.8, 224, 0.912,
          225, 0.8, 226, 0.8, 227, 0.912, 228, 0.8, 229, 0.912, 230, 1.727, 231,
          0.912, 232, 0.8, 233, 0.663, 234, 0.912, 235, 0.8, 236, 0.912, 237,
          0.8, 238, 0.912, 239, 0.8, 240, 0.912, 241, 0.8, 242, 0.912, 243, 0.8,
          244, 0.912, 245, 0.8, 246, 0.882, 247, 0.912, 248, 0.912, 290, 1.128,
          315, 2.169, 347, 2.438, 351, 1.128, 383, 3.141, 411, 1.826, 451,
          1.462, 483, 2.078, 495, 2.435, 540, 2.906, 543, 2.701, 544, 2.701,
          545, 2.538, 546, 3.519, 552, 1.86, 557, 1.462, 558, 2.228, 559, 1.63,
          560, 1.735, 561, 2.017, 562, 0.705, 569, 2.538, 570, 2.017, 573,
          2.228, 575, 3.744, 578, 3.141, 581, 2.663, 582, 2.435, 583, 2.663,
          586, 2.435, 597, 1.393, 618, 2.796, 619, 2.796, 701, 3.912, 702,
          4.297, 720, 4.48, 721, 3.258, 736, 3.317, 795, 2.399, 814, 2.228, 872,
          1.273, 948, 2.017, 1003, 2.399, 1034, 2.897, 1044, 4.015, 1053, 3.557,
          1054, 4.015, 1080, 2.017, 1090, 1.86, 1095, 1.86, 1096, 1.86, 1098,
          4.355, 1115, 1.86, 1158, 2.701, 1170, 2.228, 1172, 2.228, 1326, 2.228,
          1371, 2.017, 1372, 4.355, 1381, 4.719, 1427, 3.141, 1504, 2.228, 1575,
          2.228, 1576, 4.809, 1577, 4.872, 1578, 4.872, 1579, 4.872, 1580,
          3.967, 1581, 4.872, 1582, 4.872, 1583, 4.872, 1584, 4.872, 1585,
          3.967, 1586, 3.967, 1587, 4.487, 1588, 3.967, 1589, 2.548, 1590,
          3.967, 1591, 3.469, 1592, 2.548, 1593, 3.967, 1594, 2.548, 1595,
          3.967, 1596, 2.548, 1597, 2.548, 1598, 2.548, 1599, 2.548, 1600,
          2.548, 1601, 2.548, 1602, 2.548, 1603, 2.548, 1604, 2.548, 1605,
          2.548, 1606, 2.548, 1607, 2.548, 1608, 2.548, 1609, 2.548, 1610,
          2.548, 1611, 2.548, 1612, 2.548, 1613, 2.548, 1614, 2.548, 1615,
          2.548, 1616, 2.548, 1617, 2.548, 1618, 2.548, 1619, 2.548, 1620,
          2.548, 1621, 2.548, 1622, 2.548, 1623, 2.548, 1624, 2.548, 1625,
          2.548, 1626, 2.548, 1627, 2.548, 1628, 2.548, 1629, 2.548, 1630, 1.86,
          1631, 2.548, 1632, 2.548, 1633, 4.872, 1634, 2.548, 1635, 2.548, 1636,
          2.548, 1637, 2.548, 1638, 2.548, 1639, 2.548, 1640, 2.548, 1641,
          2.548, 1642, 2.548, 1643, 2.548, 1644, 3.469, 1645, 3.469, 1646,
          3.469, 1647, 3.967, 1648, 3.469, 1649, 3.469, 1650, 3.469, 1651,
          2.548, 1652, 2.548, 1653, 1.86,
        ],
      ],
      ["title/modules/ProfileModule.html", [270, 2.17, 1654, 3.034]],
      [
        "body/modules/ProfileModule.html",
        [
          3, 0.145, 4, 0.131, 5, 0.116, 18, 0.012, 20, 0.145, 21, 0.009, 22,
          0.009, 43, 3.933, 62, 0.613, 81, 2.433, 90, 0.794, 92, 0.57, 94,
          1.668, 113, 0.591, 146, 1.988, 157, 1.511, 230, 2.486, 272, 2.146,
          273, 2.823, 276, 3.064, 277, 2.329, 278, 2.064, 280, 3.352, 286,
          3.201, 287, 3.352, 288, 2.433, 289, 3.923, 290, 2.064, 291, 3.923,
          292, 3.708, 293, 2.819, 294, 3.923, 295, 2.982, 305, 4.175, 306,
          3.174, 307, 2.548, 309, 2.433, 310, 2.819, 634, 3.352, 640, 4.856,
          641, 3.691, 642, 4.477, 643, 3.403, 648, 4.477, 649, 3.403, 667,
          4.175, 668, 3.174, 826, 4.477, 830, 4.856, 831, 3.691, 832, 4.477,
          833, 3.403, 834, 4.477, 835, 3.403, 836, 4.477, 837, 3.403, 840,
          3.403, 1011, 5.362, 1012, 4.076, 1654, 5.67, 1655, 4.076, 1656, 4.076,
          1657, 4.661, 1658, 4.856, 1659, 3.691, 1660, 5.362, 1661, 4.076, 1662,
          5.362, 1663, 4.076, 1664, 6.132, 1665, 4.661, 1666, 5.362, 1667,
          4.076, 1668, 4.661, 1669, 4.661,
        ],
      ],
      ["title/injectables/ProfileService.html", [91, 0.817, 1587, 2.83]],
      [
        "body/injectables/ProfileService.html",
        [
          3, 0.12, 4, 0.108, 5, 0.096, 8, 0.197, 11, 0.624, 16, 0.809, 17,
          0.488, 18, 0.012, 20, 0.12, 21, 0.008, 22, 0.008, 37, 1.588, 44,
          0.996, 47, 2.033, 49, 0.996, 53, 1.187, 55, 1.345, 56, 0.849, 75,
          1.226, 76, 2.536, 90, 0.719, 91, 1.062, 92, 0.472, 97, 1.93, 98,
          1.252, 108, 2.639, 111, 1.479, 112, 1.382, 113, 0.49, 115, 1.924, 121,
          2.111, 133, 3.612, 146, 1.647, 148, 1.851, 149, 2.016, 157, 2.017,
          192, 2.302, 258, 1.778, 316, 1.532, 323, 5.891, 327, 5.891, 330,
          4.274, 336, 2.111, 337, 3.682, 339, 4.823, 341, 2.95, 351, 1.71, 371,
          4.274, 373, 4.72, 374, 4.073, 384, 4.274, 396, 3.058, 398, 2.629, 399,
          3.058, 401, 2.217, 402, 3.058, 403, 2.629, 404, 2.217, 417, 1.532,
          445, 2.95, 451, 2.217, 483, 2.302, 486, 3.377, 487, 3.058, 488, 3.058,
          489, 4.72, 490, 3.377, 493, 2.629, 494, 2.629, 495, 2.39, 496, 2.629,
          497, 3.058, 498, 3.941, 499, 2.629, 500, 3.058, 501, 2.629, 502,
          3.058, 503, 4.72, 507, 3.377, 562, 1.069, 569, 3.453, 913, 2.471, 997,
          2.82, 1587, 3.675, 1670, 3.377, 1671, 3.941, 1672, 3.862, 1673, 3.862,
          1674, 3.862, 1675, 3.862, 1676, 5.397, 1677, 3.862, 1678, 3.377, 1679,
          3.862, 1680, 3.862, 1681, 3.862, 1682, 3.862, 1683, 5.397, 1684,
          5.441, 1685, 6.221, 1686, 5.397, 1687, 6.221, 1688, 5.397, 1689,
          6.221, 1690, 5.397, 1691, 6.221, 1692, 5.397, 1693, 3.862, 1694,
          3.862, 1695, 3.862, 1696, 3.862, 1697, 3.862, 1698, 3.862,
        ],
      ],
      ["title/interfaces/Recipe.html", [0, 0.547, 233, 1.081]],
      [
        "body/interfaces/Recipe.html",
        [
          0, 0.667, 2, 1.494, 3, 0.158, 4, 0.142, 5, 0.126, 8, 0.258, 9, 0.98,
          11, 0.865, 16, 1.664, 17, 0.603, 18, 0.012, 19, 2.38, 20, 0.158, 21,
          0.009, 22, 0.009, 28, 2.689, 37, 3.09, 56, 1.025, 90, 0.656, 219,
          1.896, 233, 1.856, 347, 2.552, 1019, 6.29, 1023, 3.065, 1024, 4.314,
          1553, 4.545, 1699, 4.433, 1700, 7.516, 1701, 6.573, 1702, 5.952, 1703,
          6.573, 1704, 5.952, 1705, 7.516, 1706, 4.81, 1707, 5.069, 1708, 5.069,
          1709, 5.069,
        ],
      ],
      ["title/components/RecipeDialogComponent.html", [62, 0.547, 232, 1.305]],
      [
        "body/components/RecipeDialogComponent.html",
        [
          3, 0.051, 4, 0.046, 5, 0.041, 8, 0.083, 9, 0.419, 11, 0.515, 16,
          1.075, 17, 0.544, 18, 0.012, 19, 0.816, 20, 0.051, 21, 0.004, 22,
          0.004, 26, 2.421, 37, 1.479, 44, 0.511, 47, 1.88, 49, 0.511, 52,
          0.818, 53, 1.321, 55, 1.109, 56, 0.784, 62, 0.473, 66, 2.707, 70,
          0.567, 75, 1.153, 90, 0.613, 92, 0.2, 95, 0.99, 103, 0.791, 113,
          0.208, 115, 0.468, 137, 1.589, 165, 0.548, 166, 0.958, 167, 0.586,
          168, 0.567, 169, 0.586, 171, 1.287, 172, 0.586, 173, 2.577, 174,
          2.338, 175, 0.991, 177, 0.991, 179, 1.115, 180, 1.514, 185, 2.027,
          186, 1.805, 187, 1.941, 190, 0.855, 192, 0.698, 194, 2.715, 199,
          0.586, 200, 0.991, 201, 0.991, 202, 0.586, 203, 1.956, 204, 0.586,
          205, 0.586, 206, 0.514, 207, 0.586, 208, 0.498, 209, 0.586, 210,
          0.514, 211, 0.586, 212, 0.514, 213, 0.586, 214, 0.514, 215, 0.586,
          216, 0.498, 217, 0.586, 218, 0.514, 219, 1.295, 220, 0.586, 221,
          0.514, 222, 0.586, 223, 0.514, 224, 0.586, 225, 0.514, 226, 0.514,
          227, 0.586, 228, 0.514, 229, 0.586, 230, 0.514, 231, 0.586, 232,
          1.328, 233, 1.867, 234, 0.586, 235, 0.514, 236, 0.586, 237, 0.514,
          238, 0.586, 239, 0.514, 240, 0.586, 241, 0.514, 242, 0.586, 243,
          0.514, 244, 0.586, 245, 0.514, 246, 0.567, 247, 0.586, 248, 0.586,
          290, 0.725, 334, 3.056, 346, 1.048, 347, 1.837, 404, 0.94, 411, 2.646,
          417, 1.098, 483, 2.017, 495, 1.593, 505, 2.022, 540, 0.754, 569,
          1.772, 581, 2.806, 582, 2.565, 583, 2.806, 584, 1.297, 586, 2.991,
          594, 3.026, 597, 0.895, 608, 0.94, 611, 1.048, 618, 0.94, 619, 0.94,
          621, 0.99, 622, 0.818, 623, 0.94, 629, 2.065, 701, 2.065, 702, 2.88,
          704, 0.895, 720, 2.302, 721, 2.989, 727, 2.302, 728, 2.428, 736,
          2.449, 740, 1.115, 746, 1.196, 749, 1.196, 750, 1.196, 751, 1.196,
          782, 3.748, 783, 3.089, 795, 3.475, 796, 1.297, 797, 1.674, 798,
          1.885, 848, 1.297, 865, 1.967, 867, 0.99, 872, 1.798, 917, 2.022, 960,
          1.589, 1003, 4.234, 1014, 2.806, 1015, 1.048, 1019, 2.849, 1022,
          1.115, 1023, 1.674, 1024, 3.138, 1025, 4.788, 1029, 3.748, 1039,
          2.627, 1044, 3.089, 1046, 3.699, 1048, 3.35, 1051, 3.498, 1053, 2.627,
          1054, 3.089, 1080, 1.297, 1082, 1.115, 1083, 1.297, 1090, 1.196, 1091,
          1.432, 1092, 2.193, 1095, 1.196, 1096, 1.196, 1098, 3.745, 1112,
          1.432, 1115, 1.196, 1116, 1.885, 1117, 1.885, 1119, 1.885, 1121,
          1.885, 1127, 2.707, 1128, 2.558, 1129, 2.421, 1134, 1.885, 1142,
          1.115, 1155, 3.146, 1158, 1.885, 1168, 3.35, 1189, 2.627, 1190, 1.196,
          1204, 2.022, 1217, 1.196, 1224, 2.022, 1226, 1.297, 1230, 1.196, 1231,
          1.196, 1232, 1.196, 1238, 1.115, 1243, 1.196, 1318, 1.432, 1335,
          3.699, 1490, 1.196, 1553, 3.852, 1653, 1.196, 1704, 4.065, 1706, 3.83,
          1710, 6.924, 1711, 5.781, 1712, 1.432, 1713, 3.597, 1714, 2.769, 1715,
          3.597, 1716, 4.729, 1717, 3.597, 1718, 3.597, 1719, 4.23, 1720, 3.597,
          1721, 3.146, 1722, 3.146, 1723, 3.699, 1724, 3.597, 1725, 3.597, 1726,
          2.769, 1727, 4.23, 1728, 2.769, 1729, 2.769, 1730, 3.699, 1731, 2.769,
          1732, 4.23, 1733, 2.769, 1734, 2.707, 1735, 1.637, 1736, 4.136, 1737,
          4.729, 1738, 3.138, 1739, 2.769, 1740, 2.769, 1741, 3.597, 1742,
          1.637, 1743, 1.637, 1744, 1.637, 1745, 1.637, 1746, 1.637, 1747,
          1.637, 1748, 2.769, 1749, 1.637, 1750, 2.769, 1751, 1.637, 1752,
          1.637, 1753, 2.769, 1754, 1.637, 1755, 1.637, 1756, 1.637, 1757,
          2.769, 1758, 1.637, 1759, 1.637, 1760, 1.637, 1761, 1.637, 1762,
          1.637, 1763, 1.637, 1764, 1.637, 1765, 1.637, 1766, 1.637, 1767,
          1.637, 1768, 1.637, 1769, 1.637, 1770, 1.637, 1771, 1.637, 1772,
          1.637, 1773, 1.637, 1774, 1.637, 1775, 1.637, 1776, 2.421, 1777,
          2.193, 1778, 1.637, 1779, 1.637, 1780, 1.637, 1781, 1.297, 1782,
          1.297, 1783, 1.297, 1784, 1.637, 1785, 1.196, 1786, 1.196, 1787,
          1.637, 1788, 1.637, 1789, 1.432, 1790, 2.769, 1791, 3.597, 1792,
          1.637, 1793, 1.637, 1794, 1.637, 1795, 1.637, 1796, 1.637, 1797,
          1.637, 1798, 1.637, 1799, 3.597, 1800, 1.637, 1801, 4.23, 1802, 1.637,
          1803, 1.637, 1804, 1.432, 1805, 4.23, 1806, 1.637, 1807, 1.637, 1808,
          1.637, 1809, 1.637, 1810, 1.637, 1811, 1.637, 1812, 1.637, 1813,
          1.637, 1814, 1.637, 1815, 1.637, 1816, 1.637, 1817, 1.637, 1818,
          2.769, 1819, 2.769, 1820, 1.637, 1821, 1.637, 1822, 1.637, 1823,
          1.637, 1824, 1.637, 1825, 1.637, 1826, 1.637, 1827, 1.637, 1828,
          1.637, 1829, 1.637, 1830, 1.637, 1831, 1.637, 1832, 1.637, 1833,
          1.637, 1834, 1.637, 1835, 1.637, 1836, 1.637, 1837, 1.637, 1838,
          2.421, 1839, 1.637, 1840, 1.637, 1841, 2.769, 1842, 1.637, 1843,
          1.637, 1844, 1.637, 1845, 1.637, 1846, 1.637, 1847, 1.637, 1848,
          1.637, 1849, 1.637, 1850, 1.637, 1851, 1.637, 1852, 1.637, 1853,
          1.637, 1854, 1.637, 1855, 1.637, 1856, 4.23, 1857, 2.769, 1858, 2.769,
          1859, 2.769, 1860, 2.769, 1861, 1.432, 1862, 1.637, 1863, 2.769, 1864,
          1.637, 1865, 1.637, 1866, 1.432, 1867, 1.637, 1868, 3.597, 1869,
          1.637, 1870, 1.432, 1871, 2.769, 1872, 1.637, 1873, 4.23, 1874, 1.637,
          1875, 1.637, 1876, 1.637, 1877, 4.23, 1878, 1.432, 1879, 2.769, 1880,
          1.637, 1881, 1.637, 1882, 1.637,
        ],
      ],
      ["title/modules/RecipeManagementModule.html", [270, 2.17, 1883, 3.034]],
      [
        "body/modules/RecipeManagementModule.html",
        [
          3, 0.116, 4, 0.105, 5, 0.093, 18, 0.012, 20, 0.116, 21, 0.007, 22,
          0.007, 43, 3.504, 62, 0.491, 81, 1.947, 90, 0.795, 92, 0.456, 94,
          1.334, 113, 0.473, 124, 4.391, 126, 2.54, 127, 2.387, 146, 1.591, 157,
          1.209, 192, 1.591, 216, 2.209, 218, 2.28, 219, 0.941, 232, 2.394, 235,
          2.28, 239, 2.344, 272, 1.717, 273, 2.425, 276, 2.632, 277, 1.864, 278,
          1.652, 280, 2.879, 286, 2.75, 287, 2.879, 288, 1.947, 289, 3.37, 290,
          1.652, 291, 3.37, 292, 3.185, 293, 2.255, 294, 3.37, 295, 2.387, 305,
          3.586, 306, 2.54, 307, 2.039, 309, 1.947, 310, 2.255, 315, 2.879, 634,
          2.879, 642, 3.846, 643, 2.723, 646, 4.606, 647, 3.262, 648, 3.846,
          649, 2.723, 667, 3.586, 668, 2.54, 826, 3.846, 827, 4.171, 828, 4.606,
          829, 3.262, 830, 4.171, 831, 2.954, 832, 3.846, 833, 2.723, 834,
          3.846, 835, 2.723, 836, 3.846, 837, 2.723, 840, 2.723, 841, 2.954,
          842, 2.954, 843, 2.954, 844, 2.954, 1025, 2.255, 1085, 2.54, 1658,
          4.171, 1659, 2.954, 1662, 4.606, 1663, 3.262, 1711, 2.723, 1738,
          4.168, 1781, 2.954, 1785, 2.723, 1883, 6.069, 1884, 3.262, 1885,
          3.262, 1886, 3.262, 1887, 3.73, 1888, 3.73, 1889, 5.267, 1890, 4.606,
          1891, 3.262, 1892, 5.267, 1893, 3.73, 1894, 3.73, 1895, 3.262, 1896,
          5.267, 1897, 3.73, 1898, 4.606, 1899, 3.262, 1900, 5.267, 1901, 3.73,
          1902, 5.267, 1903, 3.73, 1904, 4.606, 1905, 3.262, 1906, 5.267, 1907,
          3.73, 1908, 5.267, 1909, 3.73, 1910, 5.267, 1911, 3.73, 1912, 3.73,
          1913, 3.73, 1914, 5.267, 1915, 3.73, 1916, 3.73,
        ],
      ],
      ["title/injectables/RecipeService.html", [91, 0.817, 1738, 2.385]],
      [
        "body/injectables/RecipeService.html",
        [
          3, 0.076, 4, 0.068, 5, 0.061, 8, 0.124, 11, 0.709, 16, 1.223, 17,
          0.531, 18, 0.012, 19, 2.036, 20, 0.076, 21, 0.005, 22, 0.005, 28,
          2.218, 37, 2.548, 44, 0.708, 47, 1.716, 49, 0.45, 52, 1.917, 53,
          1.227, 55, 1.558, 56, 1.037, 75, 1.382, 76, 2.844, 85, 3.722, 90,
          0.597, 91, 0.755, 92, 0.298, 97, 1.22, 98, 0.791, 104, 2.32, 108,
          0.766, 111, 0.935, 112, 0.873, 113, 0.487, 114, 1.081, 115, 2.02, 121,
          3.671, 140, 3.037, 146, 1.041, 148, 1.17, 149, 1.274, 152, 3.354, 157,
          1.537, 174, 1.204, 185, 0.676, 186, 0.766, 187, 0.791, 194, 1.401,
          195, 1.662, 233, 2.098, 258, 1.123, 261, 2.801, 316, 0.968, 334, 3.61,
          336, 1.334, 337, 2.936, 341, 3.389, 346, 3.032, 350, 2.454, 351,
          1.081, 389, 1.662, 411, 3.255, 417, 2.572, 431, 3.037, 445, 3.192,
          451, 1.401, 482, 3.657, 483, 2.765, 508, 1.932, 534, 1.932, 562,
          0.676, 628, 2.454, 720, 3.032, 811, 1.932, 849, 3.922, 856, 3.037,
          857, 3.753, 859, 3.037, 865, 2.591, 866, 3.354, 867, 2.866, 869,
          4.221, 872, 2.684, 875, 4.704, 879, 3.354, 881, 1.662, 882, 3.037,
          883, 5.318, 884, 3.037, 885, 3.037, 886, 3.037, 887, 3.037, 888,
          2.801, 889, 3.037, 890, 3.753, 891, 3.46, 892, 3.037, 894, 3.049, 897,
          3.354, 906, 1.662, 909, 2.134, 913, 2.454, 915, 1.932, 918, 1.662,
          922, 1.782, 923, 1.782, 924, 1.782, 925, 1.782, 926, 3.657, 936,
          1.662, 939, 3.657, 941, 2.866, 948, 3.037, 949, 2.134, 950, 2.134,
          951, 2.134, 952, 2.134, 953, 2.134, 954, 2.134, 955, 2.134, 956,
          2.134, 957, 2.134, 958, 1.932, 959, 2.134, 960, 2.72, 961, 1.932, 962,
          1.782, 963, 1.932, 964, 2.134, 965, 2.134, 966, 2.134, 967, 2.134,
          968, 2.134, 1024, 3.083, 1107, 3.354, 1271, 1.782, 1361, 2.134, 1553,
          4.178, 1558, 2.134, 1684, 6.041, 1701, 2.134, 1702, 3.037, 1703,
          2.134, 1704, 1.932, 1734, 2.454, 1738, 2.202, 1917, 2.134, 1918,
          3.836, 1919, 3.836, 1920, 3.836, 1921, 3.836, 1922, 4.697, 1923,
          5.371, 1924, 3.836, 1925, 2.44, 1926, 3.836, 1927, 2.44, 1928, 3.836,
          1929, 2.44, 1930, 3.836, 1931, 3.836, 1932, 2.44, 1933, 3.836, 1934,
          2.44, 1935, 2.44, 1936, 2.44, 1937, 3.836, 1938, 2.44, 1939, 2.44,
          1940, 2.44, 1941, 3.836, 1942, 2.44, 1943, 3.836, 1944, 2.44, 1945,
          3.836, 1946, 3.836, 1947, 3.836, 1948, 2.44, 1949, 4.739, 1950, 2.44,
          1951, 3.836, 1952, 2.44, 1953, 2.44, 1954, 2.44, 1955, 2.44, 1956,
          2.44, 1957, 2.44, 1958, 2.44, 1959, 2.44, 1960, 2.44, 1961, 2.44,
          1962, 2.44, 1963, 2.44, 1964, 2.44, 1965, 2.44, 1966, 2.44, 1967,
          2.44, 1968, 2.44, 1969, 2.44, 1970, 2.44, 1971, 2.44, 1972, 2.44,
          1973, 2.44, 1974, 2.44, 1975, 2.44, 1976, 2.44,
        ],
      ],
      ["title/interfaces/RecipeState.html", [0, 0.547, 1977, 3.034]],
      [
        "body/interfaces/RecipeState.html",
        [
          0, 0.735, 2, 1.647, 3, 0.174, 4, 0.157, 5, 0.139, 8, 0.285, 9, 1.042,
          11, 0.69, 17, 0.405, 18, 0.012, 20, 0.243, 21, 0.01, 22, 0.01, 59,
          3.731, 90, 0.686, 96, 2.573, 115, 1.966, 157, 2.419, 233, 2.22, 263,
          4.404, 1275, 5.026, 1279, 4.686, 1280, 4.08, 1782, 4.425, 1977, 5.446,
          1978, 4.425, 1979, 4.887, 1980, 5.588, 1981, 4.425, 1982, 4.425, 1983,
          4.887, 1984, 6.019, 1985, 4.887,
        ],
      ],
      ["title/interfaces/RecipeType.html", [0, 0.547, 1706, 2.659]],
      [
        "body/interfaces/RecipeType.html",
        [
          0, 0.783, 2, 1.754, 3, 0.186, 4, 0.167, 5, 0.148, 8, 0.303, 9, 1.083,
          11, 0.845, 16, 1.777, 17, 0.577, 18, 0.012, 19, 2.26, 20, 0.186, 21,
          0.01, 22, 0.01, 28, 2.846, 37, 3.27, 56, 1.085, 351, 3.522, 1016,
          4.713, 1706, 4.576, 1783, 4.713,
        ],
      ],
      ["title/components/RecipesComponent.html", [62, 0.547, 235, 1.305]],
      [
        "body/components/RecipesComponent.html",
        [
          3, 0.052, 4, 0.047, 5, 0.041, 8, 0.085, 9, 0.424, 11, 0.478, 16,
          0.587, 17, 0.522, 18, 0.012, 19, 1.258, 20, 0.052, 21, 0.004, 22,
          0.004, 28, 1.527, 37, 0.682, 44, 0.517, 47, 1.006, 49, 0.517, 53,
          1.218, 55, 1.03, 56, 0.788, 62, 0.478, 66, 1.792, 70, 0.574, 75,
          0.894, 86, 1.792, 90, 0.589, 92, 0.203, 103, 0.8, 113, 0.211, 137,
          0.953, 157, 0.538, 165, 0.556, 166, 0.969, 167, 0.594, 168, 1.257,
          169, 0.594, 171, 1.3, 172, 0.594, 173, 2.584, 174, 2.344, 175, 1.002,
          177, 1.002, 180, 1.527, 185, 1.666, 186, 1.497, 187, 2.017, 190,
          0.866, 194, 1.607, 199, 0.594, 200, 1.002, 201, 1.002, 202, 0.594,
          203, 1.527, 204, 0.594, 205, 0.594, 206, 0.521, 207, 0.594, 208,
          0.505, 209, 0.594, 210, 0.521, 211, 0.594, 212, 0.521, 213, 0.594,
          214, 0.521, 215, 0.594, 216, 0.505, 217, 0.594, 218, 0.521, 219,
          1.077, 220, 0.594, 221, 0.521, 222, 0.594, 223, 0.521, 224, 0.594,
          225, 0.521, 226, 0.521, 227, 0.594, 228, 0.521, 229, 0.594, 230,
          0.521, 231, 0.594, 232, 0.879, 233, 1.957, 234, 0.594, 235, 1.34, 236,
          0.594, 237, 0.521, 238, 0.594, 239, 0.521, 240, 0.594, 241, 0.521,
          242, 0.594, 243, 0.521, 244, 0.594, 245, 0.521, 246, 0.574, 247,
          0.594, 248, 0.594, 263, 1.792, 315, 1.531, 334, 2.289, 346, 1.792,
          347, 1.002, 404, 0.953, 411, 2.194, 417, 1.111, 540, 3.652, 562,
          0.459, 581, 3.16, 582, 2.889, 583, 3.16, 586, 3.345, 597, 0.907, 608,
          2.449, 618, 1.607, 619, 1.607, 620, 2.197, 622, 2.382, 623, 3.318,
          624, 3.126, 625, 3.571, 626, 3.981, 627, 4.195, 628, 3.308, 630,
          3.379, 686, 1.451, 697, 4.097, 698, 3.05, 699, 2.449, 701, 2.085, 704,
          3.584, 721, 3.584, 727, 2.324, 728, 2.449, 740, 1.13, 743, 1.212, 746,
          1.212, 749, 1.212, 750, 1.212, 782, 4.017, 783, 2.652, 787, 3.177,
          788, 2.045, 789, 2.652, 790, 3.731, 791, 1.792, 792, 2.905, 795,
          4.189, 796, 1.314, 797, 1.693, 798, 1.13, 802, 2.218, 848, 2.218, 859,
          2.218, 865, 1.986, 867, 3.126, 872, 0.829, 875, 3.52, 894, 2.488, 960,
          0.953, 998, 1.451, 1003, 3.639, 1014, 1.986, 1015, 1.062, 1023, 1.004,
          1024, 2.736, 1025, 4.441, 1027, 3.746, 1029, 3.48, 1030, 1.212, 1031,
          1.314, 1032, 1.212, 1036, 3.177, 1082, 1.13, 1092, 1.314, 1116, 2.905,
          1117, 2.905, 1118, 2.652, 1119, 2.905, 1120, 2.652, 1121, 3.245, 1125,
          1.212, 1127, 1.062, 1128, 3.126, 1134, 1.907, 1136, 1.212, 1138, 1.13,
          1141, 1.212, 1142, 2.473, 1143, 1.314, 1144, 2.045, 1145, 2.045, 1146,
          1.212, 1147, 1.212, 1148, 1.314, 1149, 2.045, 1152, 1.792, 1153,
          1.314, 1169, 4.168, 1173, 3.379, 1189, 3.774, 1204, 2.652, 1212,
          3.379, 1213, 1.314, 1217, 3.116, 1224, 1.212, 1230, 1.212, 1231,
          1.212, 1232, 3.774, 1235, 4.093, 1236, 1.314, 1243, 1.212, 1288,
          6.058, 1323, 2.218, 1324, 1.451, 1329, 4.168, 1330, 3.379, 1332,
          1.451, 1385, 1.451, 1490, 4.221, 1549, 1.451, 1553, 2.197, 1702,
          3.774, 1706, 1.792, 1711, 1.212, 1721, 2.449, 1722, 3.177, 1723,
          3.731, 1734, 1.792, 1736, 3.177, 1738, 2.967, 1781, 1.314, 1782,
          1.314, 1785, 1.212, 1804, 1.451, 1838, 1.451, 1861, 2.449, 1878,
          3.177, 1895, 1.451, 1922, 1.451, 1986, 1.451, 1987, 6.555, 1988,
          3.633, 1989, 3.633, 1990, 3.633, 1991, 2.8, 1992, 3.633, 1993, 3.633,
          1994, 3.633, 1995, 4.267, 1996, 2.8, 1997, 2.8, 1998, 1.659, 1999,
          2.8, 2000, 1.659, 2001, 2.449, 2002, 1.659, 2003, 2.8, 2004, 1.659,
          2005, 2.8, 2006, 1.659, 2007, 2.8, 2008, 1.659, 2009, 2.8, 2010, 2.8,
          2011, 2.8, 2012, 2.8, 2013, 1.659, 2014, 1.659, 2015, 1.659, 2016,
          1.659, 2017, 1.659, 2018, 1.659, 2019, 1.659, 2020, 1.659, 2021,
          1.659, 2022, 1.659, 2023, 1.659, 2024, 1.659, 2025, 1.659, 2026,
          1.659, 2027, 4.766, 2028, 1.659, 2029, 1.659, 2030, 1.659, 2031,
          1.314, 2032, 1.659, 2033, 1.659, 2034, 2.8, 2035, 4.267, 2036, 4.267,
          2037, 2.8, 2038, 2.8, 2039, 1.659, 2040, 2.8, 2041, 1.659, 2042,
          1.451, 2043, 1.451, 2044, 2.8, 2045, 2.8, 2046, 2.8, 2047, 2.8, 2048,
          1.659, 2049, 1.659, 2050, 2.8, 2051, 1.659, 2052, 1.659, 2053, 1.659,
          2054, 1.659, 2055, 1.659, 2056, 4.267, 2057, 1.659, 2058, 1.659, 2059,
          1.659, 2060, 1.659, 2061, 1.659, 2062, 1.659, 2063, 1.659, 2064,
          1.659, 2065, 1.659, 2066, 2.8, 2067, 2.8, 2068, 4.267, 2069, 1.659,
          2070, 1.659, 2071, 1.659, 2072, 1.659, 2073, 1.659, 2074, 1.659, 2075,
          2.8, 2076, 1.659, 2077, 1.659, 2078, 2.8, 2079, 2.8, 2080, 2.8, 2081,
          1.659, 2082, 1.659, 2083, 1.659, 2084, 1.659, 2085, 1.451, 2086, 2.8,
          2087, 1.659, 2088, 2.8, 2089, 2.8, 2090, 1.659, 2091, 1.659, 2092,
          1.659, 2093, 1.659, 2094, 1.659, 2095, 1.659, 2096, 1.659, 2097,
          1.659, 2098, 1.659, 2099, 1.659, 2100, 1.659, 2101, 1.451, 2102,
          1.659, 2103, 3.731, 2104, 1.659, 2105, 1.659, 2106, 1.659,
        ],
      ],
      ["title/interfaces/Saturday.html", [0, 0.547, 679, 1.992]],
      [
        "body/interfaces/Saturday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.629,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/interfaces/Schedule.html", [0, 0.547, 673, 1.84]],
      [
        "body/interfaces/Schedule.html",
        [
          0, 1.088, 2, 1.443, 3, 0.153, 4, 0.137, 5, 0.122, 8, 0.25, 9, 0.959,
          16, 1.554, 17, 0.581, 18, 0.012, 20, 0.258, 21, 0.009, 22, 0.009, 669,
          3.89, 670, 2.446, 671, 3.305, 672, 3.305, 673, 2.803, 674, 3.89, 675,
          3.89, 676, 3.89, 677, 3.89, 678, 3.89, 679, 3.89, 680, 3.89, 681,
          2.555, 682, 4.068, 683, 4.181, 684, 2.446,
        ],
      ],
      ["title/components/SidebarComponent.html", [62, 0.547, 237, 1.305]],
      [
        "body/components/SidebarComponent.html",
        [
          3, 0.12, 4, 0.108, 5, 0.096, 8, 0.196, 9, 0.813, 11, 0.622, 17, 0.45,
          18, 0.012, 20, 0.12, 21, 0.008, 22, 0.008, 44, 0.992, 47, 1.487, 49,
          0.992, 52, 3.662, 53, 1.26, 55, 0.829, 56, 0.845, 62, 0.816, 70,
          1.327, 75, 1.073, 76, 2.403, 90, 0.718, 92, 0.469, 95, 2.319, 96,
          1.766, 98, 1.244, 99, 2.097, 103, 1.534, 108, 2.109, 113, 0.487, 165,
          1.285, 166, 1.859, 167, 1.372, 168, 1.327, 169, 1.372, 171, 2.218,
          172, 1.372, 173, 2.923, 174, 2.652, 175, 1.922, 177, 1.922, 180,
          2.403, 185, 2.029, 186, 1.204, 187, 1.244, 199, 1.372, 200, 1.922,
          201, 1.922, 202, 1.372, 203, 2.403, 204, 1.372, 205, 1.372, 206,
          1.204, 207, 1.372, 208, 1.167, 209, 1.372, 210, 1.204, 211, 1.372,
          212, 1.204, 213, 1.372, 214, 1.204, 215, 1.372, 216, 1.167, 217,
          1.372, 218, 1.204, 219, 0.968, 220, 1.372, 221, 1.204, 222, 1.372,
          223, 1.204, 224, 1.372, 225, 1.204, 226, 1.204, 227, 1.372, 228,
          1.204, 229, 1.372, 230, 1.204, 231, 1.372, 232, 1.204, 233, 0.998,
          234, 1.372, 235, 1.204, 236, 1.372, 237, 2.109, 238, 1.372, 239,
          1.204, 240, 1.372, 241, 1.204, 242, 1.372, 243, 1.204, 244, 1.372,
          245, 1.204, 246, 1.327, 247, 1.372, 248, 1.372, 332, 4.904, 347,
          1.922, 403, 2.612, 417, 1.521, 428, 3.354, 483, 1.636, 495, 2.379,
          552, 2.801, 557, 2.202, 559, 2.454, 562, 1.062, 575, 3.657, 581,
          2.097, 582, 1.917, 583, 2.097, 586, 1.917, 621, 2.319, 622, 3.098,
          704, 2.097, 792, 2.612, 1238, 2.612, 1489, 3.354, 1490, 3.922, 1730,
          5.873, 2107, 3.354, 2108, 5.371, 2109, 6.199, 2110, 5.371, 2111,
          6.199, 2112, 5.122, 2113, 5.371, 2114, 3.835, 2115, 3.835, 2116,
          3.835, 2117, 3.835, 2118, 3.835, 2119, 3.354, 2120, 3.354, 2121,
          3.354, 2122, 3.835, 2123, 3.835, 2124, 3.835, 2125, 3.354, 2126,
          3.835, 2127, 3.835, 2128, 3.835, 2129, 3.835,
        ],
      ],
      ["title/injectables/SidebarService.html", [91, 0.817, 2112, 2.83]],
      [
        "body/injectables/SidebarService.html",
        [
          3, 0.139, 4, 0.125, 5, 0.111, 8, 0.227, 9, 0.901, 11, 0.672, 17, 0.54,
          18, 0.012, 19, 1.975, 20, 0.139, 21, 0.008, 22, 0.008, 44, 1.099, 47,
          1.98, 49, 0.823, 53, 1.311, 55, 1.448, 56, 0.914, 75, 1.16, 76, 2.743,
          85, 3.847, 90, 0.706, 91, 1.171, 92, 0.545, 98, 1.445, 108, 1.399,
          111, 1.707, 112, 1.594, 113, 0.565, 114, 1.973, 115, 2.043, 133,
          3.752, 146, 1.9, 148, 2.136, 149, 2.326, 157, 1.445, 185, 1.648, 186,
          1.869, 187, 1.93, 258, 2.051, 316, 1.767, 334, 3.467, 336, 2.436, 337,
          3.91, 341, 3.254, 347, 2.398, 396, 3.529, 417, 2.361, 445, 3.254, 482,
          3.034, 483, 2.538, 622, 3.574, 913, 2.851, 1449, 5.205, 1451, 3.529,
          1493, 5.861, 1678, 3.897, 1786, 3.254, 2112, 4.052, 2130, 3.529, 2131,
          6.701, 2132, 5.951, 2133, 7.152, 2134, 5.205, 2135, 5.951, 2136,
          5.951, 2137, 4.456, 2138, 4.456, 2139, 5.951, 2140, 4.456, 2141,
          5.951, 2142, 4.456, 2143, 4.456, 2144, 4.346, 2145, 5.951, 2146,
          4.456, 2147, 3.897, 2148, 4.456, 2149, 4.456, 2150, 4.456, 2151,
          4.456, 2152, 4.456, 2153, 4.456, 2154, 4.456, 2155, 4.456, 2156,
          4.456,
        ],
      ],
      ["title/injectables/StringService.html", [91, 0.817, 338, 3.034]],
      [
        "body/injectables/StringService.html",
        [
          3, 0.175, 4, 0.157, 5, 0.14, 8, 0.286, 11, 0.563, 16, 1.707, 17,
          0.407, 18, 0.012, 19, 2.202, 20, 0.175, 21, 0.01, 22, 0.01, 44, 1.274,
          49, 1.379, 53, 1.155, 55, 1.212, 56, 0.765, 75, 0.971, 90, 0.516, 91,
          1.357, 92, 0.686, 111, 2.149, 112, 2.007, 113, 0.712, 115, 2.227, 186,
          1.762, 187, 1.819, 316, 2.225, 338, 5.038, 562, 1.553, 1591, 6.817,
          2157, 4.906, 2158, 6.899, 2159, 5.61, 2160, 6.899, 2161, 8.003, 2162,
          5.61, 2163, 6.899, 2164, 6.899, 2165, 5.61, 2166, 5.61, 2167, 5.61,
          2168, 5.61,
        ],
      ],
      ["title/interfaces/Sunday.html", [0, 0.547, 680, 1.992]],
      [
        "body/interfaces/Sunday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.629, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/components/TabsComponent.html", [62, 0.547, 239, 1.305]],
      [
        "body/components/TabsComponent.html",
        [
          3, 0.143, 4, 0.128, 5, 0.114, 8, 0.233, 18, 0.012, 20, 0.143, 21,
          0.008, 22, 0.008, 44, 1.117, 49, 1.253, 53, 1.014, 56, 0.826, 62,
          0.893, 70, 1.582, 75, 0.791, 90, 0.421, 92, 0.559, 103, 1.729, 113,
          0.58, 165, 1.531, 166, 2.095, 167, 1.635, 168, 1.582, 169, 1.635, 171,
          2.428, 172, 1.635, 173, 2.971, 174, 2.695, 175, 2.166, 177, 2.166,
          180, 2.585, 185, 1.676, 199, 1.635, 200, 2.166, 201, 2.166, 202,
          1.635, 203, 2.585, 204, 1.635, 205, 1.635, 206, 1.435, 207, 1.635,
          208, 1.39, 209, 1.635, 210, 1.435, 211, 1.635, 212, 1.435, 213, 1.635,
          214, 1.435, 215, 1.635, 216, 1.39, 217, 1.635, 218, 1.435, 219, 1.153,
          220, 1.635, 221, 1.435, 222, 1.635, 223, 1.435, 224, 1.635, 225,
          1.435, 226, 1.435, 227, 1.635, 228, 1.435, 229, 1.635, 230, 1.435,
          231, 1.635, 232, 1.435, 233, 1.189, 234, 1.635, 235, 1.435, 236,
          1.635, 237, 1.435, 238, 1.635, 239, 2.269, 240, 1.635, 241, 1.435,
          242, 1.635, 243, 1.435, 244, 1.635, 245, 1.435, 246, 1.582, 247,
          1.635, 248, 1.635, 562, 1.676, 586, 3.756, 615, 3.338, 625, 3.474,
          629, 2.624, 1025, 4.104, 2169, 3.997, 2170, 6.053, 2171, 6.787, 2172,
          6.053, 2173, 4.571, 2174, 4.571, 2175, 4.571, 2176, 7.723, 2177,
          7.224, 2178, 4.571, 2179, 4.571, 2180, 4.571,
        ],
      ],
      ["title/interfaces/Thursday.html", [0, 0.547, 677, 1.992]],
      [
        "body/interfaces/Thursday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.451, 677, 3.629, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/components/TitleComponent.html", [62, 0.547, 241, 1.305]],
      [
        "body/components/TitleComponent.html",
        [
          3, 0.134, 4, 0.12, 5, 0.107, 8, 0.218, 16, 1.474, 17, 0.42, 18, 0.012,
          20, 0.134, 21, 0.008, 22, 0.008, 37, 3.022, 44, 1.069, 49, 1.212, 53,
          1.178, 56, 0.79, 62, 0.864, 70, 1.482, 75, 0.741, 90, 0.394, 92,
          0.523, 103, 1.655, 113, 0.543, 165, 1.434, 166, 2.005, 167, 1.532,
          168, 1.482, 169, 1.532, 171, 2.35, 172, 1.532, 173, 2.954, 174, 2.68,
          175, 2.073, 177, 2.073, 179, 5.276, 180, 2.518, 185, 1.604, 199,
          1.532, 200, 2.073, 201, 2.073, 202, 1.532, 203, 2.518, 204, 1.532,
          205, 1.532, 206, 1.344, 207, 1.532, 208, 1.302, 209, 1.532, 210,
          1.344, 211, 1.532, 212, 1.344, 213, 1.532, 214, 1.344, 215, 1.532,
          216, 1.302, 217, 1.532, 218, 1.344, 219, 1.08, 220, 1.532, 221, 1.344,
          222, 1.532, 223, 1.344, 224, 1.532, 225, 1.344, 226, 1.344, 227,
          1.532, 228, 1.344, 229, 1.532, 230, 1.344, 231, 1.532, 232, 1.344,
          233, 1.114, 234, 1.532, 235, 1.344, 236, 1.532, 237, 1.344, 238,
          1.532, 239, 1.344, 240, 1.532, 241, 2.21, 242, 1.532, 243, 1.344, 244,
          1.532, 245, 1.344, 246, 1.482, 247, 1.532, 248, 1.532, 562, 1.604,
          605, 3.39, 611, 2.739, 626, 3.707, 629, 3.325, 697, 2.915, 700, 3.39,
          701, 2.457, 797, 2.589, 798, 2.915, 1176, 3.744, 1179, 5.743, 1180,
          3.744, 1191, 3.744, 1196, 3.744, 1419, 5.067, 1427, 5.2, 1866, 3.744,
          2101, 3.744, 2181, 3.744, 2182, 6.567, 2183, 5.794, 2184, 5.794, 2185,
          4.281, 2186, 4.281, 2187, 4.281, 2188, 4.281, 2189, 4.281, 2190,
          4.281, 2191, 4.281, 2192, 4.281, 2193, 4.281, 2194, 5.794, 2195,
          4.281, 2196, 4.281, 2197, 4.281, 2198, 4.281,
        ],
      ],
      ["title/components/TopbarComponent.html", [62, 0.547, 243, 1.305]],
      [
        "body/components/TopbarComponent.html",
        [
          3, 0.12, 4, 0.108, 5, 0.096, 8, 0.196, 9, 0.815, 11, 0.622, 16, 1.127,
          17, 0.488, 18, 0.012, 20, 0.12, 21, 0.008, 22, 0.008, 44, 0.993, 47,
          1.959, 49, 0.993, 52, 3.762, 53, 1.261, 55, 0.831, 56, 0.847, 62,
          0.885, 70, 1.331, 75, 1.074, 76, 2.221, 90, 0.693, 92, 0.47, 95,
          2.326, 96, 1.771, 98, 1.247, 99, 2.103, 103, 1.537, 108, 2.533, 113,
          0.488, 165, 1.288, 166, 1.863, 167, 1.376, 168, 1.331, 169, 1.376,
          171, 2.221, 172, 1.376, 173, 2.924, 174, 2.653, 175, 1.925, 177,
          1.925, 180, 2.406, 185, 2.031, 199, 1.376, 200, 1.925, 201, 1.925,
          202, 1.376, 203, 2.406, 204, 1.376, 205, 1.376, 206, 1.208, 207,
          1.376, 208, 1.17, 209, 1.376, 210, 1.208, 211, 1.376, 212, 1.208, 213,
          1.376, 214, 1.208, 215, 1.376, 216, 1.17, 217, 1.376, 218, 1.208, 219,
          0.97, 220, 1.376, 221, 1.208, 222, 1.376, 223, 1.208, 224, 1.376, 225,
          1.208, 226, 1.208, 227, 1.376, 228, 1.208, 229, 1.376, 230, 1.208,
          231, 1.376, 232, 1.208, 233, 1.001, 234, 1.376, 235, 1.208, 236,
          1.376, 237, 1.208, 238, 1.376, 239, 1.208, 240, 1.376, 241, 1.208,
          242, 1.376, 243, 2.111, 244, 1.376, 245, 1.208, 246, 1.331, 247,
          1.376, 248, 1.376, 334, 2.749, 411, 1.771, 551, 6.189, 552, 2.808,
          557, 2.208, 559, 2.461, 560, 2.619, 561, 3.046, 562, 1.065, 568,
          3.363, 569, 2.461, 570, 3.046, 575, 3.664, 578, 4.262, 2112, 5.126,
          2120, 3.363, 2121, 3.363, 2125, 3.363, 2199, 3.363, 2200, 5.381, 2201,
          6.208, 2202, 5.381, 2203, 6.208, 2204, 6.724, 2205, 5.381, 2206,
          3.846, 2207, 3.846, 2208, 3.846, 2209, 3.846, 2210, 3.846, 2211,
          3.846, 2212, 3.846, 2213, 3.846,
        ],
      ],
      ["title/interfaces/Tuesday.html", [0, 0.547, 675, 1.992]],
      [
        "body/interfaces/Tuesday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.629, 676, 3.451, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/interfaces/User.html", [0, 0.547, 108, 1.305]],
      [
        "body/interfaces/User.html",
        [
          0, 0.885, 2, 1.588, 3, 0.168, 4, 0.151, 5, 0.134, 8, 0.275, 9, 1.019,
          11, 0.858, 16, 1.792, 17, 0.6, 18, 0.012, 19, 2.162, 20, 0.21, 21,
          0.009, 22, 0.009, 28, 2.749, 108, 2.113, 347, 2.407, 351, 2.979, 374,
          4.647, 401, 4.411, 493, 5.232, 494, 3.668, 496, 3.668, 541, 5.611,
          542, 3.933, 543, 5.232, 544, 5.232, 545, 4.917, 546, 4.917,
        ],
      ],
      ["title/injectables/UserEffects.html", [91, 0.817, 298, 2.272]],
      [
        "body/injectables/UserEffects.html",
        [
          3, 0.158, 4, 0.142, 5, 0.126, 8, 0.258, 9, 0.978, 11, 0.506, 17,
          0.366, 18, 0.012, 20, 0.158, 21, 0.009, 22, 0.009, 47, 1.789, 49,
          1.192, 53, 1.193, 55, 1.092, 56, 0.689, 90, 0.714, 91, 1.271, 92,
          0.617, 98, 1.638, 113, 0.641, 186, 2.028, 187, 2.095, 219, 1.894, 258,
          2.325, 298, 3.531, 303, 3.232, 316, 2.003, 1049, 5.64, 1051, 5.162,
          1083, 4, 1276, 4.417, 1452, 5.2, 2214, 4.417, 2215, 7.122, 2216, 4,
          2217, 5.403, 2218, 5.051, 2219, 6.144, 2220, 5.944, 2221, 6.46, 2222,
          6.46, 2223, 7.506, 2224, 6.46, 2225, 5.051, 2226, 6.46, 2227, 5.115,
          2228, 6.46, 2229, 6.46, 2230, 5.051, 2231, 4,
        ],
      ],
      [
        "title/injectables/UserEffects-1.html",
        [91, 0.682, 298, 1.896, 608, 1.99],
      ],
      [
        "body/injectables/UserEffects-1.html",
        [
          3, 0.162, 4, 0.146, 5, 0.13, 8, 0.265, 9, 0.996, 11, 0.521, 17, 0.377,
          18, 0.012, 20, 0.162, 21, 0.009, 22, 0.009, 47, 1.822, 49, 1.215, 53,
          1.102, 55, 1.124, 56, 0.709, 90, 0.72, 91, 1.294, 92, 0.635, 98,
          1.686, 113, 0.659, 186, 1.633, 187, 1.686, 233, 1.878, 258, 2.394,
          298, 3.597, 303, 3.327, 316, 2.062, 1452, 5.271, 1734, 3.327, 1738,
          4.661, 1785, 3.796, 1979, 4.547, 2216, 4.117, 2217, 5.444, 2219,
          6.008, 2220, 5.716, 2227, 4.117, 2231, 4.117, 2232, 4.547, 2233,
          7.218, 2234, 5.199, 2235, 6.579, 2236, 6.579, 2237, 7.218, 2238,
          6.579, 2239, 5.199, 2240, 5.199, 2241, 5.199, 2242, 5.199, 2243,
          5.199,
        ],
      ],
      [
        "title/injectables/UserEffects-2.html",
        [91, 0.682, 298, 1.896, 1238, 2.361],
      ],
      [
        "body/injectables/UserEffects-2.html",
        [
          3, 0.141, 4, 0.127, 5, 0.113, 8, 0.23, 9, 0.909, 11, 0.453, 17, 0.327,
          18, 0.012, 20, 0.141, 21, 0.008, 22, 0.008, 47, 1.867, 49, 1.108, 53,
          1.129, 55, 0.975, 56, 0.615, 90, 0.708, 91, 1.181, 92, 0.552, 97,
          2.255, 113, 0.572, 133, 3.764, 150, 3.295, 186, 1.885, 187, 1.946,
          258, 2.078, 298, 3.281, 303, 2.888, 316, 1.79, 404, 2.59, 495, 2.658,
          560, 3.073, 574, 5.249, 580, 4.924, 1452, 4.924, 1587, 5.347, 1630,
          5.465, 1671, 4.924, 2147, 5.249, 2216, 3.574, 2217, 5.239, 2219,
          6.219, 2220, 6.094, 2227, 4.753, 2231, 3.574, 2244, 3.947, 2245,
          4.513, 2246, 6.002, 2247, 7.188, 2248, 6.002, 2249, 4.513, 2250,
          6.002, 2251, 6.002, 2252, 6.002, 2253, 4.513, 2254, 4.513, 2255,
          4.513, 2256, 3.574, 2257, 4.513, 2258, 4.513, 2259, 4.513, 2260,
          4.513, 2261, 4.513, 2262, 4.513, 2263, 4.513,
        ],
      ],
      ["title/injectables/UserService.html", [91, 0.817, 2264, 3.291]],
      [
        "body/injectables/UserService.html",
        [
          3, 0.15, 4, 0.135, 5, 0.12, 8, 0.246, 11, 0.698, 17, 0.505, 18, 0.012,
          19, 2.053, 20, 0.15, 21, 0.009, 22, 0.009, 28, 1.724, 44, 1.157, 47,
          1.928, 49, 0.89, 53, 1.235, 55, 1.505, 56, 0.95, 75, 1.205, 76, 2.735,
          90, 0.721, 91, 1.233, 92, 0.589, 98, 1.563, 108, 2.54, 111, 1.846,
          112, 1.724, 113, 0.611, 114, 2.134, 115, 1.989, 146, 2.055, 148, 2.31,
          149, 2.516, 157, 1.563, 192, 2.673, 258, 2.219, 316, 1.912, 330,
          4.963, 336, 2.635, 337, 4.032, 341, 3.426, 371, 4.963, 384, 4.963,
          401, 2.766, 403, 3.281, 445, 3.426, 487, 4.963, 488, 4.963, 493,
          3.281, 494, 3.281, 495, 2.775, 496, 3.281, 497, 3.816, 498, 4.576,
          499, 3.281, 500, 3.816, 501, 3.281, 502, 3.816, 557, 2.766, 562,
          1.334, 2264, 4.963, 2265, 4.215, 2266, 7.375, 2267, 6.267, 2268,
          4.819, 2269, 4.819, 2270, 6.267, 2271, 4.819, 2272, 4.819, 2273,
          4.819, 2274, 4.215,
        ],
      ],
      ["title/interfaces/UserState.html", [0, 0.547, 2275, 2.83]],
      [
        "body/interfaces/UserState.html",
        [
          0, 0.884, 2, 1.585, 3, 0.168, 4, 0.151, 5, 0.134, 8, 0.274, 9, 1.018,
          11, 0.674, 17, 0.487, 18, 0.012, 20, 0.24, 21, 0.009, 22, 0.009, 59,
          3.92, 90, 0.675, 96, 2.475, 108, 2.532, 115, 1.92, 130, 5.877, 137,
          3.086, 157, 2.377, 256, 3.926, 261, 3.926, 263, 4.3, 343, 3.926, 557,
          3.086, 560, 3.661, 1275, 4.907, 1279, 4.576, 1280, 3.926, 1630, 5.973,
          2217, 3.661, 2275, 4.991, 2276, 4.258, 2277, 5.376, 2278, 4.702, 2279,
          5.376, 2280, 5.376, 2281, 5.376, 2282, 5.376, 2283, 5.376, 2284,
          5.376, 2285, 4.258, 2286, 4.702, 2287, 5.877, 2288, 4.702,
        ],
      ],
      ["title/components/UsersComponent.html", [62, 0.547, 245, 1.305]],
      [
        "body/components/UsersComponent.html",
        [
          3, 0.065, 4, 0.058, 5, 0.052, 8, 0.218, 9, 0.512, 11, 0.492, 17,
          0.489, 18, 0.012, 19, 1.933, 20, 0.065, 21, 0.005, 22, 0.005, 28,
          0.746, 44, 0.624, 47, 1.495, 49, 0.624, 53, 1.23, 55, 1.061, 56,
          0.789, 62, 0.562, 66, 1.334, 70, 0.722, 75, 1.098, 86, 1.334, 90,
          0.532, 92, 0.255, 103, 0.966, 107, 1.523, 108, 2.397, 113, 0.264, 137,
          1.197, 157, 0.676, 165, 0.698, 166, 1.171, 167, 0.746, 168, 0.722,
          169, 0.746, 171, 1.527, 172, 0.746, 173, 2.696, 174, 2.447, 175, 1.21,
          177, 1.21, 179, 2.303, 180, 1.757, 185, 1.946, 186, 0.655, 187, 1.097,
          190, 1.089, 192, 1.82, 199, 0.746, 200, 1.21, 201, 1.21, 202, 0.746,
          203, 1.932, 204, 0.746, 205, 0.746, 206, 0.655, 207, 0.746, 208,
          0.634, 209, 0.746, 210, 0.655, 211, 0.746, 212, 0.655, 213, 0.746,
          214, 0.655, 215, 0.746, 216, 0.634, 217, 0.746, 218, 0.655, 219,
          0.526, 220, 0.746, 221, 0.655, 222, 0.746, 223, 0.655, 224, 0.746,
          225, 0.655, 226, 0.655, 227, 0.746, 228, 0.655, 229, 0.746, 230,
          0.655, 231, 0.746, 232, 0.655, 233, 0.543, 234, 0.746, 235, 0.655,
          236, 0.746, 237, 0.655, 238, 0.746, 239, 0.655, 240, 0.746, 241,
          0.655, 242, 0.746, 243, 0.655, 244, 0.746, 245, 1.542, 246, 2.332,
          247, 0.746, 248, 0.746, 347, 1.757, 350, 1.334, 391, 1.824, 404,
          1.197, 411, 1.965, 483, 0.889, 495, 2.175, 540, 2.486, 543, 2.303,
          544, 2.303, 545, 2.165, 546, 3.7, 557, 1.197, 562, 0.577, 575, 3.676,
          581, 1.849, 582, 1.691, 583, 1.849, 586, 3.894, 594, 2.165, 597, 1.14,
          608, 1.942, 618, 1.197, 619, 1.197, 620, 3.496, 622, 2.698, 623,
          1.197, 624, 1.261, 625, 1.197, 627, 2.731, 629, 1.942, 697, 2.906,
          698, 1.334, 701, 2.45, 702, 2.906, 704, 2.333, 721, 3.329, 727, 2.731,
          728, 2.819, 740, 1.42, 743, 1.523, 746, 1.523, 749, 1.523, 750, 1.523,
          751, 2.47, 788, 2.47, 789, 1.523, 791, 2.165, 792, 1.42, 795, 2.97,
          797, 2.581, 894, 1.089, 917, 2.47, 941, 2.046, 960, 1.197, 1003,
          2.581, 1027, 4.147, 1032, 2.47, 1039, 3.117, 1042, 3.889, 1111, 3.38,
          1116, 3.344, 1117, 3.344, 1118, 3.117, 1119, 3.344, 1120, 1.523, 1121,
          3.344, 1122, 1.651, 1123, 1.651, 1125, 3.117, 1126, 3.38, 1127, 1.334,
          1128, 1.261, 1132, 1.824, 1134, 1.42, 1136, 1.523, 1137, 1.651, 1138,
          1.42, 1139, 1.651, 1140, 1.651, 1141, 1.523, 1142, 2.906, 1143, 1.651,
          1144, 1.523, 1145, 2.47, 1146, 1.523, 1147, 1.523, 1149, 1.523, 1152,
          1.334, 1153, 1.651, 1158, 3.344, 1162, 2.679, 1163, 2.958, 1164,
          2.679, 1165, 2.679, 1173, 3.38, 1189, 2.47, 1202, 3.733, 1203, 3.733,
          1204, 2.47, 1205, 1.824, 1206, 1.824, 1207, 1.651, 1208, 1.824, 1209,
          1.824, 1210, 1.824, 1211, 4.722, 1212, 2.679, 1213, 1.651, 1214,
          1.824, 1215, 6.028, 1216, 3.733, 1217, 3.586, 1218, 1.824, 1219,
          2.958, 1220, 5.056, 1221, 2.958, 1222, 3.733, 1223, 1.824, 1224,
          1.523, 1225, 1.824, 1226, 1.651, 1227, 1.824, 1228, 1.824, 1229,
          4.295, 1230, 1.523, 1231, 1.523, 1232, 1.523, 1233, 1.824, 1234,
          1.824, 1235, 1.651, 1236, 1.651, 1237, 1.824, 1238, 1.42, 1239, 1.824,
          1240, 1.824, 1241, 4.295, 1242, 1.651, 1243, 1.523, 1244, 1.824, 1330,
          1.651, 1644, 4.295, 1645, 3.733, 1646, 3.733, 1648, 4.295, 1649,
          2.958, 1650, 2.958, 2289, 1.824, 2290, 4.268, 2291, 3.383, 2292,
          4.268, 2293, 4.268, 2294, 4.268, 2295, 4.268, 2296, 3.383, 2297,
          3.383, 2298, 4.911, 2299, 4.911, 2300, 2.085, 2301, 3.7, 2302, 3.383,
          2303, 2.085, 2304, 3.383, 2305, 2.085, 2306, 3.383, 2307, 2.085, 2308,
          3.383, 2309, 2.085, 2310, 2.085, 2311, 2.085, 2312, 2.085, 2313,
          2.085, 2314, 2.085, 2315, 2.085, 2316, 2.085, 2317, 2.085, 2318,
          2.085, 2319, 1.824, 2320, 3.383, 2321, 2.958, 2322, 6.344, 2323,
          2.085, 2324, 2.085, 2325, 2.085, 2326, 2.085, 2327, 2.085, 2328,
          4.911, 2329, 2.085, 2330, 2.085, 2331, 2.085, 2332, 2.085, 2333,
          2.085, 2334, 3.383, 2335, 2.085, 2336, 2.085, 2337, 3.383, 2338,
          2.085, 2339, 2.085, 2340, 2.085, 2341, 2.085, 2342, 3.383, 2343,
          2.085, 2344, 3.383, 2345, 3.383, 2346, 6.344, 2347, 2.085,
        ],
      ],
      ["title/modules/UsersModule.html", [270, 2.17, 2348, 3.034]],
      [
        "body/modules/UsersModule.html",
        [
          3, 0.141, 4, 0.127, 5, 0.113, 18, 0.012, 20, 0.141, 21, 0.008, 22,
          0.008, 43, 3.877, 62, 0.791, 81, 2.364, 90, 0.788, 92, 0.553, 94,
          1.62, 113, 0.574, 124, 4.658, 126, 3.083, 127, 2.897, 146, 1.931, 157,
          1.468, 190, 2.364, 192, 1.931, 245, 2.468, 272, 2.084, 273, 2.769,
          276, 3.006, 277, 2.262, 278, 2.005, 280, 3.288, 286, 3.14, 287, 3.288,
          288, 2.364, 290, 2.005, 291, 3.849, 292, 3.637, 293, 2.738, 307,
          2.475, 309, 2.364, 310, 2.738, 315, 3.288, 634, 3.288, 667, 4.095,
          668, 3.083, 721, 3.288, 826, 4.392, 827, 4.763, 832, 4.392, 833,
          3.306, 834, 4.392, 835, 3.306, 836, 4.392, 837, 3.306, 840, 3.306,
          841, 3.585, 842, 3.585, 843, 3.585, 844, 3.585, 918, 3.083, 1027,
          4.095, 1658, 4.763, 1659, 3.585, 1660, 5.26, 1661, 3.959, 1666, 5.26,
          1667, 3.959, 1890, 5.26, 1891, 3.959, 1898, 5.26, 1899, 3.959, 1904,
          5.26, 1905, 3.959, 2031, 3.585, 2301, 4.928, 2319, 3.959, 2348, 5.958,
          2349, 3.959, 2350, 3.959, 2351, 3.959, 2352, 4.527, 2353, 3.585, 2354,
          4.527,
        ],
      ],
      ["title/injectables/UsersService.html", [91, 0.817, 2301, 2.659]],
      [
        "body/injectables/UsersService.html",
        [
          3, 0.151, 4, 0.071, 5, 0.063, 8, 0.129, 9, 0.597, 11, 0.659, 16,
          1.424, 17, 0.56, 18, 0.012, 19, 2.178, 20, 0.079, 21, 0.006, 22,
          0.006, 23, 1.617, 28, 2.251, 37, 1.993, 44, 0.728, 49, 0.466, 53,
          1.331, 55, 1.42, 56, 0.896, 75, 1.389, 76, 2.74, 85, 3.771, 90, 0.605,
          91, 0.776, 92, 0.309, 97, 1.263, 98, 0.819, 108, 2.285, 111, 0.968,
          112, 0.904, 113, 0.321, 114, 1.119, 115, 2.226, 121, 2.65, 146, 1.078,
          148, 1.211, 149, 1.319, 157, 0.819, 186, 1.719, 187, 1.775, 219,
          1.498, 246, 1.895, 258, 1.163, 261, 2.879, 316, 1.002, 334, 3.538,
          336, 1.382, 337, 2.993, 341, 2.155, 346, 2.523, 367, 4.225, 374,
          2.931, 417, 2.172, 445, 3.245, 451, 2.782, 483, 2.683, 543, 1.721,
          544, 1.721, 545, 1.617, 546, 1.617, 557, 1.451, 562, 0.7, 608, 1.451,
          858, 3.448, 865, 3.592, 867, 2.384, 869, 3.3, 872, 2.967, 894, 1.319,
          899, 3.448, 906, 1.721, 913, 4.204, 922, 4.797, 923, 4.797, 924,
          4.797, 925, 1.845, 926, 1.721, 936, 1.721, 939, 2.684, 941, 2.931,
          1271, 1.845, 2274, 2.21, 2301, 2.523, 2321, 4.788, 2355, 2.21, 2356,
          4.847, 2357, 4.847, 2358, 4.847, 2359, 4.847, 2360, 5.475, 2361,
          5.475, 2362, 5.475, 2363, 5.475, 2364, 5.475, 2365, 5.475, 2366,
          3.942, 2367, 3.942, 2368, 3.942, 2369, 5.475, 2370, 5.475, 2371,
          3.942, 2372, 3.942, 2373, 3.942, 2374, 2.527, 2375, 2.527, 2376,
          2.527, 2377, 2.527, 2378, 2.527, 2379, 2.527, 2380, 3.942, 2381,
          2.527, 2382, 3.942, 2383, 2.527, 2384, 3.942, 2385, 3.942, 2386,
          2.527, 2387, 3.942, 2388, 2.527, 2389, 2.527, 2390, 2.527, 2391,
          3.942, 2392, 2.527, 2393, 3.942, 2394, 3.942, 2395, 2.527, 2396,
          3.942, 2397, 2.527, 2398, 3.942, 2399, 3.942, 2400, 3.942, 2401,
          2.527, 2402, 3.942, 2403, 3.942, 2404, 3.942, 2405, 2.527, 2406,
          3.942, 2407, 3.942, 2408, 3.942, 2409, 2.527, 2410, 3.942, 2411,
          3.942, 2412, 3.942, 2413, 2.527, 2414, 3.942, 2415, 3.942, 2416,
          3.942, 2417, 3.942, 2418, 3.942, 2419, 3.942, 2420, 4.847, 2421,
          2.527, 2422, 3.942, 2423, 2.527, 2424, 2.527, 2425, 2.527, 2426,
          2.527, 2427, 2.527, 2428, 2.527, 2429, 2.527, 2430, 2.527, 2431,
          2.527, 2432, 2.527, 2433, 2.527, 2434, 2.527, 2435, 2.527, 2436,
          2.527, 2437, 2.527, 2438, 2.527, 2439, 2.527, 2440, 5.475, 2441,
          2.527, 2442, 2.527, 2443, 2.527,
        ],
      ],
      ["title/interfaces/Wednesday.html", [0, 0.547, 676, 1.992]],
      [
        "body/interfaces/Wednesday.html",
        [
          0, 1.098, 2, 1.524, 3, 0.161, 4, 0.145, 5, 0.129, 8, 0.264, 9, 0.993,
          11, 0.759, 16, 1.586, 17, 0.475, 18, 0.012, 20, 0.26, 21, 0.009, 22,
          0.009, 669, 4, 670, 2.584, 671, 3.423, 672, 3.423, 673, 2.29, 674,
          3.451, 675, 3.451, 676, 3.629, 677, 3.451, 678, 3.451, 679, 3.451,
          680, 3.451, 681, 2.7, 682, 4.142, 683, 4.358, 684, 2.584,
        ],
      ],
      ["title/coverage.html", [2444, 4.965]],
      [
        "body/coverage.html",
        [
          0, 1.072, 1, 1.87, 5, 0.064, 6, 2.24, 7, 2.24, 17, 0.186, 18, 0.012,
          21, 0.006, 22, 0.006, 23, 1.639, 24, 2.24, 33, 3.529, 34, 2.028, 36,
          2.24, 41, 1.87, 62, 1.048, 63, 2.028, 91, 1.524, 99, 1.4, 101, 2.028,
          104, 2.409, 108, 0.804, 119, 1.744, 123, 3.155, 124, 1.549, 126,
          1.744, 127, 1.639, 128, 2.24, 133, 1.228, 148, 2.643, 165, 0.858, 170,
          2.24, 206, 0.804, 208, 0.779, 210, 0.804, 212, 0.804, 214, 0.804, 216,
          0.779, 218, 0.804, 219, 0.646, 221, 0.804, 223, 0.804, 225, 0.804,
          228, 0.804, 230, 0.804, 232, 0.804, 233, 0.667, 235, 0.804, 237,
          0.804, 239, 0.804, 241, 0.804, 243, 0.804, 245, 0.804, 249, 4.027,
          256, 1.87, 259, 2.028, 268, 2.028, 298, 2.672, 317, 2.24, 338, 1.87,
          339, 1.639, 367, 1.4, 398, 1.744, 417, 1.016, 540, 4.015, 541, 1.87,
          542, 2.909, 547, 2.24, 559, 1.639, 580, 1.87, 597, 3.458, 655, 2.24,
          669, 1.228, 670, 3.582, 673, 1.134, 674, 1.228, 675, 1.228, 676,
          1.228, 677, 1.228, 678, 1.228, 679, 1.228, 680, 1.228, 682, 1.228,
          685, 2.24, 706, 2.24, 715, 2.24, 726, 1.639, 728, 1.47, 804, 2.028,
          805, 2.24, 817, 2.028, 845, 1.87, 846, 2.24, 847, 2.24, 851, 2.24,
          872, 1.28, 970, 2.028, 971, 2.24, 991, 2.24, 997, 1.87, 1014, 1.4,
          1015, 1.639, 1016, 3.155, 1020, 2.24, 1025, 3.613, 1026, 2.24, 1051,
          1.639, 1052, 1.744, 1084, 1.87, 1085, 2.713, 1207, 2.028, 1247, 2.24,
          1273, 1.87, 1274, 4.367, 1278, 2.028, 1279, 3.329, 1281, 2.028, 1285,
          2.24, 1286, 2.24, 1336, 2.24, 1393, 2.028, 1394, 3.155, 1395, 2.24,
          1396, 2.24, 1402, 2.028, 1403, 2.24, 1404, 2.24, 1416, 2.24, 1421,
          2.909, 1437, 2.24, 1458, 2.24, 1481, 2.24, 1491, 2.028, 1492, 2.24,
          1507, 2.24, 1508, 2.028, 1509, 2.24, 1541, 3.484, 1553, 1.549, 1554,
          2.24, 1559, 2.24, 1575, 2.24, 1587, 1.744, 1653, 1.87, 1670, 2.24,
          1671, 1.87, 1699, 2.24, 1706, 1.639, 1710, 2.24, 1711, 1.87, 1712,
          2.24, 1734, 1.639, 1738, 1.47, 1783, 2.028, 1789, 7.374, 1917, 2.24,
          1977, 1.87, 1978, 4.367, 1981, 2.028, 1982, 2.028, 1986, 2.24, 2107,
          2.24, 2112, 1.744, 2130, 3.155, 2144, 1.87, 2157, 2.24, 2169, 2.24,
          2181, 2.24, 2199, 2.24, 2214, 2.24, 2232, 2.24, 2244, 2.24, 2256,
          2.028, 2264, 2.028, 2265, 2.24, 2275, 1.744, 2276, 4.367, 2285, 2.028,
          2289, 2.24, 2301, 1.639, 2355, 2.24, 2444, 2.24, 2445, 2.24, 2446,
          2.561, 2447, 2.561, 2448, 2.24, 2449, 3.484, 2450, 8.392, 2451, 6.602,
          2452, 6.325, 2453, 7.917, 2454, 5.515, 2455, 5.974, 2456, 3.984, 2457,
          2.24, 2458, 2.561, 2459, 2.561, 2460, 2.561, 2461, 2.561, 2462, 2.561,
          2463, 2.561, 2464, 2.561, 2465, 3.984, 2466, 5.515, 2467, 2.561, 2468,
          2.561, 2469, 2.561, 2470, 2.561, 2471, 2.561, 2472, 2.561, 2473,
          2.561, 2474, 2.561, 2475, 2.561, 2476, 2.561, 2477, 2.561, 2478, 2.24,
          2479, 2.561, 2480, 2.24, 2481, 2.561, 2482, 4.823, 2483, 2.24, 2484,
          4.889, 2485, 3.484, 2486, 2.24, 2487, 6.325, 2488, 2.24, 2489, 4.823,
          2490, 2.24, 2491, 2.24, 2492, 2.24, 2493, 3.484, 2494, 2.24, 2495,
          2.24, 2496, 4.823, 2497, 2.24, 2498, 5.229, 2499, 2.24, 2500, 2.24,
          2501, 2.24, 2502, 2.24, 2503, 2.24, 2504, 2.24, 2505, 2.24, 2506,
          2.24, 2507, 2.561,
        ],
      ],
      ["title/dependencies.html", [273, 2.302, 2508, 2.746]],
      [
        "body/dependencies.html",
        [
          18, 0.012, 21, 0.01, 22, 0.01, 52, 2.776, 81, 2.9, 92, 0.679, 94,
          1.988, 96, 3.157, 98, 1.801, 251, 4.858, 273, 2.558, 288, 2.9, 290,
          2.46, 303, 3.555, 387, 4.858, 388, 4.858, 918, 3.783, 2001, 4.858,
          2353, 4.399, 2509, 5.555, 2510, 8.321, 2511, 5.555, 2512, 5.997, 2513,
          5.555, 2514, 6.858, 2515, 5.997, 2516, 7.439, 2517, 5.555, 2518,
          6.858, 2519, 5.555, 2520, 6.858, 2521, 5.555, 2522, 5.555, 2523,
          5.555, 2524, 5.555, 2525, 5.555, 2526, 5.555, 2527, 5.555, 2528,
          5.555, 2529, 5.555, 2530, 5.555, 2531, 5.555, 2532, 5.555, 2533,
          5.555, 2534, 4.858, 2535, 5.555, 2536, 5.555, 2537, 5.555, 2538,
          5.555, 2539, 4.399, 2540, 4.858, 2541, 5.555, 2542, 5.555, 2543,
          5.555,
        ],
      ],
      ["title/miscellaneous/enumerations.html", [2544, 1.99, 2545, 4.372]],
      [
        "body/miscellaneous/enumerations.html",
        [
          8, 0.247, 17, 0.456, 18, 0.012, 21, 0.009, 22, 0.009, 59, 2.326, 108,
          1.524, 187, 2.82, 188, 3.543, 332, 3.543, 356, 4.596, 367, 2.653, 368,
          4.243, 374, 3.807, 401, 3.613, 402, 4.985, 609, 3.543, 782, 5.102,
          783, 4.596, 865, 2.653, 872, 2.425, 881, 4.286, 894, 3.287, 926,
          4.286, 936, 4.286, 941, 3.807, 1122, 3.843, 1123, 3.843, 1128, 2.934,
          1152, 4.028, 1162, 4.985, 1167, 3.843, 1323, 5.855, 1327, 4.243, 1357,
          5.505, 1776, 5.505, 1777, 4.985, 2042, 4.243, 2043, 4.243, 2119,
          5.505, 2144, 4.596, 2544, 2.785, 2545, 4.243, 2546, 7.851, 2547,
          6.295, 2548, 4.852, 2549, 4.852, 2550, 4.852, 2551, 4.852, 2552,
          4.852, 2553, 4.852, 2554, 4.852, 2555, 4.852, 2556, 4.852, 2557,
          4.852, 2558, 4.852, 2559, 6.295, 2560, 4.852, 2561, 4.852, 2562,
          4.852, 2563, 4.852, 2564, 4.852, 2565, 4.852, 2566, 4.852, 2567,
          4.852, 2568, 6.295, 2569, 6.295, 2570, 6.295, 2571, 6.295, 2572,
          6.295, 2573, 4.852, 2574, 4.852, 2575, 4.852, 2576, 4.852, 2577,
          4.852, 2578, 4.852, 2579, 4.852, 2580, 4.852, 2581, 4.852,
        ],
      ],
      ["title/miscellaneous/functions.html", [2544, 1.99, 2582, 4.372]],
      [
        "body/miscellaneous/functions.html",
        [
          8, 0.318, 11, 0.738, 17, 0.533, 18, 0.012, 21, 0.01, 22, 0.01, 55,
          1.59, 56, 1.003, 75, 1.273, 108, 1.959, 119, 5.008, 249, 4.556, 252,
          6.841, 262, 5.457, 347, 2.232, 401, 4.222, 2275, 5.008, 2278, 5.457,
          2498, 4.941, 2502, 6.433, 2544, 3.581, 2582, 5.457, 2583, 5.457, 2584,
          5.457, 2585, 5.457,
        ],
      ],
      ["title/index.html", [8, 0.177, 2586, 3.032, 2587, 3.467]],
      [
        "body/index.html",
        [
          4, 0.113, 18, 0.011, 21, 0.008, 22, 0.008, 28, 1.994, 56, 0.551, 62,
          0.733, 67, 3.202, 86, 2.587, 103, 1.155, 155, 5.575, 168, 1.399, 174,
          1.27, 188, 5.678, 226, 1.27, 278, 1.79, 281, 3.202, 351, 1.79, 397,
          3.536, 417, 1.604, 435, 3.536, 582, 3.992, 586, 2.785, 615, 2.952,
          684, 2.021, 698, 2.587, 816, 3.536, 865, 2.21, 881, 2.753, 888, 5.678,
          961, 5.048, 981, 3.536, 1034, 4.068, 1128, 2.445, 1190, 4.655, 1777,
          3.202, 1786, 2.952, 1870, 3.536, 2031, 5.899, 2085, 6.514, 2134,
          3.536, 2353, 5.048, 2445, 4.873, 2478, 3.536, 2508, 3.202, 2512,
          3.536, 2534, 4.873, 2539, 3.202, 2540, 4.873, 2586, 3.536, 2588,
          7.206, 2589, 5.572, 2590, 4.043, 2591, 6.375, 2592, 5.572, 2593,
          4.043, 2594, 6.375, 2595, 4.043, 2596, 7.449, 2597, 4.043, 2598,
          5.572, 2599, 3.536, 2600, 4.043, 2601, 4.043, 2602, 4.043, 2603,
          4.043, 2604, 6.375, 2605, 6.375, 2606, 4.043, 2607, 6.675, 2608,
          4.043, 2609, 4.043, 2610, 4.043, 2611, 4.043, 2612, 5.572, 2613,
          5.572, 2614, 6.87, 2615, 4.043, 2616, 5.572, 2617, 5.572, 2618, 4.043,
          2619, 4.043, 2620, 4.043, 2621, 4.043, 2622, 6.375, 2623, 3.536, 2624,
          4.043, 2625, 4.043, 2626, 4.043, 2627, 6.375, 2628, 5.572, 2629,
          4.043, 2630, 3.202, 2631, 5.572, 2632, 5.572, 2633, 4.043, 2634,
          4.043, 2635, 4.043, 2636, 4.043, 2637, 4.043, 2638, 6.87, 2639, 6.87,
          2640, 4.043, 2641, 4.043, 2642, 3.536, 2643, 4.043, 2644, 4.043, 2645,
          4.043, 2646, 4.043, 2647, 4.043, 2648, 4.043, 2649, 5.572, 2650,
          4.043, 2651, 4.043, 2652, 5.572, 2653, 4.043, 2654, 4.043, 2655,
          7.633, 2656, 4.043, 2657, 4.043, 2658, 5.572, 2659, 4.043, 2660,
          4.043, 2661, 4.043, 2662, 5.572, 2663, 4.043, 2664, 4.043, 2665,
          4.043, 2666, 4.043, 2667, 4.043, 2668, 4.043, 2669, 4.043, 2670,
          4.043, 2671, 4.043, 2672, 4.043, 2673, 4.043, 2674, 5.572, 2675,
          4.043, 2676, 4.873, 2677, 5.572, 2678, 5.572, 2679, 4.043, 2680,
          4.043, 2681, 4.043, 2682, 6.87, 2683, 4.043, 2684, 4.043, 2685, 4.043,
          2686, 4.043, 2687, 4.043, 2688, 5.572, 2689, 4.043, 2690, 4.043, 2691,
          4.043, 2692, 4.043, 2693, 4.043, 2694, 4.043, 2695, 4.043, 2696,
          4.043, 2697, 4.043, 2698, 4.043, 2699, 5.572, 2700, 4.043, 2701,
          4.043, 2702, 4.043, 2703, 4.043,
        ],
      ],
      ["title/modules.html", [272, 2.614]],
      [
        "body/modules.html",
        [
          18, 0.01, 21, 0.01, 22, 0.01, 271, 4.42, 272, 2.787, 634, 3.309, 660,
          4.122, 820, 4.42, 1006, 4.42, 1407, 4.122, 1565, 4.42, 1654, 4.42,
          1883, 4.42, 2348, 4.42, 2515, 7.476, 2704, 8.548, 2705, 8.548, 2706,
          8.548,
        ],
      ],
      ["title/overview.html", [2630, 4.496]],
      [
        "body/overview.html",
        [
          2, 1.225, 18, 0.012, 21, 0.008, 22, 0.008, 35, 2.83, 124, 4.4, 166,
          1.438, 206, 2.031, 208, 2.339, 210, 2.414, 212, 2.031, 214, 2.414,
          216, 1.967, 218, 2.031, 221, 2.414, 223, 2.031, 225, 2.031, 228,
          2.031, 230, 2.031, 232, 2.031, 235, 2.031, 237, 2.414, 239, 2.031,
          241, 2.414, 243, 2.414, 245, 2.031, 271, 5.485, 272, 1.913, 273,
          2.614, 274, 3.634, 275, 3.634, 276, 2.837, 277, 2.077, 278, 1.84, 316,
          1.648, 634, 4.586, 635, 3.634, 636, 3.634, 637, 3.634, 660, 5.468,
          661, 3.634, 662, 3.634, 663, 3.634, 726, 4.138, 820, 5.716, 821,
          3.634, 822, 3.634, 823, 3.634, 1006, 5.313, 1007, 3.634, 1008, 3.634,
          1009, 3.634, 1407, 5.115, 1408, 3.634, 1410, 3.634, 1565, 5.716, 1566,
          3.634, 1568, 3.634, 1653, 3.034, 1654, 5.075, 1655, 3.634, 1656,
          3.634, 1738, 3.712, 1883, 6.101, 1884, 3.634, 1885, 3.634, 1886,
          3.634, 2301, 4.138, 2348, 5.716, 2349, 3.634, 2350, 3.634, 2351,
          3.634, 2480, 3.634, 2630, 3.291, 2676, 3.634, 2707, 4.156, 2708,
          4.156,
        ],
      ],
      ["title/properties.html", [9, 0.757, 2508, 2.746]],
      [
        "body/properties.html",
        [9, 1.019, 18, 0.011, 21, 0.011, 22, 0.011, 2539, 5.328, 2709, 6.727],
      ],
      ["title/miscellaneous/typealiases.html", [2544, 1.99, 2710, 4.999]],
      [
        "body/miscellaneous/typealiases.html",
        [
          8, 0.338, 17, 0.553, 18, 0.011, 21, 0.011, 22, 0.011, 374, 4.61, 542,
          4.843, 2544, 3.807, 2711, 6.633, 2712, 6.633, 2713, 6.633,
        ],
      ],
      ["title/miscellaneous/variables.html", [2544, 1.99, 2714, 4.372]],
      [
        "body/miscellaneous/variables.html",
        [
          5, 0.139, 8, 0.132, 9, 0.393, 16, 1.164, 17, 0.547, 18, 0.012, 21,
          0.006, 22, 0.006, 41, 5.008, 51, 1.244, 52, 2.012, 59, 3.511, 62,
          0.53, 63, 5.255, 75, 0.449, 101, 3.905, 108, 2.394, 115, 2.011, 119,
          1.768, 148, 3.287, 173, 1.393, 186, 2.651, 187, 2.737, 192, 1.107,
          216, 0.79, 219, 1.848, 233, 1.906, 249, 1.896, 250, 2.271, 253, 2.271,
          254, 2.271, 256, 2.94, 259, 3.188, 260, 2.271, 263, 4.246, 268, 3.188,
          310, 1.57, 332, 1.896, 343, 4.056, 436, 2.056, 440, 3.521, 444, 2.271,
          495, 2.46, 499, 1.768, 501, 2.741, 519, 3.521, 559, 3.155, 580, 2.94,
          582, 2.012, 817, 3.905, 872, 3.316, 1273, 1.896, 1274, 2.056, 1275,
          3.601, 1278, 3.188, 1279, 4.794, 1280, 3.601, 1281, 3.188, 1282,
          2.271, 1283, 3.521, 1284, 2.271, 1421, 4.056, 1510, 3.521, 1576,
          3.521, 1630, 4.645, 1671, 2.94, 1734, 2.576, 1786, 1.896, 1977, 1.896,
          1978, 2.056, 1981, 3.188, 1982, 3.188, 1983, 2.271, 1984, 3.521, 1985,
          2.271, 2103, 3.521, 2130, 2.056, 2144, 3.601, 2217, 1.768, 2256,
          3.188, 2275, 1.768, 2276, 2.056, 2285, 3.188, 2286, 2.271, 2287,
          3.521, 2288, 2.271, 2448, 2.271, 2449, 4.858, 2457, 2.271, 2482,
          2.271, 2483, 5.258, 2485, 2.271, 2486, 3.521, 2488, 4.312, 2489,
          2.271, 2490, 3.521, 2491, 3.521, 2492, 3.521, 2493, 2.271, 2494,
          3.521, 2495, 4.312, 2496, 2.271, 2497, 3.521, 2498, 2.056, 2499,
          3.521, 2500, 3.521, 2501, 4.312, 2503, 2.271, 2504, 2.271, 2505,
          2.271, 2506, 2.271, 2544, 1.49, 2583, 5.563, 2584, 3.521, 2585, 3.521,
          2599, 3.521, 2607, 4.858, 2623, 2.271, 2642, 3.521, 2714, 2.271, 2715,
          2.596, 2716, 2.596, 2717, 2.596, 2718, 2.596, 2719, 4.931, 2720,
          4.931, 2721, 4.931, 2722, 5.555, 2723, 5.555, 2724, 5.555, 2725,
          2.596, 2726, 2.596, 2727, 2.596, 2728, 4.026, 2729, 4.026, 2730,
          4.026, 2731, 5.555, 2732, 2.596, 2733, 2.596, 2734, 2.596, 2735,
          2.596, 2736, 5.555, 2737, 4.026, 2738, 4.931, 2739, 2.596, 2740,
          4.931, 2741, 4.931, 2742, 4.931, 2743, 4.931, 2744, 4.931, 2745,
          4.026, 2746, 4.026, 2747, 4.026, 2748, 4.026, 2749, 4.026, 2750,
          4.026, 2751, 4.026, 2752, 4.026, 2753, 4.026, 2754, 4.026, 2755,
          2.596, 2756, 4.026, 2757, 2.596, 2758, 2.596, 2759, 2.596, 2760,
          2.596, 2761, 2.596, 2762, 2.596, 2763, 2.596, 2764, 2.596, 2765,
          2.596, 2766, 2.596, 2767, 2.596, 2768, 2.596, 2769, 7.041, 2770,
          6.636, 2771, 7.041, 2772, 2.596, 2773, 2.596, 2774, 2.596, 2775,
          2.596, 2776, 2.596, 2777, 2.596, 2778, 2.596, 2779, 4.026, 2780,
          2.596, 2781, 4.026, 2782, 4.026, 2783, 2.596, 2784, 2.596, 2785,
          2.596, 2786, 2.596,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 18,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 540,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["0.0.0", { _index: 2709, title: {}, body: { "properties.html": {} } }],
      ["0.0.0.0:8181", { _index: 2679, title: {}, body: { "index.html": {} } }],
      ["0.0.6", { _index: 2530, title: {}, body: { "dependencies.html": {} } }],
      [
        "0.053",
        {
          _index: 1436,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "0.096",
        {
          _index: 2098,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.11.4",
        { _index: 2543, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "0.12",
        {
          _index: 2100,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.12.7",
        { _index: 2531, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "0.14",
        {
          _index: 2099,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.16",
        {
          _index: 2090,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.23",
        {
          _index: 2091,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.258",
        {
          _index: 631,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "0.25em",
        {
          _index: 2128,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "0.25rem",
        {
          _index: 1877,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "0.2s",
        {
          _index: 801,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "0.325",
        {
          _index: 1867,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "0.41",
        {
          _index: 1527,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "0.49",
        {
          _index: 1526,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "0.4rem",
        {
          _index: 1241,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "0.5em",
        {
          _index: 2081,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.5rem",
        {
          _index: 1204,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "0.676",
        {
          _index: 2190,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "0.8rem",
        {
          _index: 2071,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "0.97",
        {
          _index: 1528,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "0.9rem",
        {
          _index: 2092,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["0/1", { _index: 2450, title: {}, body: { "coverage.html": {} } }],
      ["0/11", { _index: 2467, title: {}, body: { "coverage.html": {} } }],
      ["0/12", { _index: 2456, title: {}, body: { "coverage.html": {} } }],
      ["0/16", { _index: 2464, title: {}, body: { "coverage.html": {} } }],
      ["0/17", { _index: 2460, title: {}, body: { "coverage.html": {} } }],
      ["0/2", { _index: 2484, title: {}, body: { "coverage.html": {} } }],
      ["0/24", { _index: 2461, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 2453, title: {}, body: { "coverage.html": {} } }],
      ["0/34", { _index: 2462, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 2451, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 2452, title: {}, body: { "coverage.html": {} } }],
      ["0/6", { _index: 2454, title: {}, body: { "coverage.html": {} } }],
      ["0/7", { _index: 2466, title: {}, body: { "coverage.html": {} } }],
      ["0/8", { _index: 2455, title: {}, body: { "coverage.html": {} } }],
      [
        "00000000",
        {
          _index: 2412,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "0fe271d28c2d",
        {
          _index: 2761,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "0px",
        {
          _index: 1548,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "0rem",
        {
          _index: 1871,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "1",
        {
          _index: 608,
          title: { "injectables/UserEffects-1.html": {} },
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      ["1.2.0", { _index: 2541, title: {}, body: { "dependencies.html": {} } }],
      [
        "1.5rem",
        {
          _index: 1218,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "1.5s",
        {
          _index: 591,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      ["1/1", { _index: 2487, title: {}, body: { "coverage.html": {} } }],
      ["1/13", { _index: 2459, title: {}, body: { "coverage.html": {} } }],
      ["1/21", { _index: 2481, title: {}, body: { "coverage.html": {} } }],
      ["1/3", { _index: 2479, title: {}, body: { "coverage.html": {} } }],
      ["1/7", { _index: 2473, title: {}, body: { "coverage.html": {} } }],
      [
        "10",
        {
          _index: 1653,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "100",
        {
          _index: 597,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "1000",
        {
          _index: 462,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "10000",
        {
          _index: 2049,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "100px",
        {
          _index: 2087,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "10h00",
        {
          _index: 773,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "10px",
        {
          _index: 703,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "10rem",
        {
          _index: 1989,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["11", { _index: 2661, title: {}, body: { "index.html": {} } }],
      [
        "11111111",
        {
          _index: 2411,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "12",
        {
          _index: 1172,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "12345678",
        {
          _index: 2410,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "124px",
        {
          _index: 614,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "13.0.2",
        { _index: 2516, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "13.1.2",
        { _index: 2526, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "13.2.0",
        { _index: 2518, title: {}, body: { "dependencies.html": {} } },
      ],
      ["13.2.6", { _index: 2592, title: {}, body: { "index.html": {} } }],
      [
        "13.3.1",
        { _index: 2510, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "13.3.2",
        {
          _index: 2512,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      ["14", { _index: 2472, title: {}, body: { "coverage.html": {} } }],
      [
        "14.0.0",
        { _index: 2522, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "14h00",
        {
          _index: 774,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "14px",
        {
          _index: 1181,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "14rem",
        {
          _index: 796,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "14s",
        {
          _index: 1523,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "150px",
        {
          _index: 1030,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "156px",
        {
          _index: 1536,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "15rem",
        {
          _index: 1874,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "16",
        {
          _index: 2676,
          title: {},
          body: { "index.html": {}, "overview.html": {} },
        },
      ],
      ["16.13.02", { _index: 2637, title: {}, body: { "index.html": {} } }],
      [
        "17px",
        {
          _index: 1881,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "18rem",
        {
          _index: 1875,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "19h00",
        {
          _index: 775,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "1px",
        {
          _index: 1235,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "1rem",
        {
          _index: 1173,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "1s",
        {
          _index: 1531,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "2",
        {
          _index: 1238,
          title: { "injectables/UserEffects-2.html": {} },
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["2.0a", { _index: 2651, title: {}, body: { "index.html": {} } }],
      ["2.2.1", { _index: 2529, title: {}, body: { "dependencies.html": {} } }],
      ["2.3.0", { _index: 2538, title: {}, body: { "dependencies.html": {} } }],
      ["2/20", { _index: 2463, title: {}, body: { "coverage.html": {} } }],
      ["20", { _index: 2707, title: {}, body: { "overview.html": {} } }],
      [
        "200",
        {
          _index: 609,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "2021",
        {
          _index: 694,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "2022",
        {
          _index: 695,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "20deg",
        {
          _index: 1543,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "20px",
        {
          _index: 705,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "221",
        {
          _index: 2096,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "227",
        {
          _index: 2179,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "229",
        {
          _index: 2097,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "22h00",
        {
          _index: 776,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      ["23", { _index: 2474, title: {}, body: { "coverage.html": {} } }],
      [
        "234",
        {
          _index: 1866,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      ["24.2mbaprès", { _index: 2663, title: {}, body: { "index.html": {} } }],
      [
        "24h",
        {
          _index: 756,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      ["25", { _index: 2708, title: {}, body: { "overview.html": {} } }],
      [
        "250px",
        {
          _index: 2084,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "254",
        {
          _index: 2189,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "255",
        {
          _index: 2180,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "25rem",
        {
          _index: 1210,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "280px",
        {
          _index: 2083,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["28cb65260f81", { _index: 2660, title: {}, body: { "index.html": {} } }],
      [
        "28d1",
        {
          _index: 2758,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "2px",
        {
          _index: 2094,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "2rem",
        {
          _index: 1031,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "2s",
        {
          _index: 1533,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      ["3.1.3", { _index: 2533, title: {}, body: { "dependencies.html": {} } }],
      ["3/13", { _index: 2475, title: {}, body: { "coverage.html": {} } }],
      ["3/5", { _index: 2465, title: {}, body: { "coverage.html": {} } }],
      ["3/8", { _index: 2471, title: {}, body: { "coverage.html": {} } }],
      [
        "30",
        {
          _index: 1242,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "300",
        {
          _index: 1549,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "3000",
        {
          _index: 1126,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "30px",
        {
          _index: 799,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      ["31", { _index: 2476, title: {}, body: { "coverage.html": {} } }],
      [
        "310px",
        {
          _index: 1537,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "33",
        {
          _index: 2478,
          title: {},
          body: { "coverage.html": {}, "index.html": {} },
        },
      ],
      [
        "35px",
        {
          _index: 613,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      ["37", { _index: 2470, title: {}, body: { "coverage.html": {} } }],
      ["38", { _index: 2468, title: {}, body: { "coverage.html": {} } }],
      [
        "3px",
        {
          _index: 1878,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "3s",
        {
          _index: 1517,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "4",
        {
          _index: 2480,
          title: {},
          body: { "coverage.html": {}, "overview.html": {} },
        },
      ],
      [
        "4.17.3",
        { _index: 2524, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "40",
        {
          _index: 600,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "400",
        {
          _index: 1213,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "401",
        {
          _index: 2551,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "401b",
        {
          _index: 2759,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "403",
        {
          _index: 2553,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "404",
        {
          _index: 2555,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      ["4200:4200", { _index: 2667, title: {}, body: { "index.html": {} } }],
      ["4201docker", { _index: 2698, title: {}, body: { "index.html": {} } }],
      [
        "495057",
        {
          _index: 1182,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "4b4b62",
        {
          _index: 1551,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "4e00",
        {
          _index: 2765,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "4px",
        {
          _index: 2101,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "4s",
        {
          _index: 1535,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      ["5.0.0", { _index: 2535, title: {}, body: { "dependencies.html": {} } }],
      ["5/13", { _index: 2469, title: {}, body: { "coverage.html": {} } }],
      [
        "50",
        {
          _index: 611,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "500",
        {
          _index: 983,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "5000",
        {
          _index: 2060,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "511",
        {
          _index: 2557,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "550px",
        {
          _index: 2047,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "576px",
        {
          _index: 2102,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["6/19", { _index: 2477, title: {}, body: { "coverage.html": {} } }],
      [
        "60",
        {
          _index: 1541,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "607d8b",
        {
          _index: 1206,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "640px",
        {
          _index: 1882,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "66",
        {
          _index: 602,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "6px",
        {
          _index: 2089,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "6rem",
        {
          _index: 1990,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "6s",
        {
          _index: 595,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      ["7", { _index: 2458, title: {}, body: { "coverage.html": {} } }],
      ["7.4.0", { _index: 2536, title: {}, body: { "dependencies.html": {} } }],
      [
        "70",
        {
          _index: 2044,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "700",
        {
          _index: 2070,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "75",
        {
          _index: 2104,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "7rem",
        {
          _index: 794,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "7s",
        {
          _index: 1530,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "8",
        {
          _index: 1652,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "80",
        {
          _index: 604,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      ["80/tcp", { _index: 2680, title: {}, body: { "index.html": {} } }],
      [
        "86a8c0",
        {
          _index: 1194,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "89",
        {
          _index: 612,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "8px",
        {
          _index: 1201,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "8rem",
        {
          _index: 2076,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "90",
        {
          _index: 605,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "950",
        {
          _index: 633,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "960px",
        {
          _index: 1233,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "96560464",
        {
          _index: 2757,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "96b05134",
        {
          _index: 2763,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "9]{9",
        {
          _index: 1639,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "9c39",
        {
          _index: 2760,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "9fb7ed",
        {
          _index: 599,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "_recipe",
        {
          _index: 2065,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "_recipetype",
        {
          _index: 1715,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "_res",
        {
          _index: 1841,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "_title",
        {
          _index: 2187,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "_user",
        {
          _index: 384,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "_user.autorisations.isadmin",
        {
          _index: 500,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "_user.autorisations.isfranchisee",
        {
          _index: 502,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "_user.roles.foreach((e",
        {
          _index: 497,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "a952",
        {
          _index: 2764,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "absolute",
        {
          _index: 617,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "acceder",
        {
          _index: 1384,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "accept",
        {
          _index: 1149,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "acceptbuttonstyleclass",
        {
          _index: 1148,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "access",
        {
          _index: 436,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "access_token",
        {
          _index: 10,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {} },
        },
      ],
      [
        "accesstoken",
        {
          _index: 352,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "accesstokenisexpired",
        {
          _index: 318,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "accesstokenisexpired(data",
        {
          _index: 344,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "accesstokenmodel",
        {
          _index: 1,
          title: { "interfaces/AccessTokenModel.html": {} },
          body: {
            "interfaces/AccessTokenModel.html": {},
            "injectables/AuthService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "action",
        {
          _index: 263,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "interfaces/IngredientState.html": {},
            "interfaces/RecipeState.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "action's",
        { _index: 2282, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "action.ingredient",
        {
          _index: 1283,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "action.recipe",
        {
          _index: 1984,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "action.userdetails",
        {
          _index: 2287,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "actionreducer",
        {
          _index: 252,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "actionreducermap",
        {
          _index: 253,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "actions",
        {
          _index: 2217,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "activate",
        {
          _index: 38,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "activatedroute",
        {
          _index: 553,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "activatedroutesnapshot",
        {
          _index: 58,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "actual_component",
        {
          _index: 248,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "add",
        {
          _index: 155,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "address",
        {
          _index: 23,
          title: { "interfaces/Address.html": {} },
          body: {
            "interfaces/Address.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "address.city",
        {
          _index: 765,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "address.country",
        {
          _index: 766,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "address.first_line",
        {
          _index: 762,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "address.model",
        { _index: 713, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "address.second_line",
        {
          _index: 763,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "address.zip_code",
        {
          _index: 764,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "address_id",
        { _index: 707, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "addresses",
        {
          _index: 2382,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "addstarrecipe",
        {
          _index: 852,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "addstarrecipe(item",
        {
          _index: 863,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "admin",
        {
          _index: 368,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "adminaccess",
        {
          _index: 101,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "adminguard",
        {
          _index: 34,
          title: { "guards/AdminGuard.html": {} },
          body: { "guards/AdminGuard.html": {}, "coverage.html": {} },
        },
      ],
      ["ago", { _index: 2662, title: {}, body: { "index.html": {} } }],
      [
        "ajout",
        {
          _index: 1133,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ajouter",
        {
          _index: 2041,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "aliases",
        {
          _index: 2711,
          title: {},
          body: { "miscellaneous/typealiases.html": {} },
        },
      ],
      [
        "align",
        {
          _index: 627,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "allergen",
        {
          _index: 1021,
          title: {},
          body: {
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
          },
        },
      ],
      [
        "alternate",
        {
          _index: 1518,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "angular",
        {
          _index: 2031,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "modules/UsersModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "angular.json",
        {
          _index: 2642,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "angular/animations",
        { _index: 2509, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/cdk",
        { _index: 2511, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/common",
        {
          _index: 288,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/common/http",
        {
          _index: 146,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "modules/FranchiseeModule.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "angular/compiler",
        { _index: 2513, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/core",
        {
          _index: 92,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/forms",
        {
          _index: 290,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "components/FranchiseeComponent.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/platform",
        { _index: 2514, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/router",
        {
          _index: 94,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "animation",
        {
          _index: 589,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "antialiased",
        {
          _index: 1185,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "api",
        {
          _index: 152,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "api/logout",
        {
          _index: 2558,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "apibaseurl",
        {
          _index: 2738,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "apitokeninterceptorservice",
        {
          _index: 124,
          title: { "interceptors/ApiTokenInterceptorService.html": {} },
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "apiurl",
        {
          _index: 2754,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "app",
        {
          _index: 174,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "app.component.html",
        {
          _index: 178,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "app.component.scss",
        {
          _index: 176,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "appcomponent",
        {
          _index: 165,
          title: { "components/AppComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["application", { _index: 2686, title: {}, body: { "index.html": {} } }],
      ["applications", { _index: 2684, title: {}, body: { "index.html": {} } }],
      [
        "appstate",
        {
          _index: 99,
          title: { "interfaces/AppState.html": {} },
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/ProfileComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "appurl",
        {
          _index: 2737,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "array",
        {
          _index: 519,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["artifacts", { _index: 2608, title: {}, body: { "index.html": {} } }],
      [
        "asobservable",
        {
          _index: 1498,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "associated",
        { _index: 73, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "async",
        {
          _index: 129,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "attached",
        {
          _index: 1261,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "attachment",
        {
          _index: 1197,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "attachpictures",
        {
          _index: 1918,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "attachpictures(picture",
        {
          _index: 1926,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "attachpictures(this.picture",
        {
          _index: 1843,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "attched",
        {
          _index: 1351,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "attention",
        {
          _index: 1260,
          title: {},
          body: {
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "auth",
        {
          _index: 440,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "auth_code_verifier",
        {
          _index: 2578,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "auth_state",
        {
          _index: 2576,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "auth_user_token",
        {
          _index: 2580,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "authenticated",
        {
          _index: 378,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authenticated.guard.ts",
        {
          _index: 1396,
          title: {},
          body: { "guards/IsAuthenticatedGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "authenticated.guard.ts:15",
        {
          _index: 1397,
          title: {},
          body: { "guards/IsAuthenticatedGuard.html": {} },
        },
      ],
      [
        "authenticated.guard.ts:18",
        {
          _index: 1398,
          title: {},
          body: { "guards/IsAuthenticatedGuard.html": {} },
        },
      ],
      [
        "authenticated/is",
        {
          _index: 1395,
          title: {},
          body: { "guards/IsAuthenticatedGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "authentifier",
        {
          _index: 1377,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "authmodule",
        {
          _index: 271,
          title: { "modules/AuthModule.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "authorizad",
        { _index: 815, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "authorization",
        {
          _index: 162,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "authorization_code",
        {
          _index: 448,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authorizationcodetoaccesstoken",
        {
          _index: 319,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authorizationcodetoaccesstoken(code",
        {
          _index: 348,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authorize?${query.tostring",
        {
          _index: 430,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authorized",
        {
          _index: 576,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "authservice",
        {
          _index: 133,
          title: { "injectables/AuthService.html": {} },
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoginComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "auto",
        {
          _index: 791,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "automatically",
        { _index: 2600, title: {}, body: { "index.html": {} } },
      ],
      [
        "autorisation",
        {
          _index: 541,
          title: { "interfaces/Autorisation.html": {} },
          body: {
            "interfaces/Autorisation.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "autorisations",
        {
          _index: 493,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "autorise",
        {
          _index: 1383,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "available_at",
        { _index: 1700, title: {}, body: { "interfaces/Recipe.html": {} } },
      ],
      [
        "availabledate",
        {
          _index: 1817,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "avatarmodule",
        {
          _index: 1011,
          title: {},
          body: {
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
          },
        },
      ],
      [
        "await",
        {
          _index: 158,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "b94a",
        {
          _index: 2766,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "backend",
        {
          _index: 357,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "background",
        {
          _index: 629,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "badgemodule",
        {
          _index: 640,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
          },
        },
      ],
      [
        "bahar",
        {
          _index: 2404,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "baixo",
        {
          _index: 1521,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "base",
        {
          _index: 1860,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "base_price",
        {
          _index: 1701,
          title: {},
          body: {
            "interfaces/Recipe.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "based",
        { _index: 2281, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "basezindex",
        {
          _index: 2048,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "basic",
        {
          _index: 1869,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "bearer",
        {
          _index: 163,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "before",
        { _index: 265, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "begins",
        { _index: 810, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "behaviorsubject",
        {
          _index: 1451,
          title: {},
          body: {
            "injectables/LoadingService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "behaviorsubject(false",
        {
          _index: 1449,
          title: {},
          body: {
            "injectables/LoadingService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "better",
        {
          _index: 964,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "between",
        {
          _index: 86,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "bezier(0.1",
        {
          _index: 1525,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "bien",
        {
          _index: 1323,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "bientôt",
        {
          _index: 998,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "block",
        {
          _index: 1032,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "body",
        {
          _index: 963,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "bold",
        {
          _index: 1244,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "boolean",
        {
          _index: 347,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "interfaces/User.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "border",
        {
          _index: 797,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "bottom",
        {
          _index: 619,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "box",
        {
          _index: 802,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "break",
        {
          _index: 1381,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      ["browse", { _index: 2706, title: {}, body: { "modules.html": {} } }],
      [
        "browser",
        {
          _index: 2515,
          title: {},
          body: { "dependencies.html": {}, "modules.html": {} },
        },
      ],
      [
        "build",
        {
          _index: 2607,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "button",
        {
          _index: 1490,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
          },
        },
      ],
      [
        "buttonmodule",
        {
          _index: 292,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      ["c", { _index: 2634, title: {}, body: { "index.html": {} } }],
      [
        "c47406527d49",
        {
          _index: 2767,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cache",
        {
          _index: 506,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "calc(100",
        {
          _index: 793,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "calendar",
        {
          _index: 1208,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "calendarmodule",
        {
          _index: 830,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "calibri",
        {
          _index: 2196,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "callback",
        {
          _index: 548,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "callback'},{'name",
        {
          _index: 207,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "callback.component.html",
        {
          _index: 550,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "callback.component.scss",
        {
          _index: 549,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "callback/callback.component",
        { _index: 297, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "callbackcomponent",
        {
          _index: 206,
          title: { "components/CallbackComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "calling",
        {
          _index: 2781,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "canaccess",
        {
          _index: 119,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "canaccess(user",
        {
          _index: 2585,
          title: {},
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "canactivate",
        {
          _index: 45,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "canactivate(route",
        {
          _index: 57,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "cancelled",
        { _index: 812, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "canload",
        {
          _index: 46,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "canload(route",
        {
          _index: 77,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      ["capabilities", { _index: 2625, title: {}, body: { "index.html": {} } }],
      [
        "card",
        {
          _index: 2093,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "cardmodule",
        {
          _index: 838,
          title: {},
          body: { "modules/FranchiseeModule.html": {} },
        },
      ],
      [
        "carte",
        {
          _index: 784,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "case",
        {
          _index: 1372,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "catalog",
        {
          _index: 901,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "catch",
        {
          _index: 1478,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "catcherror",
        {
          _index: 389,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "catcherror((err",
        {
          _index: 452,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "catcherror((error",
        {
          _index: 977,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "catcherror(this.handleerror('getfranchisees",
        {
          _index: 919,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "catcherror(this.handleerror('getrecipes",
        {
          _index: 1954,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "category",
        {
          _index: 2078,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "caught",
        {
          _index: 956,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "ccbe1c",
        {
          _index: 606,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "cell",
        {
          _index: 1578,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "center",
        {
          _index: 626,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "cette",
        {
          _index: 1385,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "challenge",
        {
          _index: 413,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "challenger",
        {
          _index: 433,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "champ",
        {
          _index: 1335,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "change",
        {
          _index: 435,
          title: {},
          body: { "injectables/AuthService.html": {}, "index.html": {} },
        },
      ],
      [
        "changed",
        {
          _index: 444,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "character",
        {
          _index: 1590,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "check",
        {
          _index: 2540,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      [
        "checkboxmodule",
        {
          _index: 646,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "checkerror",
        {
          _index: 1726,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "checkerror(controlname",
        {
          _index: 1740,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "checkifauthenticated",
        {
          _index: 48,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "checks",
        {
          _index: 105,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "child",
        {
          _index: 42,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      ["choice", { _index: 2621, title: {}, body: { "index.html": {} } }],
      [
        "choose",
        {
          _index: 1870,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "cima",
        {
          _index: 1529,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "circle",
        {
          _index: 588,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "city",
        { _index: 25, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      [
        "class",
        {
          _index: 113,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        'class*="col',
        {
          _index: 1171,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "clear",
        {
          _index: 1240,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["cli", { _index: 2591, title: {}, body: { "index.html": {} } }],
      [
        "client",
        {
          _index: 342,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "client_id",
        {
          _index: 419,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      ["clone", { _index: 2650, title: {}, body: { "index.html": {} } }],
      [
        "closed_at",
        {
          _index: 671,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      [
        "cluster_authmodule",
        {
          _index: 274,
          title: {},
          body: { "modules/AuthModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_authmodule_declarations",
        {
          _index: 275,
          title: {},
          body: { "modules/AuthModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_componentsmodule",
        {
          _index: 635,
          title: {},
          body: { "modules/ComponentsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_componentsmodule_declarations",
        {
          _index: 636,
          title: {},
          body: { "modules/ComponentsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_componentsmodule_exports",
        {
          _index: 637,
          title: {},
          body: { "modules/ComponentsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_defaultmodule",
        {
          _index: 661,
          title: {},
          body: { "modules/DefaultModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_defaultmodule_declarations",
        {
          _index: 663,
          title: {},
          body: { "modules/DefaultModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_defaultmodule_exports",
        {
          _index: 662,
          title: {},
          body: { "modules/DefaultModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_franchiseemodule",
        {
          _index: 821,
          title: {},
          body: { "modules/FranchiseeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_franchiseemodule_declarations",
        {
          _index: 822,
          title: {},
          body: { "modules/FranchiseeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_franchiseemodule_providers",
        {
          _index: 823,
          title: {},
          body: { "modules/FranchiseeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_homemodule",
        {
          _index: 1007,
          title: {},
          body: { "modules/HomeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_homemodule_declarations",
        {
          _index: 1008,
          title: {},
          body: { "modules/HomeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_homemodule_exports",
        {
          _index: 1009,
          title: {},
          body: { "modules/HomeModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_layoutsmodule",
        {
          _index: 1408,
          title: {},
          body: { "modules/LayoutsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_layoutsmodule_exports",
        {
          _index: 1410,
          title: {},
          body: { "modules/LayoutsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_layoutsmodule_imports",
        { _index: 1409, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "cluster_principalmodule",
        {
          _index: 1566,
          title: {},
          body: { "modules/PrincipalModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_principalmodule_declarations",
        {
          _index: 1568,
          title: {},
          body: { "modules/PrincipalModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_principalmodule_imports",
        {
          _index: 1567,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "cluster_profilemodule",
        {
          _index: 1655,
          title: {},
          body: { "modules/ProfileModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_profilemodule_declarations",
        {
          _index: 1656,
          title: {},
          body: { "modules/ProfileModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_recipemanagementmodule",
        {
          _index: 1884,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_recipemanagementmodule_declarations",
        {
          _index: 1886,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_recipemanagementmodule_providers",
        {
          _index: 1885,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_usersmodule",
        {
          _index: 2349,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usersmodule_declarations",
        {
          _index: 2351,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usersmodule_providers",
        {
          _index: 2350,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "code",
        {
          _index: 351,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/IngreType.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "interfaces/User.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "code_challenge",
        {
          _index: 425,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "code_challenge_method",
        {
          _index: 426,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "code_verifier",
        {
          _index: 449,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "code_verify",
        {
          _index: 2577,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "codehttp",
        {
          _index: 1357,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "codehttp.http_401_unauthorized",
        {
          _index: 1382,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "codehttp.http_404_not_found",
        {
          _index: 1386,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "codehttp.http_511_network_authentication_required",
        {
          _index: 1373,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "col",
        {
          _index: 1170,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "color",
        {
          _index: 594,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "column",
        {
          _index: 788,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["command", { _index: 2622, title: {}, body: { "index.html": {} } }],
      [
        "commonmodule",
        {
          _index: 287,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "complete",
        {
          _index: 1643,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      ["compodoc", { _index: 2682, title: {}, body: { "index.html": {} } }],
      [
        "compodoc/compodoc",
        { _index: 2688, title: {}, body: { "index.html": {} } },
      ],
      [
        "componem",
        {
          _index: 755,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "component",
        {
          _index: 62,
          title: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
          body: {
            "guards/AdminGuard.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "modules/FranchiseeModule.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "component_template",
        {
          _index: 204,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "components",
        {
          _index: 166,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "components/components.module",
        { _index: 666, title: {}, body: { "modules/DefaultModule.html": {} } },
      ],
      [
        "componentsmodule",
        {
          _index: 634,
          title: { "modules/ComponentsModule.html": {} },
          body: {
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      ["compose", { _index: 2699, title: {}, body: { "index.html": {} } }],
      [
        "compte",
        {
          _index: 2572,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "concatmap",
        {
          _index: 1452,
          title: {},
          body: {
            "injectables/LoadingService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "concatmap((action",
        {
          _index: 2227,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "config",
        {
          _index: 1716,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.ingredients",
        {
          _index: 1793,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.ingredientstypes",
        {
          _index: 1796,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.mode",
        {
          _index: 1800,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.pictures",
        {
          _index: 1802,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.recipe",
        {
          _index: 1792,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "config.data.recipetype",
        {
          _index: 1795,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "configuration",
        { _index: 2689, title: {}, body: { "index.html": {} } },
      ],
      [
        "confirm",
        {
          _index: 1143,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "confirmation",
        {
          _index: 1329,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "confirmationservice",
        {
          _index: 1027,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "confirmdialogmodule",
        {
          _index: 1890,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "console",
        {
          _index: 953,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "console.error('error",
        {
          _index: 979,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "console.error('some",
        {
          _index: 986,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "console.error(error",
        {
          _index: 952,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "console.log",
        {
          _index: 917,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        'console.log("désol',
        {
          _index: 1374,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "console.log('[authervice",
        {
          _index: 520,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('[authservice",
        {
          _index: 504,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('[intercept",
        {
          _index: 151,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "console.log('actions",
        { _index: 266, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "console.log('auth",
        {
          _index: 579,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "console.log('callback",
        {
          _index: 567,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "console.log('erreu",
        {
          _index: 1609,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "console.log('erreur",
        {
          _index: 1332,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "console.log('franchisee",
        {
          _index: 754,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "console.log('franchiseeservice",
        {
          _index: 969,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "console.log('get",
        {
          _index: 1361,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "console.log('guard",
        { _index: 819, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "console.log('ingredienttypesservice",
        {
          _index: 1392,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "console.log('je",
        {
          _index: 571,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "console.log('makeingredient",
        {
          _index: 1110,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "console.log('page",
        {
          _index: 1387,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "console.log('picture",
        {
          _index: 1853,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "console.log('profile",
        {
          _index: 1631,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "console.log('recipeservice",
        {
          _index: 1976,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "console.log('refresh",
        {
          _index: 472,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('res",
        {
          _index: 1326,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "console.log('return",
        {
          _index: 476,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('selected",
        {
          _index: 1847,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "console.log('service",
        {
          _index: 923,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "console.log('set",
        {
          _index: 457,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('state",
        { _index: 264, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "console.log('topbar",
        {
          _index: 2212,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "console.log('try",
        {
          _index: 434,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log('une",
        {
          _index: 1389,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "console.log('user",
        {
          _index: 474,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "console.log([currentrole",
        {
          _index: 1679,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "console.log(`error",
        {
          _index: 980,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "console.log(error",
        {
          _index: 1130,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "console.log(req",
        {
          _index: 989,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "console.log(this.user",
        {
          _index: 1605,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "const",
        {
          _index: 157,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "modules/FranchiseeModule.html": {},
            "injectables/FranchiseeService.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngredientState.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "components/RecipesComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "constants/constants",
        {
          _index: 906,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "constructor",
        {
          _index: 49,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "constructor(actions",
        {
          _index: 2216,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "constructor(authservice",
        {
          _index: 132,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "constructor(franchiseeservice",
        {
          _index: 725,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "constructor(http",
        {
          _index: 336,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "constructor(ingredientservice",
        {
          _index: 1050,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "constructor(ingredienttypeservice",
        {
          _index: 1295,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "constructor(loadingservice",
        {
          _index: 1422,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "constructor(primengconfig",
        {
          _index: 181,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "constructor(private",
        {
          _index: 114,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoginComponent.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "constructor(public",
        {
          _index: 975,
          title: {},
          body: {
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "constructor(recipeservice",
        {
          _index: 1998,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "constructor(ref",
        {
          _index: 1735,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "constructor(router",
        {
          _index: 50,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "constructor(store",
        {
          _index: 552,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "constructor(usersservice",
        {
          _index: 2300,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "consumption",
        {
          _index: 967,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "contact",
        {
          _index: 718,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "contact.email",
        {
          _index: 760,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "contact.phone",
        {
          _index: 758,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "container",
        {
          _index: 615,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/TabsComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "contains",
        { _index: 71, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      ["conteneur", { _index: 2665, title: {}, body: { "index.html": {} } }],
      [
        "content",
        {
          _index: 625,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TabsComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "contentstyle",
        {
          _index: 2046,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "contextmenumodule",
        { _index: 1664, title: {}, body: { "modules/ProfileModule.html": {} } },
      ],
      [
        "continue",
        {
          _index: 887,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "contractor",
        {
          _index: 2575,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "controlname",
        {
          _index: 1743,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "cookie",
        { _index: 2525, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "copyright",
        {
          _index: 691,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "country",
        {
          _index: 26,
          title: {},
          body: {
            "interfaces/Address.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "cover",
        {
          _index: 1195,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "coverage",
        {
          _index: 2444,
          title: { "coverage.html": {} },
          body: { "coverage.html": {} },
        },
      ],
      [
        "cr",
        {
          _index: 1327,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "create",
        {
          _index: 865,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "create).pipe",
        {
          _index: 934,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.address_id",
        {
          _index: 931,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.email",
        {
          _index: 929,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.max_delivery_radius",
        {
          _index: 930,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.name",
        {
          _index: 927,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.owned_by",
        {
          _index: 932,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create.phone",
        {
          _index: 928,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "create_by",
        { _index: 708, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "create_recipe",
        {
          _index: 2560,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "create_type",
        {
          _index: 2562,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "createaction",
        {
          _index: 2769,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createaction('[auth",
        {
          _index: 2773,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createaction('[ingredient",
        {
          _index: 2768,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createaction('[recipe",
        {
          _index: 2772,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["created", { _index: 2658, title: {}, body: { "index.html": {} } }],
      [
        "created_at",
        { _index: 1017, title: {}, body: { "interfaces/IngreType.html": {} } },
      ],
      [
        "created_by",
        { _index: 1709, title: {}, body: { "interfaces/Recipe.html": {} } },
      ],
      [
        "createeffect",
        {
          _index: 2219,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "createfeatureselector('ingredient",
        {
          _index: 2783,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createfeatureselector('recipe",
        {
          _index: 2786,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createfeatureselector('user",
        {
          _index: 2734,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createid",
        {
          _index: 2295,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "createingredient",
        {
          _index: 1248,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "createingredient(item",
        {
          _index: 1253,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "createingredient(this.ingredient",
        {
          _index: 1131,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "createingredienttype",
        {
          _index: 1337,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "createingredienttype(item",
        {
          _index: 1341,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "createingredienttype(this.ingretype",
        {
          _index: 1325,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "createnewrecipe",
        {
          _index: 1995,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "createrecipe",
        {
          _index: 1919,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "createrecipe(item",
        {
          _index: 1928,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "createreducer",
        {
          _index: 1275,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "createschedule",
        {
          _index: 853,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "createschedule(create",
        {
          _index: 868,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "createselector",
        {
          _index: 2731,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createselector(selectuserdetails",
        {
          _index: 2732,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createselector(selectuserstate",
        {
          _index: 2730,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "criteres",
        {
          _index: 2155,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "création",
        {
          _index: 1134,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "crée",
        {
          _index: 2052,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "créer",
        {
          _index: 1777,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      ["ctrl", { _index: 2633, title: {}, body: { "index.html": {} } }],
      [
        "cubic",
        {
          _index: 1524,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "current",
        {
          _index: 107,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "current_user",
        {
          _index: 2581,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "currentrole",
        {
          _index: 489,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "currentuser",
        {
          _index: 503,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "currentuser.roles",
        {
          _index: 1680,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "currentuser.roles.push(currentrole",
        {
          _index: 1681,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "cursor",
        {
          _index: 1223,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "custom",
        {
          _index: 584,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "customers",
        {
          _index: 1216,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["d", { _index: 2666, title: {}, body: { "index.html": {} } }],
      [
        "d'alerte",
        {
          _index: 2011,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "d'indrédient",
        {
          _index: 2566,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "d'ingredient",
        {
          _index: 1124,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "d'ingrédient",
        {
          _index: 1167,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "d'une",
        {
          _index: 2010,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "d'utilisateur",
        {
          _index: 2338,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "d'utilisateurs",
        {
          _index: 2343,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "d.p",
        {
          _index: 2175,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "d4dff7",
        {
          _index: 601,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "d8dadc",
        {
          _index: 1205,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "d8f6f6",
        {
          _index: 1862,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "d\\'ingredient",
        {
          _index: 1245,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "d\\'ingrédient",
        {
          _index: 1246,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "d\\'utilisateurs",
        {
          _index: 2347,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      ["daemon", { _index: 2675, title: {}, body: { "index.html": {} } }],
      [
        "dans",
        {
          _index: 573,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "dash",
        {
          _index: 590,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "dasharray",
        {
          _index: 607,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "dashoffset",
        {
          _index: 610,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "data",
        {
          _index: 346,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "data.expire_at",
        {
          _index: 459,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "data.expires_in",
        {
          _index: 461,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "data.refresh_token",
        {
          _index: 535,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "data['message",
        {
          _index: 1369,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "dataresponse",
        {
          _index: 536,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "dataresponse.expire_at",
        {
          _index: 538,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "dataresponse.expires_in",
        {
          _index: 539,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "datatable",
        {
          _index: 1215,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "datatable.p",
        {
          _index: 1214,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dataviewmodule",
        {
          _index: 1892,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "date",
        {
          _index: 1019,
          title: {},
          body: {
            "interfaces/IngreType.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "date().getdate",
        {
          _index: 1809,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "date().setdate(new",
        {
          _index: 1808,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "date(new",
        {
          _index: 1807,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "date(this.recipe?.available_at",
        {
          _index: 1810,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "date.now",
        {
          _index: 460,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "datepicker",
        {
          _index: 1209,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "daygrid",
        {
          _index: 1199,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "days",
        {
          _index: 681,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      [
        "dbe6fdd7",
        {
          _index: 2192,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "de",
        {
          _index: 1003,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "decides",
        {
          _index: 110,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "declarations",
        {
          _index: 280,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "dee2e6",
        {
          _index: 2082,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "deep",
        {
          _index: 583,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "default",
        {
          _index: 186,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "default'},{'name",
        {
          _index: 209,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "default.component",
        { _index: 665, title: {}, body: { "modules/DefaultModule.html": {} } },
      ],
      [
        "default.component.html",
        {
          _index: 657,
          title: {},
          body: { "components/DefaultComponent.html": {} },
        },
      ],
      [
        "default.component.scss",
        {
          _index: 656,
          title: {},
          body: { "components/DefaultComponent.html": {} },
        },
      ],
      [
        "default/default.component",
        { _index: 1413, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "default/default.module",
        { _index: 1414, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "defaultcomponent",
        {
          _index: 208,
          title: { "components/DefaultComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "defaultmodule",
        {
          _index: 660,
          title: { "modules/DefaultModule.html": {} },
          body: {
            "modules/DefaultModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "defined",
        {
          _index: 53,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "defining",
        { _index: 2283, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "defone",
        {
          _index: 373,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "delete",
        {
          _index: 941,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "delete(`${environment.apibaseurl}/ingredients/${id",
        {
          _index: 1272,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "delete(`${environment.apibaseurl}/ingredients/types/${id",
        {
          _index: 1370,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "delete(`${environment.apibaseurl}/recipes/${id",
        {
          _index: 1967,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "delete(user",
        {
          _index: 2304,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "deleteingredient",
        {
          _index: 1041,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "deleteingredient(ingredient",
        {
          _index: 1056,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "deleteingredienttype",
        {
          _index: 1291,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "deleteingredienttype(ingretype",
        {
          _index: 1297,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "dependencies",
        {
          _index: 273,
          title: { "dependencies.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "description",
        {
          _index: 37,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/IngreType.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "dessert",
        {
          _index: 1937,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "detail",
        {
          _index: 1121,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "details",
        {
          _index: 1786,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "injectables/SidebarService.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "details.module.ts",
        {
          _index: 1888,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "details/ingredient",
        {
          _index: 1285,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts",
        {
          _index: 1026,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:103",
        {
          _index: 1066,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:156",
        {
          _index: 1064,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:164",
        {
          _index: 1068,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:172",
        {
          _index: 1057,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:205",
        {
          _index: 1062,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:215",
        {
          _index: 1058,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:33",
        {
          _index: 1071,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:34",
        {
          _index: 1069,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:36",
        {
          _index: 1073,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:38",
        {
          _index: 1079,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:39",
        {
          _index: 1076,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:41",
        {
          _index: 1075,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:42",
        {
          _index: 1077,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:44",
        {
          _index: 1074,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:45",
        {
          _index: 1078,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:47",
        {
          _index: 1070,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:49",
        {
          _index: 1072,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:50",
        {
          _index: 1055,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:63",
        {
          _index: 1065,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:69",
        {
          _index: 1059,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:80",
        {
          _index: 1060,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/ingredient/ingredient.component.ts:88",
        {
          _index: 1063,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "details/recipe",
        {
          _index: 1887,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "details/recipe/recipe",
        {
          _index: 1710,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts",
        {
          _index: 1986,
          title: {},
          body: { "components/RecipesComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:103",
        {
          _index: 2000,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:137",
        {
          _index: 2008,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:167",
        {
          _index: 2013,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:41",
        {
          _index: 2022,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:43",
        {
          _index: 2020,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:44",
        {
          _index: 2021,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:45",
        {
          _index: 2015,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:46",
        {
          _index: 2016,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:47",
        {
          _index: 2018,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:49",
        {
          _index: 2024,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:50",
        {
          _index: 2023,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:51",
        {
          _index: 2019,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:52",
        {
          _index: 1999,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:58",
        {
          _index: 2014,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:59",
        {
          _index: 2017,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:64",
        {
          _index: 2002,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:75",
        {
          _index: 2006,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/recipe/recipes/recipes.component.ts:88",
        {
          _index: 2004,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "details/tabs/tabs.component.ts",
        {
          _index: 2169,
          title: {},
          body: { "components/TabsComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "details/tabs/tabs.component.ts:13",
        {
          _index: 2174,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "details/tabs/tabs.component.ts:8",
        {
          _index: 2173,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "detectroutingongoing",
        {
          _index: 1420,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "determining",
        { _index: 2280, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      ["dev", { _index: 2598, title: {}, body: { "index.html": {} } }],
      ["development", { _index: 2593, title: {}, body: { "index.html": {} } }],
      [
        "devtools",
        { _index: 2519, title: {}, body: { "dependencies.html": {} } },
      ],
      ["dgitflow", { _index: 2700, title: {}, body: { "index.html": {} } }],
      [
        "dialog",
        {
          _index: 1029,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "dialog'},{'name",
        {
          _index: 234,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dialog.component",
        {
          _index: 1895,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "dialog.component.html",
        {
          _index: 1714,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.scss",
        {
          _index: 1713,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts",
        {
          _index: 1712,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "dialog.component.ts:100",
        {
          _index: 1751,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:111",
        {
          _index: 1745,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:123",
        {
          _index: 1755,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:136",
        {
          _index: 1746,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:165",
        {
          _index: 1759,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:184",
        {
          _index: 1752,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:188",
        {
          _index: 1754,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:193",
        {
          _index: 1749,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:198",
        {
          _index: 1756,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:204",
        {
          _index: 1758,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:211",
        {
          _index: 1742,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:26",
        {
          _index: 1768,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:27",
        {
          _index: 1778,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:28",
        {
          _index: 1762,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:30",
        {
          _index: 1771,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:31",
        {
          _index: 1770,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:32",
        {
          _index: 1772,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:33",
        {
          _index: 1760,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:35",
        {
          _index: 1764,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:36",
        {
          _index: 1765,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:38",
        {
          _index: 1766,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:40",
        {
          _index: 1769,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:41",
        {
          _index: 1775,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:43",
        {
          _index: 1763,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:44",
        {
          _index: 1774,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:46",
        {
          _index: 1779,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:48",
        {
          _index: 1767,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:50",
        {
          _index: 1739,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:53",
        {
          _index: 1773,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:54",
        {
          _index: 1761,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:70",
        {
          _index: 1747,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog.component.ts:82",
        {
          _index: 1744,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dialog/recipe",
        {
          _index: 1711,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "dialogmodule",
        {
          _index: 832,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "dialogservice",
        {
          _index: 1987,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "dimanche",
        {
          _index: 781,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "diner",
        {
          _index: 669,
          title: { "interfaces/Diner.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "direction",
        {
          _index: 787,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "directive",
        {
          _index: 202,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "directives",
        {
          _index: 247,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "directive|pipe|service|class|guard|interface|enum|module",
        { _index: 2606, title: {}, body: { "index.html": {} } },
      ],
      ["directory", { _index: 2611, title: {}, body: { "index.html": {} } }],
      [
        "dispatch",
        {
          _index: 574,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "display",
        {
          _index: 622,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "disponiblit",
        {
          _index: 1857,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      ["dist", { _index: 2610, title: {}, body: { "index.html": {} } }],
      [
        "div",
        {
          _index: 1175,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "dividermodule",
        {
          _index: 828,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      ["docker", { _index: 2655, title: {}, body: { "index.html": {} } }],
      ["dockerfile", { _index: 2652, title: {}, body: { "index.html": {} } }],
      ["dockerize", { _index: 2653, title: {}, body: { "index.html": {} } }],
      [
        "documentation",
        {
          _index: 2445,
          title: {},
          body: { "coverage.html": {}, "index.html": {} },
        },
      ],
      [
        "dom",
        {
          _index: 169,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dosign",
        {
          _index: 320,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "dot",
        {
          _index: 1200,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "down",
        {
          _index: 1788,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "drop",
        {
          _index: 1787,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dropdown",
        {
          _index: 1224,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dropdownmodule",
        {
          _index: 648,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "dubeau",
        {
          _index: 2407,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "dubois",
        {
          _index: 2406,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "during",
        {
          _index: 2746,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dynamic",
        {
          _index: 2001,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "dynamicdialog",
        {
          _index: 1861,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "dynamicdialogconfig",
        {
          _index: 1737,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "dynamicdialogmodule",
        {
          _index: 1902,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "dynamicdialogref",
        {
          _index: 1736,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "définitivement",
        {
          _index: 2059,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["e2e", { _index: 2619, title: {}, body: { "index.html": {} } }],
      [
        "e['code",
        {
          _index: 498,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "ease",
        {
          _index: 592,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "edit",
        {
          _index: 1367,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "edit_recipe",
        {
          _index: 2561,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "edit_type",
        {
          _index: 2565,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "editcontact",
        {
          _index: 722,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "editing",
        {
          _index: 1579,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "editmode",
        {
          _index: 719,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "editmodeemail",
        {
          _index: 1581,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "editmodefirstname",
        {
          _index: 1582,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "editmodelastname",
        {
          _index: 1583,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "editmodephone",
        {
          _index: 1584,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "editprofilecomponent",
        { _index: 1669, title: {}, body: { "modules/ProfileModule.html": {} } },
      ],
      [
        "edituser",
        {
          _index: 2296,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "edituser(user",
        {
          _index: 2306,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "effect",
        {
          _index: 2770,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "effectsmodule",
        {
          _index: 302,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "effectsmodule.forfeature([usereffects",
        {
          _index: 314,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "element",
        {
          _index: 201,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ellipsis",
        {
          _index: 2075,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "email",
        {
          _index: 546,
          title: {},
          body: {
            "interfaces/Autorisation.html": {},
            "interfaces/Franchisee.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/User.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "en",
        {
          _index: 1162,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "end",
        {
          _index: 2085,
          title: {},
          body: { "components/RecipesComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "endpoints",
        {
          _index: 2119,
          title: {},
          body: {
            "components/SidebarComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "endpoints.logout",
        {
          _index: 2127,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "entotal",
        {
          _index: 1333,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "entrycomponents",
        {
          _index: 1889,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "enumerations",
        {
          _index: 2545,
          title: { "miscellaneous/enumerations.html": {} },
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "environment",
        {
          _index: 148,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "environment.apibaseurl}/contractors/${franchisee.id}/times",
        {
          _index: 944,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "environment.apibaseurl}/contractors/${id}/recipes/${recipe.id",
        {
          _index: 943,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "environment.apibaseurl}/contractors/${recipe.id}/recipes",
        {
          _index: 921,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "environment.apibaseurl}/contractors/${update.id}/recipes/${recipe.id",
        {
          _index: 938,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "environment.apibaseurl}/users/${user.id}/roles",
        {
          _index: 522,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "environment.apibaseurl}/users/current",
        {
          _index: 511,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "environment.oauthcallbackuri",
        {
          _index: 422,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "environment.oauthclientid",
        {
          _index: 420,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "environment.oauthproviderbaseurl",
        {
          _index: 429,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "environment.prod.ts",
        {
          _index: 2752,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "environment.ts",
        {
          _index: 2751,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "err",
        {
          _index: 578,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "err.message",
        {
          _index: 453,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "err.statustext",
        {
          _index: 454,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "erreur",
        {
          _index: 1127,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "error",
        {
          _index: 411,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "error('failed",
        {
          _index: 432,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "error('state",
        {
          _index: 443,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "error('user",
        {
          _index: 467,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "error('workflow",
        {
          _index: 439,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "error(`${operation",
        {
          _index: 968,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "error(error",
        {
          _index: 455,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "error.error",
        {
          _index: 960,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "error.message",
        {
          _index: 1391,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "error.status",
        {
          _index: 962,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "error.statustext",
        {
          _index: 982,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "errorevent",
        {
          _index: 978,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "errorname",
        {
          _index: 1741,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "errors",
        {
          _index: 958,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "est",
        {
          _index: 1152,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "etes",
        {
          _index: 1137,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "event",
        {
          _index: 194,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "event.checked",
        {
          _index: 1155,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "event.files",
        {
          _index: 1851,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "event.files[0",
        {
          _index: 1848,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "event.target",
        {
          _index: 2032,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "event.url",
        {
          _index: 196,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "event.url.match",
        {
          _index: 197,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "event.value",
        {
          _index: 2039,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "eventtarget",
        {
          _index: 2030,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["example", { _index: 2654, title: {}, body: { "index.html": {} } }],
      [
        "exclamation",
        {
          _index: 1146,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["execute", { _index: 2616, title: {}, body: { "index.html": {} } }],
      [
        "exist",
        {
          _index: 2029,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["exit", { _index: 2632, title: {}, body: { "index.html": {} } }],
      [
        "expire_at",
        {
          _index: 12,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {} },
        },
      ],
      [
        "expires_in",
        {
          _index: 13,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {} },
        },
      ],
      [
        "export",
        {
          _index: 20,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      [
        "exports",
        {
          _index: 639,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
          },
        },
      ],
      [
        "express",
        { _index: 2523, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "external_link",
        { _index: 1555, title: {}, body: { "interfaces/Picture.html": {} } },
      ],
      ["f10f652d3da9", { _index: 2672, title: {}, body: { "index.html": {} } }],
      [
        "failed",
        {
          _index: 890,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "failures",
        {
          _index: 884,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "false",
        {
          _index: 495,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "family",
        {
          _index: 1176,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "fb",
        {
          _index: 1053,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "fc",
        {
          _index: 1198,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "feature",
        {
          _index: 260,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ferm",
        {
          _index: 771,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "ffa62b",
        {
          _index: 603,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "ffffff",
        {
          _index: 1193,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ffffffc7",
        {
          _index: 2193,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "file",
        {
          _index: 5,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "filereplacements",
        {
          _index: 2748,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["files", { _index: 2602, title: {}, body: { "index.html": {} } }],
      [
        "fileupload",
        {
          _index: 1868,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "fileuploader",
        {
          _index: 1872,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "fileuploadmodule",
        {
          _index: 1906,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "fill",
        {
          _index: 1550,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "filter",
        {
          _index: 1504,
          title: {},
          body: {
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "filter((user",
        {
          _index: 1616,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "finalize",
        {
          _index: 740,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "injectables/LoadingService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "findindexbyid",
        {
          _index: 2297,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "findindexbyid(id",
        {
          _index: 2308,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "first",
        {
          _index: 1034,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "first_line",
        { _index: 27, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      [
        "firstname",
        {
          _index: 543,
          title: {},
          body: {
            "interfaces/Autorisation.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/User.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "firstvaluefrom",
        {
          _index: 390,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "firstvaluefrom(response",
        {
          _index: 537,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "firstvaluefrom(userroles",
        {
          _index: 524,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "firstvaluefrom(usr",
        {
          _index: 512,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "fixed",
        {
          _index: 700,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "flex",
        {
          _index: 623,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "float",
        {
          _index: 1239,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["flow", { _index: 2702, title: {}, body: { "index.html": {} } }],
      [
        "font",
        {
          _index: 697,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "food",
        {
          _index: 693,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer",
        {
          _index: 686,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "footer'},{'name",
        {
          _index: 211,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "footer.component.html",
        {
          _index: 688,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer.component.scss",
        {
          _index: 687,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer/footer.component",
        {
          _index: 651,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "footercomponent",
        {
          _index: 210,
          title: { "components/FooterComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "forkjoin",
        {
          _index: 391,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "form",
        {
          _index: 720,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "formbuilder",
        {
          _index: 1054,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "formcontrol",
        {
          _index: 1081,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "formdata",
        {
          _index: 1684,
          title: {},
          body: {
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "formdata.append('email",
        {
          _index: 1696,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "formdata.append('file_uuid",
        {
          _index: 1973,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "formdata.append('filename",
        {
          _index: 1970,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "formdata.append('firstname",
        {
          _index: 1693,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "formdata.append('lastname",
        {
          _index: 1694,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "formdata.append('name",
        {
          _index: 1968,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "formdata.append('phone",
        {
          _index: 1695,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "formgroup",
        {
          _index: 736,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "formsmodule",
        {
          _index: 291,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "formvalue",
        {
          _index: 1618,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "formvalue.email.trim",
        {
          _index: 1627,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "formvalue.firstname.trim",
        {
          _index: 1621,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "formvalue.lastname.trim",
        {
          _index: 1623,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "formvalue.phone.trim",
        {
          _index: 1625,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "forroot",
        {
          _index: 282,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/LayoutsModule.html": {},
          },
        },
      ],
      [
        "found",
        {
          _index: 1510,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "found'},{'name",
        {
          _index: 227,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "found.component",
        {
          _index: 1574,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "found.component.html",
        {
          _index: 1512,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "found.component.scss",
        {
          _index: 1511,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "found.component.ts",
        {
          _index: 1509,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "found.component.ts:13",
        {
          _index: 1514,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "found.component.ts:8",
        {
          _index: 1513,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "found/page",
        {
          _index: 1508,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "modules/PrincipalModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "fr",
        {
          _index: 1717,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "franch",
        {
          _index: 2384,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "franchis",
        {
          _index: 2332,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "franchisee",
        {
          _index: 367,
          title: { "interfaces/Franchisee.html": {} },
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "franchisee'},{'name",
        {
          _index: 213,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "franchisee.component.html",
        {
          _index: 717,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "franchisee.component.scss",
        {
          _index: 716,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "franchisee/franchisee.component",
        {
          _index: 825,
          title: {},
          body: { "modules/FranchiseeModule.html": {} },
        },
      ],
      [
        "franchisee_id",
        {
          _index: 899,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "franchiseeaccess",
        {
          _index: 817,
          title: {},
          body: {
            "guards/FranchiseeGuard.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "franchiseecomponent",
        {
          _index: 212,
          title: { "components/FranchiseeComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "modules/FranchiseeModule.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "franchiseeguard",
        {
          _index: 804,
          title: { "guards/FranchiseeGuard.html": {} },
          body: { "guards/FranchiseeGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "franchiseemodule",
        {
          _index: 820,
          title: { "modules/FranchiseeModule.html": {} },
          body: {
            "modules/FranchiseeModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "franchiseerecipe",
        {
          _index: 845,
          title: { "interfaces/FranchiseeRecipe.html": {} },
          body: {
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "franchisees",
        {
          _index: 916,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "franchiseeservice",
        {
          _index: 726,
          title: { "injectables/FranchiseeService.html": {} },
          body: {
            "components/FranchiseeComponent.html": {},
            "modules/FranchiseeModule.html": {},
            "injectables/FranchiseeService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "franchisés",
        {
          _index: 1004,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "freshaccesstoken",
        {
          _index: 477,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "freshaccesstoken.access_token",
        {
          _index: 478,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "friday",
        {
          _index: 678,
          title: { "interfaces/Friday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "from(this.handle(req",
        {
          _index: 156,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "fromauth",
        {
          _index: 300,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "fromauth.userreducer",
        {
          _index: 312,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "fruit",
        {
          _index: 1345,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "function",
        {
          _index: 104,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "functions",
        {
          _index: 2582,
          title: { "miscellaneous/functions.html": {} },
          body: { "miscellaneous/functions.html": {} },
        },
      ],
      [
        "fundo",
        {
          _index: 1515,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      ["further", { _index: 2626, title: {}, body: { "index.html": {} } }],
      ["g", { _index: 2674, title: {}, body: { "index.html": {} } }],
      ["generate", { _index: 2604, title: {}, body: { "index.html": {} } }],
      ["generated", { _index: 2590, title: {}, body: { "index.html": {} } }],
      [
        "generateemail",
        {
          _index: 2360,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "generatefirstname",
        {
          _index: 2361,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "generateid",
        {
          _index: 2362,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "generatelastname",
        {
          _index: 2363,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "generatephone",
        {
          _index: 2364,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "generateprduct",
        {
          _index: 2365,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      ["generates", { _index: 2685, title: {}, body: { "index.html": {} } }],
      [
        "generic_success",
        {
          _index: 2567,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "gestion",
        {
          _index: 2342,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "get('assets/users",
        {
          _index: 2414,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/${details",
        {
          _index: 2149,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/contractors",
        {
          _index: 912,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/ingredients",
        {
          _index: 1266,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/ingredients/${id",
        {
          _index: 1268,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/ingredients/types",
        {
          _index: 1359,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/recipes/${id}/ingredients",
        {
          _index: 1956,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/${id",
        {
          _index: 481,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/${id}/addresses",
        {
          _index: 2426,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/${id}/roles",
        {
          _index: 2274,
          title: {},
          body: {
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/${user.id}/roles",
        {
          _index: 491,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/current",
        {
          _index: 2273,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "get(`${environment.apibaseurl}/users/current?includes[]=roles",
        {
          _index: 486,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "get(`${environment.oauthproviderbaseurl}/token",
        {
          _index: 484,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "get(key",
        {
          _index: 1461,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "getaccesstoken",
        {
          _index: 321,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getaddresses",
        {
          _index: 2366,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getaddresses(id",
        {
          _index: 2380,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getallfranchisees",
        {
          _index: 2321,
          title: {},
          body: {
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "getauthorizationcode",
        {
          _index: 322,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getcurrentuser",
        {
          _index: 323,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "getcurrentuserremote",
        {
          _index: 324,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getfranchisee",
        {
          _index: 2367,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getfranchisee(id",
        {
          _index: 2385,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getfranchiseerecipes",
        {
          _index: 854,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "getfranchiseerecipes(recipe",
        {
          _index: 873,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "getfranchiseerole",
        {
          _index: 2368,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getfranchiseerole(id",
        {
          _index: 2387,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getfranchisees",
        {
          _index: 748,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
          },
        },
      ],
      [
        "getingredient",
        {
          _index: 1249,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "getingredient(id",
        {
          _index: 1255,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "getingredients",
        {
          _index: 1250,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "getingredientsbyrecipeid",
        {
          _index: 1920,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "getingredientsbyrecipeid(id",
        {
          _index: 1931,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "getingredientstypes",
        {
          _index: 1338,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "getnewuser",
        {
          _index: 2266,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "getnewuserrole",
        {
          _index: 2267,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "getnewuserrole(id",
        {
          _index: 2270,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "getpkce",
        {
          _index: 386,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getpkce(128",
        {
          _index: 410,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getprofile",
        {
          _index: 2132,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "getprofile(details",
        {
          _index: 2136,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "getrandomstring",
        {
          _index: 2158,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "getrandomstring(length",
        {
          _index: 2160,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "getrecipe",
        {
          _index: 1921,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "getrecipe(id",
        {
          _index: 1933,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "getrecipes",
        {
          _index: 1922,
          title: {},
          body: {
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "getrecipetype",
        {
          _index: 1923,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "getrole",
        {
          _index: 325,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getrole(user",
        {
          _index: 360,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getroleremote",
        {
          _index: 326,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getroleremote(user",
        {
          _index: 362,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getschedule",
        {
          _index: 855,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "getschedule(franchisee",
        {
          _index: 877,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "getting",
        {
          _index: 2586,
          title: { "index.html": {} },
          body: { "index.html": {} },
        },
      ],
      [
        "getuser",
        {
          _index: 327,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "getuserbyid",
        {
          _index: 328,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getuserbyid(id",
        {
          _index: 365,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getuserbyroleid(criteres",
        {
          _index: 2152,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "getuserrole",
        {
          _index: 329,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getuserrole(user",
        {
          _index: 369,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getusers",
        {
          _index: 2133,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "getuserssmall",
        {
          _index: 2369,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "getuserswithorderssmall",
        {
          _index: 2370,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "gill",
        {
          _index: 2194,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      ["git", { _index: 2649, title: {}, body: { "index.html": {} } }],
      ["global", { _index: 2687, title: {}, body: { "index.html": {} } }],
      [
        "globalhttpinterceptorservice",
        {
          _index: 970,
          title: { "interceptors/GlobalHttpInterceptorService.html": {} },
          body: {
            "interceptors/GlobalHttpInterceptorService.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["go", { _index: 2629, title: {}, body: { "index.html": {} } }],
      [
        "good",
        {
          _index: 692,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "goodfood",
        {
          _index: 188,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "gradient(135deg",
        {
          _index: 2191,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "gradient(147.38deg",
        {
          _index: 1192,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "grant_type",
        {
          _index: 447,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "grayscale",
        {
          _index: 1188,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "grid",
        {
          _index: 1169,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "guard",
        {
          _index: 33,
          title: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
          body: { "guards/FranchiseeGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "guards",
        {
          _index: 35,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "handle",
        {
          _index: 130,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interfaces/UserState.html": {},
          },
        },
      ],
      [
        "handle(req",
        {
          _index: 135,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "handleerror",
        {
          _index: 856,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "handleerror(error",
        {
          _index: 1346,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "handleerror(operation",
        {
          _index: 879,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "handler",
        {
          _index: 885,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "handles",
        {
          _index: 882,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "happened",
        {
          _index: 988,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "has(key",
        {
          _index: 1464,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "header",
        {
          _index: 1142,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "height",
        {
          _index: 792,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["help", { _index: 2627, title: {}, body: { "index.html": {} } }],
      [
        "helvetica",
        {
          _index: 1178,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "here",
        {
          _index: 814,
          title: {},
          body: {
            "guards/FranchiseeGuard.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "hidden",
        {
          _index: 2074,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "hidedialog",
        {
          _index: 1042,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "hidehomebtn",
        {
          _index: 2111,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "home",
        {
          _index: 992,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "home'},{'name",
        {
          _index: 215,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "home.component",
        { _index: 1013, title: {}, body: { "modules/HomeModule.html": {} } },
      ],
      [
        "home.component.html",
        {
          _index: 994,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "home.component.scss",
        {
          _index: 993,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "homecomponent",
        {
          _index: 214,
          title: { "components/HomeComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "homemodule",
        {
          _index: 1006,
          title: { "modules/HomeModule.html": {} },
          body: {
            "modules/HomeModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "horaires",
        {
          _index: 767,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "host",
        {
          _index: 581,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "hours",
        {
          _index: 684,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "html",
        {
          _index: 200,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "htmltextareaelement).value",
        {
          _index: 2033,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "http",
        {
          _index: 341,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "http://localhost/4000",
        {
          _index: 2755,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost/4100",
        {
          _index: 2762,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost/8085/api",
        {
          _index: 2739,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:4200",
        {
          _index: 2599,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:4200/login/redirect",
        {
          _index: 2744,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:8080/api",
        {
          _index: 2756,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:8085/oauth",
        {
          _index: 2741,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http_200_ok",
        {
          _index: 2549,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "http_401_unauthorized",
        {
          _index: 2550,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "http_403_forbidden",
        {
          _index: 2552,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "http_404_not_found",
        {
          _index: 2554,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "http_511_network_authentication_required",
        {
          _index: 2556,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "http_interceptors",
        {
          _index: 827,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "httpclient",
        {
          _index: 337,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "httpclientmodule",
        {
          _index: 826,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "httperrorresponse",
        {
          _index: 891,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "httpevent",
        {
          _index: 144,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "httphandler",
        {
          _index: 138,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "httpinterceptor",
        {
          _index: 145,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "httpparams",
        {
          _index: 385,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "httprequest",
        {
          _index: 136,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "https://www.tektutorialshub.com/angular/property",
        {
          _index: 2028,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "httpverbs",
        {
          _index: 2547,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "ici",
        {
          _index: 999,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "icon",
        {
          _index: 1144,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "icons",
        {
          _index: 1174,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "id",
        {
          _index: 28,
          title: {},
          body: {
            "interfaces/Address.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "interfaces/Franchisee.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "interfaces/Recipe.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "identifier",
        { _index: 2446, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "idfranchisee",
        {
          _index: 2292,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "idrecipe",
        {
          _index: 1718,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "igredients",
        {
          _index: 866,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "il",
        {
          _index: 1164,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "image",
        {
          _index: 1190,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "imagesrepository",
        { _index: 2656, title: {}, body: { "index.html": {} } },
      ],
      [
        "img",
        {
          _index: 2086,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "img.flag",
        {
          _index: 1880,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "implements",
        {
          _index: 103,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "import",
        {
          _index: 90,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "important",
        {
          _index: 701,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "imports",
        {
          _index: 309,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "index",
        {
          _index: 8,
          title: { "index.html": {} },
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indigo/theme.css",
        { _index: 2646, title: {}, body: { "index.html": {} } },
      ],
      [
        "infinite",
        {
          _index: 593,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "info",
        {
          _index: 3,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      [
        "information",
        { _index: 72, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "infrastructure",
        {
          _index: 951,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "ingredient",
        {
          _index: 219,
          title: { "interfaces/Ingredient.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ingredient'},{'name",
        {
          _index: 217,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ingredient.actions",
        {
          _index: 1277,
          title: {},
          body: { "interfaces/IngredientState.html": {} },
        },
      ],
      [
        "ingredient.allergen",
        {
          _index: 1103,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredient.component.html",
        {
          _index: 1033,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredient.component.scss",
        {
          _index: 1028,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredient.id",
        {
          _index: 1107,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "ingredient.model",
        { _index: 1707, title: {}, body: { "interfaces/Recipe.html": {} } },
      ],
      [
        "ingredient.name",
        {
          _index: 1101,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredient.types",
        {
          _index: 1105,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredient/ingredient.component",
        {
          _index: 1912,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "ingredient_type",
        {
          _index: 1353,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "ingredientactions",
        {
          _index: 1276,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "injectables/UserEffects.html": {},
          },
        },
      ],
      [
        "ingredientactions.loaded",
        {
          _index: 2224,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "ingredientactions.updated",
        {
          _index: 2229,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "ingredientcomponent",
        {
          _index: 216,
          title: { "components/IngredientComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ingredientdialog",
        {
          _index: 1035,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredientfeaturekey",
        {
          _index: 1278,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ingredientreducer",
        {
          _index: 1281,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ingredients",
        {
          _index: 1024,
          title: {},
          body: {
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "ingredients.length",
        {
          _index: 1166,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ingredientsdetails",
        {
          _index: 1719,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "ingredientservice",
        {
          _index: 1051,
          title: { "injectables/IngredientService.html": {} },
          body: {
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/UserEffects.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ingredientstate",
        {
          _index: 1273,
          title: { "interfaces/IngredientState.html": {} },
          body: {
            "interfaces/IngredientState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ingredientstypes",
        {
          _index: 2050,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "ingredienttype",
        {
          _index: 1036,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "ingredienttypecomponent",
        {
          _index: 218,
          title: { "components/IngredientTypeComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "ingredienttypedialog",
        {
          _index: 1290,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "ingredienttypeservice",
        {
          _index: 1052,
          title: { "injectables/IngredientTypeService.html": {} },
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ingretype",
        {
          _index: 1014,
          title: { "interfaces/IngreType.html": {} },
          body: {
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "ingretype.description",
        {
          _index: 1316,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "ingretype.name",
        {
          _index: 1315,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "init",
        {
          _index: 1043,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "initauth",
        {
          _index: 330,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "initauth(user",
        {
          _index: 371,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "initform",
        {
          _index: 1044,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "initfranchiseeandrole(idfranchisee",
        {
          _index: 2323,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "initial",
        { _index: 2284, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "initialstate",
        {
          _index: 1279,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/UserState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "inizialized",
        {
          _index: 441,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "injectable",
        {
          _index: 91,
          title: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 316,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "inline",
        {
          _index: 1243,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "input",
        {
          _index: 1427,
          title: {},
          body: {
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "inputnumbermodule",
        {
          _index: 1904,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "inputs",
        {
          _index: 1419,
          title: {},
          body: {
            "components/LoadingComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "inputtextareamodule",
        {
          _index: 1898,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "inputtextmodule",
        {
          _index: 834,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      ["install", { _index: 2639, title: {}, body: { "index.html": {} } }],
      ["installation", { _index: 2638, title: {}, body: { "index.html": {} } }],
      [
        "instanceof",
        {
          _index: 195,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/LoadingComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "instead",
        {
          _index: 954,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "intercept",
        {
          _index: 131,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "intercept(req",
        {
          _index: 142,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "interceptor",
        {
          _index: 123,
          title: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
          body: { "coverage.html": {} },
        },
      ],
      [
        "interceptor.service",
        {
          _index: 841,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "interceptor.service.ts",
        {
          _index: 128,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "interceptor.service.ts:15",
        {
          _index: 134,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "interceptor.service.ts:18",
        {
          _index: 143,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "interceptor.service.ts:33",
        {
          _index: 139,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "interceptors",
        {
          _index: 125,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
          },
        },
      ],
      [
        "interface",
        {
          _index: 0,
          title: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "interfaces/AppState.html": {},
            "interfaces/Autorisation.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "interfaces/Friday.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "interfaces/IngredientState.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "interfaces/Recipe.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "interfaces/UserState.html": {},
            "interfaces/Wednesday.html": {},
          },
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "interfaces/AppState.html": {},
            "interfaces/Autorisation.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "interfaces/Friday.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "interfaces/IngredientState.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "interfaces/Recipe.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "interfaces/UserState.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "interfaces",
        {
          _index: 2,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "interfaces/AppState.html": {},
            "interfaces/Autorisation.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "interfaces/Friday.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "interfaces/IngredientState.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "interfaces/Recipe.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "interfaces/UserState.html": {},
            "interfaces/Wednesday.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "introuvable",
        {
          _index: 1388,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "isadmin",
        {
          _index: 494,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "isallergen",
        {
          _index: 1045,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "isallergen(event",
        {
          _index: 1061,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "isauthenticated",
        {
          _index: 331,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "isauthenticatedguard",
        {
          _index: 1393,
          title: { "guards/IsAuthenticatedGuard.html": {} },
          body: { "guards/IsAuthenticatedGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "iscreate",
        {
          _index: 1037,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "isdisabledcontrolform",
        {
          _index: 1720,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "isfranchisee",
        {
          _index: 496,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "isloggedin",
        {
          _index: 2735,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "isunauthenticatedguard",
        {
          _index: 1402,
          title: { "guards/IsUnauthenticatedGuard.html": {} },
          body: {
            "guards/IsUnauthenticatedGuard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item",
        {
          _index: 867,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "item).pipe",
        {
          _index: 2428,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "item.ingredients.map((ingredient",
        {
          _index: 1959,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "items",
        {
          _index: 628,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "jeudi",
        {
          _index: 778,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "job",
        {
          _index: 965,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "jour",
        {
          _index: 1123,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "json.parse(localstorage.getitem(key",
        {
          _index: 1477,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "json.stringify(action.userdetails",
        {
          _index: 2260,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "json.stringify(newuserdetails.email",
        {
          _index: 1692,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "json.stringify(newuserdetails.firstname",
        {
          _index: 1686,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "json.stringify(newuserdetails.lastname",
        {
          _index: 1688,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "json.stringify(newuserdetails.phone",
        {
          _index: 1690,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "json.stringify(value",
        {
          _index: 1472,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "justify",
        {
          _index: 624,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["karma", { _index: 2618, title: {}, body: { "index.html": {} } }],
      [
        "keep",
        {
          _index: 2775,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "key",
        {
          _index: 1463,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "keyfiltermodule",
        {
          _index: 1914,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "keyframes",
        {
          _index: 596,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "l'article",
        {
          _index: 2573,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "l'ingrédient",
        {
          _index: 1151,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "la",
        {
          _index: 783,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "label",
        {
          _index: 1876,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "label:not(.p",
        {
          _index: 1225,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ladate",
        {
          _index: 1805,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "lastname",
        {
          _index: 544,
          title: {},
          body: {
            "interfaces/Autorisation.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/User.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "lastvaluefrom",
        {
          _index: 147,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "lastvaluefrom(next.handle(req",
        {
          _index: 164,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "lat",
        { _index: 31, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      ["latest", { _index: 2659, title: {}, body: { "index.html": {} } }],
      [
        "lato",
        {
          _index: 1177,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "layer",
        {
          _index: 1237,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "layout",
        {
          _index: 785,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "layouts/components/page",
        {
          _index: 1573,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "layouts/layouts.module",
        {
          _index: 1571,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "layoutsmodule",
        {
          _index: 1407,
          title: { "modules/LayoutsModule.html": {} },
          body: {
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "le",
        {
          _index: 1128,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "left",
        {
          _index: 620,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "legend",
        {
          _index: 199,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "length",
        {
          _index: 1591,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "injectables/StringService.html": {},
          },
        },
      ],
      [
        "les",
        {
          _index: 2568,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "lets",
        {
          _index: 886,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "life",
        {
          _index: 1125,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["light", { _index: 2645, title: {}, body: { "index.html": {} } }],
      [
        "lightgoldenrodyellow",
        {
          _index: 696,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "ligne",
        {
          _index: 761,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "line",
        {
          _index: 2129,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "linear",
        {
          _index: 1191,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "link",
        { _index: 1556, title: {}, body: { "interfaces/Picture.html": {} } },
      ],
      [
        "list",
        {
          _index: 2103,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "literal",
        {
          _index: 2713,
          title: {},
          body: { "miscellaneous/typealiases.html": {} },
        },
      ],
      [
        "load",
        {
          _index: 41,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "loadappuser",
        {
          _index: 551,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "loaded",
        {
          _index: 63,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "loading",
        {
          _index: 727,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "loading'},{'name",
        {
          _index: 222,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "loading.component.html",
        {
          _index: 1418,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "loading.component.scss",
        {
          _index: 1417,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "loading/loading.component",
        {
          _index: 654,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "loadingcomponent",
        {
          _index: 221,
          title: { "components/LoadingComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "loadingoff",
        {
          _index: 1439,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "loadingon",
        {
          _index: 1440,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "loadingredients",
        {
          _index: 2215,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "loadingservice",
        {
          _index: 728,
          title: { "injectables/LoadingService.html": {} },
          body: {
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "loadingsubject",
        {
          _index: 1438,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "loadrecipe",
        {
          _index: 2490,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "loadrecipes",
        {
          _index: 2233,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "loaduser",
        {
          _index: 580,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "local",
        {
          _index: 397,
          title: {},
          body: { "injectables/AuthService.html": {}, "index.html": {} },
        },
      ],
      [
        "localhost:8080/api/contractors",
        {
          _index: 911,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/contractors/{contractor_id}/recipes",
        {
          _index: 920,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id",
        {
          _index: 937,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/contractors/{contractor_id}/times",
        {
          _index: 871,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/ingredients",
        {
          _index: 1265,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "localhost:8080/api/ingredients/types",
        {
          _index: 1358,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/ingredients/types/{ingredient_type_id",
        {
          _index: 1365,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/ingredients/{ingredient_id",
        {
          _index: 1267,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "localhost:8080/api/recipes",
        {
          _index: 1951,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/recipes/{recipe_id",
        {
          _index: 1949,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/recipes/{recipe_id}/ingredients",
        {
          _index: 1955,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/recipes/{recipe_id}/pictures",
        {
          _index: 1972,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "localhost:8080/api/users",
        {
          _index: 2422,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "localhost:8080/api/users/{user_id",
        {
          _index: 2420,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "localhost:8080/api/users/{user_id}/addresses",
        {
          _index: 2425,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "localhost:8080/api/users/{user_id}/roles",
        {
          _index: 2424,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "localstorage",
        { _index: 2528, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "localstorage.getitem(key",
        {
          _index: 1479,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "localstorage.removeitem(key",
        {
          _index: 1480,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "localstorage.setitem",
        {
          _index: 2259,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "localstorage.setitem(key",
        {
          _index: 1474,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "localstorageservice",
        {
          _index: 339,
          title: { "injectables/LocalStorageService.html": {} },
          body: {
            "injectables/AuthService.html": {},
            "components/HomeComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/ProfileService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "log",
        {
          _index: 857,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "log(message",
        {
          _index: 892,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "logger",
        {
          _index: 2502,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      [
        "logger(reducer",
        {
          _index: 262,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "logging",
        {
          _index: 950,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "login",
        {
          _index: 356,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/LoginComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "login'},{'name",
        {
          _index: 224,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "login.component.html",
        {
          _index: 1483,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login.component.scss",
        {
          _index: 1482,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login/login.component",
        { _index: 296, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "logincomponent",
        {
          _index: 223,
          title: { "components/LoginComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "logout",
        {
          _index: 332,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/SidebarComponent.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "logoutaction",
        {
          _index: 2261,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "lon",
        { _index: 32, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      [
        "lose",
        {
          _index: 1262,
          title: {},
          body: {
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "lunch",
        {
          _index: 682,
          title: { "interfaces/Lunch.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lundi",
        {
          _index: 770,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "main",
        {
          _index: 1547,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "make",
        {
          _index: 1945,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "makeingredienttype",
        {
          _index: 1292,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "makerecipe",
        {
          _index: 1046,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "map",
        {
          _index: 258,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "map((data",
        {
          _index: 1368,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "map((ingredient",
        {
          _index: 2223,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "map((recipe",
        {
          _index: 2237,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "map((res",
        {
          _index: 913,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "map((user",
        {
          _index: 492,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "map((userdetails",
        {
          _index: 2247,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "mardi",
        {
          _index: 772,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "margin",
        {
          _index: 704,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "matching",
        {
          _index: 22,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["materialrun", { _index: 2693, title: {}, body: { "index.html": {} } }],
      [
        "math.floor(299",
        {
          _index: 2438,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "math.floor(30",
        {
          _index: 2440,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "math.floor(math.random",
        {
          _index: 2437,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "math.random().tostring(20).substring(2",
        {
          _index: 2165,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "matrix",
        { _index: 82, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "max",
        {
          _index: 1232,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "max_delivery_radius",
        { _index: 709, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "media",
        {
          _index: 1230,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "medium",
        {
          _index: 2077,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "mercredi",
        {
          _index: 777,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "merge",
        {
          _index: 392,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "message",
        {
          _index: 894,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "message.create",
        {
          _index: 946,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
          },
        },
      ],
      [
        "message.update",
        {
          _index: 940,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "message.update_success",
        {
          _index: 1271,
          title: {},
          body: {
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "messageservice",
        {
          _index: 721,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "messagesservice",
        {
          _index: 1491,
          title: { "injectables/MessagesService.html": {} },
          body: { "injectables/MessagesService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "metadata",
        {
          _index: 172,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "metareducer",
        {
          _index: 254,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "metareducers",
        {
          _index: 268,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "method",
        {
          _index: 2782,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "methods",
        {
          _index: 44,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "middle",
        {
          _index: 2080,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "midi",
        {
          _index: 768,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "min",
        {
          _index: 1189,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["minutes", { _index: 2677, title: {}, body: { "index.html": {} } }],
      [
        "miscellaneous",
        {
          _index: 2544,
          title: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mise",
        {
          _index: 1122,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "mode",
        {
          _index: 1721,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "models/access",
        {
          _index: 394,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "models/address.model",
        {
          _index: 2413,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "models/franchisee",
        {
          _index: 907,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "models/franchisee.model",
        {
          _index: 908,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "models/ingredient",
        {
          _index: 1356,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "models/picture.model",
        {
          _index: 1948,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "models/recipe.model",
        {
          _index: 909,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "models/schedule.model",
        {
          _index: 910,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "models/user.model",
        {
          _index: 396,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "modifi",
        {
          _index: 1324,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "modification",
        {
          _index: 1129,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "modifications",
        {
          _index: 2569,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "modifier",
        {
          _index: 1776,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "module",
        {
          _index: 270,
          title: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
          body: {},
        },
      ],
      [
        "modules",
        {
          _index: 272,
          title: { "modules.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "modulewithproviders",
        {
          _index: 284,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/LayoutsModule.html": {},
          },
        },
      ],
      [
        "moment",
        {
          _index: 66,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "monday",
        {
          _index: 674,
          title: { "interfaces/Monday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["more", { _index: 2628, title: {}, body: { "index.html": {} } }],
      [
        "moz",
        {
          _index: 1186,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "ms",
        {
          _index: 2198,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "msg",
        {
          _index: 1500,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "msg.length",
        {
          _index: 1501,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "mt",
        {
          _index: 2195,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "multi",
        {
          _index: 844,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "multiselect",
        {
          _index: 1873,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "multiselectmodule",
        {
          _index: 1662,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "n'etes",
        {
          _index: 1375,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "name",
        {
          _index: 56,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
          },
        },
      ],
      ["names", { _index: 2671, title: {}, body: { "index.html": {} } }],
      [
        "native",
        {
          _index: 955,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "nav",
        {
          _index: 2177,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "navigate",
        {
          _index: 816,
          title: {},
          body: { "guards/FranchiseeGuard.html": {}, "index.html": {} },
        },
      ],
      [
        "navigation",
        { _index: 809, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "navigationcancel",
        {
          _index: 1428,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "navigationend",
        {
          _index: 1429,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "navigationerror",
        {
          _index: 1430,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "navigationstart",
        {
          _index: 189,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "need",
        {
          _index: 2623,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "new",
        {
          _index: 417,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/LoadingService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "newcontact",
        {
          _index: 723,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "newfranchisee",
        {
          _index: 858,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "newfranchisee(create",
        {
          _index: 895,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "newfranchisee(item",
        {
          _index: 2391,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "newingredient",
        {
          _index: 1047,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "newingredienttype",
        {
          _index: 1293,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "newrecipe",
        {
          _index: 1727,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "newschedule",
        {
          _index: 724,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "newuserdetails",
        {
          _index: 1683,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "newuserdetails.email",
        {
          _index: 1691,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "newuserdetails.firstname",
        {
          _index: 1685,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "newuserdetails.lastname",
        {
          _index: 1687,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "newuserdetails.phone",
        {
          _index: 1689,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "next",
        {
          _index: 137,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "next.handle(req",
        {
          _index: 154,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "next.handle(req).pipe",
        {
          _index: 976,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "ng",
        {
          _index: 582,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["nginx", { _index: 2673, title: {}, body: { "index.html": {} } }],
      [
        "ngmodule",
        {
          _index: 286,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "ngoninit",
        {
          _index: 180,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ngrx/effects",
        {
          _index: 303,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "ngrx/entity",
        { _index: 2517, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "ngrx/router",
        {
          _index: 251,
          title: {},
          body: { "interfaces/AppState.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "ngrx/store",
        {
          _index: 96,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interfaces/IngredientState.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/RecipeState.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/UserState.html": {},
            "dependencies.html": {},
          },
        },
      ],
      ["ngx", { _index: 2520, title: {}, body: { "dependencies.html": {} } }],
      [
        "night",
        {
          _index: 683,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      ["node", { _index: 2527, title: {}, body: { "dependencies.html": {} } }],
      [
        "node_modules/.bin/compodoc",
        { _index: 2695, title: {}, body: { "index.html": {} } },
      ],
      [
        "node_modules/primeicons/primeicons.css",
        { _index: 2643, title: {}, body: { "index.html": {} } },
      ],
      [
        "node_modules/primeng/resources/primeng.min.css",
        { _index: 2647, title: {}, body: { "index.html": {} } },
      ],
      [
        "node_modules/primeng/resources/themes/lara",
        { _index: 2644, title: {}, body: { "index.html": {} } },
      ],
      ["nodejs", { _index: 2636, title: {}, body: { "index.html": {} } }],
      [
        "nom",
        {
          _index: 1158,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "non",
        {
          _index: 1161,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "none",
        {
          _index: 1229,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "normal",
        {
          _index: 2069,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "nosonar",
        {
          _index: 562,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "notre",
        {
          _index: 1379,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "nous",
        {
          _index: 1000,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "nouveay",
        {
          _index: 2564,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "nouvel",
        {
          _index: 1132,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "nouvelle",
        {
          _index: 2043,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "nowrap",
        {
          _index: 2073,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["npm", { _index: 2596, title: {}, body: { "index.html": {} } }],
      ["npx", { _index: 2690, title: {}, body: { "index.html": {} } }],
      [
        "null",
        {
          _index: 569,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "number",
        {
          _index: 19,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "interfaces/Franchisee.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "interfaces/Picture.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "numéro",
        {
          _index: 1647,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      ["o", { _index: 2595, title: {}, body: { "index.html": {} } }],
      [
        "oauth",
        {
          _index: 387,
          title: {},
          body: { "injectables/AuthService.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "oauthcallbackuri",
        {
          _index: 2743,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "oauthclientid",
        {
          _index: 2742,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "oauthproviderbaseurl",
        {
          _index: 2740,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "obj",
        {
          _index: 924,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "object",
        {
          _index: 343,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/LocalStorageService.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "obligatoire",
        {
          _index: 1168,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "obs",
        {
          _index: 1447,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "observable",
        {
          _index: 76,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LoadingService.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "occurred",
        {
          _index: 889,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "of(null).pipe",
        {
          _index: 1453,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "oftype",
        {
          _index: 2231,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "oftype(ingredientactions.load",
        {
          _index: 2221,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "oftype(ingredientactions.update",
        {
          _index: 2226,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "oftype(recipeactions.loadrecipe",
        {
          _index: 2235,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "oftype(recipeactions.updaterecipe",
        {
          _index: 2241,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "oftype(useractions.loaduser",
        {
          _index: 2246,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "oftype(useractions.logoutaction.logoutflowinitiated.type",
        {
          _index: 2262,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "oftype(useractions.updateuser",
        {
          _index: 2250,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "oftype(useractions.userloaded",
        {
          _index: 2257,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "olhos",
        {
          _index: 1532,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "on(ingredientactions.loaded",
        {
          _index: 1282,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "on(ingredientactions.update",
        {
          _index: 1284,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "on(recipeactions.recipeloaded",
        {
          _index: 1983,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "on(recipeactions.updaterecipe",
        {
          _index: 1985,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "on(useractions.updateuser",
        {
          _index: 2288,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "on(useractions.userloaded",
        {
          _index: 2286,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "onchange",
        {
          _index: 1728,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onchange(event",
        {
          _index: 1748,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onchangevalue",
        {
          _index: 1996,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "onchangevalue(event",
        {
          _index: 2003,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "onclick",
        {
          _index: 1849,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onclickstar",
        {
          _index: 1729,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onclickstar(event",
        {
          _index: 1750,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onclose",
        {
          _index: 1730,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/SidebarComponent.html": {},
          },
        },
      ],
      [
        "one",
        {
          _index: 261,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/UserState.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "onfieldcancel",
        {
          _index: 1585,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "onfieldcancel(user",
        {
          _index: 1593,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "oninit",
        {
          _index: 171,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "onlogin",
        {
          _index: 1484,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "onselectpicture",
        {
          _index: 1731,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onselectpicture(event",
        {
          _index: 1753,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onsortchange",
        {
          _index: 1997,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "onsortchange(event",
        {
          _index: 2005,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "onsubmit",
        {
          _index: 1048,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "ont",
        {
          _index: 2570,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "onupload",
        {
          _index: 1732,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onuploadpic",
        {
          _index: 1733,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "onuploadpic(event",
        {
          _index: 1757,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "opacity",
        {
          _index: 1546,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "open",
        {
          _index: 2134,
          title: {},
          body: { "injectables/SidebarService.html": {}, "index.html": {} },
        },
      ],
      [
        "open(display",
        {
          _index: 2139,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "opened_at",
        {
          _index: 672,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
          },
        },
      ],
      [
        "opennew",
        {
          _index: 2298,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "opensidebar",
        {
          _index: 2204,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "operation",
        {
          _index: 883,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "optional",
        {
          _index: 11,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "orders",
        {
          _index: 2431,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "origin",
        {
          _index: 1519,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "osx",
        {
          _index: 1187,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "oui",
        {
          _index: 1160,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "out",
        {
          _index: 278,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "index.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "outlet",
        { _index: 64, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "over",
        {
          _index: 1947,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "overflow",
        {
          _index: 790,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "overview",
        {
          _index: 2630,
          title: { "overview.html": {} },
          body: { "index.html": {}, "overview.html": {} },
        },
      ],
      [
        "owned_by",
        { _index: 710, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "ownedby",
        { _index: 711, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "p",
        {
          _index: 586,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "package",
        {
          _index: 2508,
          title: { "dependencies.html": {}, "properties.html": {} },
          body: { "index.html": {} },
        },
      ],
      [
        "padding",
        {
          _index: 702,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "page",
        {
          _index: 226,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "pagenotfoundcomponent",
        {
          _index: 225,
          title: { "components/PageNotFoundComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "paginator",
        {
          _index: 1202,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "panelmodule",
        {
          _index: 1896,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "pao",
        {
          _index: 1520,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "param",
        {
          _index: 121,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "parameters",
        {
          _index: 55,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "parameters['code",
        {
          _index: 564,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "parameters['state",
        {
          _index: 565,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "params",
        {
          _index: 2053,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "part",
        {
          _index: 84,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "partial",
        {
          _index: 869,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "particular",
        { _index: 65, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "pas",
        {
          _index: 1376,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "passe",
        {
          _index: 572,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "path",
        {
          _index: 81,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "modules/AuthModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "components/PageNotFoundComponent.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "payload",
        {
          _index: 2144,
          title: {},
          body: {
            "injectables/SidebarService.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "permission",
        {
          _index: 109,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "phone",
        {
          _index: 545,
          title: {},
          body: {
            "interfaces/Autorisation.html": {},
            "interfaces/Franchisee.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/User.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "pi",
        {
          _index: 1145,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "picture",
        {
          _index: 1553,
          title: { "interfaces/Picture.html": {} },
          body: {
            "interfaces/Picture.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "picture.model",
        { _index: 1708, title: {}, body: { "interfaces/Recipe.html": {} } },
      ],
      [
        "picture.name",
        {
          _index: 1969,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "picture.uuid",
        {
          _index: 1974,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "pictures",
        {
          _index: 1702,
          title: {},
          body: {
            "interfaces/Recipe.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "pipe",
        {
          _index: 451,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "pipe(filter((msg",
        {
          _index: 1499,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "pipe(finalize",
        {
          _index: 749,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "pipe(map((res",
        {
          _index: 482,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "pipe(map((user",
        {
          _index: 487,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "pipe(object.values(payload).map(res",
        {
          _index: 2156,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "pkce",
        {
          _index: 388,
          title: {},
          body: { "injectables/AuthService.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "placeholder",
        {
          _index: 1226,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "plat",
        {
          _index: 1856,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      ["platform", { _index: 2620, title: {}, body: { "index.html": {} } }],
      ["ports", { _index: 2670, title: {}, body: { "index.html": {} } }],
      [
        "position",
        {
          _index: 616,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "post",
        {
          _index: 926,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "post(`${environment.apibaseurl}/contractors${item.id}/recipes",
        {
          _index: 935,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "post(`${environment.apibaseurl}/contractors/${create.id}/times",
        {
          _index: 945,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "post(`${environment.apibaseurl}/ingredients",
        {
          _index: 1269,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "post(`${environment.apibaseurl}/ingredients/types",
        {
          _index: 1364,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "post(`${environment.apibaseurl}/recipes",
        {
          _index: 1958,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "post(`${environment.apibaseurl}/recipes/${recipe.id}/pictures",
        {
          _index: 1975,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "post(`${environment.oauthproviderbaseurl}/token",
        {
          _index: 446,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "post(`${this.url.userrole",
        {
          _index: 2154,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "price",
        {
          _index: 848,
          title: {},
          body: {
            "interfaces/FranchiseeRecipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "primary",
        {
          _index: 1879,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "primeflex",
        { _index: 2532, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "primeicons",
        {
          _index: 2534,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      [
        "primeng",
        {
          _index: 2353,
          title: {},
          body: {
            "modules/UsersModule.html": {},
            "dependencies.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "primeng/api",
        {
          _index: 190,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/avatar",
        {
          _index: 1012,
          title: {},
          body: {
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
          },
        },
      ],
      [
        "primeng/badge",
        {
          _index: 641,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
          },
        },
      ],
      [
        "primeng/button",
        {
          _index: 293,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/calendar",
        {
          _index: 831,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/card",
        {
          _index: 839,
          title: {},
          body: { "modules/FranchiseeModule.html": {} },
        },
      ],
      [
        "primeng/checkbox",
        {
          _index: 647,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/confirmdialog",
        {
          _index: 1891,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/contextmenu",
        { _index: 1665, title: {}, body: { "modules/ProfileModule.html": {} } },
      ],
      [
        "primeng/dataview",
        {
          _index: 1893,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/dialog",
        {
          _index: 833,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/divider",
        {
          _index: 829,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/dropdown",
        {
          _index: 649,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/dynamicdialog",
        {
          _index: 1781,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "primeng/fileupload",
        {
          _index: 1907,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/inputnumber",
        {
          _index: 1905,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/inputtext",
        {
          _index: 835,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/inputtextarea",
        {
          _index: 1899,
          title: {},
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/keyfilter",
        {
          _index: 1915,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/multiselect",
        {
          _index: 1663,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/panel",
        {
          _index: 1897,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/progressbar",
        {
          _index: 1667,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/progressspinner",
        {
          _index: 306,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/radiobutton",
        {
          _index: 1909,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/ripple",
        {
          _index: 295,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primeng/selectbutton",
        {
          _index: 1901,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/sidebar",
        {
          _index: 645,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "primeng/slider",
        {
          _index: 1661,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/table",
        {
          _index: 1659,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/tabview",
        {
          _index: 1911,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "primeng/toast",
        {
          _index: 668,
          title: {},
          body: {
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/toolbar",
        {
          _index: 837,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "primeng/tooltip",
        {
          _index: 643,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "primengconfig",
        {
          _index: 182,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "principal",
        {
          _index: 1560,
          title: {},
          body: {
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "principal'},{'name",
        {
          _index: 229,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "principal.component",
        {
          _index: 1572,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "principal.component.html",
        {
          _index: 1562,
          title: {},
          body: { "components/PrincipalComponent.html": {} },
        },
      ],
      [
        "principal.component.scss",
        {
          _index: 1561,
          title: {},
          body: { "components/PrincipalComponent.html": {} },
        },
      ],
      [
        "principalcomponent",
        {
          _index: 228,
          title: { "components/PrincipalComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "principalmodule",
        {
          _index: 1565,
          title: { "modules/PrincipalModule.html": {} },
          body: {
            "modules/PrincipalModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "prises",
        {
          _index: 2571,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "private",
        {
          _index: 47,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "prix",
        {
          _index: 1859,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "prod",
        {
          _index: 2749,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "product",
        {
          _index: 1288,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "product@description.com",
        {
          _index: 2399,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "product@description.fr",
        {
          _index: 2398,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "product@description.org",
        {
          _index: 2400,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "production",
        {
          _index: 2736,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "profile",
        {
          _index: 1576,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "profile'},{'name",
        {
          _index: 231,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "profile.component.html",
        {
          _index: 1580,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.scss",
        {
          _index: 1577,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "profile/profile.component",
        { _index: 1668, title: {}, body: { "modules/ProfileModule.html": {} } },
      ],
      [
        "profilecomponent",
        {
          _index: 230,
          title: { "components/ProfileComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "profilemodule",
        {
          _index: 1654,
          title: { "modules/ProfileModule.html": {} },
          body: {
            "modules/ProfileModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "profileservice",
        {
          _index: 1587,
          title: { "injectables/ProfileService.html": {} },
          body: {
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "progress",
        {
          _index: 587,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "progressbar",
        {
          _index: 1203,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "progressbarmodule",
        {
          _index: 1666,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "progressspinnermodule",
        {
          _index: 305,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      ["project", { _index: 2589, title: {}, body: { "index.html": {} } }],
      [
        "promise",
        {
          _index: 141,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "properties",
        {
          _index: 9,
          title: { "properties.html": {} },
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "components/AppComponent.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "props",
        {
          _index: 2771,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "provide",
        {
          _index: 842,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "providedin",
        {
          _index: 111,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "providers",
        {
          _index: 315,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/FranchiseeModule.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "prénom",
        {
          _index: 1644,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["pscontainer", { _index: 2669, title: {}, body: { "index.html": {} } }],
      [
        "pseudo",
        {
          _index: 2163,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "public",
        {
          _index: 334,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "put",
        {
          _index: 936,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "put(`${environment.apibaseurl}/contractors/${update.id}/times",
        {
          _index: 947,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "put(`${environment.apibaseurl}/ingredients/${update.id",
        {
          _index: 1270,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "put(`${environment.apibaseurl}/ingredients/types/${update.id",
        {
          _index: 1366,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "put(`${environment.apibaseurl}/recipes/${update.id",
        {
          _index: 1960,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "put(`${environment.apibaseurl}/users/${update.id",
        {
          _index: 2429,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "put(`${environment.apibaseurl}/users/${user.id",
        {
          _index: 1697,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "query",
        {
          _index: 416,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      ["r", { _index: 2697, title: {}, body: { "index.html": {} } }],
      [
        "radiobuttonmodule",
        {
          _index: 1908,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "radius",
        {
          _index: 798,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "random",
        {
          _index: 2164,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "randomstring",
        {
          _index: 2161,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "randomstring.length",
        {
          _index: 2166,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "randomstring.slice(0",
        {
          _index: 2167,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "reactiveformsmodule",
        {
          _index: 289,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "readonly",
        {
          _index: 2131,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "rec",
        {
          _index: 2779,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rec.ingredient",
        {
          _index: 2780,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rec.recipe",
        {
          _index: 2784,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "recette",
        {
          _index: 782,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "recipe",
        {
          _index: 233,
          title: { "interfaces/Recipe.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects-1.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "recipe.actions",
        {
          _index: 1980,
          title: {},
          body: { "interfaces/RecipeState.html": {} },
        },
      ],
      [
        "recipe.available_at",
        {
          _index: 1858,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "recipe.base_price",
        {
          _index: 2066,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipe.id",
        {
          _index: 942,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "recipe.model",
        {
          _index: 850,
          title: {},
          body: {
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
          },
        },
      ],
      [
        "recipe.model.ts",
        {
          _index: 847,
          title: {},
          body: { "interfaces/FranchiseeRecipe.html": {}, "coverage.html": {} },
        },
      ],
      [
        "recipe.name",
        {
          _index: 2056,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipe.recipe_type.code",
        {
          _index: 2067,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipe/recipe",
        {
          _index: 1894,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "recipe/recipes/recipes.component",
        {
          _index: 1903,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "recipe_id",
        {
          _index: 849,
          title: {},
          body: {
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "recipe_type",
        {
          _index: 1703,
          title: {},
          body: {
            "interfaces/Recipe.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "recipeactions",
        {
          _index: 1979,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "injectables/UserEffects-1.html": {},
          },
        },
      ],
      [
        "recipeactions.recipeloaded",
        {
          _index: 2238,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "recipeactions.recipeupdated",
        {
          _index: 2243,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "recipecomponent",
        {
          _index: 2785,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "recipedialog",
        {
          _index: 1992,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipedialogcomponent",
        {
          _index: 232,
          title: { "components/RecipeDialogComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "recipefeaturekey",
        {
          _index: 1981,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "recipeloaded",
        {
          _index: 2491,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "recipemanagementmodule",
        {
          _index: 1883,
          title: { "modules/RecipeManagementModule.html": {} },
          body: {
            "modules/RecipeManagementModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "recipepostmodel",
        {
          _index: 1930,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "recipereducer",
        {
          _index: 1982,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "recipes",
        {
          _index: 875,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "recipes'},{'name",
        {
          _index: 236,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "recipes.component.html",
        {
          _index: 1991,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipes.component.scss",
        {
          _index: 1988,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "recipescomponent",
        {
          _index: 235,
          title: { "components/RecipesComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "recipeservice",
        {
          _index: 1738,
          title: { "injectables/RecipeService.html": {} },
          body: {
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UserEffects-1.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "recipestate",
        {
          _index: 1977,
          title: { "interfaces/RecipeState.html": {} },
          body: {
            "interfaces/RecipeState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "recipestype",
        {
          _index: 1722,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "recipetype",
        {
          _index: 1706,
          title: { "interfaces/RecipeType.html": {} },
          body: {
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "recipeupdated",
        {
          _index: 2492,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "redirect",
        {
          _index: 308,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "redirect_uri",
        {
          _index: 421,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "reducer",
        {
          _index: 2278,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "reducer(state",
        { _index: 267, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "reducers",
        {
          _index: 259,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ref",
        {
          _index: 1723,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "ref.onclose.subscribe((recipe",
        {
          _index: 2051,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["reference", { _index: 2631, title: {}, body: { "index.html": {} } }],
      [
        "refresh_token",
        {
          _index: 14,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "refreshed",
        {
          _index: 475,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "refreshtoken",
        {
          _index: 333,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "refreshtoken(data",
        {
          _index: 379,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "related",
        {
          _index: 2774,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["reload", { _index: 2601, title: {}, body: { "index.html": {} } }],
      [
        "remote",
        {
          _index: 508,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "remove",
        {
          _index: 900,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/LocalStorageService.html": {},
          },
        },
      ],
      [
        "remove(key",
        {
          _index: 1466,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "removefranchisee",
        {
          _index: 2371,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "removefranchisee(id",
        {
          _index: 2394,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "removeingredient",
        {
          _index: 1251,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "removeingredient(id",
        {
          _index: 1258,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "removeingredienttype",
        {
          _index: 1339,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "removeingredienttype(id",
        {
          _index: 1349,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "removeingredienttype(ingretype.id",
        {
          _index: 1331,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "removerecipe",
        {
          _index: 859,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "removerecipe(id",
        {
          _index: 897,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "removerecipe(recipe",
        {
          _index: 2007,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "repeat",
        {
          _index: 1196,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "replaced",
        {
          _index: 2745,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "replacements",
        {
          _index: 2753,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "replaces",
        {
          _index: 2750,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "represents",
        { _index: 74, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "req",
        {
          _index: 140,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "req.clone",
        {
          _index: 160,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "req.urlwithparams.startswith(environment.apibaseurl",
        {
          _index: 153,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "request",
        {
          _index: 1946,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "requested",
        {
          _index: 39,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "required",
        {
          _index: 2346,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "res",
        {
          _index: 483,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "res.data",
        {
          _index: 2418,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "res['data",
        {
          _index: 925,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "res['message",
        {
          _index: 939,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "res['payload",
        {
          _index: 485,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "res[0",
        {
          _index: 2325,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "res[1",
        {
          _index: 2327,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "res[payload",
        {
          _index: 2150,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "reset",
        {
          _index: 277,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "response",
        {
          _index: 534,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "response_type",
        {
          _index: 423,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "responsive",
        {
          _index: 1228,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "results",
        {
          _index: 21,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "retrieve",
        {
          _index: 505,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "return",
        {
          _index: 115,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "returned",
        {
          _index: 811,
          title: {},
          body: {
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "returns",
        {
          _index: 75,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "revoke",
        {
          _index: 377,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "rgb(227",
        {
          _index: 2178,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "rgba(0",
        {
          _index: 630,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "rgba(198",
        {
          _index: 2095,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "rgba(213",
        {
          _index: 2188,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "rgba(255",
        {
          _index: 1865,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "right",
        {
          _index: 621,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/SidebarComponent.html": {},
          },
        },
      ],
      [
        "ripplemodule",
        {
          _index: 294,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "role",
        {
          _index: 374,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/User.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "rolearraytype",
        {
          _index: 518,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "rolebyid",
        {
          _index: 335,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "rolebyid(_user",
        {
          _index: 381,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "roles",
        {
          _index: 401,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "roles.admin",
        {
          _index: 499,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "roles.franchisee",
        {
          _index: 501,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "root",
        {
          _index: 112,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "root'},{'name",
        {
          _index: 205,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "rotate",
        {
          _index: 1542,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "rotate(0deg",
        {
          _index: 1540,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "rotatepao",
        {
          _index: 1522,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "rotatex(0deg",
        {
          _index: 1544,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "rotatex(30deg",
        {
          _index: 1545,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "route",
        {
          _index: 40,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "routeconfigloadend",
        {
          _index: 1431,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "routeconfigloadstart",
        {
          _index: 1432,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "router",
        {
          _index: 51,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/IngredientComponent.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routermodule",
        {
          _index: 307,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "routermodule.forchild",
        { _index: 1415, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "routermodule.forchild(routes",
        {
          _index: 310,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routermodule.forroot(routes",
        {
          _index: 2777,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "routerreducer",
        {
          _index: 250,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routerstatesnapshot",
        {
          _index: 60,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "routes",
        {
          _index: 43,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "modules/AuthModule.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "routing",
        {
          _index: 1421,
          title: {},
          body: {
            "components/LoadingComponent.html": {},
            "modules/PrincipalModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routing.module",
        {
          _index: 1570,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "routing.module.ts",
        {
          _index: 2449,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "row",
        {
          _index: 2106,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "run",
        {
          _index: 888,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "index.html": {},
          },
        },
      ],
      ["running", { _index: 2612, title: {}, body: { "index.html": {} } }],
      [
        "rxjs",
        {
          _index: 98,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LoadingService.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "rxjs/operators",
        {
          _index: 404,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/FranchiseeComponent.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UserEffects-2.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["s", { _index: 2696, title: {}, body: { "index.html": {} } }],
      [
        "s256",
        {
          _index: 427,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "samedi",
        {
          _index: 780,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "sans",
        {
          _index: 1179,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      [
        "sara",
        {
          _index: 2402,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "saturday",
        {
          _index: 679,
          title: { "interfaces/Saturday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["save", { _index: 2640, title: {}, body: { "index.html": {} } }],
      ["savein", { _index: 2641, title: {}, body: { "index.html": {} } }],
      [
        "saveuser",
        {
          _index: 2299,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      ["scaffolding", { _index: 2603, title: {}, body: { "index.html": {} } }],
      [
        "scale(0.98",
        {
          _index: 1538,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "scale(1",
        {
          _index: 1539,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "scales",
        {
          _index: 1516,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "schedule",
        {
          _index: 673,
          title: { "interfaces/Schedule.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "scope",
        {
          _index: 424,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "screen",
        {
          _index: 1231,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["script", { _index: 2694, title: {}, body: { "index.html": {} } }],
      [
        "sdqi",
        {
          _index: 2408,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "searchuserrole",
        {
          _index: 2153,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "second_line",
        { _index: 29, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      [
        "secure_user",
        {
          _index: 2559,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "segment",
        { _index: 83, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "segments",
        {
          _index: 78,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "select",
        {
          _index: 95,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "select(adminaccess",
        { _index: 117, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "select(franchiseeaccess",
        { _index: 818, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "select(selectuserdetails",
        {
          _index: 1615,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "selectbuttonmodule",
        {
          _index: 1900,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "selectedingredients",
        {
          _index: 1038,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "selectedusers",
        {
          _index: 2293,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "selectingredient",
        {
          _index: 2486,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selectingredientstate",
        {
          _index: 2488,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selectisloggedin",
        {
          _index: 2499,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selector",
        {
          _index: 173,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "selectprofileuser",
        {
          _index: 2500,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selectrecipe",
        {
          _index: 2494,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selectrecipestate",
        {
          _index: 2495,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "selectuserdetails",
        {
          _index: 559,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "selectuserstate",
        {
          _index: 2501,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "self",
        {
          _index: 2105,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "send",
        {
          _index: 949,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "sera",
        {
          _index: 2058,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "serif",
        {
          _index: 1180,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/TitleComponent.html": {},
          },
        },
      ],
      ["serve", { _index: 2594, title: {}, body: { "index.html": {} } }],
      [
        "server",
        {
          _index: 961,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "serveur",
        {
          _index: 1380,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "service",
        {
          _index: 918,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "services/user/auth/auth.service",
        {
          _index: 1399,
          title: {},
          body: {
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "set",
        {
          _index: 1459,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "set(key",
        {
          _index: 1468,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "setheaders",
        {
          _index: 161,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "severity",
        {
          _index: 1117,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "shadow",
        {
          _index: 2088,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "shared/models/picture.model",
        {
          _index: 1784,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "shared/services/loading/loading.service",
        {
          _index: 1780,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "shared/services/profile/profile.service",
        {
          _index: 1603,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "shared/services/user/auth/auth.service",
        { _index: 304, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "shared/store/state/user",
        {
          _index: 299,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "shared/store/state/user/user.reducer",
        {
          _index: 301,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "showerrors",
        {
          _index: 1494,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "showerrors(...errors",
        {
          _index: 1495,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "showloaderuntilcompleted",
        {
          _index: 1441,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "showloaderuntilcompleted(obs",
        {
          _index: 1445,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "sidebar",
        {
          _index: 2108,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "sidebar'},{'name",
        {
          _index: 238,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sidebar.component.html",
        {
          _index: 2110,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "sidebar.component.scss",
        {
          _index: 2109,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component",
        {
          _index: 650,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "sidebarcomponent",
        {
          _index: 237,
          title: { "components/SidebarComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "sidebarmodule",
        {
          _index: 644,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "sidebarservice",
        {
          _index: 2112,
          title: { "injectables/SidebarService.html": {} },
          body: {
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "size",
        {
          _index: 698,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/IngredientComponent.html": {},
            "interfaces/Picture.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "size_unit",
        { _index: 1557, title: {}, body: { "interfaces/Picture.html": {} } },
      ],
      [
        "sizing",
        {
          _index: 803,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
          },
        },
      ],
      [
        "slashes",
        { _index: 88, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "slidermodule",
        {
          _index: 1660,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "small",
        {
          _index: 699,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "small.json",
        {
          _index: 2415,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "smoothing",
        {
          _index: 1184,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "soir",
        {
          _index: 769,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "solid",
        {
          _index: 1236,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sortfield",
        {
          _index: 1993,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "sortorder",
        {
          _index: 1994,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "source",
        {
          _index: 4,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "interfaces/AppState.html": {},
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "modules/DefaultModule.html": {},
            "interfaces/Diner.html": {},
            "components/FooterComponent.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "modules/FranchiseeModule.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "components/HomeComponent.html": {},
            "modules/HomeModule.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "modules/LayoutsModule.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "components/PageNotFoundComponent.html": {},
            "interfaces/Picture.html": {},
            "components/PrincipalComponent.html": {},
            "modules/PrincipalModule.html": {},
            "components/ProfileComponent.html": {},
            "modules/ProfileModule.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "components/TabsComponent.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "space",
        {
          _index: 789,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sparks",
        {
          _index: 1534,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "spinner",
        {
          _index: 585,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "src/.../app",
        {
          _index: 2726,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../constants.ts",
        {
          _index: 2546,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "src/.../environment.example.ts",
        {
          _index: 2715,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.prod.ts",
        {
          _index: 2716,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.stage.ts",
        {
          _index: 2717,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.ts",
        {
          _index: 2718,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../ingredient.actions.ts",
        {
          _index: 2722,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../ingredient.reducer.ts",
        {
          _index: 2719,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../ingredient.selector.ts",
        {
          _index: 2728,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../principal",
        {
          _index: 2727,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../recipe.actions.ts",
        {
          _index: 2723,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../recipe.reducer.ts",
        {
          _index: 2720,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../recipe.selector.ts",
        {
          _index: 2729,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../sidebar.service.ts",
        {
          _index: 2725,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../store.reducer.ts",
        {
          _index: 2584,
          title: {},
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/.../user.actions.ts",
        {
          _index: 2724,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../user.model.ts",
        {
          _index: 2712,
          title: {},
          body: { "miscellaneous/typealiases.html": {} },
        },
      ],
      [
        "src/.../user.reducer.ts",
        {
          _index: 2721,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../user.selector.ts",
        {
          _index: 2583,
          title: {},
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/app",
        {
          _index: 2448,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app.component.ts",
        {
          _index: 170,
          title: {},
          body: { "components/AppComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/app.component.ts:11",
        {
          _index: 183,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "src/app/app.component.ts:15",
        {
          _index: 184,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "src/app/app.interceptor.ts",
        {
          _index: 971,
          title: {},
          body: {
            "interceptors/GlobalHttpInterceptorService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/app.interceptor.ts:14",
        {
          _index: 972,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "src/app/app.interceptor.ts:15",
        {
          _index: 974,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "src/app/app.interceptor.ts:17",
        {
          _index: 973,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "src/app/auth/auth.module.ts",
        { _index: 279, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "src/app/auth/auth.module.ts:38",
        { _index: 283, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "src/app/auth/callback/callback.component.ts",
        {
          _index: 547,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/auth/callback/callback.component.ts:19",
        {
          _index: 554,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "src/app/auth/callback/callback.component.ts:30",
        {
          _index: 556,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "src/app/auth/callback/callback.component.ts:42",
        {
          _index: 555,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "src/app/auth/login/login.component.ts",
        {
          _index: 1481,
          title: {},
          body: { "components/LoginComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/auth/login/login.component.ts:12",
        {
          _index: 1486,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/auth/login/login.component.ts:16",
        {
          _index: 1487,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/auth/login/login.component.ts:9",
        {
          _index: 1485,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/components.module",
        {
          _index: 840,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "src/app/layouts/components/components.module.ts",
        {
          _index: 638,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "src/app/layouts/components/footer/footer.component.ts",
        {
          _index: 685,
          title: {},
          body: { "components/FooterComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/components/footer/footer.component.ts:13",
        {
          _index: 690,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/footer/footer.component.ts:8",
        {
          _index: 689,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/loading/loading.component.ts",
        {
          _index: 1416,
          title: {},
          body: { "components/LoadingComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/components/loading/loading.component.ts:20",
        {
          _index: 1424,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/loading/loading.component.ts:23",
        {
          _index: 1423,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/loading/loading.component.ts:25",
        {
          _index: 1426,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/loading/loading.component.ts:29",
        {
          _index: 1425,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/page",
        {
          _index: 1507,
          title: {},
          body: {
            "components/PageNotFoundComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts",
        {
          _index: 2107,
          title: {},
          body: { "components/SidebarComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:16",
        {
          _index: 2117,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:17",
        {
          _index: 2118,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:18",
        {
          _index: 2113,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:27",
        {
          _index: 2115,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:35",
        {
          _index: 2116,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/sidebar/sidebar.component.ts:39",
        {
          _index: 2114,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/title/title.component.ts",
        {
          _index: 2181,
          title: {},
          body: { "components/TitleComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/components/title/title.component.ts:10",
        {
          _index: 2184,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/title/title.component.ts:16",
        {
          _index: 2186,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/title/title.component.ts:9",
        {
          _index: 2185,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts",
        {
          _index: 2199,
          title: {},
          body: { "components/TopbarComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:18",
        {
          _index: 2210,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:19",
        {
          _index: 2209,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:20",
        {
          _index: 2205,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:28",
        {
          _index: 2207,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:33",
        {
          _index: 2206,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/components/topbar/topbar.component.ts:47",
        {
          _index: 2208,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/default/default.component.ts",
        {
          _index: 655,
          title: {},
          body: { "components/DefaultComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/layouts/default/default.component.ts:13",
        {
          _index: 659,
          title: {},
          body: { "components/DefaultComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/default/default.component.ts:8",
        {
          _index: 658,
          title: {},
          body: { "components/DefaultComponent.html": {} },
        },
      ],
      [
        "src/app/layouts/default/default.module.ts",
        { _index: 664, title: {}, body: { "modules/DefaultModule.html": {} } },
      ],
      [
        "src/app/layouts/layouts.module.ts",
        { _index: 1411, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "src/app/layouts/layouts.module.ts:14",
        { _index: 1412, title: {}, body: { "modules/LayoutsModule.html": {} } },
      ],
      [
        "src/app/principal/franchisee/franchisee.module.ts",
        {
          _index: 824,
          title: {},
          body: { "modules/FranchiseeModule.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts",
        {
          _index: 715,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:19",
        {
          _index: 735,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:20",
        {
          _index: 734,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:21",
        {
          _index: 739,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:23",
        {
          _index: 737,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:24",
        {
          _index: 729,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:28",
        {
          _index: 738,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:34",
        {
          _index: 733,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:46",
        {
          _index: 731,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:49",
        {
          _index: 730,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/franchisee/franchisee/franchisee.component.ts:53",
        {
          _index: 732,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/home/home.component.ts",
        {
          _index: 991,
          title: {},
          body: { "components/HomeComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/principal/home/home.component.ts:14",
        {
          _index: 996,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/home/home.component.ts:9",
        {
          _index: 995,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "src/app/principal/home/home.module.ts",
        { _index: 1010, title: {}, body: { "modules/HomeModule.html": {} } },
      ],
      [
        "src/app/principal/principal",
        {
          _index: 2457,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/principal/principal.component.ts",
        {
          _index: 1559,
          title: {},
          body: {
            "components/PrincipalComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/principal/principal.component.ts:13",
        {
          _index: 1564,
          title: {},
          body: { "components/PrincipalComponent.html": {} },
        },
      ],
      [
        "src/app/principal/principal.component.ts:8",
        {
          _index: 1563,
          title: {},
          body: { "components/PrincipalComponent.html": {} },
        },
      ],
      [
        "src/app/principal/principal.module.ts",
        {
          _index: 1569,
          title: {},
          body: { "modules/PrincipalModule.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile.module.ts",
        { _index: 1657, title: {}, body: { "modules/ProfileModule.html": {} } },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts",
        {
          _index: 1575,
          title: {},
          body: { "components/ProfileComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:111",
        {
          _index: 1589,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:146",
        {
          _index: 1594,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:29",
        {
          _index: 1598,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:30",
        {
          _index: 1599,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:31",
        {
          _index: 1597,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:32",
        {
          _index: 1600,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:34",
        {
          _index: 1602,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:35",
        {
          _index: 1601,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:37",
        {
          _index: 1588,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:48",
        {
          _index: 1592,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/profile/profile/profile.component.ts:72",
        {
          _index: 1596,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "src/app/principal/recipe",
        {
          _index: 1025,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/TabsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/principal/users/users.module.ts",
        { _index: 2352, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "src/app/principal/users/users/users.component.ts",
        {
          _index: 2289,
          title: {},
          body: { "components/UsersComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:107",
        {
          _index: 2310,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:112",
        {
          _index: 2313,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:142",
        {
          _index: 2309,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:154",
        {
          _index: 2303,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:16",
        {
          _index: 2317,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:18",
        {
          _index: 2318,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:19",
        {
          _index: 2316,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:20",
        {
          _index: 2315,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:22",
        {
          _index: 2314,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:23",
        {
          _index: 2302,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:34",
        {
          _index: 2311,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:58",
        {
          _index: 2312,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:64",
        {
          _index: 2307,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/principal/users/users/users.component.ts:69",
        {
          _index: 2305,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/app/shared/constants/constants",
        {
          _index: 403,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "injectables/ProfileService.html": {},
            "components/SidebarComponent.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "src/app/shared/constants/constants.ts",
        {
          _index: 2548,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "src/app/shared/guards/admin/admin.guard.ts",
        {
          _index: 36,
          title: {},
          body: { "guards/AdminGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/guards/admin/admin.guard.ts:27",
        { _index: 54, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/admin/admin.guard.ts:30",
        { _index: 89, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/admin/admin.guard.ts:49",
        { _index: 61, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/admin/admin.guard.ts:63",
        { _index: 80, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/franchisee/franchisee.guard.ts",
        {
          _index: 805,
          title: {},
          body: { "guards/FranchiseeGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/guards/franchisee/franchisee.guard.ts:27",
        { _index: 806, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/franchisee/franchisee.guard.ts:35",
        { _index: 813, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/franchisee/franchisee.guard.ts:48",
        { _index: 807, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/franchisee/franchisee.guard.ts:63",
        { _index: 808, title: {}, body: { "guards/FranchiseeGuard.html": {} } },
      ],
      [
        "src/app/shared/guards/is",
        {
          _index: 1394,
          title: {},
          body: {
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/interceptors/api",
        {
          _index: 126,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/access",
        {
          _index: 6,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/address.model",
        {
          _index: 745,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/shared/models/address.model.ts",
        {
          _index: 24,
          title: {},
          body: { "interfaces/Address.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/franchisee",
        {
          _index: 846,
          title: {},
          body: { "interfaces/FranchiseeRecipe.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/franchisee.model",
        {
          _index: 741,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/shared/models/franchisee.model.ts",
        {
          _index: 706,
          title: {},
          body: { "interfaces/Franchisee.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/ingredient",
        {
          _index: 1015,
          title: {},
          body: {
            "interfaces/IngreType.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/ingredient.model",
        {
          _index: 1082,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/ingredient.model.ts",
        {
          _index: 1020,
          title: {},
          body: { "interfaces/Ingredient.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/picture.model",
        {
          _index: 2025,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "src/app/shared/models/picture.model.ts",
        {
          _index: 1554,
          title: {},
          body: { "interfaces/Picture.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/recipe",
        {
          _index: 1783,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "interfaces/RecipeType.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/recipe.model",
        {
          _index: 1782,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "interfaces/RecipeState.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/recipe.model.ts",
        {
          _index: 1699,
          title: {},
          body: { "interfaces/Recipe.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/models/schedule.model",
        {
          _index: 744,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "src/app/shared/models/schedule.model.ts",
        {
          _index: 670,
          title: {},
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/user.model",
        {
          _index: 557,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/user.model.ts",
        {
          _index: 542,
          title: {},
          body: {
            "interfaces/Autorisation.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service",
        {
          _index: 742,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "modules/FranchiseeModule.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts",
        {
          _index: 851,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:120",
        {
          _index: 898,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:138",
        {
          _index: 878,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:15",
        {
          _index: 862,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:154",
        {
          _index: 870,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:168",
        {
          _index: 905,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:183",
        {
          _index: 880,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:200",
        {
          _index: 893,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:24",
        {
          _index: 876,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:45",
        {
          _index: 874,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:63",
        {
          _index: 896,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:85",
        {
          _index: 864,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/franchisee/franchisee.service.ts:99",
        {
          _index: 903,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient",
        {
          _index: 1084,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service",
        {
          _index: 1083,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/UserEffects.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts",
        {
          _index: 1247,
          title: {},
          body: {
            "injectables/IngredientService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:13",
        {
          _index: 1252,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:22",
        {
          _index: 1257,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:33",
        {
          _index: 1256,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:44",
        {
          _index: 1254,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:55",
        {
          _index: 1264,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/ingredient/ingredient.service.ts:67",
        {
          _index: 1259,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service",
        {
          _index: 743,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts",
        {
          _index: 1437,
          title: {},
          body: { "injectables/LoadingService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts:15",
        {
          _index: 1450,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts:17",
        {
          _index: 1442,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts:23",
        {
          _index: 1446,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts:31",
        {
          _index: 1444,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "src/app/shared/services/loading/loading.service.ts:35",
        {
          _index: 1443,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "src/app/shared/services/messages/messages.service.ts",
        {
          _index: 1492,
          title: {},
          body: { "injectables/MessagesService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/messages/messages.service.ts:10",
        {
          _index: 1502,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "src/app/shared/services/messages/messages.service.ts:14",
        {
          _index: 1496,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "src/app/shared/services/messages/messages.service.ts:8",
        {
          _index: 1503,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service",
        {
          _index: 2255,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts",
        {
          _index: 1670,
          title: {},
          body: { "injectables/ProfileService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts:14",
        {
          _index: 1672,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts:23",
        {
          _index: 1674,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts:34",
        {
          _index: 1675,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts:54",
        {
          _index: 1673,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "src/app/shared/services/profile/profile.service.ts:66",
        {
          _index: 1677,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service",
        {
          _index: 1785,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UserEffects-1.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts",
        {
          _index: 1917,
          title: {},
          body: { "injectables/RecipeService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:102",
        {
          _index: 1940,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:117",
        {
          _index: 1944,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:131",
        {
          _index: 1927,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:14",
        {
          _index: 1925,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:145",
        {
          _index: 1938,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:162",
        {
          _index: 1939,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:23",
        {
          _index: 1934,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:31",
        {
          _index: 1935,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:47",
        {
          _index: 1932,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:57",
        {
          _index: 1936,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:67",
        {
          _index: 1929,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/recipe/recipe.service.ts:81",
        {
          _index: 1942,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service",
        {
          _index: 2120,
          title: {},
          body: {
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts",
        {
          _index: 2130,
          title: {},
          body: {
            "injectables/SidebarService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:14",
        {
          _index: 2143,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:16",
        {
          _index: 2142,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:18",
        {
          _index: 2135,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:25",
        {
          _index: 2140,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:29",
        {
          _index: 2137,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/sidebar/sidebar.service.ts:35",
        {
          _index: 2138,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service",
        {
          _index: 150,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/CallbackComponent.html": {},
            "components/LoginComponent.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts",
        {
          _index: 317,
          title: {},
          body: { "injectables/AuthService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:124",
        {
          _index: 376,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:129",
        {
          _index: 354,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:151",
        {
          _index: 375,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:162",
        {
          _index: 366,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:168",
        {
          _index: 353,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:174",
        {
          _index: 364,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:180",
        {
          _index: 370,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:195",
        {
          _index: 372,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:215",
        {
          _index: 358,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:232",
        {
          _index: 359,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:24",
        {
          _index: 340,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:240",
        {
          _index: 361,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:261",
        {
          _index: 363,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:276",
        {
          _index: 382,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:301",
        {
          _index: 380,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:321",
        {
          _index: 345,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:43",
        {
          _index: 355,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/auth/auth.service.ts:79",
        {
          _index: 349,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/local",
        {
          _index: 997,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/ProfileService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/user/string/string.service.ts",
        {
          _index: 2157,
          title: {},
          body: { "injectables/StringService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/string/string.service.ts:14",
        {
          _index: 2162,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/string/string.service.ts:6",
        {
          _index: 2159,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/user/user.service.ts",
        {
          _index: 2265,
          title: {},
          body: { "injectables/UserService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/user/user.service.ts:13",
        {
          _index: 2268,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/user/user.service.ts:18",
        {
          _index: 2269,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/user/user.service.ts:23",
        {
          _index: 2271,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/app/shared/services/user/user/user.service.ts:28",
        {
          _index: 2272,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service",
        {
          _index: 2319,
          title: {},
          body: {
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts",
        {
          _index: 2355,
          title: {},
          body: { "injectables/UsersService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:102",
        {
          _index: 2397,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:116",
        {
          _index: 2395,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:123",
        {
          _index: 2390,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:13",
        {
          _index: 2405,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:132",
        {
          _index: 2379,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:14",
        {
          _index: 2409,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:142",
        {
          _index: 2376,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:145",
        {
          _index: 2375,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:148",
        {
          _index: 2377,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:15",
        {
          _index: 2401,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:151",
        {
          _index: 2374,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:154",
        {
          _index: 2378,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:20",
        {
          _index: 2373,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:26",
        {
          _index: 2389,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:40",
        {
          _index: 2386,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:51",
        {
          _index: 2383,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:62",
        {
          _index: 2388,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:75",
        {
          _index: 2381,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/services/users/users.service.ts:90",
        {
          _index: 2392,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "src/app/shared/store",
        {
          _index: 558,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.actions.ts",
        {
          _index: 2482,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.effets.ts",
        {
          _index: 2214,
          title: {},
          body: { "injectables/UserEffects.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.effets.ts:10",
        {
          _index: 2218,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.effets.ts:16",
        {
          _index: 2225,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.effets.ts:24",
        {
          _index: 2230,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.reducer.ts",
        {
          _index: 1274,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/state/ingredient/ingredient.selector.ts",
        {
          _index: 2485,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/index",
        {
          _index: 2240,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.actions.ts",
        {
          _index: 2489,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.effets.ts",
        {
          _index: 2232,
          title: {},
          body: { "injectables/UserEffects-1.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.effets.ts:14",
        {
          _index: 2239,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.effets.ts:8",
        {
          _index: 2234,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.reducer.ts",
        {
          _index: 1978,
          title: {},
          body: {
            "interfaces/RecipeState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/state/recipe/recipe.selector.ts",
        {
          _index: 2493,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user",
        {
          _index: 561,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/state/user/index",
        {
          _index: 2254,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.actions.ts",
        {
          _index: 2496,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.effects.ts",
        {
          _index: 2244,
          title: {},
          body: { "injectables/UserEffects-2.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.effects.ts:16",
        {
          _index: 2249,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.effects.ts:24",
        {
          _index: 2253,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.effects.ts:9",
        {
          _index: 2245,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.reducer.ts",
        {
          _index: 2276,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/state/user/user.selector",
        {
          _index: 2122,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "src/app/shared/store/state/user/user.selector.ts",
        {
          _index: 2498,
          title: {},
          body: {
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/store.reducer",
        {
          _index: 2121,
          title: {},
          body: {
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "src/app/shared/store/store.reducer.ts",
        {
          _index: 249,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/environments/environment",
        {
          _index: 149,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "src/environments/environment.example.ts",
        {
          _index: 2503,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.prod.ts",
        {
          _index: 2504,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.stage.ts",
        {
          _index: 2505,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.ts",
        {
          _index: 2506,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/styles.scss",
        {
          _index: 1489,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/SidebarComponent.html": {},
          },
        },
      ],
      [
        "star",
        {
          _index: 1704,
          title: {},
          body: {
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      ["start", { _index: 2597, title: {}, body: { "index.html": {} } }],
      ["started", { _index: 2587, title: { "index.html": {} }, body: {} }],
      [
        "state",
        {
          _index: 59,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interfaces/IngredientState.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "statements",
        { _index: 2447, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "statestic",
        {
          _index: 1002,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "static",
        {
          _index: 281,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/LayoutsModule.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "status",
        {
          _index: 981,
          title: {},
          body: {
            "interceptors/GlobalHttpInterceptorService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "storage",
        {
          _index: 458,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "storage.service",
        {
          _index: 399,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/HomeComponent.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "storage.service.ts",
        {
          _index: 1458,
          title: {},
          body: {
            "injectables/LocalStorageService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "storage.service.ts:11",
        {
          _index: 1469,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "storage.service.ts:24",
        {
          _index: 1462,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "storage.service.ts:35",
        {
          _index: 1467,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "storage.service.ts:39",
        {
          _index: 1465,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "storage.service.ts:6",
        {
          _index: 1460,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "storage/local",
        {
          _index: 398,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/HomeComponent.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/ProfileService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "storagekeys",
        {
          _index: 402,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "store",
        {
          _index: 52,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "dependencies.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "store.state",
        { _index: 255, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "store/state/user/user.selector",
        {
          _index: 102,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "store/store.reducer",
        {
          _index: 100,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      ["stored", { _index: 2609, title: {}, body: { "index.html": {} } }],
      [
        "storemodule",
        {
          _index: 285,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "storemodule.forfeature('user",
        { _index: 313, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "storemodule.forfeature(fromauth.userfeaturekey",
        {
          _index: 311,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
          },
        },
      ],
      [
        "string",
        {
          _index: 16,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/LocalStorageService.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "string/string.service",
        {
          _index: 400,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "stringservice",
        {
          _index: 338,
          title: { "injectables/StringService.html": {} },
          body: {
            "injectables/AuthService.html": {},
            "injectables/StringService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "stroke",
        {
          _index: 598,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/PageNotFoundComponent.html": {},
          },
        },
      ],
      [
        "styleclass",
        {
          _index: 2045,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "styles",
        {
          _index: 168,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "styleurls",
        {
          _index: 175,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "subject",
        {
          _index: 1493,
          title: {},
          body: {
            "injectables/MessagesService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "submitted",
        {
          _index: 1039,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "subscribe",
        {
          _index: 1115,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "subscribe((recipes",
        {
          _index: 2026,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "subscribe((res",
        {
          _index: 751,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "subscribe(async",
        {
          _index: 456,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "success",
        {
          _index: 1118,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "successful",
        {
          _index: 2337,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "succès",
        {
          _index: 1120,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "summary",
        {
          _index: 1119,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sunday",
        {
          _index: 680,
          title: { "interfaces/Sunday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["support", { _index: 2704, title: {}, body: { "modules.html": {} } }],
      [
        "suppression",
        {
          _index: 1330,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "suppresssion",
        {
          _index: 2009,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "supprim",
        {
          _index: 1153,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "supprimer",
        {
          _index: 1141,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sur",
        {
          _index: 1378,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "survenue",
        {
          _index: 1390,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      ["svg", { _index: 2705, title: {}, body: { "modules.html": {} } }],
      [
        "switch",
        {
          _index: 1371,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "sync",
        {
          _index: 2776,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sûre",
        {
          _index: 1139,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "t",
        {
          _index: 881,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/LoadingService.html": {},
            "injectables/RecipeService.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "table",
        {
          _index: 1207,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "tablemodule",
        {
          _index: 1658,
          title: {},
          body: {
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 2507, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "tabs",
        {
          _index: 2170,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "tabs'},{'name",
        {
          _index: 240,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "tabs.component.html",
        {
          _index: 2172,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "tabs.component.scss",
        {
          _index: 2171,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "tabs/tabs.component",
        {
          _index: 1913,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "tabscomponent",
        {
          _index: 239,
          title: { "components/TabsComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "tabview",
        {
          _index: 2176,
          title: {},
          body: { "components/TabsComponent.html": {} },
        },
      ],
      [
        "tabviewmodule",
        {
          _index: 1910,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      ["tag", { _index: 2657, title: {}, body: { "index.html": {} } }],
      [
        "tap",
        {
          _index: 97,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/LoadingService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "tap((action",
        {
          _index: 2258,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "tap((canaccess",
        {
          _index: 118,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "tap((franchisees",
        {
          _index: 914,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "tap((obj",
        {
          _index: 922,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "tap((recipes",
        {
          _index: 1953,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "tap((res",
        {
          _index: 1698,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "tap((values",
        {
          _index: 1360,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "tbody",
        {
          _index: 1222,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "td",
        {
          _index: 1211,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "template",
        {
          _index: 167,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "templateurl",
        {
          _index: 177,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["test", { _index: 2615, title: {}, body: { "index.html": {} } }],
      ["testing", { _index: 2624, title: {}, body: { "index.html": {} } }],
      ["tests", { _index: 2614, title: {}, body: { "index.html": {} } }],
      [
        "text",
        {
          _index: 1217,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "textbutton",
        {
          _index: 1724,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "tfoot",
        {
          _index: 1234,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "th",
        {
          _index: 1221,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "thead",
        {
          _index: 1219,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["theme", { _index: 2692, title: {}, body: { "index.html": {} } }],
      ["themes", { _index: 2648, title: {}, body: { "index.html": {} } }],
      [
        "then((data",
        {
          _index: 2419,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "then((res",
        {
          _index: 2417,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "thing",
        {
          _index: 987,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "this._recipetype",
        {
          _index: 1794,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.accesstokenisexpired(useraccesstoken",
        {
          _index: 471,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.actions$.pipe",
        {
          _index: 2220,
          title: {},
          body: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "this.activatedroute.queryparams.subscribe((parameters",
        {
          _index: 563,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "this.allergen",
        {
          _index: 1154,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.authservice.authorizationcodetoaccesstoken(code",
        {
          _index: 566,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "this.authservice.getaccesstoken",
        {
          _index: 159,
          title: {},
          body: { "interceptors/ApiTokenInterceptorService.html": {} },
        },
      ],
      [
        "this.authservice.getauthorizationcode",
        {
          _index: 1488,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "this.authservice.getcurrentuser",
        {
          _index: 2146,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "this.authservice.getuser",
        {
          _index: 2147,
          title: {},
          body: {
            "injectables/SidebarService.html": {},
            "injectables/UserEffects-2.html": {},
          },
        },
      ],
      [
        "this.authservice.isauthenticated",
        {
          _index: 1400,
          title: {},
          body: {
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "this.authservice.logout",
        {
          _index: 2263,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "this.authservice.rolebyid(currentuser",
        {
          _index: 1682,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "this.checkifauthenticated",
        {
          _index: 122,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "this.confirmationservice.confirm",
        {
          _index: 1136,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.contact",
        {
          _index: 752,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "this.createid",
        {
          _index: 2339,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.detectroutingongoing",
        {
          _index: 1433,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "this.dialogservice.open(recipedialogcomponent",
        {
          _index: 2040,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.display",
        {
          _index: 2124,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "this.editmodeemail",
        {
          _index: 1612,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.editmodefirstname",
        {
          _index: 1610,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.editmodelastname",
        {
          _index: 1611,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.editmodephone",
        {
          _index: 1613,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.fb.group",
        {
          _index: 1096,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.form",
        {
          _index: 1095,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.form.controls['ingredientsdetails'].value",
        {
          _index: 1831,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.controls['ingredienttype'].value.code",
        {
          _index: 1106,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.form.controls['recipetype'].value.code",
        {
          _index: 1827,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.controls[controlname].dirty",
        {
          _index: 1854,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.controls[controlname].haserror(errorname",
        {
          _index: 1855,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.get('allergen').setvalue(false",
        {
          _index: 1157,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.form.get('allergen').setvalue(true",
        {
          _index: 1156,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.form.get('allergen').value",
        {
          _index: 1104,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.form.get('description').value",
        {
          _index: 1317,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.form.get('name').value",
        {
          _index: 1102,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "this.form.get('star').setvalue(false",
        {
          _index: 1821,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.get('star').setvalue(true",
        {
          _index: 1820,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.patchvalue(this.contact",
        {
          _index: 753,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "this.form.patchvalue(this.user",
        {
          _index: 1608,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.form.valid",
        {
          _index: 1835,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.value",
        {
          _index: 1619,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.form.value.availabledate",
        {
          _index: 1823,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.value.description",
        {
          _index: 1834,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.value.price",
        {
          _index: 1829,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.value.star",
        {
          _index: 1832,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.form.value.title",
        {
          _index: 1825,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.franchiseeservice",
        {
          _index: 747,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "this.generateemail",
        {
          _index: 2435,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.generatefirstname",
        {
          _index: 2433,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.generateid",
        {
          _index: 2432,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.generatelastname",
        {
          _index: 2434,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.generatephone",
        {
          _index: 2436,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.getcurrentuser",
        {
          _index: 464,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.getcurrentuserremote",
        {
          _index: 465,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.getrandomstring(length",
        {
          _index: 2168,
          title: {},
          body: { "injectables/StringService.html": {} },
        },
      ],
      [
        "this.getrole(currentuser",
        {
          _index: 514,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.getroleremote(currentuser",
        {
          _index: 517,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.handleerror(err",
        {
          _index: 1363,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "this.has(key",
        {
          _index: 1475,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "this.http",
        {
          _index: 445,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UserService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "this.http.delete(`${environment.apibaseurl}/users/${id}`).pipe",
        {
          _index: 2430,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.http.get",
        {
          _index: 510,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/recipes/${id}`).pipe(map((res",
        {
          _index: 1950,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/recipes/types`).pipe(map((res",
        {
          _index: 1957,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/recipes?includes[]=pictures`).pipe",
        {
          _index: 1952,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/users/${id}`).pipe",
        {
          _index: 2421,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/users/current",
        {
          _index: 516,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/users?role[]=contractor`).pipe",
        {
          _index: 2423,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.http.get(`${environment.apibaseurl}/users`).pipe",
        {
          _index: 2151,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "this.http.post(`${environment.apibaseurl}/contractors",
        {
          _index: 933,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "this.http.post(`${environment.apibaseurl}/files",
        {
          _index: 1971,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "this.http.post(`${environment.apibaseurl}/users",
        {
          _index: 2427,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.id",
        {
          _index: 1089,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredient",
        {
          _index: 1109,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredient.id",
        {
          _index: 1108,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredient?.allergen",
        {
          _index: 1099,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredient?.name",
        {
          _index: 1097,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredient?.types",
        {
          _index: 1100,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredientdialog",
        {
          _index: 1135,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredients",
        {
          _index: 1092,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "this.ingredients.foreach((x",
        {
          _index: 1797,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.ingredientservice",
        {
          _index: 1113,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredientservice.getingredients",
        {
          _index: 2222,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "this.ingredientservice.getingredients().subscribe((res",
        {
          _index: 1091,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.ingredientservice.removeingredient(ingredient.id).subscribe",
        {
          _index: 1150,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.ingredientservice.updateingredient(action.ingredient",
        {
          _index: 2228,
          title: {},
          body: { "injectables/UserEffects.html": {} },
        },
      ],
      [
        "this.ingredienttype",
        {
          _index: 2062,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.ingredienttypedialog",
        {
          _index: 1328,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.ingredienttypeservice",
        {
          _index: 1321,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.ingredienttypeservice.getingredientstypes().subscribe((res",
        {
          _index: 1093,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "this.ingretype",
        {
          _index: 1318,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.ingretype.id",
        {
          _index: 1320,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.ingretype?.description",
        {
          _index: 1314,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.ingretype?.name",
        {
          _index: 1313,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.init",
        {
          _index: 1087,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "this.initauth(user",
        {
          _index: 488,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "this.initform",
        {
          _index: 1090,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.iscreate",
        {
          _index: 1088,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "this.loadappuser",
        {
          _index: 2211,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "this.loading.loadingoff",
        {
          _index: 750,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.loading.loadingon",
        {
          _index: 746,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.loadingoff",
        {
          _index: 1455,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "this.loadingon",
        {
          _index: 1454,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "this.loadingservice.loadingoff",
        {
          _index: 1435,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "this.loadingservice.loadingon",
        {
          _index: 1434,
          title: {},
          body: { "components/LoadingComponent.html": {} },
        },
      ],
      [
        "this.loadingsubject.asobservable",
        {
          _index: 1448,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "this.loadingsubject.next(false",
        {
          _index: 1457,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "this.loadingsubject.next(true",
        {
          _index: 1456,
          title: {},
          body: { "injectables/LoadingService.html": {} },
        },
      ],
      [
        "this.localstorageservice.get(storagekeys.code_verify",
        {
          _index: 450,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.get(storagekeys.role",
        {
          _index: 490,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "this.localstorageservice.get(storagekeys.state",
        {
          _index: 442,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.get(storagekeys.user",
        {
          _index: 507,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/ProfileService.html": {},
          },
        },
      ],
      [
        "this.localstorageservice.get(storagekeys.user_token",
        {
          _index: 470,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.has(storagekeys.code_verify",
        {
          _index: 438,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.has(storagekeys.role",
        {
          _index: 480,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.has(storagekeys.state",
        {
          _index: 437,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.has(storagekeys.user",
        {
          _index: 479,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.has(storagekeys.user_token",
        {
          _index: 405,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.remove(storagekeys.code_verify",
        {
          _index: 408,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.remove(storagekeys.state",
        {
          _index: 407,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.remove(this.storage_key_user",
        {
          _index: 466,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.set(storagekeys.code_verify",
        {
          _index: 414,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.set(storagekeys.role",
        {
          _index: 526,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.set(storagekeys.state",
        {
          _index: 415,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.set(storagekeys.user",
        {
          _index: 513,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.localstorageservice.set(storagekeys.user_token",
        {
          _index: 463,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.log('fetched",
        {
          _index: 915,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "this.makeingredienttype",
        {
          _index: 1319,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "this.makerecipe",
        {
          _index: 1112,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "this.messageservice.add",
        {
          _index: 1116,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.mode",
        {
          _index: 1799,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.newrecipe",
        {
          _index: 1837,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.picture",
        {
          _index: 1801,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.pictures",
        {
          _index: 2063,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.primengconfig.ripple",
        {
          _index: 191,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "this.profileservice.getcurrentuser",
        {
          _index: 1606,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.profileservice.getuser().subscribe",
        {
          _index: 1607,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.profileservice.updateuser(action.userdetails",
        {
          _index: 2251,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "this.recipe",
        {
          _index: 1791,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.available_at",
        {
          _index: 1822,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.base_price",
        {
          _index: 1828,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.description",
        {
          _index: 1833,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.ingredients",
        {
          _index: 1830,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.name",
        {
          _index: 1824,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.recipe_type",
        {
          _index: 1826,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe.star",
        {
          _index: 1819,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.available_at",
        {
          _index: 1806,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.base_price",
        {
          _index: 1813,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.description",
        {
          _index: 1815,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.ingredients",
        {
          _index: 1814,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.name",
        {
          _index: 1811,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.recipe_type",
        {
          _index: 1812,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipe?.star",
        {
          _index: 1816,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipes",
        {
          _index: 2027,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.recipeservice",
        {
          _index: 1838,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "this.recipeservice.createrecipe(this.recipe).subscribe",
        {
          _index: 1840,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipeservice.getrecipes",
        {
          _index: 2236,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "this.recipeservice.getrecipetype().subscribe((res",
        {
          _index: 1803,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipeservice.removerecipe(recipe.id).subscribe",
        {
          _index: 2057,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.recipeservice.updaterecipe(action.recipe",
        {
          _index: 2242,
          title: {},
          body: { "injectables/UserEffects-1.html": {} },
        },
      ],
      [
        "this.recipeservice.updaterecipe(this.recipe).subscribe",
        {
          _index: 1844,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipeservice.uploadpicture(this.picture).subscribe((res",
        {
          _index: 1850,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.recipestype",
        {
          _index: 1804,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "this.ref",
        {
          _index: 2061,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.ref.close",
        {
          _index: 1846,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.ref.close(_res",
        {
          _index: 1842,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.ref.close(res",
        {
          _index: 1845,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.ref.onclose.subscribe((_recipe",
        {
          _index: 2064,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.refreshtoken(useraccesstoken",
        {
          _index: 473,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.rolebyid(user",
        {
          _index: 528,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.router.events.subscribe((event",
        {
          _index: 193,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "this.router.navigate(['/home",
        {
          _index: 406,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      [
        "this.router.navigate(['/login",
        {
          _index: 1401,
          title: {},
          body: { "guards/IsAuthenticatedGuard.html": {} },
        },
      ],
      [
        "this.router.navigate([event.url.replace",
        {
          _index: 198,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "this.router.navigatebyurl",
        {
          _index: 120,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "this.router.navigatebyurl('/home",
        {
          _index: 577,
          title: {},
          body: { "components/CallbackComponent.html": {} },
        },
      ],
      [
        "this.router.navigatebyurl(`/`).then",
        {
          _index: 984,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "this.sidebarservice.display$.subscribe((res",
        {
          _index: 2123,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "this.sidebarservice.open(false",
        {
          _index: 2126,
          title: {},
          body: { "components/SidebarComponent.html": {} },
        },
      ],
      [
        "this.sidebarservice.open(true",
        {
          _index: 2213,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "this.sortfield",
        {
          _index: 2036,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.sortorder",
        {
          _index: 2035,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "this.star",
        {
          _index: 1818,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.store",
        {
          _index: 1614,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.store.dispatch",
        {
          _index: 1628,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.store.dispatch(useractions.loaduser",
        {
          _index: 570,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "this.store.pipe",
        {
          _index: 116,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "this.store.pipe(select(selectuserdetails",
        {
          _index: 2125,
          title: {},
          body: {
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "this.store.pipe(select(selectuserdetails)).subscribe",
        {
          _index: 568,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/TopbarComponent.html": {},
          },
        },
      ],
      [
        "this.store.pipe(select(selectuserdetails)).subscribe((user",
        {
          _index: 1604,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.stringservice.getrandomstring(40",
        {
          _index: 409,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.subject",
        {
          _index: 1497,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "this.subject.asobservable",
        {
          _index: 2141,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "this.subject.next(display",
        {
          _index: 2148,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "this.subject.next(errors",
        {
          _index: 1505,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      [
        "this.submitted",
        {
          _index: 1111,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.typearray",
        {
          _index: 1094,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "this.updaterecipe",
        {
          _index: 1836,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.uploadedfiles.push(picture",
        {
          _index: 1852,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "this.url",
        {
          _index: 2145,
          title: {},
          body: { "injectables/SidebarService.html": {} },
        },
      ],
      [
        "this.user",
        {
          _index: 575,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.user.email",
        {
          _index: 1626,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user.email.trim",
        {
          _index: 2333,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.user.firstname",
        {
          _index: 1620,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user.id",
        {
          _index: 2334,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.user.lastname",
        {
          _index: 1622,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user.phone",
        {
          _index: 1624,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user?.email",
        {
          _index: 1640,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user?.firstname",
        {
          _index: 1632,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user?.lastname",
        {
          _index: 1635,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.user?.phone",
        {
          _index: 1637,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "this.userdialog",
        {
          _index: 2328,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.useremails[math.floor(math.random",
        {
          _index: 2442,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.userfirstnames[math.floor(math.random",
        {
          _index: 2439,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.userlastnames[math.floor(math.random",
        {
          _index: 2441,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.userphones[math.floor(math.random",
        {
          _index: 2443,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "this.users",
        {
          _index: 2322,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.users.foreach(e=>e.roles",
        {
          _index: 2326,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.users.indexof(user",
        {
          _index: 2330,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.users.push(this.user",
        {
          _index: 2340,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.users.splice(index",
        {
          _index: 2331,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.users[this.findindexbyid(this.user.id",
        {
          _index: 2336,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.usersservice",
        {
          _index: 2320,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.usersservice.getfranchiseerole(this.idfranchisee",
        {
          _index: 2324,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.usersservice.removefranchisee(user.id).subscribe",
        {
          _index: 2329,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "this.usersservice.updatefranchisee(this.user",
        {
          _index: 2335,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "throw",
        {
          _index: 431,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "throwerror",
        {
          _index: 393,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "throwerror(error",
        {
          _index: 990,
          title: {},
          body: {
            "interceptors/GlobalHttpInterceptorService.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "thursday",
        {
          _index: 677,
          title: { "interfaces/Thursday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "time",
        {
          _index: 67,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/FranchiseeComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "timezone",
        { _index: 712, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "title",
        {
          _index: 179,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/TitleComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "title'},{'name",
        {
          _index: 242,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "title.component.html",
        {
          _index: 2183,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "title.component.scss",
        {
          _index: 2182,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "title/title.component",
        {
          _index: 653,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "titlebar",
        {
          _index: 1864,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "titlecomponent",
        {
          _index: 241,
          title: { "components/TitleComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "titre1",
        {
          _index: 2203,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "toastmodule",
        {
          _index: 667,
          title: {},
          body: {
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "todo",
        {
          _index: 948,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "token",
        {
          _index: 127,
          title: {},
          body: {
            "interceptors/ApiTokenInterceptorService.html": {},
            "injectables/AuthService.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "token.model",
        {
          _index: 395,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "token.model.ts",
        {
          _index: 7,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {}, "coverage.html": {} },
        },
      ],
      [
        "token_type",
        {
          _index: 15,
          title: {},
          body: { "interfaces/AccessTokenModel.html": {} },
        },
      ],
      ["tool", { _index: 2683, title: {}, body: { "index.html": {} } }],
      [
        "toolbarmodule",
        {
          _index: 836,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "tooltipmodule",
        {
          _index: 642,
          title: {},
          body: {
            "modules/ComponentsModule.html": {},
            "modules/HomeModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
          },
        },
      ],
      [
        "top",
        {
          _index: 618,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "topbar",
        {
          _index: 2200,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "topbar'},{'name",
        {
          _index: 244,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "topbar.component.html",
        {
          _index: 2202,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "topbar.component.scss",
        {
          _index: 2201,
          title: {},
          body: { "components/TopbarComponent.html": {} },
        },
      ],
      [
        "topbar/topbar.component",
        {
          _index: 652,
          title: {},
          body: { "modules/ComponentsModule.html": {} },
        },
      ],
      [
        "topbarcomponent",
        {
          _index: 243,
          title: { "components/TopbarComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "modules/ComponentsModule.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "topromise",
        {
          _index: 2416,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "total",
        {
          _index: 1163,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "tr",
        {
          _index: 1220,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "transform",
        {
          _index: 350,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "transforming",
        {
          _index: 966,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "transition",
        {
          _index: 800,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "transitions",
        { _index: 2279, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "translate/core",
        { _index: 2521, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "transparent",
        {
          _index: 1552,
          title: {},
          body: { "components/PageNotFoundComponent.html": {} },
        },
      ],
      [
        "trashed_at",
        { _index: 1705, title: {}, body: { "interfaces/Recipe.html": {} } },
      ],
      [
        "traverse",
        { _index: 69, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "trebuchet",
        {
          _index: 2197,
          title: {},
          body: { "components/TitleComponent.html": {} },
        },
      ],
      [
        "tree",
        {
          _index: 70,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "triangle",
        {
          _index: 1147,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "trouvons",
        {
          _index: 1001,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "true",
        {
          _index: 192,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "modules/FranchiseeModule.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/ProfileService.html": {},
            "components/RecipeDialogComponent.html": {},
            "modules/RecipeManagementModule.html": {},
            "injectables/UserService.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "try",
        {
          _index: 1476,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "tsconfig.doc.json",
        { _index: 2691, title: {}, body: { "index.html": {} } },
      ],
      ["tslib", { _index: 2537, title: {}, body: { "dependencies.html": {} } }],
      [
        "tuesday",
        {
          _index: 675,
          title: { "interfaces/Tuesday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["tutorial", { _index: 2701, title: {}, body: { "index.html": {} } }],
      [
        "two",
        { _index: 87, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "type",
        {
          _index: 17,
          title: {},
          body: {
            "interfaces/AccessTokenModel.html": {},
            "interfaces/Address.html": {},
            "guards/AdminGuard.html": {},
            "interceptors/ApiTokenInterceptorService.html": {},
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "interfaces/Diner.html": {},
            "interfaces/Franchisee.html": {},
            "components/FranchiseeComponent.html": {},
            "guards/FranchiseeGuard.html": {},
            "interfaces/FranchiseeRecipe.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Friday.html": {},
            "interceptors/GlobalHttpInterceptorService.html": {},
            "interfaces/IngreType.html": {},
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "interfaces/IngredientState.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Lunch.html": {},
            "injectables/MessagesService.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Picture.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/RecipeType.html": {},
            "components/RecipesComponent.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/User.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "type'},{'name",
        {
          _index: 220,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "type.component",
        {
          _index: 1916,
          title: {},
          body: { "modules/RecipeManagementModule.html": {} },
        },
      ],
      [
        "type.component.html",
        {
          _index: 1289,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.scss",
        {
          _index: 1287,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts",
        {
          _index: 1286,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "type.component.ts:106",
        {
          _index: 1303,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:113",
        {
          _index: 1307,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:120",
        {
          _index: 1298,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:152",
        {
          _index: 1299,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:25",
        {
          _index: 1311,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:26",
        {
          _index: 1312,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:28",
        {
          _index: 1309,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:30",
        {
          _index: 1308,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:32",
        {
          _index: 1310,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:33",
        {
          _index: 1296,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:44",
        {
          _index: 1304,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:49",
        {
          _index: 1300,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:57",
        {
          _index: 1301,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:64",
        {
          _index: 1302,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.component.ts:73",
        {
          _index: 1305,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "type.model",
        {
          _index: 1023,
          title: {},
          body: {
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "interfaces/Recipe.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
          },
        },
      ],
      [
        "type.model.ts",
        {
          _index: 1016,
          title: {},
          body: {
            "interfaces/IngreType.html": {},
            "interfaces/RecipeType.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "type.service",
        {
          _index: 1086,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "type.service.ts",
        {
          _index: 1336,
          title: {},
          body: {
            "injectables/IngredientTypeService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "type.service.ts:12",
        {
          _index: 1340,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:21",
        {
          _index: 1343,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:40",
        {
          _index: 1342,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:50",
        {
          _index: 1355,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:65",
        {
          _index: 1350,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:77",
        {
          _index: 1347,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type.service.ts:94",
        {
          _index: 1348,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "type/ingredient",
        {
          _index: 1085,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "modules/RecipeManagementModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "type_id",
        {
          _index: 1352,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "typealiases",
        {
          _index: 2710,
          title: { "miscellaneous/typealiases.html": {} },
          body: {},
        },
      ],
      [
        "typearray",
        {
          _index: 1040,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
          },
        },
      ],
      [
        "typearray.length",
        {
          _index: 1334,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "typeof",
        {
          _index: 1471,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "types",
        {
          _index: 1022,
          title: {},
          body: {
            "interfaces/Ingredient.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "téléphone",
        {
          _index: 1648,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ui",
        {
          _index: 1863,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "un",
        {
          _index: 2563,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "unauthenticated",
        {
          _index: 468,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "unauthenticated.guard.ts",
        {
          _index: 1404,
          title: {},
          body: {
            "guards/IsUnauthenticatedGuard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "unauthenticated.guard.ts:15",
        {
          _index: 1405,
          title: {},
          body: { "guards/IsUnauthenticatedGuard.html": {} },
        },
      ],
      [
        "unauthenticated.guard.ts:18",
        {
          _index: 1406,
          title: {},
          body: { "guards/IsUnauthenticatedGuard.html": {} },
        },
      ],
      [
        "unauthenticated/is",
        {
          _index: 1403,
          title: {},
          body: {
            "guards/IsUnauthenticatedGuard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "undefined",
        {
          _index: 1280,
          title: {},
          body: {
            "interfaces/IngredientState.html": {},
            "interfaces/RecipeState.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "une",
        {
          _index: 2042,
          title: {},
          body: {
            "components/RecipesComponent.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["unit", { _index: 2613, title: {}, body: { "index.html": {} } }],
      ["up", { _index: 2678, title: {}, body: { "index.html": {} } }],
      [
        "update",
        {
          _index: 872,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "update.base_price",
        {
          _index: 1964,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update.description",
        {
          _index: 1963,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update.ingredients.map((ingredient",
        {
          _index: 1961,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update.name",
        {
          _index: 1962,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update.recipe_type",
        {
          _index: 1966,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update.star",
        {
          _index: 1965,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "update_success",
        {
          _index: 2574,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "updated",
        {
          _index: 2483,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "updated_at",
        { _index: 1018, title: {}, body: { "interfaces/IngreType.html": {} } },
      ],
      [
        "updatefield",
        {
          _index: 1586,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "updatefield(type",
        {
          _index: 1595,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "updatefranchisee",
        {
          _index: 2372,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "updatefranchisee(update",
        {
          _index: 2396,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "updateingredient",
        {
          _index: 1049,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "injectables/IngredientService.html": {},
            "injectables/UserEffects.html": {},
          },
        },
      ],
      [
        "updateingredient(ingredient",
        {
          _index: 1067,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "updateingredient(this.ingredient",
        {
          _index: 1114,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "updateingredient(update",
        {
          _index: 1263,
          title: {},
          body: { "injectables/IngredientService.html": {} },
        },
      ],
      [
        "updateingredienttype",
        {
          _index: 1294,
          title: {},
          body: {
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
          },
        },
      ],
      [
        "updateingredienttype(ingretype",
        {
          _index: 1306,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "updateingredienttype(this.ingretype",
        {
          _index: 1322,
          title: {},
          body: { "components/IngredientTypeComponent.html": {} },
        },
      ],
      [
        "updateingredienttype(update",
        {
          _index: 1354,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "updaterecipe",
        {
          _index: 1734,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "injectables/UserEffects-1.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "updaterecipe(recipe",
        {
          _index: 2012,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "updaterecipe(update",
        {
          _index: 1941,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "updaterecipeprice",
        {
          _index: 860,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "updaterecipeprice(update",
        {
          _index: 902,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "updateschedule",
        {
          _index: 861,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "updateschedule(update",
        {
          _index: 904,
          title: {},
          body: { "injectables/FranchiseeService.html": {} },
        },
      ],
      [
        "updateuser",
        {
          _index: 1671,
          title: {},
          body: {
            "injectables/ProfileService.html": {},
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "updateuser(user",
        {
          _index: 1676,
          title: {},
          body: { "injectables/ProfileService.html": {} },
        },
      ],
      [
        "upload",
        {
          _index: 1790,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "uploadedfiles",
        {
          _index: 1725,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "uploadpicture",
        {
          _index: 1924,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "uploadpicture(picture",
        {
          _index: 1943,
          title: {},
          body: { "injectables/RecipeService.html": {} },
        },
      ],
      [
        "uploadpicture(this.picture",
        {
          _index: 1839,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "uppercase",
        {
          _index: 1227,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "url",
        {
          _index: 85,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "interfaces/Ingredient.html": {},
            "injectables/IngredientService.html": {},
            "injectables/IngredientTypeService.html": {},
            "injectables/RecipeService.html": {},
            "injectables/SidebarService.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "urlsearchparams",
        {
          _index: 418,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "urlsegment",
        {
          _index: 79,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "urltree",
        {
          _index: 93,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
            "guards/IsAuthenticatedGuard.html": {},
            "guards/IsUnauthenticatedGuard.html": {},
          },
        },
      ],
      ["use", { _index: 2605, title: {}, body: { "index.html": {} } }],
      [
        "useclass",
        {
          _index: 843,
          title: {},
          body: {
            "modules/FranchiseeModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "used",
        { _index: 68, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "usehash",
        {
          _index: 2778,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "user",
        {
          _index: 108,
          title: { "interfaces/User.html": {} },
          body: {
            "guards/AdminGuard.html": {},
            "interfaces/AppState.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Autorisation.html": {},
            "components/CallbackComponent.html": {},
            "interfaces/Franchisee.html": {},
            "guards/FranchiseeGuard.html": {},
            "injectables/FranchiseeService.html": {},
            "components/ProfileComponent.html": {},
            "injectables/ProfileService.html": {},
            "injectables/RecipeService.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TopbarComponent.html": {},
            "interfaces/User.html": {},
            "injectables/UserService.html": {},
            "interfaces/UserState.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "user.actions",
        { _index: 2277, title: {}, body: { "interfaces/UserState.html": {} } },
      ],
      [
        "user.autorisations.isadmin",
        {
          _index: 530,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "user.autorisations.isfranchisee",
        {
          _index: 531,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "user.code",
        {
          _index: 533,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "user.email",
        {
          _index: 1650,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.firstname",
        {
          _index: 1645,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.lastname",
        {
          _index: 1646,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.model",
        { _index: 714, title: {}, body: { "interfaces/Franchisee.html": {} } },
      ],
      [
        "user.phone",
        {
          _index: 1649,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.roles.foreach",
        {
          _index: 532,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "user.roles.foreach((e",
        {
          _index: 529,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
          },
        },
      ],
      [
        "user.roles.push(currentrole",
        {
          _index: 527,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "user.userdetails",
        {
          _index: 2733,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "user/auth/auth.service",
        {
          _index: 1678,
          title: {},
          body: {
            "injectables/ProfileService.html": {},
            "injectables/SidebarService.html": {},
          },
        },
      ],
      [
        "user/user.reducer",
        { _index: 257, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "user_token",
        {
          _index: 2579,
          title: {},
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "useraccesstoken",
        {
          _index: 469,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "useractions",
        {
          _index: 560,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/TopbarComponent.html": {},
            "injectables/UserEffects-2.html": {},
            "interfaces/UserState.html": {},
          },
        },
      ],
      [
        "useractions.updateuser",
        {
          _index: 1629,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "useractions.userloaded",
        {
          _index: 2248,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "useractions.userupdated",
        {
          _index: 2252,
          title: {},
          body: { "injectables/UserEffects-2.html": {} },
        },
      ],
      [
        "usercurrentroles",
        {
          _index: 523,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "usercurrentroles[0",
        {
          _index: 525,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "userdetails",
        {
          _index: 1630,
          title: {},
          body: {
            "components/ProfileComponent.html": {},
            "injectables/UserEffects-2.html": {},
            "interfaces/UserState.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userdialog",
        {
          _index: 2294,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "usereffects",
        {
          _index: 298,
          title: {
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
          },
          body: {
            "modules/AuthModule.html": {},
            "modules/PrincipalModule.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "useremails",
        {
          _index: 2356,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "userfeaturekey",
        {
          _index: 2285,
          title: {},
          body: {
            "interfaces/UserState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userfirstnames",
        {
          _index: 2357,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "userlastnames",
        {
          _index: 2358,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "userloaded",
        {
          _index: 2256,
          title: {},
          body: {
            "injectables/UserEffects-2.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "usermodel",
        {
          _index: 2393,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "userphones",
        {
          _index: 2359,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "userreducer",
        {
          _index: 256,
          title: {},
          body: {
            "interfaces/AppState.html": {},
            "interfaces/UserState.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userreducer.reducer",
        { _index: 269, title: {}, body: { "interfaces/AppState.html": {} } },
      ],
      [
        "userroles",
        {
          _index: 521,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "users",
        {
          _index: 246,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
          },
        },
      ],
      [
        "users.component.html",
        {
          _index: 2291,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "users.component.scss",
        {
          _index: 2290,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "users.length",
        {
          _index: 2344,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "users/current?include[]=roles",
        {
          _index: 515,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "users/users.component",
        { _index: 2354, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "userscomponent",
        {
          _index: 245,
          title: { "components/UsersComponent.html": {} },
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userservice",
        {
          _index: 2264,
          title: { "injectables/UserService.html": {} },
          body: { "injectables/UserService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "usersmodule",
        {
          _index: 2348,
          title: { "modules/UsersModule.html": {} },
          body: {
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "usersservice",
        {
          _index: 2301,
          title: { "injectables/UsersService.html": {} },
          body: {
            "components/UsersComponent.html": {},
            "modules/UsersModule.html": {},
            "injectables/UsersService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userstate",
        {
          _index: 2275,
          title: { "interfaces/UserState.html": {} },
          body: {
            "interfaces/UserState.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userupdate",
        {
          _index: 1617,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "userupdated",
        {
          _index: 2497,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "using",
        {
          _index: 2747,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "usr",
        {
          _index: 509,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "utilidateurs",
        {
          _index: 2345,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "utilisateur",
        {
          _index: 2341,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "utilisateurs",
        {
          _index: 1005,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "uuid",
        {
          _index: 1558,
          title: {},
          body: {
            "interfaces/Picture.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      ["va", { _index: 2664, title: {}, body: { "index.html": {} } }],
      [
        "validators",
        {
          _index: 1080,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "validators.email",
        {
          _index: 1641,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.maxlength(100",
        {
          _index: 1642,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.maxlength(30",
        {
          _index: 1634,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.maxlength(40",
        {
          _index: 1636,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.minlength(3",
        {
          _index: 1633,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.pattern('/^[0][0",
        {
          _index: 1638,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "validators.required",
        {
          _index: 1098,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
          },
        },
      ],
      [
        "value",
        {
          _index: 187,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "injectables/MessagesService.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "injectables/StringService.html": {},
            "injectables/UserEffects.html": {},
            "injectables/UserEffects-1.html": {},
            "injectables/UserEffects-2.html": {},
            "components/UsersComponent.html": {},
            "injectables/UsersService.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "value.code",
        {
          _index: 1159,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      [
        "value.indexof",
        {
          _index: 2034,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "value.length",
        {
          _index: 2038,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "value.name",
        {
          _index: 2068,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "value.substring(1",
        {
          _index: 2037,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "value.tostring",
        {
          _index: 1473,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "values",
        {
          _index: 1362,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "valueserialized",
        {
          _index: 1470,
          title: {},
          body: { "injectables/LocalStorageService.html": {} },
        },
      ],
      [
        "var",
        {
          _index: 203,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/LoadingComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "variable",
        {
          _index: 1789,
          title: {},
          body: {
            "components/RecipeDialogComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "variables",
        {
          _index: 2714,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "vegetebale",
        {
          _index: 1344,
          title: {},
          body: { "injectables/IngredientTypeService.html": {} },
        },
      ],
      [
        "vendredi",
        {
          _index: 779,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "verifier",
        {
          _index: 412,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "verify",
        {
          _index: 383,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "guards/FranchiseeGuard.html": {},
            "components/ProfileComponent.html": {},
          },
        },
      ],
      [
        "version",
        {
          _index: 2539,
          title: {},
          body: {
            "dependencies.html": {},
            "index.html": {},
            "properties.html": {},
          },
        },
      ],
      ["versions", { _index: 2635, title: {}, body: { "index.html": {} } }],
      [
        "vertical",
        {
          _index: 2079,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      ["via", { _index: 2617, title: {}, body: { "index.html": {} } }],
      [
        "void",
        {
          _index: 185,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CallbackComponent.html": {},
            "components/DefaultComponent.html": {},
            "components/FooterComponent.html": {},
            "components/FranchiseeComponent.html": {},
            "injectables/FranchiseeService.html": {},
            "components/HomeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/LoadingComponent.html": {},
            "injectables/LoadingService.html": {},
            "injectables/LocalStorageService.html": {},
            "components/LoginComponent.html": {},
            "injectables/MessagesService.html": {},
            "components/PageNotFoundComponent.html": {},
            "components/PrincipalComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "injectables/RecipeService.html": {},
            "components/RecipesComponent.html": {},
            "components/SidebarComponent.html": {},
            "injectables/SidebarService.html": {},
            "components/TabsComponent.html": {},
            "components/TitleComponent.html": {},
            "components/TopbarComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "voulez",
        {
          _index: 2054,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "vouloir",
        {
          _index: 1140,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "vous",
        {
          _index: 1138,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "injectables/IngredientTypeService.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "vraiment",
        {
          _index: 2055,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "w",
        {
          _index: 1651,
          title: {},
          body: { "components/ProfileComponent.html": {} },
        },
      ],
      [
        "want",
        {
          _index: 957,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      ["web", { _index: 2588, title: {}, body: { "index.html": {} } }],
      [
        "webhttp://localhost:4200",
        { _index: 2681, title: {}, body: { "index.html": {} } },
      ],
      [
        "webkit",
        {
          _index: 1183,
          title: {},
          body: { "components/IngredientComponent.html": {} },
        },
      ],
      ["websee", { _index: 2668, title: {}, body: { "index.html": {} } }],
      [
        "wednesday",
        {
          _index: 676,
          title: { "interfaces/Wednesday.html": {} },
          body: {
            "interfaces/Diner.html": {},
            "interfaces/Friday.html": {},
            "interfaces/Lunch.html": {},
            "interfaces/Monday.html": {},
            "interfaces/Saturday.html": {},
            "interfaces/Schedule.html": {},
            "interfaces/Sunday.html": {},
            "interfaces/Thursday.html": {},
            "interfaces/Tuesday.html": {},
            "interfaces/Wednesday.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "weight",
        {
          _index: 1212,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "whether",
        {
          _index: 106,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/FranchiseeGuard.html": {},
          },
        },
      ],
      [
        "white",
        {
          _index: 2072,
          title: {},
          body: { "components/RecipesComponent.html": {} },
        },
      ],
      [
        "width",
        {
          _index: 795,
          title: {},
          body: {
            "components/FranchiseeComponent.html": {},
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/ProfileComponent.html": {},
            "components/RecipeDialogComponent.html": {},
            "components/RecipesComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "window.location.href",
        {
          _index: 428,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/SidebarComponent.html": {},
          },
        },
      ],
      [
        "window.location.reload",
        {
          _index: 985,
          title: {},
          body: { "interceptors/GlobalHttpInterceptorService.html": {} },
        },
      ],
      [
        "window.scrollto(0",
        {
          _index: 1506,
          title: {},
          body: { "injectables/MessagesService.html": {} },
        },
      ],
      ["workflow", { _index: 2703, title: {}, body: { "index.html": {} } }],
      [
        "wrapped",
        {
          _index: 959,
          title: {},
          body: {
            "injectables/FranchiseeService.html": {},
            "injectables/RecipeService.html": {},
          },
        },
      ],
      [
        "wrapper",
        {
          _index: 786,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "x.name",
        {
          _index: 1798,
          title: {},
          body: { "components/RecipeDialogComponent.html": {} },
        },
      ],
      [
        "xxxxx",
        {
          _index: 757,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "xxxxxx",
        {
          _index: 759,
          title: {},
          body: { "components/FranchiseeComponent.html": {} },
        },
      ],
      [
        "y",
        {
          _index: 1165,
          title: {},
          body: {
            "components/IngredientComponent.html": {},
            "components/IngredientTypeComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "z",
        {
          _index: 632,
          title: {},
          body: {
            "components/CallbackComponent.html": {},
            "components/LoadingComponent.html": {},
          },
        },
      ],
      [
        "zara",
        {
          _index: 2403,
          title: {},
          body: { "injectables/UsersService.html": {} },
        },
      ],
      [
        "zip_code",
        { _index: 30, title: {}, body: { "interfaces/Address.html": {} } },
      ],
      [
        "zone.js",
        { _index: 2542, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "zoom",
        {
          _index: 276,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ComponentsModule.html": {},
            "modules/DefaultModule.html": {},
            "modules/FranchiseeModule.html": {},
            "modules/HomeModule.html": {},
            "modules/LayoutsModule.html": {},
            "modules/PrincipalModule.html": {},
            "modules/ProfileModule.html": {},
            "modules/RecipeManagementModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "interfaces/AccessTokenModel.html": {
      url: "interfaces/AccessTokenModel.html",
      title: "interface - AccessTokenModel",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/access-token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expire_at\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expire_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expire_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenModel {\n  token_type: string;\n  expires_in: number;\n  access_token: string;\n  refresh_token: string;\n  expire_at?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Address.html": {
      url: "interfaces/Address.html",
      title: "interface - Address",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/address.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            second_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zip_code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        second_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\tid?: number;\n\tfirst_line?: string;\n\tsecond_line?: string;\n\tzip_code?: string;\n\tcity?: string;\n\tcountry?: string;\n\t// lat?: string;\n\t// lon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "guards/AdminGuard.html": {
      url: "guards/AdminGuard.html",
      title: "guard - AdminGuard",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/admin/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    to activate the requested route.\nto load requested child routes.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                checkIfAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/admin/admin.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/admin/admin.guard.ts:49\n                \n            \n\n\n            \n                \n                             with a component loaded in an outlet at a particular moment in time.\n         ActivatedRouteSnapshot can also be used to traverse the router state tree.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot : Contains the information about a route associated\nwith a component loaded in an outlet at a particular moment in time.\nActivatedRouteSnapshot can also be used to traverse the router state tree.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RouterStateSnapshot : Represents the state of the router at a moment in time.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/admin/admin.guard.ts:63\n                \n            \n\n\n            \n                \n                      It contains a path and the matrix parameters associated with the segment\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A UrlSegment is a part of a URL between the two slashes.\nIt contains a path and the matrix parameters associated with the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfAuthenticated\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/admin/admin.guard.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { AppState } from '../../store/store.reducer';\nimport { adminAccess } from '../../store/state/user/user.selector';\n\n/**\n * @implements @CanActivate function that checks whether the current user has permission\n * to activate the requested route.\n *\n * @implements @CanLoad function that decides whether the current user has permission\n * to load requested child routes.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate, CanLoad {\n  constructor(private router: Router, private store: Store) {}\n\n  private checkIfAuthenticated(): Observable {\n    return this.store.pipe(\n      select(adminAccess),\n      tap((canAccess) => {\n        if (!canAccess) {\n          this.router.navigateByUrl('/');\n        }\n      })\n    );\n  }\n\n  /**\n   *\n   * @param route ActivatedRouteSnapshot : Contains the information about a route associated\n   *              with a component loaded in an outlet at a particular moment in time.\n   *              ActivatedRouteSnapshot can also be used to traverse the router state tree.\n   * @param state RouterStateSnapshot : Represents the state of the router at a moment in time.\n   * @returns\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.checkIfAuthenticated();\n  }\n\n  /**\n   *\n   * @param route\n   * @param segments A UrlSegment is a part of a URL between the two slashes.\n   *   It contains a path and the matrix parameters associated with the segment\n   * @returns\n   */\n  canLoad(route: Route, segments: UrlSegment[]): Observable {\n    return this.checkIfAuthenticated();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interceptors/ApiTokenInterceptorService.html": {
      url: "interceptors/ApiTokenInterceptorService.html",
      title: "interceptor - ApiTokenInterceptorService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiTokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/api-token-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { from, lastValueFrom, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTokenInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    console.log('[INTERCEPT API TOKEN] handle', req);\n\n    if (!req.urlWithParams.startsWith(environment.apiBaseUrl)) {\n      return next.handle(req);\n    }\n\n    console.log('[INTERCEPT API TOKEN] add');\n\n    return from(this.handle(req, next));\n  }\n\n  async handle(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Promise> {\n    const token = await this.authService.getAccessToken();\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return lastValueFrom(next.handle(req));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/AppComponent.html": {
      url: "components/AppComponent.html",
      title: "component - AppComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GOODFOOD'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'GOODFOOD';\n\n  constructor(private primengConfig: PrimeNGConfig, private router: Router) {}\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        if (!!event.url && event.url.match(/^\\/#/)) {\n          this.router.navigate([event.url.replace('/#', '')]);\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/AppState.html": {
      url: "interfaces/AppState.html",
      title: "interface - AppState",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/store.reducer.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { routerReducer } from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\n// import { State } from './store.state';\n// import * as UserReducer from './user/user.reducer';\n\n/**\n * @ActionReducerMap Map of all the reducers in this feature of which we have only one\n */\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap = {\n  router: routerReducer,\n};\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state, action) => {\n    console.log('state before: ', state);\n    console.log('actions', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer[] = [];\n\n// export const reducers: ActionReducerMap = {\n//   user: UserReducer.reducer,\n// };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AuthModule.html": {
      url: "modules/AuthModule.html",
      title: "module - AuthModule",
      body: "\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nCallbackComponent\n\nCallbackComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCallbackComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CallbackComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { StoreModule } from '@ngrx/store';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { LoginComponent } from './login/login.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { UserEffects } from '../shared/store/state/user';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthService } from '../shared/services/user/auth/auth.service';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'redirect', component: CallbackComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, CallbackComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    //StoreModule.forFeature('user', fromAuth.userReducer),\n    ProgressSpinnerModule,\n    EffectsModule.forFeature([UserEffects]),\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n  ],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthModule,\n      providers: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/AuthService.html": {
      url: "injectables/AuthService.html",
      title: "injectable - AuthService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessTokenIsExpired\n                            \n                            \n                                    Async\n                                authorizationCodeToAccessToken\n                            \n                            \n                                doSign\n                            \n                            \n                                    Async\n                                getAccessToken\n                            \n                            \n                                getAuthorizationCode\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                getCurrentUserRemote\n                            \n                            \n                                    Async\n                                getRole\n                            \n                            \n                                    Async\n                                getRoleRemote\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                roleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, stringService: StringService, localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http client object\n\n                                                        \n                                                \n                                                \n                                                        stringService\n                                                  \n                                                        \n                                                                        StringService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        accessTokenIsExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    accessTokenIsExpired(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authorizationCodeToAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizationCodeToAccessToken(code: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n                    Transform authorization code to AccessToken\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSign\n                        \n                    \n                \n            \n            \n                \ndoSign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthorizationCode\n                        \n                    \n                \n            \n            \n                \ngetAuthorizationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Redirect user to login backend page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUserRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserRemote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleRemote(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:162\n                \n            \n\n\n            \n                \n                    Get user by id as a franchisee or an admin (goodfood)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:124\n                \n            \n\n\n            \n                \n                    Revoke the authenticated user token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        roleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleById(_user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:276\n                \n            \n\n\n            \n                \n                    Verify user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport getPkce from 'oauth-pkce';\nimport {\n  catchError,\n  firstValueFrom,\n  forkJoin,\n  merge,\n  Observable,\n  throwError,\n} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AccessTokenModel } from '../../../models/access-token.model';\nimport { User } from '../../../models/user.model';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { StringService } from '../string/string.service';\nimport { Roles, StorageKeys } from 'src/app/shared/constants/constants';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /**\n   *\n   * Constructor\n   * @param http The http client object\n   * @param stringService\n   * @param localStorageService\n   * @param router\n   */\n  constructor(\n    private http: HttpClient,\n    private stringService: StringService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirect user to login backend page\n   */\n  getAuthorizationCode(): void {\n    if (this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      this.router.navigate(['/home']);\n      return;\n    }\n\n    this.localStorageService.remove(StorageKeys.STATE);\n    this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n\n    const state: string = this.stringService.getRandomString(40);\n\n    getPkce(128, (error, { verifier, challenge }) => {\n      if (!error) {\n        this.localStorageService.set(StorageKeys.CODE_VERIFY, verifier);\n        this.localStorageService.set(StorageKeys.STATE, state);\n\n        const query = new URLSearchParams({\n          client_id: environment.oAuthClientId,\n          redirect_uri: environment.oAuthCallbackUri,\n          response_type: 'code',\n          scope: '',\n          state: state,\n          code_challenge: challenge,\n          code_challenge_method: 'S256',\n        });\n\n        window.location.href = `${\n          environment.oAuthProviderBaseUrl\n        }/authorize?${query.toString()}`;\n      } else {\n        throw new Error('failed to get code challenger');\n      }\n    });\n  }\n\n  /** Transform authorization code to AccessToken */\n  async authorizationCodeToAccessToken(\n    code: string,\n    state: string\n  ): Promise {\n    console.log('try to change authorization code to access token');\n\n    if (\n      !this.localStorageService.has(StorageKeys.STATE) ||\n      !this.localStorageService.has(StorageKeys.CODE_VERIFY)\n    ) {\n      throw new Error('Workflow auth is not inizialized');\n    }\n\n    if (this.localStorageService.get(StorageKeys.STATE) !== state) {\n      throw new Error('State has changed');\n    }\n\n    this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'authorization_code',\n        client_id: environment.oAuthClientId,\n        redirect_uri: environment.oAuthCallbackUri,\n        code_verifier: this.localStorageService.get(StorageKeys.CODE_VERIFY),\n        code: code,\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      )\n      .subscribe(async (data) => {\n        console.log('Set to local storage token access');\n        data.expire_at = Date.now() + data.expires_in * 1000;\n        this.localStorageService.set(StorageKeys.USER_TOKEN, data);\n        this.localStorageService.remove(StorageKeys.STATE);\n        this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n        await this.getCurrentUser();\n        //await this.getCurrentUserRemote();\n\n        this.router.navigate(['/home']);\n      });\n  }\n\n  /** Revoke the authenticated user token */ \n  logout() {\n    // this.localStorageService.remove(this.STORAGE_KEY_USER);\n    // this.router.navigateByUrl('/');\n  }\n\n  async getAccessToken(): Promise {\n    if (!this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      throw new Error('user unauthenticated');\n    }\n\n    const userAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n\n    if (this.accessTokenIsExpired(userAccessToken)) {\n      console.log('REFRESH USER TOKEN');\n      await this.refreshToken(userAccessToken);\n      console.log('USER TOKEN REFRESHED');\n    }\n    console.log('RETURN ACCESS TOKEN FROM STORAGE');\n\n    const freshAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n    return freshAccessToken.access_token;\n  }\n\n  isAuthenticated(): boolean {\n    return (\n      !!this.localStorageService.has(StorageKeys.USER) &&\n      !!this.localStorageService.has(StorageKeys.ROLE) &&\n      !!this.localStorageService.has(StorageKeys.USER_TOKEN)\n    );\n  }\n\n  /**\n   * Get user by id as a franchisee or an admin (goodfood)\n   */\n  getUserById(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  doSign(): Observable {\n    return this.http\n      .get(`${environment.oAuthProviderBaseUrl}/token`)\n      .pipe(map((res) => res['payload']));\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  getUserRole(user: User): Observable {\n    const currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/roles`)\n      .pipe(\n        tap(() => currentRole),\n        map((user) => this.initAuth(user))\n      );\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  async getCurrentUser(): Promise {\n    let currentUser: User;\n    if (this.localStorageService.has(StorageKeys.USER)) {\n      console.log('[AUTHSERVICE] Retrieve USER from CACHE');\n      currentUser = this.localStorageService.get(StorageKeys.USER);\n    } else {\n      console.log('[AUTHSERVICE] Retrieve USER from remote');\n      const usr = this.http.get(\n        `${environment.apiBaseUrl}/users/current`\n      );\n      currentUser = await firstValueFrom(usr);\n      this.localStorageService.set(StorageKeys.USER, currentUser);\n    }\n    return this.getRole(currentUser);\n  }\n\n  // /users/current?include[]=roles\n  async getCurrentUserRemote(): Promise {\n    let currentUser: User;\n    const usr = this.http.get(`${environment.apiBaseUrl}/users/current`);\n    currentUser = await firstValueFrom(usr);\n\n    return this.getRoleRemote(currentUser);\n  }\n\n  async getRole(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    if (this.localStorageService.has(StorageKeys.ROLE)) {\n      console.log('[AUTHSERVICE] Retrieve ROLE from CACHE');\n      currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    } else {\n      console.log('[AUTHERVICE] Retrieve ROLE from remote');\n      const userRoles = this.http.get(\n        `${environment.apiBaseUrl}/users/${user.id}/roles`\n      );\n      const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n      currentRole = userCurrentRoles[0];\n      this.localStorageService.set(StorageKeys.ROLE, currentRole);\n    }\n    user.roles.push(currentRole);\n\n    return this.roleById(user);\n  }\n\n  async getRoleRemote(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    const userRoles = this.http.get(\n      `${environment.apiBaseUrl}/users/${user.id}/roles`\n    );\n    const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n    currentRole = userCurrentRoles[0];\n\n    user.roles.push(currentRole);\n    return this.roleById(user);\n  }\n\n  /** Verify user role */\n  public roleById(_user: User): User {\n    const user = {\n      ..._user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        user.autorisations.isFranchisee = true;\n      }\n    });\n    // if (user.roles.forEach() === Roles.ADMIN) {\n    //   user.autorisations.isAdmin = true;\n    // }\n    // if (user.code === Roles.FRANCHISEE) {\n    //   user.autorisations.isFranchisee = true;\n    // }\n    return user;\n  }\n\n  private async refreshToken(data: AccessTokenModel): Promise {\n    const response = this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'refresh_token',\n        refresh_token: data.refresh_token,\n        client_id: environment.oAuthClientId,\n        scope: '',\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      );\n    const dataResponse = await firstValueFrom(response);\n\n    dataResponse.expire_at = Date.now() + dataResponse.expires_in * 1000;\n    this.localStorageService.set(StorageKeys.USER_TOKEN, dataResponse);\n  }\n\n  private accessTokenIsExpired(data: AccessTokenModel): boolean {\n    return (\n      !!data.expire_at && data.expire_at > 0 && Date.now() >= data.expire_at\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Autorisation.html": {
      url: "interfaces/Autorisation.html",
      title: "interface - Autorisation",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Autorisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isFranchisee\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFranchisee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFranchisee:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/CallbackComponent.html": {
      url: "components/CallbackComponent.html",
      title: "component - CallbackComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-callback\n            \n\n            \n                styleUrls\n                ./callback.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./callback.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, activatedRoute: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/callback/callback.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/callback/callback.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/callback/callback.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/callback.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Roles } from 'src/app/shared/constants/constants';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { AppState } from 'src/app/shared/store';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.scss'],\n})\nexport class CallbackComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    let code: string = '';\n    let state: string = '';\n\n    this.activatedRoute.queryParams.subscribe((parameters) => {\n      code = parameters['code'];\n      state = parameters['state'];\n    });\n    this.authService.authorizationCodeToAccessToken(code, state);\n    console.log('callback component');\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe(\n      (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n          console.log('je passe dans *** callback dispatch ***', user);\n        } else {\n          this.user = user;\n          let authorized: boolean = false;\n          user.roles.forEach((e) => {\n            if (e['code'] === Roles.ADMIN || e['code'] === Roles.FRANCHISEE) {\n              authorized = true;\n            }\n          });\n          if (authorized) {\n            this.router.navigateByUrl('/home');\n          } else {\n            this.router.navigateByUrl('/');\n          }\n        }\n      },\n      (err) => console.log('AUTH COMPONENT > STORE > loadUser > error: ', err)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./callback.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.258);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/ComponentsModule.html": {
      url: "modules/ComponentsModule.html",
      title: "module - ComponentsModule",
      body: "\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { TitleComponent } from './title/title.component';\nimport { LoadingComponent } from './loading/loading.component';\n\n@NgModule({\n  declarations: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n  ],\n  exports: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    CheckboxModule,\n    BadgeModule,\n    ButtonModule,\n    TooltipModule,\n    SidebarModule,\n    DropdownModule,\n    RippleModule,\n  ],\n})\nexport class ComponentsModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/DefaultComponent.html": {
      url: "components/DefaultComponent.html",
      title: "component - DefaultComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                styleUrls\n                ./default.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss'],\n})\nexport class DefaultComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./default.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/DefaultModule.html": {
      url: "modules/DefaultModule.html",
      title: "module - DefaultModule",
      body: "\n                   \n\n\n\n\n    Modules\n    DefaultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_DefaultModule_declarations\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/default/default.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { DefaultComponent } from './default.component';\nimport { ComponentsModule } from './../components/components.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  declarations: [DefaultComponent],\n  exports: [DefaultComponent],\n  imports: [CommonModule, RouterModule, ComponentsModule, ToastModule],\n})\nexport class DefaultModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Diner.html": {
      url: "interfaces/Diner.html",
      title: "interface - Diner",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Diner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/FooterComponent.html": {
      url: "components/FooterComponent.html",
      title: "component - FooterComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/footer/footer.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    Copyright © GOOD FOOD 2021-2022\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  color: lightgoldenrodyellow;\n  font-size: small;\n  position: fixed !important;\n  padding-right: 10px;\n  margin-bottom: -20px;\n  bottom: 0%;\n  right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Copyright © GOOD FOOD 2021-2022  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Franchisee.html": {
      url: "interfaces/Franchisee.html",
      title: "interface - Franchisee",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Franchisee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            create_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_delivery_radius\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owned_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timezone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        create_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_delivery_radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_delivery_radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedBy:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timezone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from './address.model';\nimport { User } from './user.model';\n\nexport interface Franchisee {\n\tid?: number;\n\tname?: string;\n\tphone?: string;\n\temail?: string;\n\ttimezone?: string;\n\tmax_delivery_radius?: number;\n\taddress_id?: number;\n\townedBy?: User;\n\towned_by?: number;\n\tcreate_by?: number;\n\taddress?: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/FranchiseeComponent.html": {
      url: "components/FranchiseeComponent.html",
      title: "component - FranchiseeComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee/franchisee.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee\n            \n\n            \n                styleUrls\n                ./franchisee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contact\n                            \n                            \n                                editMode\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                schedule\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editContact\n                            \n                            \n                                newContact\n                            \n                            \n                                newSchedule\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, messageService: MessageService, loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editContact\n                        \n                    \n                \n            \n            \n                \neditContact()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newContact\n                        \n                    \n                \n            \n            \n                \nnewContact()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSchedule\n                        \n                    \n                \n            \n            \n                \nnewSchedule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\n\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { Schedule } from 'src/app/shared/models/schedule.model';\nimport { Address } from 'src/app/shared/models/address.model';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-franchisee',\n  templateUrl: './franchisee.component.html',\n  styleUrls: ['./franchisee.component.scss'],\n})\nexport class FranchiseeComponent implements OnInit {\n  contact: Franchisee[] = [];\n  address: Address;\n  schedule: Schedule;\n\n  form: FormGroup;\n  editMode: boolean;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    public messageService: MessageService,\n    private loading: LoadingService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loading.loadingOn();\n    this.franchiseeService\n      .getFranchisees()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.contact = res;\n        // this.form.patchValue(this.contact);\n        console.log('franchisee componem --> get contact --> ', res);\n      });\n  }\n\n  newContact(): void {\n    //NOSONAR\n  }\n  editContact(): void {\n    //NOSONAR\n  }\n\n  newSchedule(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n\n  Time / 24h\n  \n\n\n  \n  \n\n\n\n  \n    \n      \n        \n          \n            \n              \n                xxxxx\n                \n                  \n                \n                \n                  \n                \n              \n            \n            \n              \n                \n              \n                \n              \n            \n          \n        \n        \n          \n            {{ contact.phone }} -->\n            \n              \n               xxxxxx \n              \n                \n              \n              \n                \n              \n            \n          \n          \n            \n              \n              \n                \n              \n              \n                \n              \n            \n            {{ contact.email }} -->\n          \n          \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              \n            \n             -->\n            ligne 1\n               -->\n            ligne 1\n               -->\n            ligne 1\n               -->\n            ligne 1\n              \n              ligne 1\n               -->\n             -->\n             {{ address.first_line }}, {{ address.second_line }}, {{ address.zip_code }}, {{\n              address.city }}, {{ address.country }}  -->\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          Horaires\n          \n        \n        \n          \n          Midi\n          Soir\n        \n        \n          \n            Lundi\n            Fermé\n            Fermé\n          \n          \n            Mardi\n            10H00 - 14H00\n            19H00 - 22H00\n          \n          \n            Mercredi\n            10H00 - 14H00\n            19H00 - 22H00\n          \n          \n            Jeudi\n            10H00 - 14H00\n            19H00 - 22H00\n          \n          \n            Vendredi\n            10H00 - 14H00\n            19H00 - 22H00\n          \n          \n            Samedi\n            10H00 - 14H00\n            19H00 - 22H00\n          \n          \n            Dimanche\n            10H00 - 14H00\n            19H00 - 22H00\n          \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            Recette à la carte\n          \n        \n      \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./franchisee.component.scss\n                \n                \n.layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Time / 24h                                                                              xxxxx                                                                                                                                                                                                                                                                                {{ contact.phone }} -->                                         xxxxxx                                                                                                                                                                                                                                                                   {{ contact.email }} -->                                                                                                                                                                                                                                                                                                                                                                                                                                         -->            ligne 1               -->            ligne 1               -->            ligne 1               -->            ligne 1                            ligne 1               -->             -->             {{ address.first_line }}, {{ address.second_line }}, {{ address.zip_code }}, {{              address.city }}, {{ address.country }}  -->                                                            Horaires                                              Midi          Soir                                      Lundi            Fermé            Fermé                                Mardi            10H00 - 14H00            19H00 - 22H00                                Mercredi            10H00 - 14H00            19H00 - 22H00                                Jeudi            10H00 - 14H00            19H00 - 22H00                                Vendredi            10H00 - 14H00            19H00 - 22H00                                Samedi            10H00 - 14H00            19H00 - 22H00                                Dimanche            10H00 - 14H00            19H00 - 22H00                                                                        Recette à la carte                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "guards/FranchiseeGuard.html": {
      url: "guards/FranchiseeGuard.html",
      title: "guard - FranchiseeGuard",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FranchiseeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/franchisee/franchisee.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    to activate the requested route.\nto load requested child routes.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                checkIfAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/franchisee/franchisee.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/franchisee/franchisee.guard.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/franchisee/franchisee.guard.ts:63\n                \n            \n\n\n            \n                \n                                 and a new navigation begins to the UrlTree\n             returned from the guard\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UrlTree, the current navigation is cancelled\n and a new navigation begins to the UrlTree\n returned from the guard\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        franchisee access\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfAuthenticated\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/franchisee/franchisee.guard.ts:35\n                \n            \n\n\n            \n                \n                    Verify if user (here franchisee) is authorizad to navigate,\nif not he will redirect to login page\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { AppState } from '../../store/store.reducer';\nimport { franchiseeAccess } from '../../store/state/user/user.selector';\n\n/**\n * @implements @CanActivate function that checks whether the current user has permission\n * to activate the requested route.\n *\n * @implements @CanLoad function that decides whether the current user has permission\n * to load requested child routes.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FranchiseeGuard implements CanActivate, CanLoad {\n  constructor(private router: Router, private store: Store) {}\n\n  /**\n   * Verify if user (here franchisee) is authorizad to navigate,\n   * if not he will redirect to login page\n   * @returns\n   */\n  private checkIfAuthenticated(): Observable {\n    return this.store.pipe(\n      select(franchiseeAccess),\n      tap((canAccess) => {\n        console.log('GUARD > FRANCHISEE > canAccess: ', canAccess);\n\n        if (!canAccess) {\n          this.router.navigateByUrl('/');\n        }\n      })\n    );\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.checkIfAuthenticated();\n  }\n\n  /**\n   *\n   * @param route\n   * @param segments UrlTree, the current navigation is cancelled\n   *                  and a new navigation begins to the UrlTree\n   *                  returned from the guard\n   * @returns franchisee access\n   */\n  canLoad(route: Route, segments: UrlSegment[]): Observable {\n    return this.checkIfAuthenticated();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/FranchiseeModule.html": {
      url: "modules/FranchiseeModule.html",
      title: "module - FranchiseeModule",
      body: "\n                   \n\n\n\n\n    Modules\n    FranchiseeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/franchisee/franchisee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FranchiseeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            FranchiseeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FranchiseeComponent } from './franchisee/franchisee.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\n\nimport { CalendarModule } from 'primeng/calendar';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { CardModule } from 'primeng/card';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\n\nconst routes: Routes = [{ path: '', component: FranchiseeComponent }];\n\n@NgModule({\n  declarations: [FranchiseeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    ButtonModule,\n    RippleModule,\n    DialogModule,\n    DividerModule,\n    ToastModule,\n    InputTextModule,\n    HttpClientModule,\n    ToolbarModule,\n    DropdownModule,\n    CardModule,\n    CalendarModule,\n    ComponentsModule,\n  ],\n  providers: [\n    FranchiseeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class FranchiseeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/FranchiseeRecipe.html": {
      url: "interfaces/FranchiseeRecipe.html",
      title: "interface - FranchiseeRecipe",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FranchiseeRecipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee-recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe:         Recipe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recipe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Recipe } from \'./recipe.model\';\n\nexport interface FranchiseeRecipe {\n\tid?: number;\n\tprice?: number;\n\trecipe_id?: number;\n\trecipe?: Recipe;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/FranchiseeService.html": {
      url: "injectables/FranchiseeService.html",
      title: "injectable - FranchiseeService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FranchiseeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/franchisee/franchisee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addStarRecipe\n                            \n                            \n                                    Public\n                                createSchedule\n                            \n                            \n                                    Public\n                                getFranchiseeRecipes\n                            \n                            \n                                    Public\n                                getFranchisees\n                            \n                            \n                                    Public\n                                getSchedule\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                    Public\n                                newFranchisee\n                            \n                            \n                                    Public\n                                removeRecipe\n                            \n                            \n                                    Public\n                                updateRecipePrice\n                            \n                            \n                                    Public\n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/franchisee/franchisee.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addStarRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStarRecipe(item: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:85\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients for franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee (recipe)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchedule(create: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:154\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchiseeRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchiseeRecipes(recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        franchisee recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchisees\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchisees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all Franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:138\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:183\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: HttpErrorResponse) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    newFranchisee(create: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new franchisee\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee id - message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRecipe(id: number, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Remove a recipe from franchisee catalog\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipePrice\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipePrice(update: Partial, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchedule(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:168\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, tap, map, Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/constants';\nimport { FranchiseeRecipe } from '../../models/franchisee-recipe.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { Recipe } from '../../models/recipe.model';\nimport { Schedule } from '../../models/schedule.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FranchiseeService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors\n   * @returns all Franchisee\n   */\n  public getFranchisees(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/contractors`)\n      .pipe(\n        map((res: any) => res),\n        tap((franchisees: any) => {\n          this.log('fetched franchisees');\n          console.log(\n            '------------------> service -> all franchisees : ',\n            franchisees\n          );\n        }),\n        catchError(this.handleError('getFranchisees'))\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors/{contractor_id}/recipes\n   * @param recipe\n   * @returns franchisee recipes\n   */\n  public getFranchiseeRecipes(\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${recipe.id}/recipes`\n      )\n      .pipe(\n        tap((obj: any) => console.log('service -> All recipes : ', obj)),\n        map((res: any) => res['data'])\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors\n   * @param create new franchisee\n   * @returns franchisee id - message\n   */\n  public newFranchisee(create: Franchisee): Observable {\n    console.log(\n      '******************* new franchisee **********************',\n      create.name,\n      create.phone,\n      create.email,\n      create.max_delivery_radius,\n      create.address_id,\n      create.owned_by\n    );\n    return this.http.post(`${environment.apiBaseUrl}/contractors`, create).pipe(\n      tap((obj: any) => console.log('service -> All recipes : ', obj)),\n      map((res: any) => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors/{contractor_id}/recipes\n   * Create new recipe with igredients for franchisee\n   * @param item franchisee (recipe)\n   * @returns new recipe\n   */\n  public addStarRecipe(item: Franchisee): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors${item.id}/recipes`, item)\n      .pipe(\n        tap((obj: any) => console.log('service -> All recipes : ', obj)),\n        map((res: any) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param update franchisee schedule\n   * @returns update recipe\n   */\n  public updateRecipePrice(\n    update: Partial,\n    recipe: Recipe\n  ): Observable {\n    return this.http\n      .put(\n        `${environment.apiBaseUrl}/contractors/${update.id}/recipes/${recipe.id}`,\n        update\n      )\n      .pipe(\n        tap((obj: any) => console.log('service -> All recipes : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.UPDATE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param id franchisee_id\n   * @param recipe.id recipe_id\n   * @returns Remove a recipe from franchisee catalog\n   */\n  public removeRecipe(id: number, recipe: Recipe): Observable {\n    return this.http\n      .delete(\n        `${environment.apiBaseUrl}/contractors/${id}/recipes/${recipe.id}`\n      )\n      .pipe(\n        tap((obj: any) =>\n          console.log('service -> Remove recipe from catalog : ', obj)\n        ),\n        map((res: any) => (res ? res['message'] : ''))\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param franchisee\n   * @returns\n   */\n  public getSchedule(franchisee: Franchisee): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/times`\n      )\n      .pipe(\n        tap((obj: any) => console.log('service -> schedule : ', obj)),\n        map((res: any) => res)\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param create franchisee schedule\n   * @returns update recipe\n   */\n  public createSchedule(create: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors/${create.id}/times`, create)\n      .pipe(\n        tap((obj: any) => console.log('service -> All recipes : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.CREATE))\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param update franchisee schedule\n   * @returns update recipe\n   */\n  public updateSchedule(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/contractors/${update.id}/times`, update)\n      .pipe(\n        tap((obj: any) => console.log('service -> All recipes : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.UPDATE))\n      );\n  }\n\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   *\n   * @param operation - name of the operation that failed\n   */\n  private handleError(operation = 'operation') {\n    return (error: HttpErrorResponse): Observable => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // If a native error is caught, do not transform it. We only want to\n      // transform response errors that are not wrapped in an `Error`.\n      if (error.error instanceof Event) {\n        throw error.error;\n      }\n\n      const message = `server returned code ${error.status} with body \"${error.error}\"`;\n      // TODO: better job of transforming error for user consumption\n      throw new Error(`${operation} failed: ${message}`);\n    };\n  }\n\n  private log(message: string) {\n    console.log('FranchiseeService: ' + message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Friday.html": {
      url: "interfaces/Friday.html",
      title: "interface - Friday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Friday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interceptors/GlobalHttpInterceptorService.html": {
      url: "interceptors/GlobalHttpInterceptorService.html",
      title: "interceptor - GlobalHttpInterceptorService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  GlobalHttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.interceptor.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class GlobalHttpInterceptorService implements HttpInterceptor {\n  constructor(public router: Router) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(req).pipe(\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.error instanceof ErrorEvent) {\n            console.error('Error Event');\n          } else {\n            console.log(`error status : ${error.status} ${error.statusText}`);\n            if (error.status === 500) {\n              // this.router.navigateByUrl(`/`).then(() => {\n              //   window.location.reload();\n              // });\n            }\n          }\n        } else {\n          console.error('some thing else happened');\n        }\n        console.log(req);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/HomeComponent.html": {
      url: "components/HomeComponent.html",
      title: "component - HomeComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/home/home.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'src/app/shared/services/user/local-storage/local-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Bientôt\n            Ici nous trouvons statestic de franchisés, utilisateurs, ...\n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Bientôt            Ici nous trouvons statestic de franchisés, utilisateurs, ...                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/HomeModule.html": {
      url: "modules/HomeModule.html",
      title: "module - HomeModule",
      body: "\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RippleModule } from 'primeng/ripple';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    AvatarModule,\n    BadgeModule,\n    TooltipModule,\n    RippleModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IngreType.html": {
      url: "interfaces/IngreType.html",
      title: "interface - IngreType",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngreType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngreType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Ingredient.html": {
      url: "interfaces/Ingredient.html",
      title: "interface - Ingredient",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allergen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            types\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allergen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        types:         IngreType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IngreType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngreType } from \'./ingredient-type.model\';\n\n/*\n * url : /ingredients\n */\nexport interface Ingredient {\n  id?: number;\n  name?: string;\n  allergen?: boolean;\n  types?: IngreType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/IngredientComponent.html": {
      url: "components/IngredientComponent.html",
      title: "component - IngredientComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IngredientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient/ingredient.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient\n            \n\n            \n                styleUrls\n                ./ingredient.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allergen\n                            \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                ingredient\n                            \n                            \n                                ingredientDialog\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                isCreate\n                            \n                            \n                                selectedIngredients\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredient\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                isAllergen\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                newIngredient\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientService: IngredientService, ingredientTypeService: IngredientTypeService, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllergen\n                        \n                    \n                \n            \n            \n                \nisAllergen(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredient\n                        \n                    \n                \n            \n            \n                \nnewIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \nupdateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allergen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder,\n  FormControl,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientComponent implements OnInit {\n  form: FormGroup;\n  allergen: boolean;\n\n  ingredient: Ingredient;\n\n  typeArray: IngreType[] = [];\n  ingredientType: IngreType;\n\n  ingredients: Ingredient[] = [];\n  selectedIngredients: Ingredient[];\n\n  ingredientDialog: boolean;\n  submitted: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private ingredientService: IngredientService,\n    private ingredientTypeService: IngredientTypeService,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    // this.isCreate = !this.id;\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingredient?.name || '', [Validators.required]],\n      allergen: this.ingredient?.allergen || false,\n      ingredientType: this.ingredient?.types || new FormControl([]),\n    });\n  }\n\n  private makeRecipe(): void {\n    var ingredient: Ingredient = {};\n    if (this.isCreate) {\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n      ingredient.types = [this.form.controls['ingredientType'].value.code];\n    } else {\n      ingredient.id = this.ingredient.id;\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n    }\n    this.ingredient = ingredient;\n    console.log('makeIngredient', this.ingredient);\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeRecipe();\n\n    if (this.ingredient.id) {\n      this.ingredientService\n        .updateIngredient(this.ingredient)\n        .pipe()\n        .subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: \"Mise à jour d'ingredient\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de modification',\n              detail: error.error,\n            });\n            console.log(error);\n          },\n        });\n    } else {\n      this.ingredientService\n        .createIngredient(this.ingredient)\n        .pipe()\n        .subscribe({\n          next: () => {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Nouvel ingredient ajouté',\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création',\n              detail: error.error,\n            });\n          },\n        });\n    }\n    this.ingredients = [...this.ingredients];\n    this.ingredientDialog = false;\n    this.ingredient = {};\n  }\n\n  newIngredient(): void {\n    this.ingredient = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  updateIngredient(ingredient: Ingredient): void {\n    this.ingredient = { ...ingredient };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  deleteIngredient(ingredient: Ingredient): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingredient.name + '\"?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientService.deleteIngredient(ingredient.id).subscribe({\n          next: () => {\n            this.ingredients = [...this.ingredients];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: \"L'ingrédient est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: \"Erreur le moment de création de l'ingrédient\",\n              detail: error.error,\n            });\n            console.log(\n              \"erreur le moment de création de l'ingrédient ->\",\n              error\n            );\n          },\n        });\n      },\n    });\n  }\n\n  isAllergen(event: any): void {\n    this.allergen = event.checked;\n    if (event.checked) {\n      this.allergen = true;\n      this.form.get('allergen').setValue(true);\n    } else {\n      this.form.get('allergen').setValue(false);\n    }\n  }\n\n  hideDialog(): void {\n    this.ingredientDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom d'ingredient \n        \n        \n          Type d'ingredient  \n        \n        \n          Allergen \n        \n        \n      \n    \n    \n      \n        {{ ingredient.name }}\n        {{ value.code }}\n        Oui\n        Non\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom d'ingrédient\n      \n      Nom est obligatoire.\n    \n    \n      \n        Type d'ingrédient\n        \n        \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./ingredient.component.scss\n                \n                .grid > .col,\n.grid > [class*=\"col\"] {\n  box-sizing: border-box;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  padding: 1rem;\n  width: 100%;\n}\n#icons {\n  justify-content: center !important;\n  right: 50%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ndiv {\n  display: block;\n}\n\nbody {\n  font-family: Lato, Helvetica, sans-serif;\n  font-size: 14px;\n  color: #495057;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 0;\n  margin: 0;\n  min-height: 100%;\n  background-image: linear-gradient(147.38deg, #ffffff 0%, #86a8c0 100%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\nbody {\n  font-family: Lato, Helvetica, sans-serif;\n  font-size: 14px;\n  color: #495057;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 0;\n  margin: 0;\n  min-height: 100%;\n  background-image: linear-gradient(147.38deg, #ffffff 0%, #86a8c0 100%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n:root {\n  --fc-daygrid-event-dot-width: 8px;\n}\n\n// ---------------------\n\n:host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n            border: 0 none;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom d\\'ingredient                           Type d\\'ingredient                            Allergen                                             {{ ingredient.name }}        {{ value.code }}        Oui        Non                                                                En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.                        Nom d\\'ingrédient            Nom est obligatoire.                      Type d\\'ingrédient                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/IngredientService.html": {
      url: "injectables/IngredientService.html",
      title: "injectable - IngredientService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredient\n                            \n                            \n                                    Public\n                                getIngredient\n                            \n                            \n                                    Public\n                                getIngredients\n                            \n                            \n                                    Public\n                                deleteIngredient\n                            \n                            \n                                    Public\n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient/ingredient.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredient(item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create new ingredient\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredient(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredients\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredient(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:67\n                \n            \n\n\n            \n                \n                    Attention : All recipes attached to this ingredient will lose their ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\nAttention : All recipes attached to this ingredient will lose their ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredient(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update ingredient\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map, Observable } from 'rxjs';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/ingredients\n   * @returns all ingredients\n   */\n  public getIngredients(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients`)\n      .pipe(map((res) => res['data']));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/ingredients/{ingredient_id}\n   * @param id ingredient\n   * @returns an ingredient\n   */\n  public getIngredient(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/ingredients\n   * @param item Create new ingredient\n   * @returns new ingredient\n   */\n  public createIngredient(item: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients`, item)\n      .pipe(map((res) => (res ? res['message'] : Message.CREATE)));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/ingredients/{ingredient_id}\n   * @param update ingredient items\n   * @returns update ingredient\n   */\n  public updateIngredient(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/ingredients/{ingredient_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   * Attention : All recipes attached to this ingredient will lose their ingredient\n   */\n  public deleteIngredient(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/${id}`)\n      .pipe(map((res) => (res ? res['message'] : '')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IngredientState.html": {
      url: "interfaces/IngredientState.html",
      title: "interface - IngredientState",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/ingredient/ingredient.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ingredient\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ingredient\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredient:         Ingredient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ingredient\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport * as IngredientActions from './ingredient.actions';\n\nexport const ingredientFeatureKey = 'ingredient';\n\nexport interface IngredientState {\n  ingredient?: Ingredient;\n}\n\nexport const initialState: IngredientState = {\n  ingredient: undefined,\n};\n\nexport const ingredientReducer = createReducer(\n  initialState,\n  on(IngredientActions.loaded, (state, action) => {\n    return {\n      ...state,\n      ingredient: action.ingredient,\n    };\n  }),\n  on(IngredientActions.update, (state, action) => {\n    return {\n      ...state,\n      ingredient: action.ingredient,\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/IngredientTypeComponent.html": {
      url: "components/IngredientTypeComponent.html",
      title: "component - IngredientTypeComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IngredientTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient-type\n            \n\n            \n                styleUrls\n                ./ingredient-type.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                ingredientTypeDialog\n                            \n                            \n                                ingreType\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredientType\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeIngredientType\n                            \n                            \n                                newIngredientType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientTypeService: IngredientTypeService, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \ndeleteIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredientType\n                        \n                    \n                \n            \n            \n                \nnewIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \nupdateIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientTypeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient-type',\n  templateUrl: './ingredient-type.component.html',\n  styleUrls: ['./ingredient-type.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientTypeComponent implements OnInit {\n  ingreType: IngreType;\n  typeArray: IngreType[] = [];\n\n  form: FormGroup;\n\n  first: number = 0;\n\n  ingredientTypeDialog: boolean;\n  submitted: boolean;\n\n  constructor(\n    private ingredientTypeService: IngredientTypeService,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingreType?.name || ''],\n      description: this.ingreType?.description || '',\n    });\n  }\n\n  private makeIngredientType(): void {\n    var ingreType: IngreType = {};\n\n    ingreType.name = this.form.get('name').value;\n    ingreType.description = this.form.get('description').value;\n\n    this.ingreType = ingreType;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeIngredientType();\n    if (this.ingreType.id) {\n      this.ingredientTypeService\n        .updateIngredientType(this.ingreType)\n        .subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Le type d'ingrédient est bien modifié.\",\n            life: 3000,\n          });\n        });\n    } else {\n      this.ingredientTypeService\n        .createIngredientType(this.ingreType)\n        .subscribe((res) => {\n          console.log('res : ', res);\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"le type d'ingrédient est bien créé.\",\n            life: 3000,\n          });\n        });\n    }\n\n    this.typeArray = [...this.typeArray];\n    this.ingredientTypeDialog = false;\n    this.ingreType = {};\n  }\n\n  newIngredientType(): void {\n    this.ingreType = {};\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  updateIngredientType(ingreType: IngreType): void {\n    this.ingreType = { ...ingreType };\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  deleteIngredientType(ingreType: IngreType): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingreType.name + '\"?',\n      header: 'Confirmation de suppression',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientTypeService\n          .removeIngredientType(ingreType.id)\n          .subscribe({\n            next: () => {\n              this.typeArray = [...this.typeArray];\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Succès',\n                detail: \"Création de type d'ingredient\",\n                life: 3000,\n              });\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création de type',\n                detail: error.error,\n              });\n              console.log('erreur le moment de création type --->', error);\n            },\n          });\n      },\n    });\n  }\n\n  hideDialog(): void {\n    this.ingredientTypeDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom\n        \n        \n          Description\n        \n        \n      \n    \n    \n      \n        {{ ingreType.name }}\n        {{ ingreType.description }}\n        \n          \n          \n        \n      \n    \n    \n      \n        Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom de type d'ingrédient\n      \n      Champ obligatoire.\n    \n    \n      Description\n      \n    \n  \n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./ingredient-type.component.scss\n                \n                \n            \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom                          Description                                            {{ ingreType.name }}        {{ ingreType.description }}                                                                Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.                        Nom de type d\\'ingrédient            Champ obligatoire.              Description                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/IngredientTypeService.html": {
      url: "injectables/IngredientTypeService.html",
      title: "injectable - IngredientTypeService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient-type/ingredient-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredientType\n                            \n                            \n                                    Public\n                                getIngredientsTypes\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                    Public\n                                removeIngredientType\n                            \n                            \n                                    Public\n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredientType(item: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:40\n                \n            \n\n\n            \n                \n                    Create new ingredient type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsTypes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredients types as Vegetebale, fruit, ...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:77\n                \n            \n\n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeIngredientType(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:65\n                \n            \n\n\n            \n                \n                    Attention : All ingredients attched to this type will lose their type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient-type_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a ingredient_type\nAttention : All ingredients attched to this type will lose their type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredientType(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, tap, map, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { IngreType } from '../../models/ingredient-type.model';\nimport { CodeHTTP, Message } from '../../constants/constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientTypeService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * @returns ingredients types as Vegetebale, fruit, ...\n   */\n  public getIngredientsTypes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients/types`)\n      .pipe(\n        map((res) => res),\n        tap((values) => {\n          this.log('fetched recipes');\n          console.log('get recipes in service class : ', values);\n        }),\n        catchError((err) => this.handleError(err))\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * Create new ingredient type\n   * @param item\n   * @returns\n   */\n  public createIngredientType(item: IngreType): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients/types`, item)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param update\n   */\n  public updateIngredientType(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/types/${update.id}`, update)\n      .pipe(\n        tap((obj) => console.log('service -> edit ingredient type : ', obj)),\n        map((data) => (data ? data['message'] : Message.UPDATE_SUCCESS))\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param id ingredient-type_id\n   * @returns Delete a ingredient_type\n   * Attention : All ingredients attched to this type will lose their type\n   */\n  public removeIngredientType(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/types/${id}`)\n      .pipe(map((res) => (res ? res['message'] : '')));\n  }\n\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   *\n   * @param operation - name of the operation that failed\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    switch (error.status) {\n      case CodeHTTP.HTTP_511_NETWORK_AUTHENTICATION_REQUIRED:\n        console.log(\"Désolé, vous n'etes pas authentifier sur notre serveur.\");\n        break;\n      case CodeHTTP.HTTP_401_UNAUTHORIZED:\n        console.log(\"Désolé, vous n'etes pas autorise a acceder a cette page.\");\n        break;\n      case CodeHTTP.HTTP_404_NOT_FOUND:\n        console.log('Page introuvable.');\n        break;\n      default:\n        console.log('Une erreur est survenue: ', error.message);\n    }\n    return throwError(error);\n  }\n\n  private log(message: string) {\n    console.log('IngredientTypesService: ' + message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "guards/IsAuthenticatedGuard.html": {
      url: "guards/IsAuthenticatedGuard.html",
      title: "guard - IsAuthenticatedGuard",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n\n    return isAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "guards/IsUnauthenticatedGuard.html": {
      url: "guards/IsUnauthenticatedGuard.html",
      title: "guard - IsUnauthenticatedGuard",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsUnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsUnauthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (isAuthenticated) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/LayoutsModule.html": {
      url: "modules/LayoutsModule.html",
      title: "module - LayoutsModule",
      body: "\n                   \n\n\n\n\n    Modules\n    LayoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\n\nDefaultModule\n\nDefaultModule\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/layouts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/layouts.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DefaultComponent } from './default/default.component';\nimport { DefaultModule } from './default/default.module';\n\n@NgModule({\n  imports: [\n    DefaultModule,\n    RouterModule.forChild([{ path: '', component: DefaultComponent }]),\n  ],\n  exports: [DefaultModule],\n})\nexport class LayoutsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LayoutsModule,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/LoadingComponent.html": {
      url: "components/LoadingComponent.html",
      title: "component - LoadingComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRoutingOnGoing\n                            \n                            \n                                routing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRoutingOnGoing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/loading/loading.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/loading/loading.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  RouteConfigLoadEnd,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Input()\n  routing = false;\n\n  @Input()\n  detectRoutingOnGoing = false;\n\n  constructor(public loadingService: LoadingService, private router: Router) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    if (this.detectRoutingOnGoing) {\n      this.router.events.subscribe((event) => {\n        if (\n          event instanceof NavigationStart ||\n          event instanceof RouteConfigLoadStart\n        ) {\n          this.loadingService.loadingOn();\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationError ||\n          event instanceof NavigationCancel ||\n          event instanceof RouteConfigLoadEnd\n        ) {\n          this.loadingService.loadingOff();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.053);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/LoadingService.html": {
      url: "injectables/LoadingService.html",
      title: "injectable - LoadingService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingOff\n                            \n                            \n                                    Public\n                                loadingOn\n                            \n                            \n                                    Public\n                                showLoaderUntilCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showLoaderUntilCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoaderUntilCompleted(obs$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  concatMap,\n  finalize,\n  Observable,\n  of,\n  tap,\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n\n  loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  public showLoaderUntilCompleted(obs$: Observable): Observable {\n    return of(null).pipe(\n      tap(() => this.loadingOn()),\n      concatMap(() => obs$),\n      finalize(() => this.loadingOff())\n    );\n  }\n\n  public loadingOn(): void {\n    this.loadingSubject.next(true);\n  }\n\n  public loadingOff(): void {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/LocalStorageService.html": {
      url: "injectables/LocalStorageService.html",
      title: "injectable - LocalStorageService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/local-storage/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | object | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: string | object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {\n    //NOSONAR\n  }\n\n  set(key: string, value: string | object): void {\n    let valueSerialized: string = '';\n\n    switch (typeof value) {\n      case 'object':\n        valueSerialized = JSON.stringify(value);\n        break;\n      default:\n        valueSerialized = value.toString();\n    }\n    localStorage.setItem(key, valueSerialized);\n  }\n\n  get(key: string): string | object | null {\n    if (this.has(key)) {\n      try {\n        return JSON.parse(localStorage.getItem(key));\n      } catch {\n        return localStorage.getItem(key);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  has(key: string): boolean {\n    return localStorage.getItem(key) === null ? false : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/LoginComponent.html": {
      url: "components/LoginComponent.html",
      title: "component - LoginComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n     //NOSONAR\n  }\n\n  onLogin() {\n    this.authService.getAuthorizationCode();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/styles.scss\";\n\nbutton {\n  background: #ccbe1c !important;\n  border-radius: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Lunch.html": {
      url: "interfaces/Lunch.html",
      title: "interface - Lunch",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lunch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/MessagesService.html": {
      url: "injectables/MessagesService.html",
      title: "injectable - MessagesService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/messages/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors$\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors(...errors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/messages/messages.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  private subject = new BehaviorSubject([]);\n\n  errors$: Observable = this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0));\n\n  showErrors(...errors: string[]) {\n    this.subject.next(errors);\n    window.scrollTo(0, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Monday.html": {
      url: "interfaces/Monday.html",
      title: "interface - Monday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/PageNotFoundComponent.html": {
      url: "components/PageNotFoundComponent.html",
      title: "component - PageNotFoundComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n        \n        \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n              \n            \n          \n        \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                .fundo {\n  animation: scales 3s alternate infinite;\n  transform-origin: center;\n}\n\n.pao-baixo {\n  animation: rotatepao 14s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.pao-cima {\n  animation: rotatepao 7s 1s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.olhos {\n  animation: olhos 2s alternate infinite;\n  transform-origin: center;\n}\n\n.left-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 150px 156px;\n}\n\n.right-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 310px 150px;\n}\n\n@keyframes scales {\n  from {\n    transform: scale(0.98);\n  }\n\n  to {\n    transform: scale(1);\n  }\n}\n\n@keyframes rotatepao {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50%,\n  60% {\n    transform: rotate(-20deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes olhos {\n  0% {\n    transform: rotateX(0deg);\n  }\n\n  100% {\n    transform: rotateX(30deg);\n  }\n}\n\n@keyframes left-sparks {\n  0% {\n    opacity: 0;\n  }\n}\n\n.main {\n  margin: 0px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.path {\n  stroke-dasharray: 300;\n  stroke-dashoffset: 300;\n  animation: dash 4s alternate infinite;\n}\n\n@keyframes dash {\n  0%,\n  30% {\n    fill: #4b4b62;\n    stroke-dashoffset: 0;\n  }\n\n  80%,\n  100% {\n    fill: transparent;\n    stroke-dashoffset: -200;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Picture.html": {
      url: "interfaces/Picture.html",
      title: "interface - Picture",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/picture.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            external_link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size_unit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size_unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size_unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Picture {\n  uuid?: string;\n  name?: string;\n  size?: number;\n  size_unit?: string;\n  link?: string;\n  external_link?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/PrincipalComponent.html": {
      url: "components/PrincipalComponent.html",
      title: "component - PrincipalComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PrincipalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/principal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-principal\n            \n\n            \n                styleUrls\n                ./principal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./principal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/principal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/principal.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.scss'],\n})\nexport class PrincipalComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./principal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrincipalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/PrincipalModule.html": {
      url: "modules/PrincipalModule.html",
      title: "module - PrincipalModule",
      body: "\n                   \n\n\n\n\n    Modules\n    PrincipalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_imports\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/principal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            PrincipalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LayoutsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MessageService } from 'primeng/api';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { UserEffects } from '../shared/store/state/user';\n\nimport { routing } from './principal-routing.module';\nimport { LayoutsModule } from '../layouts/layouts.module';\n\nimport { PrincipalComponent } from './principal.component';\nimport { PageNotFoundComponent } from '../layouts/components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [PrincipalComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    routing,\n    LayoutsModule,\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    EffectsModule.forFeature([UserEffects]),\n  ],\n  providers: [MessageService],\n})\nexport class PrincipalModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ProfileComponent.html": {
      url: "components/ProfileComponent.html",
      title: "component - ProfileComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/profile/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                editModeEmail\n                            \n                            \n                                    Optional\n                                editModeFirstname\n                            \n                            \n                                    Optional\n                                editModeLastname\n                            \n                            \n                                    Optional\n                                editModePhone\n                            \n                            \n                                form\n                            \n                            \n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldCancel\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileService: ProfileService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:111\n                \n            \n\n\n            \n                \n                    In input form : + Verify value form (character form and length)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldCancel\n                        \n                    \n                \n            \n            \n                \nonFieldCancel(user: User, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeFirstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeLastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModePhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ProfileService } from './../../../shared/services/profile/profile.service';\nimport { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { MessageService } from 'primeng/api';\nimport { Observable, filter, first } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppState } from 'src/app/shared/store';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  providers: [MessageService],\n  styleUrls: ['./profile.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    `,\n  ],\n})\nexport class ProfileComponent implements OnInit {\n  editModeFirstname?: boolean;\n  editModeLastname?: boolean;\n  editModeEmail?: boolean;\n  editModePhone?: boolean;\n\n  user$: Observable;\n  user: User;\n\n  form: FormGroup;\n\n  constructor(\n    private store: Store,\n    private profileService: ProfileService,\n    // private messageService: MessageService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    // this.store.pipe(select(selectUserDetails)).subscribe((user) => {\n    //   console.log(this.user);\n    //   if (user == null) {\n    //     this.store.dispatch(UserActions.loadUser());\n    //   }\n    // });\n    //this.user = this.profileService.getCurrentUser();\n    this.profileService.getUser().subscribe(\n      (res) => {\n        this.user = res;\n        this.form.patchValue(this.user);\n        console.log('res in profile : ', res);\n      },\n      (err) => console.log('erreu dans profile component : ', err)\n    );\n    this.editModeFirstname = false;\n    this.editModeLastname = false;\n    this.editModeEmail = false;\n    this.editModePhone = false;\n\n    this.initForm();\n  }\n\n  updateField(type: string): User {\n    this.store\n      .pipe(\n        select(selectUserDetails),\n        filter((user) => user != null),\n        first()\n      )\n      .subscribe(\n        (user) => {\n          const userUpdate = { ...user } as User;\n          const formValue = this.form.value;\n          switch (type) {\n            case 'FIRSTNAME':\n              this.user.firstname = formValue.firstname.trim();\n              break;\n            case 'LASTNAME':\n              this.user.lastname = formValue.lastname.trim();\n              break;\n            case 'PHONE':\n              this.user.phone = formValue.phone.trim();\n              break;\n            case 'EMAIL':\n              this.user.email = formValue.email.trim();\n              break;\n            default:\n              break;\n          }\n          this.store.dispatch(\n            UserActions.updateUser({ userDetails: this.user })\n          );\n        },\n        (error) => console.log('profile component > update user: ', error)\n      );\n    return this.user;\n  }\n\n  /**\n   * In input form : + Verify value form (character form and length)\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstname: [\n        this.user?.firstname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(30),\n        ],\n      ],\n      lastname: [\n        this.user?.lastname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      phone: [\n        this.user?.phone,\n        [Validators.required, Validators.pattern('/^[0][0-9]{9}$')],\n      ],\n      email: [\n        this.user?.email,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n    });\n  }\n\n  // TODO : *** code this part ***\n  onFieldCancel(user: User, index: number) {\n    // Complete here\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  Prénom\n                \n                \n                  \n                    {{ user.firstname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Nom\n                \n                  \n                    {{ user.lastname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Numéro de téléphone\n                \n                \n                  \n                    {{ user.phone }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Email\n                \n                \n                  \n                    {{ user.email }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .w-8 {\n  width: 100% !important;\n}\n\n.col-12 {\n  width: 10% !important;\n}\n\n            \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Prénom                                                                      {{ user.firstname }}                                                                                                                                                                                                                            Nom                                                      {{ user.lastname }}                                                                                                                                                                                                                                              Numéro de téléphone                                                                      {{ user.phone }}                                                                                                                                                                                                                                              Email                                                                      {{ user.email }}                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/ProfileModule.html": {
      url: "modules/ProfileModule.html",
      title: "module - ProfileModule",
      body: "\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RippleModule } from 'primeng/ripple';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\n\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { CalendarModule } from 'primeng/calendar';\nimport { SliderModule } from 'primeng/slider';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ToolbarModule } from 'primeng/toolbar';\n\nconst routes: Routes = [{ path: '', component: ProfileComponent }];\n\n@NgModule({\n  declarations: [ProfileComponent], //EditProfileComponent\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    AvatarModule,\n    BadgeModule,\n    TooltipModule,\n    RippleModule,\n    TableModule,\n    CalendarModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    DropdownModule,\n    ToastModule,\n    InputTextModule,\n    ProgressBarModule,\n    HttpClientModule,\n    ComponentsModule,\n    ToolbarModule,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/ProfileService.html": {
      url: "injectables/ProfileService.html",
      title: "injectable - ProfileService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, localStorageService: LocalStorageService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/profile/profile.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/user.model';\nimport { LocalStorageService } from 'src/app/shared/services/user/local-storage/local-storage.service';\nimport { Roles, StorageKeys } from 'src/app/shared/constants/constants';\nimport { AuthService } from '../user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private authService: AuthService\n  ) {\n    //NOSONAR\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  getCurrentUser(): User {\n    let currentUser: User;\n    currentUser = this.localStorageService.get(StorageKeys.USER);\n    type role = { code: string };\n    let currentRole: role;\n    currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    console.log([currentRole]);\n    currentUser.roles = [];\n    currentUser.roles.push(currentRole);\n    return this.authService.roleById(currentUser);\n  }\n\n  updateUser(user: User): Observable {\n    const newUserDetails: User = { ...user };\n\n    const formData = new FormData();\n    if (newUserDetails != null) {\n      newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n      newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n      newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n      newUserDetails.email = JSON.stringify(newUserDetails.email);\n\n      formData.append('firstname', newUserDetails.firstname);\n      formData.append('lastname', newUserDetails.lastname);\n      formData.append('phone', newUserDetails.phone);\n      formData.append('email', newUserDetails.email);\n    }\n\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${user.id}`, formData)\n      .pipe(\n        tap((res) => {\n          if (res != null) {\n            newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n            newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n            newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n            newUserDetails.email = JSON.stringify(newUserDetails.email);\n          }\n        }),\n        map((res) => res)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Recipe.html": {
      url: "interfaces/Recipe.html",
      title: "interface - Recipe",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            available_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            base_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pictures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            star\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trashed_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         Ingredient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ingredient[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_type:         RecipeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RecipeType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trashed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trashed_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ingredient } from './ingredient.model';\nimport { Picture } from './picture.model';\nimport { RecipeType } from './recipe-type.model';\n\nexport interface Recipe {\n  id?: number;\n  name?: string;\n  description?: string;\n  base_price?: number;\n  star?: boolean;\n  ingredients?: Ingredient[];\n  recipe_type?: RecipeType;\n  //created_by: number;\n  available_at?: Date;\n  pictures?: Picture[];\n  trashed_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/RecipeDialogComponent.html": {
      url: "components/RecipeDialogComponent.html",
      title: "component - RecipeDialogComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  RecipeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-dialog\n            \n\n            \n                styleUrls\n                ./recipe-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recipe-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _recipeType\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                fr\n                            \n                            \n                                idRecipe\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientsDetails\n                            \n                            \n                                ingreType\n                            \n                            \n                                isDisabledControlForm\n                            \n                            \n                                mode\n                            \n                            \n                                picture\n                            \n                            \n                                recipe\n                            \n                            \n                                recipesType\n                            \n                            \n                                recipeType\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                star\n                            \n                            \n                                submitted\n                            \n                            \n                                Textbutton\n                            \n                            \n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkError\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                    Private\n                                newRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClickStar\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                onSelectPicture\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                onUploadPic\n                            \n                            \n                                    Private\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, recipeService: RecipeService, loading: LoadingService, ingredientService: IngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkError\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkError(controlName: string, errorName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        newRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    newRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickStar\n                        \n                    \n                \n            \n            \n                \nonClickStar(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPicture\n                        \n                    \n                \n            \n            \n                \nonSelectPicture(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadPic\n                        \n                    \n                \n            \n            \n                \nonUploadPic(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idRecipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabledControlForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        star\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Textbutton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'Modifier' || 'Créer'\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LoadingService } from './../../../../shared/services/loading/loading.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { RecipeType } from 'src/app/shared/models/recipe-type.model';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from '../../../../shared/models/picture.model';\n\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\n\n@Component({\n  selector: 'app-recipe-dialog',\n  templateUrl: './recipe-dialog.component.html',\n  styleUrls: ['./recipe-dialog.component.scss'],\n})\nexport class RecipeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n  Textbutton = 'Modifier' || 'Créer';\n  form: FormGroup;\n  //------------------------------- Recipe Type : dropdown (1)\n  recipesType: Recipe[] = [];\n  recipe: Recipe;\n  recipeType: RecipeType;\n  _recipeType: RecipeType[] = [];\n  //------------------------------- Ingredients details : drop down (2)\n  ingredients: Ingredient[] = [];\n  ingredientsDetails: Ingredient;\n\n  ingreType: IngreType[] = [];\n\n  picture: Picture = null; // Variable to store picture\n  submitted: boolean;\n\n  idRecipe: number;\n  star: boolean;\n\n  uploadedFiles: any[] = []; // Upload image\n\n  isDisabledControlForm = false;\n\n  fr: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private recipeService: RecipeService,\n    private loading: LoadingService,\n    private ingredientService: IngredientService\n  ) {\n    this.recipe = config.data.recipe;\n    this.ingredients = config.data.ingredients;\n    this._recipeType = config.data.recipeType;\n    this.ingreType = config.data.ingredientsTypes;\n    this.ingredients.forEach((x) => x.name);\n    this.mode = config.data.mode;\n    this.picture = config.data.pictures;\n  }\n\n  ngOnInit(): void {\n    /* retrieve recipe types */\n    this.recipeService.getRecipeType().subscribe((res) => {\n      this.recipesType = res;\n    });\n    /* retrieve ingredients data */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    this.initForm();\n  }\n\n  initForm(): void {\n    var laDate: Date;\n    if (!this.recipe?.available_at) {\n      laDate = new Date(new Date().setDate(new Date().getDate() + 10));\n    } else {\n      laDate = new Date(this.recipe?.available_at);\n    }\n    this.form = this.fb.group({\n      title: [this.recipe?.name, [Validators.required]],\n      recipeType: [this.recipe?.recipe_type, [Validators.required]],\n      price: [this.recipe?.base_price, [Validators.required]],\n      ingredientsDetails: [this.recipe?.ingredients, Validators.required],\n      description: [this.recipe?.description],\n      star: this.recipe?.star || false,\n      availableDate: [laDate, [Validators.required]],\n    });\n  }\n\n  onClickStar(event: any): void {\n    this.star = event.checked;\n    this.recipe.star = event.checked;\n    if (event.checked) {\n      this.star = true;\n      this.form.get('star').setValue(true);\n    } else {\n      this.form.get('star').setValue(false);\n    }\n  }\n\n  private makeRecipe(): void {\n    if (this.mode === 'CREATE') {\n      this.recipe.available_at = this.form.value.availableDate;\n    }\n    this.recipe.name = this.form.value.title;\n    this.recipe.recipe_type = this.form.controls['recipeType'].value.code;\n    this.recipe.base_price = this.form.value.price;\n    this.recipe.ingredients = this.form.controls['ingredientsDetails'].value;\n    this.recipe.star = this.form.value.star;\n    this.recipe.description = this.form.value.description;\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.makeRecipe();\n      this.loading.loadingOn();\n\n      if (this.mode === 'UPDATE') {\n        this.updateRecipe();\n      } else {\n        this.newRecipe();\n      }\n    }\n  }\n\n  private newRecipe(): void {\n    this.recipeService\n      .uploadPicture(this.picture)\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.picture = res;\n        this.recipeService.createRecipe(this.recipe).subscribe({\n          next: (_res) => {\n            this.ref.close(_res);\n            this.recipe = _res;\n            this.recipeService\n              .attachPictures(this.picture, this.recipe)\n              .subscribe();\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création de de la recette',\n              detail: error.error,\n            });\n            console.log(\n              'erreur le moment de création de la recette --->',\n              error\n            );\n          },\n        });\n      });\n  }\n\n  private updateRecipe(): void {\n    this.recipeService.updateRecipe(this.recipe).subscribe({\n      next: (res) => {\n        this.ref.close(res);\n      },\n      error: (error) => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erreur le moment de modification de de la recette',\n          detail: error.error,\n        });\n        console.log(\n          'erreur le moment de modification de la recette --->',\n          error\n        );\n      },\n    });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n\n  onSelectPicture(event) {\n    console.log('Selected picture', event);\n  }\n\n  // On picture Select\n  onChange(event) {\n    this.picture = event.files[0];\n  }\n\n  // OnClick of button Upload\n  onUpload() {\n    this.recipeService.uploadPicture(this.picture).subscribe((res) => {\n      this.picture = res;\n    });\n  }\n\n  onUploadPic(event) {\n    for (let picture of event.files) {\n      this.uploadedFiles.push(picture);\n      console.log('picture : ', picture);\n    }\n  }\n\n  public checkError(controlName: string, errorName: string): boolean {\n    return (\n      this.form.controls[controlName].dirty &&\n      this.form.controls[controlName].hasError(errorName)\n    );\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      Nom de plat\n      \n    \n    \n      Type de recette\n      \n      \n      Champ obligatoire -->\n    \n    \n      Ingredients\n      Champ obligatoire\n      \n      \n    \n    \n      Date disponiblité\n\n      {{ recipe.available_at }}\n    \n  \n  \n    \n      \n        \n          Prix de base\n          \n          \n        \n        \n          \n        \n        \n          \n          \n        \n      \n    \n    \n      Description\n      \n    \n  \n  \n    \n    Plat star\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-dialog.component.scss\n                \n                :host ::ng-deep .p-dropdown {\n  width: 14rem;\n}\n\n.DynamicDialog {\n  :host ::ng-deep {\n    .p-dialog .p-dialog-header {\n      background: #d8f6f6 !important;\n    }\n  }\n}\n\n:host ::ng-deep .ui-dialog .ui-dialog-titlebar {\n  background-color: rgba(255, 234, 0, 0.325);\n}\n\n.p-fileupload .p-fileupload-basic .p-fileupload-choose {\n  border-radius: 50% !important;\n  min-width: 0rem !important;\n}\n\n#fileUploader {\n  min-width: 0rem;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 15rem;\n  width: 18rem;\n}\n\n:host ::ng-deep .multiselect-custom {\n  .p-multiselect-label {\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .country-item-value {\n    padding: 0.25rem 0.5rem;\n    border-radius: 3px;\n    display: inline-flex;\n    margin-right: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--primary-color-text);\n\n    img.flag {\n      width: 17px;\n    }\n  }\n\n  .country-placeholder {\n    padding: 0.25rem;\n  }\n}\n\n:host ::ng-deep {\n  @media screen and (max-width: 640px) {\n    .p-multiselect {\n      width: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de plat                    Type de recette                  Champ obligatoire -->              Ingredients      Champ obligatoire                          Date disponiblité      {{ recipe.available_at }}                                    Prix de base                                                                                                              Description                      Plat star              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/RecipeManagementModule.html": {
      url: "modules/RecipeManagementModule.html",
      title: "module - RecipeManagementModule",
      body: "\n                   \n\n\n\n\n    Modules\n    RecipeManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/recipe-details/recipe-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IngredientComponent\n                        \n                        \n                            IngredientTypeComponent\n                        \n                        \n                            RecipeDialogComponent\n                        \n                        \n                            RecipesComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RecipeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            RecipeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CheckboxModule } from 'primeng/checkbox';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DataViewModule } from 'primeng/dataview';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { RecipeDialogComponent } from './recipe/recipe-dialog/recipe-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { PanelModule } from 'primeng/panel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RecipesComponent } from './recipe/recipes/recipes.component';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TabViewModule } from 'primeng/tabview';\nimport { TableModule } from 'primeng/table';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { DividerModule } from 'primeng/divider';\nimport { IngredientTypeComponent } from './ingredient-type/ingredient-type.component';\n\nconst routes: Routes = [{ path: '', component: TabsComponent }];\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeDialogComponent,\n    IngredientComponent,\n    TabsComponent,\n    IngredientTypeComponent,\n  ],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DataViewModule,\n    DropdownModule,\n    DynamicDialogModule,\n    FileUploadModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    DialogModule,\n    CheckboxModule,\n    CalendarModule,\n    TabViewModule,\n    MultiSelectModule,\n    KeyFilterModule,\n    DividerModule,\n  ],\n  entryComponents: [RecipeDialogComponent],\n  providers: [\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class RecipeManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/RecipeService.html": {
      url: "injectables/RecipeService.html",
      title: "injectable - RecipeService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/recipe/recipe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachPictures\n                            \n                            \n                                    Public\n                                createRecipe\n                            \n                            \n                                    Public\n                                getIngredientsByRecipeId\n                            \n                            \n                                    Public\n                                getRecipe\n                            \n                            \n                                    Public\n                                getRecipes\n                            \n                            \n                                    Public\n                                getRecipeType\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                    Public\n                                removeRecipe\n                            \n                            \n                                    Public\n                                updateRecipe\n                            \n                            \n                                    Public\n                                uploadPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/recipe/recipe.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachPictures\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachPictures(picture: Partial, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        all pictures of recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRecipe(item: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:67\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RecipePostModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsByRecipeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsByRecipeId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients of a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipeType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipeType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipes type as dessert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:145\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: HttpErrorResponse) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        uploadPicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPicture(picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:117\n                \n            \n\n\n            \n                \n                    Store form name as \"picture\" with picture data\nMake http post request over api with formData as req\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, tap } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport { Picture } from '../../models/picture.model';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/constants';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RecipeService {\n\tconstructor(private http: HttpClient) {\n\t\t//NOSONAR\n\t}\n\n\t/**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}\n   * @returns one recipes\n   */\n\tpublic getRecipe(id: number): Observable {\n\t\treturn this.http.get(`${environment.apiBaseUrl}/recipes/${id}`).pipe(map((res) => res));\n\t}\n\n\t/**\n   * @url GET : localhost:8080/api/recipes\n   * @returns all recipes\n   */\n\tpublic getRecipes(): Observable {\n\t\treturn this.http.get(`${environment.apiBaseUrl}/recipes?includes[]=pictures`).pipe(\n\t\t\tmap((res) => res['data']),\n\t\t\ttap((recipes) => {\n\t\t\t\tthis.log('fetched recipes');\n\t\t\t\tconsole.log('get recipes in service class : ', recipes);\n\t\t\t}),\n\t\t\tcatchError(this.handleError('getRecipes'))\n\t\t);\n\t}\n\n\t/**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}/ingredients\n   * @param id recipe_id\n   * @returns all ingredients of a recipe\n   */\n\tpublic getIngredientsByRecipeId(id: number): Observable {\n\t\treturn this.http\n\t\t\t.get(`${environment.apiBaseUrl}/recipes/${id}/ingredients`)\n\t\t\t.pipe(map((res) => (res ? res['message'] : '')));\n\t}\n\n\t/**\n   *\n   * @returns recipes type as dessert\n   */\n\tpublic getRecipeType(): Observable {\n\t\treturn this.http.get(`${environment.apiBaseUrl}/recipes/types`).pipe(map((res) => res));\n\t}\n\n\t/**\n   * @url POST : localhost:8080/api/recipes\n   * Create new recipe with igredients\n   * @param item RecipePostModel\n   * @returns new recipe\n   */\n\tpublic createRecipe(item: Recipe): Observable {\n\t\treturn this.http\n\t\t\t.post(`${environment.apiBaseUrl}/recipes`, {\n\t\t\t\t...item,\n\t\t\t\tingredients: item.ingredients.map((ingredient) => ingredient.id)\n\t\t\t})\n\t\t\t.pipe(map((res) => res));\n\t}\n\n\t/**\n   * @url PUT : localhost:8080/api/recipes/{recipe_id}\n   * @param update recipe items\n   * @returns update recipe\n   */\n\tpublic updateRecipe(update: Partial): Observable {\n\t\treturn this.http\n\t\t\t.put(`${environment.apiBaseUrl}/recipes/${update.id}`, {\n\t\t\t\tingredients: update.ingredients.map((ingredient) => ingredient.id),\n\t\t\t\tname: update.name,\n\t\t\t\tdescription: update.description,\n\t\t\t\tbase_price: update.base_price,\n\t\t\t\tstar: update.star,\n\t\t\t\trecipe_type: update.recipe_type\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\ttap((obj) => console.log('service ---------------------->  ', obj)),\n\t\t\t\tmap((res) => (res ? res['message'] : Message.UPDATE_SUCCESS))\n\t\t\t);\n\t}\n\n\t/**\n   * @url DELETE : localhost:8080/api/recipes/{recipe_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   */\n\tpublic removeRecipe(id: number): Observable {\n\t\treturn this.http\n\t\t\t.delete(`${environment.apiBaseUrl}/recipes/${id}`)\n\t\t\t.pipe(map((res) => (res ? res['message'] : '')));\n\t}\n\n\t/**\n   * @param FormData() Create form data\n   *\n   * Store form name as \"picture\" with picture data\n   * Make http post request over api with formData as req\n   *\n   * @param picture\n   * @returns\n   */\n\tpublic uploadPicture(picture): Observable {\n\t\tconst formData = new FormData();\n\n\t\tformData.append('name', picture.name);\n\t\tformData.append('filename', picture);\n\n\t\treturn this.http.post(`${environment.apiBaseUrl}/files`, formData);\n\t}\n\n\t/**\n   * @url POST : localhost:8080/api/recipes/{recipe_id}/pictures\n   * @param id uuid\n   * @returns all pictures of recipe\n   */\n\tpublic attachPictures(picture: Partial, recipe: Recipe): Observable {\n\t\tconst formData = new FormData();\n\t\tformData.append('file_uuid', picture.uuid);\n\t\treturn this.http\n\t\t\t.post(`${environment.apiBaseUrl}/recipes/${recipe.id}/pictures`, formData)\n\t\t\t.pipe(map((res) => (res ? res['message'] : '')));\n\t}\n\n\t/**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   *\n   * @param operation - name of the operation that failed\n   */\n\tprivate handleError(operation = 'operation') {\n\t\treturn (error: HttpErrorResponse): Observable => {\n\t\t\t// TODO: send the error to remote logging infrastructure\n\t\t\tconsole.error(error); // log to console instead\n\n\t\t\t// If a native error is caught, do not transform it. We only want to\n\t\t\t// transform response errors that are not wrapped in an `Error`.\n\t\t\tif (error.error instanceof Event) {\n\t\t\t\tthrow error.error;\n\t\t\t}\n\n\t\t\tconst message = `server returned code ${error.status} with body \"${error.error}\"`;\n\t\t\t// TODO: better job of transforming error for user consumption\n\t\t\tthrow new Error(`${operation} failed: ${message}`);\n\t\t};\n\t}\n\n\tprivate log(message: string) {\n\t\tconsole.log('RecipeService: ' + message);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/RecipeState.html": {
      url: "interfaces/RecipeState.html",
      title: "interface - RecipeState",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecipeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/recipe/recipe.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            recipe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        recipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe:         Recipe[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recipe[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport * as RecipeActions from './recipe.actions';\n\nexport const recipeFeatureKey = 'recipe';\n\nexport interface RecipeState {\n  recipe?: Recipe[];\n}\n\nexport const initialState: RecipeState = {\n  recipe: undefined,\n};\n\nexport const recipeReducer = createReducer(\n  initialState,\n  on(RecipeActions.recipeLoaded, (state, action) => {\n    return {\n      ...state,\n      recipe: action.recipe,\n    };\n  })\n  // on(RecipeActions.updateRecipe, (state, action) => {\n  //   return {\n  //     ...state,\n  //     recipe: action.recipe,\n  //   };\n  // })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/RecipeType.html": {
      url: "interfaces/RecipeType.html",
      title: "interface - RecipeType",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecipeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RecipeType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/RecipesComponent.html": {
      url: "components/RecipesComponent.html",
      title: "component - RecipesComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  RecipesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-recipes\n            \n\n            \n                styleUrls\n                ./recipes.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./recipes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                id\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                pictures\n                            \n                            \n                                recipeDialog\n                            \n                            \n                                recipes\n                            \n                            \n                                recipesType\n                            \n                            \n                                ref\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateNewRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                removeRecipe\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, confirmationService: ConfirmationService, loading: LoadingService, dialogService: DialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateNewRecipe\n                        \n                    \n                \n            \n            \n                \nCreateNewRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:103\n                \n            \n\n\n            \n                \n                    Create new recipe button : DYNAMIC DIALOG\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \nremoveRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:137\n                \n            \n\n\n            \n                \n                    Suppresssion d'une recette\nLe message d'alerte de suppression\nLe message de confirmation de suppression\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \nupdateRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from 'src/app/shared/models/picture.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { RecipeDialogComponent } from '../recipe-dialog/recipe-dialog.component';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n})\nexport class RecipesComponent implements OnInit {\n  ref: DynamicDialogRef;\n\n  recipes: Recipe[] = [];\n  recipesType: Recipe[] = [];\n  ingredients: Ingredient[] = [];\n  ingredientType: IngreType[] = [];\n  pictures: Picture[] = [];\n\n  sortOrder: number;\n  sortField: string;\n  recipeDialog: boolean;\n  id: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    public dialogService: DialogService,\n    public messageService: MessageService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit() {\n    this.loading.loadingOn();\n\n    this.recipeService\n      .getRecipes()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((recipes) => {\n        this.recipes = recipes;\n      });\n  }\n\n  onSortChange(event) {\n    // https://www.tektutorialshub.com/angular/property-value-does-not-exist-on-type-eventtarget-error-in-angular/\n    let value = (event.target as HTMLTextAreaElement).value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  /**\n   * Create new recipe button : DYNAMIC DIALOG\n   */\n  CreateNewRecipe(): void {\n    const ref = this.dialogService.open(RecipeDialogComponent, {\n      header: 'Ajouter une nouvelle recette',\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        recipe: [],\n        recipeType: [],\n        ingredientsTypes: [],\n        ingredients: [],\n        pictures: [],\n      },\n    });\n    ref.onClose.subscribe((recipe: Recipe) => {\n      if (recipe) {\n        this.recipes = [...this.recipes];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien crée.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id recipe\n   * Suppresssion d'une recette\n   * Le message d'alerte de suppression\n   * Le message de confirmation de suppression\n   */\n  removeRecipe(recipe: Recipe): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer la recette \"${recipe.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: () => {\n        this.recipeService.removeRecipe(recipe.id).subscribe({\n          next: () => {\n            this.recipes = [...this.recipes];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Cette recette sera supprimé définitivement bientôt.',\n              life: 5000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création de type',\n              detail: error.error,\n            });\n            console.log('erreur le moment de création type --->', error);\n          },\n        });\n      },\n    });\n  }\n\n  updateRecipe(recipe: Recipe): void {\n    this.ref = this.dialogService.open(RecipeDialogComponent, {\n      header: `${recipe.name}`,\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        recipeType: this.recipesType,\n        ingredientsTypes: this.ingredientType,\n        ingredients: this.ingredients,\n        pictures: this.pictures,\n        recipe,\n      },\n    });\n    this.ref.onClose.subscribe((_recipe: Recipe) => {\n      if (_recipe) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien modifié.',\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n            \n            \n              \n                \n                \n                \n              \n              {{ recipe.name }}\n              € {{ recipe.base_price }}\n              \n                \n                {{ recipe.recipe_type.code }}\n              \n              \n                \n                   {{ value.name + \", \" }} \n                   {{ value.name }} \n                \n              \n              \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recipes.component.scss\n                \n                :host ::ng-deep {\n  .p-dropdown {\n    width: 14rem;\n    font-weight: normal;\n  }\n\n  .product-name {\n    font-size: 1rem;\n    font-weight: 700;\n    margin-bottom: 0.8rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis ellipsis !important;\n    max-width: 8rem;\n  }\n\n  .product-description {\n    margin: 0 0 1rem 0;\n    font-size: medium;\n  }\n\n  .product-category-icon {\n    vertical-align: middle;\n  }\n\n  .product-category {\n    font-weight: 400;\n    font-size: small;\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .product-grid-item {\n    margin: 0.5em;\n    border: 1px solid #dee2e6;\n    max-width: 280px !important;\n    max-height: 250px !important;\n\n    .product-grid-item-top,\n    .product-grid-item-bottom {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .product-grid-item-footer {\n      justify-content: end;\n    }\n\n    img {\n      width: 100px;\n      height: 150px;\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n      margin: 1rem 0;\n    }\n\n    .product-grid-item-content {\n      text-align: center;\n    }\n\n    .product-price {\n      font-size: small;\n      font-weight: 300;\n    }\n  }\n}\n\n.inline-block {\n  font-size: 0.9rem;\n}\n\n.card {\n  box-shadow: 0 2px 1px -1px rgba(198, 221, 229, 0.096),\n    0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\n@media screen and (max-width: 576px) {\n  :host ::ng-deep .product-list-item {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      width: 75%;\n      margin: 1rem 0;\n    }\n\n    .product-list-detail {\n      text-align: left;\n    }\n\n    .product-price {\n      align-self: left;\n    }\n\n    .product-list-action {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .product-list-action {\n      margin-top: 2rem;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n    }\n  }\n}\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                              {{ recipe.name }}              € {{ recipe.base_price }}                                              {{ recipe.recipe_type.code }}                                                               {{ value.name + \", \" }}                    {{ value.name }}                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Saturday.html": {
      url: "interfaces/Saturday.html",
      title: "interface - Saturday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Saturday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Schedule.html": {
      url: "interfaces/Schedule.html",
      title: "interface - Schedule",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            friday\n                                        \n                                \n                                \n                                        \n                                            monday\n                                        \n                                \n                                \n                                        \n                                            saturday\n                                        \n                                \n                                \n                                        \n                                            sunday\n                                        \n                                \n                                \n                                        \n                                            thursday\n                                        \n                                \n                                \n                                        \n                                            tuesday\n                                        \n                                \n                                \n                                        \n                                            wednesday\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        friday:         Friday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Friday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monday:         Monday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Monday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saturday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saturday:         Saturday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Saturday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sunday:         Sunday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sunday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thursday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thursday:         Thursday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thursday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuesday:         Tuesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tuesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wednesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wednesday:         Wednesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wednesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/SidebarComponent.html": {
      url: "components/SidebarComponent.html",
      title: "component - SidebarComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                hideHomeBtn\n                            \n                            \n                                    Optional\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideHomeBtn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { EndPoints } from 'src/app/shared/constants/constants';\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport { selectUserDetails } from 'src/app/shared/store/state/user/user.selector';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  display!: boolean;\n  hideHomeBtn = false;\n  user$?: Observable;\n\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.sidebarService.display$.subscribe((res) => (this.display = res));\n\n    if (this.user$ != new Observable()) {\n      this.user$ = this.store.pipe(select(selectUserDetails));\n    }\n  }\n\n  onClose(): void {\n    this.sidebarService.open(false);\n  }\n\n  logOut(): void {\n    window.location.href = EndPoints.LOGOUT;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                @import \"src/styles.scss\";\n\n:host ::ng-deep button {\n  margin-right: 0.25em;\n}\n.p-button {\n  line-height: 2;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/SidebarService.html": {
      url: "injectables/SidebarService.html",
      title: "injectable - SidebarService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/sidebar/sidebar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display$\n                            \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfile\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(details: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(display: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../user/auth/auth.service';\n\nconst PAYLOAD = 'payload';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarService {\n  private subject = new BehaviorSubject(false);\n\n  display$: Observable = this.subject.asObservable();\n\n  readonly url: any;\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    //this.url = this.authService.getCurrentUser;\n    this.url = this.authService.getUser;\n  }\n\n  public open(display: boolean): void {\n    this.subject.next(display);\n  }\n\n  public getProfile(details: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/${details}`)\n      .pipe(map((res: any) => res[PAYLOAD]));\n  }\n\n  getUsers() {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n  //   public getUserByRoleID(criteres: SearchUserRole): Observable {\n  //     return this.http\n  //       .post(`${this.url.userRole}`, criteres)\n  //       .pipe(Object.values(PAYLOAD).map(res) => res()));\n  //   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/StringService.html": {
      url: "injectables/StringService.html",
      title: "injectable - StringService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StringService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/string/string.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRandomString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/string/string.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomString\n                        \n                    \n                \n            \n            \n                \ngetRandomString(length: number, randomString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/string/string.service.ts:14\n                \n            \n\n\n            \n                \n                    Return a pseudo random string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    randomString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StringService {\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Return a pseudo random string\n   */\n  getRandomString(length: number, randomString = ''): string {\n    randomString += Math.random().toString(20).substring(2, length);\n\n    if (randomString.length > length) {\n      return randomString.slice(0, length);\n    }\n    return this.getRandomString(length, randomString);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Sunday.html": {
      url: "interfaces/Sunday.html",
      title: "interface - Sunday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sunday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/TabsComponent.html": {
      url: "components/TabsComponent.html",
      title: "component - TabsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.component.scss\n                \n                .d.p-tabview-nav-content .p-tabview .p-tabview .p-tabview-nav .p-tabview-nav-container .p-tabview-nav-content {\n  background: rgb(227, 227, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Thursday.html": {
      url: "interfaces/Thursday.html",
      title: "interface - Thursday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thursday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/TitleComponent.html": {
      url: "components/TitleComponent.html",
      title: "component - TitleComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/title/title.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-title\n            \n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/title/title.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title: string;\n  @Input() description: string;\n\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  {{ description }}\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                ._title {\n  // background: rgba(213, 234, 254, 0.676);\n  background: linear-gradient(135deg, #dbe6fdd7 50%, #ffffffc7 90%) no-repeat center center fixed;\n  border-radius: 4px !important;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',\n      sans-serif;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  {{ description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/TopbarComponent.html": {
      url: "components/TopbarComponent.html",
      title: "component - TopbarComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/topbar/topbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titre1\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSidebar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        titre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss'],\n})\nexport class TopbarComponent implements OnInit {\n  user$: Observable;\n  user?: User;\n  titre1!: string;\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loadAppUser();\n    this.user$ = this.store.pipe(select(selectUserDetails));\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe(\n      (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n        } else {\n          this.user = user;\n        }\n      },\n      (err) =>\n        console.log('TOPBAR COMPONENT > STORE > loadAppUser > error: ', err)\n    );\n  }\n\n  public openSidebar(): void {\n    this.sidebarService.open(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Tuesday.html": {
      url: "interfaces/Tuesday.html",
      title: "interface - Tuesday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tuesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/User.html": {
      url: "interfaces/User.html",
      title: "interface - User",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorisations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorisations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorisations:         Autorisation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Autorisation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/UserEffects.html": {
      url: "injectables/UserEffects.html",
      title: "injectable - UserEffects",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/ingredient/ingredient.effets.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadIngredients$\n                            \n                            \n                                updateIngredient$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, ingredientService: IngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/ingredient/ingredient.effets.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIngredients$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(IngredientActions.load),\n      concatMap(() => this.ingredientService.getIngredients()),\n      map((ingredient) => IngredientActions.loaded({ ingredient }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/ingredient/ingredient.effets.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(IngredientActions.update),\n      concatMap((action) =>\n        this.ingredientService.updateIngredient(action.ingredient)\n      ),\n      map((ingredient) => IngredientActions.updated({ ingredient }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/ingredient/ingredient.effets.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { concatMap, map } from 'rxjs';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\nimport { IngredientActions } from '.';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private ingredientService: IngredientService\n  ) {}\n\n  loadIngredients$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(IngredientActions.load),\n      concatMap(() => this.ingredientService.getIngredients()),\n      map((ingredient) => IngredientActions.loaded({ ingredient }))\n    )\n  );\n\n  updateIngredient$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(IngredientActions.update),\n      concatMap((action) =>\n        this.ingredientService.updateIngredient(action.ingredient)\n      ),\n      map((ingredient) => IngredientActions.updated({ ingredient }))\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/UserEffects-1.html": {
      url: "injectables/UserEffects-1.html",
      title: "injectable - UserEffects-1",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/recipe/recipe.effets.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRecipes$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, recipeService: RecipeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/recipe/recipe.effets.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRecipes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecipeActions.loadRecipe),\n      concatMap(() => this.recipeService.getRecipes()),\n      map((recipe) => RecipeActions.recipeLoaded({ recipe }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/recipe/recipe.effets.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { concatMap, map } from 'rxjs';\nimport { RecipeActions } from 'src/app/shared/store/state/recipe/index';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private recipeService: RecipeService\n  ) {}\n\n  loadRecipes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(RecipeActions.loadRecipe),\n      concatMap(() => this.recipeService.getRecipes()),\n      map((recipe) => RecipeActions.recipeLoaded({ recipe }))\n    )\n  );\n\n  // updateRecipe$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(RecipeActions.updateRecipe),\n  //     concatMap((action) => this.recipeService.updateRecipe(action.recipe)),\n  //     map((recipe) => RecipeActions.recipeUpdated({ recipe }))\n  //   )\n  // );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/UserEffects-2.html": {
      url: "injectables/UserEffects-2.html",
      title: "injectable - UserEffects-2",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadUser$\n                            \n                            \n                                updateUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/user/user.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { concatMap, map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { UserActions } from 'src/app/shared/store/state/user/index';\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private profileService: ProfileService\n  ) {}\n\n  loadUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  );\n\n  updateUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  );\n\n  // userLoaded$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.userLoaded),\n  //       tap((action) =>\n  //         localStorage.setItem(\n  //           'userDetails',\n  //           JSON.stringify(action.userDetails)\n  //         )\n  //       )\n  //     ),\n  //   { dispatch: false }\n  // );\n\n  // logOutAction$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.logOutAction.logOutFlowInitiated.type),\n  //       tap(() => this.authService.logOut())\n  //     ),\n  //   { dispatch: false }\n  // );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/UserService.html": {
      url: "injectables/UserService.html",
      title: "injectable - UserService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewUser\n                            \n                            \n                                getNewUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUser\n                        \n                    \n                \n            \n            \n                \ngetNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUserRole\n                        \n                    \n                \n            \n            \n                \ngetNewUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, map } from 'rxjs';\nimport { Roles } from 'src/app/shared/constants/constants';\nimport { User } from 'src/app/shared/models/user.model';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getNewUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  getNewUserRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n    return _user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/UserState.html": {
      url: "interfaces/UserState.html",
      title: "interface - UserState",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            userDetails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userDetails:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { User } from 'src/app/shared/models/user.model';\nimport * as UserActions from './user.actions';\n\n/**\n * @Reducer handle transitions from one state to the next state\n * by determining which actions to handle based on the action's type.\n */\n\n/**\n * Defining the interface for the user state object and its initial state\n */\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  userDetails?: User;\n}\n\nexport const initialState: UserState = {\n  userDetails: undefined,\n};\n\nexport const userReducer = createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      userDetails: action.userDetails,\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/UsersComponent.html": {
      url: "components/UsersComponent.html",
      title: "component - UsersComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/users/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idFranchisee\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                submitted\n                            \n                            \n                                user\n                            \n                            \n                                userDialog\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createId\n                            \n                            \n                                delete\n                            \n                            \n                                editUser\n                            \n                            \n                                findIndexById\n                            \n                            \n                                hideDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNew\n                            \n                            \n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, messageService: MessageService, confirmationService: ConfirmationService, loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/users/users/users.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findIndexById\n                        \n                    \n                \n            \n            \n                \nfindIndexById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNew\n                        \n                    \n                \n            \n            \n                \nopenNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUser\n                        \n                    \n                \n            \n            \n                \nsaveUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        idFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\nimport { User } from 'src/app/shared/models/user.model';\n\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  userDialog: boolean;\n\n  users: User[] = [];\n  user: User;\n  selectedUsers: User[];\n\n  idFranchisee: number;\n  submitted: boolean;\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loading.loadingOn();\n\n    this.usersService\n      .getAllFranchisees()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.users = res;\n        console.log('---> users --->', this.users);\n      });\n  }\n\n  // private initFranchiseeAndRole(idFranchisee: number): void{\n  //   forkJoin([\n  //     this.usersService\n  //       .getAllFranchisees(),\n  //     this.usersService.getFranchiseeRole(this.idFranchisee)\n  //   ]).subscribe((res) => {\n  //     this.users = res[0];\n  //     this.users.forEach(e=>e.roles) = res[1];\n  //     console.log('---> users --->', this.users);\n  //   });\n  // }\n\n  openNew(): void {\n    this.user = {};\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  editUser(user: User): void {\n    this.user = { ...user };\n    this.userDialog = true;\n  }\n\n  delete(user: User): void {\n    this.confirmationService.confirm({\n      message:\n        'Etes-vous sûre de vouloir supprimer' +\n        ' \"' +\n        user.firstname +\n        ' ' +\n        user.lastname +\n        '\" ' +\n        '?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      accept: (): void => {\n        this.usersService.removeFranchisee(user.id).subscribe({\n          next: () => {\n            const index = this.users.indexOf(user);\n            this.users.splice(index, 1);\n            this.user = {};\n            this.users = [...this.users];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Franchisé est supprimé',\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression',\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  hideDialog() {\n    this.userDialog = false;\n    this.submitted = false;\n  }\n\n  saveUser() {\n    this.submitted = true;\n\n    if (this.user.email.trim()) {\n      if (this.user.id) {\n        this.usersService.updateFranchisee(this.user);\n        this.users[this.findIndexById(this.user.id)] = this.user;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: \"Mise à jour d'utilisateur.\",\n          life: 3000,\n        });\n      } else {\n        this.user.id = this.createId();\n        this.users.push(this.user);\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Création de nouvel utilisateur.',\n          life: 3000,\n        });\n      }\n\n      this.users = [...this.users];\n      this.userDialog = false;\n      this.user = {};\n    }\n  }\n\n  findIndexById(id: number): number {\n    let index = -1;\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n    \n  \n\n  \n    \n      \n        Gestion d'utilisateurs\n        \n          \n          \n        \n      \n    \n    \n      \n        \n          Prénom \n        \n        \n          Nom \n        \n        \n          Email \n        \n        \n          Téléphone \n        \n        \n      \n    \n    \n      \n        {{ user.firstname }}\n        {{ user.lastname }}\n        {{ user.email }}\n        {{ user.phone }}\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.\n      \n    \n  \n\n\n\n\n  \n    \n      Prénom\n      \n      Firstname is required.\n    \n    \n      Nom\n      \n      Lastname is required.\n    \n    \n      Email\n      \n      Email is required.\n    \n    \n      Téléphone\n      \n      Phone is required.\n    \n  \n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                :host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n            border: 0 none;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      Gestion d\\'utilisateurs                                                                          Prénom                           Nom                           Email                           Téléphone                                             {{ user.firstname }}        {{ user.lastname }}        {{ user.email }}        {{ user.phone }}                                                                En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.                        Prénom            Firstname is required.              Nom            Lastname is required.              Email            Email is required.              Téléphone            Phone is required.                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/UsersModule.html": {
      url: "modules/UsersModule.html",
      title: "module - UsersModule",
      body: "\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nUsersComponent\n\nUsersComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// PrimeNG\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\n// Component\nimport { UsersComponent } from './users/users.component';\n// Service\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: UsersComponent }];\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n  ],\n  providers: [\n    UsersService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/UsersService.html": {
      url: "injectables/UsersService.html",
      title: "injectable - UsersService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userEmails\n                            \n                            \n                                userFirstnames\n                            \n                            \n                                userLastnames\n                            \n                            \n                                userPhones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateEmail\n                            \n                            \n                                generateFirstname\n                            \n                            \n                                generateId\n                            \n                            \n                                generateLastname\n                            \n                            \n                                generatePhone\n                            \n                            \n                                generatePrduct\n                            \n                            \n                                    Public\n                                getAddresses\n                            \n                            \n                                    Public\n                                getAllFranchisees\n                            \n                            \n                                    Public\n                                getFranchisee\n                            \n                            \n                                    Public\n                                getFranchiseeRole\n                            \n                            \n                                getUsersSmall\n                            \n                            \n                                getUsersWithOrdersSmall\n                            \n                            \n                                    Public\n                                newFranchisee\n                            \n                            \n                                    Public\n                                removeFranchisee\n                            \n                            \n                                    Public\n                                updateFranchisee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateEmail\n                        \n                    \n                \n            \n            \n                \ngenerateEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFirstname\n                        \n                    \n                \n            \n            \n                \ngenerateFirstname()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateLastname\n                        \n                    \n                \n            \n            \n                \ngenerateLastname()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePhone\n                        \n                    \n                \n            \n            \n                \ngeneratePhone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePrduct\n                        \n                    \n                \n            \n            \n                \ngeneratePrduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddresses(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users addresses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllFranchisees\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFranchisees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users (franch)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchisee(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchiseeRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchiseeRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersSmall\n                        \n                    \n                \n            \n            \n                \ngetUsersSmall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersWithOrdersSmall\n                        \n                    \n                \n            \n            \n                \ngetUsersWithOrdersSmall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    newFranchisee(item: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:90\n                \n            \n\n\n            \n                \n                    Create new franchisee user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFranchisee(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFranchisee(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update franchisee\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userEmails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Product@Description.fr',\n    'Product@Description.com',\n    'Product@Description.org',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/users/users.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFirstnames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Sara', 'Zara', 'bahar']\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/users/users.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLastnames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['Dubois', 'Dubeau', 'Sdqi']\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/users/users.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['12345678', '11111111', '00000000']\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/users/users.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, tap, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/shared/models/user.model';\nimport { Address } from '../../models/address.model';\nimport { Message } from '../../constants/constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  userFirstnames: string[] = ['Sara', 'Zara', 'bahar'];\n  userLastnames: string[] = ['Dubois', 'Dubeau', 'Sdqi'];\n  userEmails: string[] = [\n    'Product@Description.fr',\n    'Product@Description.com',\n    'Product@Description.org',\n  ];\n  userPhones: string[] = ['12345678', '11111111', '00000000'];\n\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getUsersSmall() {\n    return this.http\n      .get('assets/users-small.json')\n      .toPromise()\n      .then((res) => res.data)\n      .then((data) => {\n        return data;\n      });\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}\n   * @returns one franchisee\n   */\n  public getFranchisee(id: number): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users/${id}`).pipe(\n      //tap((obj) => console.log('service -> create ingredient type : ', obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users\n   * @returns all users (franch)\n   */\n  public getAllFranchisees(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/users?role[]=contractor`).pipe(\n      tap((obj) => console.log('service -> get all franchisee : ', obj)),\n      map((res) => res['data'])\n    );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/roles\n   * @returns franchisee role\n   */\n  public getFranchiseeRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(\n        tap((obj) => console.log('service -> get franchisee role: ', obj)),\n        map((res) => res)\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/addresses\n   * @returns all users addresses\n   */\n  public getAddresses(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/addresses`)\n      .pipe(\n        //tap((obj) => console.log('service -> create ingredient type : ', obj)),\n        map((res) => res)\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users\n   * Create new franchisee user\n   * @param item userModel\n   * @returns new franchisee\n   */\n  public newFranchisee(item: User): Observable {\n    return this.http.post(`${environment.apiBaseUrl}/users`, item).pipe(\n      //tap((obj) => console.log('service -> create ingredient type : ', obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/users/{user_id}\n   * @param update franchisee info\n   * @returns update franchisee\n   */\n  public updateFranchisee(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${update.id}`, update)\n      .pipe(\n        //tap((obj) => console.log('service -> create ingredient type : ', obj)),\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/users/{user_id}\n   * @param id franchisee_id\n   * @returns Delete a franchisee\n   */\n  public removeFranchisee(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/users/${id}`).pipe(\n      //tap((obj) => console.log('service -> create ingredient type : ', obj)),\n      map((res) => (res ? res['message'] : ''))\n    );\n  }\n\n  getUsersWithOrdersSmall() {\n    return this.http\n      .get('assets/users-orders-small.json')\n      .toPromise()\n      .then((res) => res.data)\n      .then((data) => {\n        return data;\n      });\n  }\n  generatePrduct(): User {\n    const user: User = {\n      id: this.generateId(),\n      firstname: this.generateFirstname(),\n      lastname: this.generateLastname(),\n      email: this.generateEmail(),\n      phone: this.generatePhone(),\n    };\n    return user;\n  }\n  generateId() {\n    return Math.floor(Math.random() * Math.floor(299) + 1);\n  }\n  generateFirstname() {\n    return this.userFirstnames[Math.floor(Math.random() * Math.floor(30))];\n  }\n  generateLastname() {\n    return this.userLastnames[Math.floor(Math.random() * Math.floor(30))];\n  }\n  generateEmail() {\n    return this.userEmails[Math.floor(Math.random() * Math.floor(30))];\n  }\n  generatePhone() {\n    return this.userPhones[Math.floor(Math.random() * Math.floor(30))];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Wednesday.html": {
      url: "interfaces/Wednesday.html",
      title: "interface - Wednesday",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wednesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.interceptor.ts\n            \n            interceptor\n            GlobalHttpInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/callback/callback.component.ts\n            \n            component\n            CallbackComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layouts/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layouts/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee/franchisee.component.ts\n            \n            component\n            FranchiseeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/principal/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/principal-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/principal/principal.component.ts\n            \n            component\n            PrincipalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/profile/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n            \n            component\n            IngredientTypeComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient/ingredient.component.ts\n            \n            component\n            IngredientComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n            \n            component\n            RecipeDialogComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n            \n            component\n            RecipesComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/users/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/guards/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/guards/franchisee/franchisee.guard.ts\n            \n            guard\n            FranchiseeGuard\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n            guard\n            IsAuthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n            guard\n            IsUnauthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/api-token-interceptor.service.ts\n            \n            interceptor\n            ApiTokenInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/access-token.model.ts\n            \n            interface\n            AccessTokenModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/address.model.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee-recipe.model.ts\n            \n            interface\n            FranchiseeRecipe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee.model.ts\n            \n            interface\n            Franchisee\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient-type.model.ts\n            \n            interface\n            IngreType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient.model.ts\n            \n            interface\n            Ingredient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/picture.model.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe-type.model.ts\n            \n            interface\n            RecipeType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe.model.ts\n            \n            interface\n            Recipe\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Diner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Friday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Lunch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Monday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Saturday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Schedule\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Sunday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Thursday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Tuesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Wednesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            Autorisation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/franchisee/franchisee.service.ts\n            \n            injectable\n            FranchiseeService\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient-type/ingredient-type.service.ts\n            \n            injectable\n            IngredientTypeService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/recipe/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/sidebar/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/sidebar/sidebar.service.ts\n            \n            variable\n            PAYLOAD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                31 %\n                (6/19)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/string/string.service.ts\n            \n            injectable\n            StringService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.actions.ts\n            \n            variable\n            load\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.actions.ts\n            \n            variable\n            loaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.actions.ts\n            \n            variable\n            update\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.actions.ts\n            \n            variable\n            updated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.effets.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.reducer.ts\n            \n            interface\n            IngredientState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.reducer.ts\n            \n            variable\n            ingredientFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.reducer.ts\n            \n            variable\n            ingredientReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.selector.ts\n            \n            variable\n            selectIngredient\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/ingredient/ingredient.selector.ts\n            \n            variable\n            selectIngredientState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.actions.ts\n            \n            variable\n            loadRecipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.actions.ts\n            \n            variable\n            recipeLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.actions.ts\n            \n            variable\n            recipeUpdated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.actions.ts\n            \n            variable\n            updateRecipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.effets.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.reducer.ts\n            \n            interface\n            RecipeState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.reducer.ts\n            \n            variable\n            recipeFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.reducer.ts\n            \n            variable\n            recipeReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.selector.ts\n            \n            variable\n            selectRecipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/recipe/recipe.selector.ts\n            \n            variable\n            selectRecipeState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            loadUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            updateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userUpdated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            function\n            canAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            adminAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            franchiseeAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectIsLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectProfileUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.stage.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.1\n        \n            @angular/cdk : ^13.3.2\n        \n            @angular/common : ~13.3.1\n        \n            @angular/compiler : ~13.3.1\n        \n            @angular/core : ~13.3.1\n        \n            @angular/forms : ~13.3.1\n        \n            @angular/platform-browser : ~13.3.1\n        \n            @angular/platform-browser-dynamic : ~13.3.1\n        \n            @angular/router : ~13.3.1\n        \n            @ngrx/effects : ^13.0.2\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.0.2\n        \n            @ngrx/store : ^13.0.2\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            express : ^4.17.3\n        \n            ngx-cookie-service : ^13.1.2\n        \n            node-localstorage : ^2.2.1\n        \n            oauth-pkce : ^0.0.6\n        \n            path : ^0.12.7\n        \n            primeflex : ^3.1.3\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.3.2\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            version-check : ^1.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/enumerations.html": {
      url: "miscellaneous/enumerations.html",
      title: "miscellaneous-enumerations - enumerations",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodeHTTP   (src/.../constants.ts)\n                        \n                        \n                            EndPoints   (src/.../constants.ts)\n                        \n                        \n                            HttpVerbs   (src/.../constants.ts)\n                        \n                        \n                            Message   (src/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../constants.ts)\n                        \n                        \n                            StorageKeys   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/constants/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        CodeHTTP\n                    \n                \n                        \n                            \n                                 HTTP_200_OK\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 HTTP_401_UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 HTTP_403_FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 HTTP_404_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 HTTP_511_NETWORK_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 511\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EndPoints\n                    \n                \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : /login\n                            \n                        \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : /api/logout\n                            \n                        \n                        \n                            \n                                 SECURE_USER\n                            \n                        \n                        \n                            \n                                Value : SECURE_USER\n                            \n                        \n                        \n                            \n                                 CREATE_RECIPE\n                            \n                        \n                        \n                            \n                                Value : Créer une nouvelle recette\n                            \n                        \n                        \n                            \n                                 EDIT_RECIPE\n                            \n                        \n                        \n                            \n                                Value : Modifier la recette\n                            \n                        \n                        \n                            \n                                 CREATE_TYPE\n                            \n                        \n                        \n                            \n                                Value : Créer un nouveay type d\'ingrédient\n                            \n                        \n                        \n                            \n                                 EDIT_TYPE\n                            \n                        \n                        \n                            \n                                Value : Modifier le type d\'indrédient\n                            \n                        \n                        \n                            \n                                 GENERIC_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : Les modifications ont bien été prises en compte.\n                            \n                        \n                        \n                            \n                                 PAYLOAD\n                            \n                        \n                        \n                            \n                                Value : payload\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        HttpVerbs\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Message\n                    \n                \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : La recette est bien mise à jour.\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : L\'article est bien créé\n                            \n                        \n                        \n                            \n                                 UPDATE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : Les modifications ont bien été prises en compte.\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : goodfood\n                            \n                        \n                        \n                            \n                                 FRANCHISEE\n                            \n                        \n                        \n                            \n                                Value : contractor\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : AUTH_STATE\n                            \n                        \n                        \n                            \n                                 CODE_VERIFY\n                            \n                        \n                        \n                            \n                                Value : AUTH_CODE_VERIFIER\n                            \n                        \n                        \n                            \n                                 USER_TOKEN\n                            \n                        \n                        \n                            \n                                Value : AUTH_USER_TOKEN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/functions.html": {
      url: "miscellaneous/functions.html",
      title: "miscellaneous-functions - functions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canAccess   (src/.../user.selector.ts)\n                        \n                        \n                            logger   (src/.../store.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canAccess\n                        \n                    \n                \n            \n            \n                \ncanAccess(user: UserState, roles)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\nGoodFood - web\nAngular\nThis project was generated with Angular CLI version 13.2.6.\nDevelopment server\nRun ng serve (or ng serve --open or ng serve -o or npm start) for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component  to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nExit\nRun ctrl c to exit a dev server.\nVersions\n\nNodejs : 16.13.02\nAngular : 13.2.6\nPrimeNG : 13.3.2\n\nInstallation\nPrimeNG\nprimeicons\nnpm install primeng --save\nnpm install primeicons --savein angular.json > Styles we will add also\nnode_modules/primeicons/primeicons.css\nnode_modules/primeng/resources/themes/lara-light-indigo/theme.css\nnode_modules/primeng/resources/primeng.min.css\nThere is more than 33 themes and we can choose between them.\n\nGetting for first time\ngit clone GOODFOOD-2.0A\nnpm install\nDockerfile\n\nDockerfile reference\nDockerize example\n\nCreate image in Docker\ndocker build -t goodfood-web .Check :\ndocker imagesREPOSITORY TAG IMAGE ID CREATED SIZE\n\ngoodfood-web latest  28cb65260f81 11 hours ago  24.2MBAprès build on va créer le conteneur docker :\ndocker run -d -p 4200:4200 --name GoodFood-web goodfood-webSee container details :\ndocker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nf10f652d3da9 goodfood-web "nginx -g \'daemon of…" 16 minutes ago Up 16 minutes 0.0.0.0:8181->80/tcp GoodFood-webhttp://localhost:4200/\nCompodoc\nCompodoc is a documentation tool for Angular applications. It generates a static documentation of your application.\nInstallation\n\nGlobal installation\n\nnpm install -g @compodoc/compodoc\nLocal installation\n\nng add @compodoc/compodoc\nConfiguration\n\nnpx compodoc -p tsconfig.doc.json --theme materialRun script :\nnpm run compodoc\n./node_modules/.bin/compodoc -s -r 4201docker compose\ndocker compose up --build -dGITFLOW\nTutorial Git flow workflow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DefaultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FranchiseeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrincipalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipeManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_exports\n\n\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCallbackComponent\n\nCallbackComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCallbackComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "properties.html": {
      url: "properties.html",
      title: "package-properties - properties",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/typealiases.html": {
      url: "miscellaneous/typealiases.html",
      title: "miscellaneous-typealiases - typealiases",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            role   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    role\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminAccess   (src/.../user.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            franchiseeAccess   (src/.../user.selector.ts)\n                        \n                        \n                            ingredientFeatureKey   (src/.../ingredient.reducer.ts)\n                        \n                        \n                            ingredientReducer   (src/.../ingredient.reducer.ts)\n                        \n                        \n                            initialState   (src/.../ingredient.reducer.ts)\n                        \n                        \n                            initialState   (src/.../recipe.reducer.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            load   (src/.../ingredient.actions.ts)\n                        \n                        \n                            loaded   (src/.../ingredient.actions.ts)\n                        \n                        \n                            loadRecipe   (src/.../recipe.actions.ts)\n                        \n                        \n                            loadUser   (src/.../user.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../store.reducer.ts)\n                        \n                        \n                            PAYLOAD   (src/.../sidebar.service.ts)\n                        \n                        \n                            recipeFeatureKey   (src/.../recipe.reducer.ts)\n                        \n                        \n                            recipeLoaded   (src/.../recipe.actions.ts)\n                        \n                        \n                            recipeReducer   (src/.../recipe.reducer.ts)\n                        \n                        \n                            recipeUpdated   (src/.../recipe.actions.ts)\n                        \n                        \n                            reducers   (src/.../store.reducer.ts)\n                        \n                        \n                            routing   (src/.../app-routing.module.ts)\n                        \n                        \n                            routing   (src/.../principal-routing.module.ts)\n                        \n                        \n                            selectIngredient   (src/.../ingredient.selector.ts)\n                        \n                        \n                            selectIngredientState   (src/.../ingredient.selector.ts)\n                        \n                        \n                            selectIsLoggedIn   (src/.../user.selector.ts)\n                        \n                        \n                            selectProfileUser   (src/.../user.selector.ts)\n                        \n                        \n                            selectRecipe   (src/.../recipe.selector.ts)\n                        \n                        \n                            selectRecipeState   (src/.../recipe.selector.ts)\n                        \n                        \n                            selectUserDetails   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserState   (src/.../user.selector.ts)\n                        \n                        \n                            update   (src/.../ingredient.actions.ts)\n                        \n                        \n                            updated   (src/.../ingredient.actions.ts)\n                        \n                        \n                            updateRecipe   (src/.../recipe.actions.ts)\n                        \n                        \n                            updateUser   (src/.../user.actions.ts)\n                        \n                        \n                            userFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            userLoaded   (src/.../user.actions.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            userUpdated   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.ADMIN, Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserDetails,\n  (userDetails) => !!userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProfileUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserDetails, (user) => {\n  return { user };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserState,\n  (user) => user.userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('user')\n                    \n                \n\n            \n                \n                    Feature selector\nand\na selector that returns the userDetails\naccess these properties :\n\nisLoggedIn,\ncanAccess,\nadminAccess | franchiseeAccess\n\n\n                \n            \n\n        \n    \n\n    src/environments/environment.example.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    appUrl: 'http://localhost:4200',\n    apiBaseUrl: 'http://localhost/8085/api',\n    oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n    oAuthClientId: '',\n    oAuthCallbackUri: 'http://localhost:4200/login/redirect'\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'http://localhost/4000',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96560464-28d1-401b-9c39-0fe271d28c2d',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost/4100'\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96b05134-a952-4e00-b94a-c47406527d49',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/app/shared/store/state/ingredient/ingredient.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ingredientFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ingredient'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(IngredientActions.loaded, (state, action) => {\n    return {\n      ...state,\n      ingredient: action.ingredient,\n    };\n  }),\n  on(IngredientActions.update, (state, action) => {\n    return {\n      ...state,\n      ingredient: action.ingredient,\n    };\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngredientState\n\n                    \n                \n                \n                    \n                        Default value : {\n  ingredient: undefined,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/recipe/recipe.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeState\n\n                    \n                \n                \n                    \n                        Default value : {\n  recipe: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'recipe'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(RecipeActions.recipeLoaded, (state, action) => {\n    return {\n      ...state,\n      recipe: action.recipe,\n    };\n  })\n  // on(RecipeActions.updateRecipe, (state, action) => {\n  //   return {\n  //     ...state,\n  //     recipe: action.recipe,\n  //   };\n  // })\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/user/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  userDetails: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      userDetails: action.userDetails,\n    };\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/ingredient/ingredient.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Ingredient] Load Ingredient')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Ingredient Effect] Ingredient Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Update Ingredient Effect] Update Ingredient',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Effect Ingredient Loaded] Ingredient Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/recipe/recipe.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadRecipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Recipe] Load Recipe')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Recipe Effect] Recipe Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Effect Recipe Loaded] Recipe Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Update Recipe Effect] Update Recipe',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/user/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Auth] Load User')\n                    \n                \n\n            \n                \n                    User-related Actions that we need for our user Store. Logout,\nand user changed Action to keep the user details in our Store in sync with Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] Update User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Auth Effect] User Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] User Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: routerReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/services/sidebar/sidebar.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PAYLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'payload'\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forRoot(ROUTES, { useHash: false })\n                    \n                \n\n\n        \n    \n\n    src/app/principal/principal-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild(ROUTES)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/ingredient/ingredient.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectIngredient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectIngredientState,\n  (rec) => rec.ingredient\n)\n                    \n                \n\n            \n                \n                    Calling this method by ingredientComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIngredientState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('ingredient')\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/recipe/recipe.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectRecipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectRecipeState,\n  (rec) => rec.recipe\n)\n                    \n                \n\n            \n                \n                    Calling this method by recipeComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRecipeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('recipe')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};

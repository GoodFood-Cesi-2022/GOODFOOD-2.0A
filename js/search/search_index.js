var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenModel.html",[0,0.553,1,3.01]],["body/interfaces/AccessTokenModel.html",[0,0.801,1,5.224,2,1.806,3,0.189,4,0.17,5,0.151,6,5.225,7,5.225,8,0.31,9,1.182,10,7.95,11,0.793,12,7.95,13,7.95,14,6.95,15,7.95,16,1.869,17,0.662,18,0.012,19,2.494,20,0.189,21,0.01,22,0.01]],["title/interfaces/Address.html",[0,0.553,23,2.364]],["body/interfaces/Address.html",[0,0.774,2,1.746,3,0.183,4,0.165,5,0.146,8,0.299,9,1.159,11,0.946,16,1.903,17,0.667,18,0.012,19,2.284,20,0.183,21,0.01,22,0.01,23,4.019,24,5.051,25,6.22,26,5.733,27,6.22,28,2.534,29,6.22,30,6.22]],["title/injectables/AddressService.html",[31,0.829,32,3.01]],["body/injectables/AddressService.html",[3,0.132,4,0.119,5,0.105,8,0.216,11,0.805,17,0.592,18,0.012,19,1.954,20,0.132,21,0.008,22,0.008,23,4.671,28,1.832,31,1.141,32,4.144,33,1.645,34,3.641,35,0.97,36,3.109,37,5.682,38,5.682,39,5.682,40,5.682,41,0.735,42,2.076,43,3.461,44,1.2,45,4.166,46,1.605,47,0.939,48,2.715,49,5.682,50,4.528,51,4.166,52,2.465,53,2.967,54,1.956,55,1.248,56,2.64,57,5.496,58,5.682,59,4.166,60,5.117,61,6.466,62,6.466,63,6.466,64,3.704,65,5.682,66,2.588,67,4.166,68,1.773,69,5.682,70,5.682,71,4.166,72,2.853,73,4.967,74,0.718,75,0.48,76,1.534,77,1.911,78,1.343,79,4.166,80,1.838,81,1.99,82,3.296,83,1.838,84,2.514,85,1.534,86,1.434,87,0.499,88,1.99,89,0.949,90,3.978,91,4.166,92,2.099,93,3.617,94,4.166,95,4.437,96,2.648,97,2.514,98,4.166,99,3.222,100,4.166,101,2.661,102,5.682,103,4.166,104,3.43,105,3.038,106,4.166,107,2.661]],["title/interceptors/ApiTokenInterceptorService.html",[108,3.265,109,2.364]],["body/interceptors/ApiTokenInterceptorService.html",[3,0.157,4,0.141,5,0.126,8,0.257,11,0.781,17,0.575,18,0.012,20,0.157,21,0.009,22,0.009,31,1.282,35,1.09,41,0.877,44,1.165,46,1.558,47,0.911,55,1.019,56,2.35,74,0.721,75,0.572,76,1.83,78,1.601,80,2.192,81,2.374,85,1.83,86,1.71,87,0.595,88,2.374,92,2.133,109,3.657,110,4.343,111,4.758,112,4.903,113,4.343,114,6.168,115,6.51,116,6.168,117,3.624,118,3.929,119,4.968,120,4.968,121,7.01,122,3.832,123,7.01,124,4.968,125,6.892,126,4.657,127,4.968,128,4.968,129,4.343,130,5.582,131,4.968,132,3.624,133,1.409,134,6.385,135,5.582,136,4.968,137,4.968,138,4.343,139,4.968,140,1.655,141,4.343,142,4.968,143,4.968,144,4.968,145,4.343,146,4.968,147,4.968]],["title/components/AppComponent.html",[148,0.475,149,1.288]],["body/components/AppComponent.html",[3,0.139,4,0.125,5,0.111,8,0.227,9,0.972,11,0.486,16,0.969,17,0.479,18,0.012,20,0.139,21,0.008,22,0.008,35,1.005,41,0.774,44,1.096,46,0.969,47,0.857,55,0.701,68,1.369,74,0.621,75,0.505,86,2.026,87,0.525,88,2.097,133,1.669,148,0.765,149,2.215,150,1.897,151,1.462,152,1.415,153,1.462,154,1.462,155,3.836,156,2.212,157,1.462,158,2.76,159,2.673,160,1.96,161,6.64,162,1.96,163,5.885,164,4.516,165,2.363,166,4.388,167,7.618,168,4.457,169,5.885,170,4.388,171,1.098,172,1.562,173,1.616,174,4.002,175,5.145,176,1.797,177,2.014,178,1.169,179,4.388,180,1.797,181,3.836,182,2.803,183,3.836,184,4.388,185,4.388,186,4.388,187,2.803,188,2.984,189,2.984,190,2.984,191,2.984,192,2.514,193,1.462,194,1.96,195,1.96,196,1.462,197,2.363,198,1.462,199,1.462,200,1.285,201,1.462,202,1.245,203,1.462,204,1.285,205,1.462,206,1.285,207,1.462,208,1.285,209,1.064,210,1.96,211,1.285,212,1.462,213,1.285,214,1.462,215,1.285,216,1.098,217,1.462,218,1.285,219,1.462,220,1.285,221,1.462,222,1.285,223,1.326,224,1.462,225,1.285,226,1.462,227,1.285,228,1.462,229,1.285,230,1.133,231,1.285,232,1.462,233,1.285,234,1.369,235,1.462,236,1.285,237,1.462,238,1.285,239,1.462,240,1.285,241,1.462,242,1.285,243,1.462,244,1.285,245,1.462,246,1.462]],["title/interfaces/AppState.html",[0,0.553,247,2.491]],["body/interfaces/AppState.html",[0,0.792,2,1.786,3,0.187,4,0.168,5,0.15,18,0.012,20,0.251,21,0.01,22,0.01,74,0.666,77,2.711,92,2.15,140,2.369,168,3.385,247,4.293,248,4.31,249,6.218,250,5.165,251,3.223,252,6.671,253,6.671,254,6.218,255,3.223,256,5.628,257,4.31,258,4.31,259,4.018,260,5.165,261,4.074,262,5.566,263,5.909,264,5.909,265,5.909,266,5.909,267,4.676]],["title/components/AuthComponent.html",[148,0.475,200,1.208]],["body/components/AuthComponent.html",[3,0.103,4,0.092,5,0.082,8,0.246,9,0.786,11,0.359,16,1.051,17,0.388,18,0.012,20,0.103,21,0.007,22,0.007,35,0.812,41,0.84,44,1.025,46,0.716,47,0.728,55,0.76,66,2.705,68,1.012,74,0.686,75,0.374,87,0.388,89,0.739,118,3.56,122,1.55,132,2.366,133,1.35,148,0.715,149,1.012,150,1.534,151,1.08,152,1.046,153,1.08,154,1.08,156,1.877,157,1.08,158,2.683,159,2.598,160,1.585,162,1.585,165,2.068,168,4.091,171,1.655,176,1.328,178,1.903,180,1.328,193,1.08,194,1.585,195,1.585,196,1.08,197,2.068,198,1.08,199,1.08,200,1.818,201,1.08,202,0.92,203,1.08,204,0.95,205,1.08,206,0.95,207,1.08,208,0.95,209,0.787,210,1.585,211,0.95,212,1.08,213,0.95,214,1.08,215,0.95,216,0.811,217,1.08,218,0.95,219,1.08,220,0.95,221,1.08,222,0.95,223,0.98,224,1.08,225,0.95,226,1.08,227,0.95,228,1.08,229,0.95,230,0.837,231,0.95,232,1.08,233,0.95,234,1.012,235,1.08,236,0.95,237,1.08,238,0.95,239,1.08,240,0.95,241,1.08,242,0.95,243,1.08,244,0.95,245,1.08,246,1.08,247,1.958,251,3.896,255,1.769,261,3.229,268,2.835,269,4.461,270,5.637,271,4.759,272,5.428,273,2.366,274,7.143,275,4.759,276,3.243,277,3.243,278,2.206,279,1.769,280,2.567,281,1.769,282,2.835,283,2.072,284,2.206,285,2.567,286,2.274,287,3.243,288,3.243,289,3.243,290,3.243,291,3.243,292,2.835,293,1.858,294,2.567,295,3.243,296,3.243,297,2.835,298,2.835,299,2.206,300,5.637,301,1.117,302,1.431,303,2.835,304,3.471,305,2.206,306,2.206,307,3.243,308,2.835,309,2.287,310,2.835,311,2.206,312,2.835,313,3.243,314,1.689,315,1.55,316,1.689,317,5.233,318,6.244,319,1.55,320,5.781,321,2.835,322,2.366,323,3.766,324,2.835,325,3.766,326,2.022,327,3.471,328,2.596,329,2.567,330,3.471,331,2.478,332,3.176,333,6.014,334,2.835,335,2.567,336,2.835,337,2.835,338,2.835,339,2.567,340,2.366,341,2.567,342,4.461,343,1.616,344,4.461,345,4.461,346,1.958,347,4.16,348,2.835,349,2.835,350,2.366,351,2.366,352,2.567,353,1.858,354,1.769,355,1.858,356,1.858,357,1.616,358,1.858,359,1.958,360,1.769,361,2.726,362,1.958,363,1.958,364,1.858,365,2.567,366,3.243,367,2.835,368,2.835]],["title/modules/AuthModule.html",[369,2.149,370,3.01]],["body/modules/AuthModule.html",[3,0.158,4,0.142,5,0.126,18,0.012,20,0.158,21,0.009,22,0.009,35,0.849,44,0.822,55,0.794,74,0.791,75,0.573,87,0.596,92,1.504,118,3.185,140,1.657,148,0.736,176,2.037,200,2.348,220,2.348,255,2.714,326,2.114,370,5.987,371,2.283,372,2.933,373,4.35,374,4.35,375,3.185,376,2.48,377,4.976,378,3.486,379,5.058,380,6.173,381,4.976,382,6.173,383,3.486,384,2.591,385,4.083,386,3.858,387,2.114,388,3.677,389,4.511,390,2.714,391,4.35,392,3.63,393,4.35,394,3.858,395,3.004,396,4.346,397,3.384,398,4.346,399,3.384,400,4.976,401,4.976,402,3.384,403,4.35,404,4.35,405,4.35,406,4.976,407,3.486,408,4.35,409,2.591,410,3.004,411,4.35,412,5.587,413,4.976,414,4.35,415,2.378]],["title/injectables/AuthService.html",[31,0.829,118,2.056]],["body/injectables/AuthService.html",[1,4.471,3,0.067,4,0.061,5,0.054,8,0.11,11,0.749,14,3.002,16,1.408,17,0.592,18,0.013,19,1.306,20,0.067,21,0.005,22,0.005,28,1.393,31,0.689,33,0.839,35,0.586,36,1.647,41,0.875,42,1.059,43,2.472,44,1.252,46,1.494,47,0.874,48,2.602,52,1.309,54,2.11,55,1.211,56,2.194,66,2.96,74,0.66,75,0.245,76,0.783,77,0.975,78,0.685,80,0.938,81,1.016,82,1.682,85,0.783,86,0.732,87,0.255,92,2.25,93,3.033,95,2.194,96,0.81,99,2.714,112,3.7,114,6.776,118,1.711,126,5.303,140,2.504,141,5.358,145,3.777,168,3.654,171,1.081,174,2.335,176,0.87,178,1.878,180,2.031,209,0.833,223,1.038,261,3.654,269,1.682,279,1.159,280,1.682,286,3.306,301,1.708,302,2.189,303,1.858,304,3.619,305,2.335,306,2.335,308,1.858,309,1.827,332,0.903,408,3.002,416,1.858,417,3.434,418,4.32,419,4.961,420,4.961,421,4.961,422,4.961,423,4.961,424,3.434,425,3.434,426,3.926,427,3.434,428,3.002,429,2.717,430,3.926,431,3.619,432,3.434,433,3.434,434,4.075,435,2.125,436,3.434,437,2.335,438,3.434,439,2.125,440,3.169,441,2.125,442,2.125,443,2.194,444,3.434,445,2.125,446,2.125,447,2.125,448,3.002,449,3.434,450,2.125,451,2.125,452,3.434,453,2.125,454,3.434,455,2.125,456,2.125,457,3.434,458,2.125,459,3.002,460,3.434,461,2.125,462,2.717,463,2.125,464,3.002,465,4.084,466,2.125,467,2.125,468,3.434,469,3.434,470,3.434,471,2.125,472,3.434,473,2.125,474,3.002,475,3.926,476,2.125,477,1.858,478,1.858,479,1.358,480,2.125,481,2.76,482,1.682,483,2.125,484,2.125,485,3.002,486,1.55,487,1.858,488,2.194,489,1.217,490,1.682,491,1.858,492,2.125,493,4.32,494,3.002,495,3.434,496,3.434,497,2.125,498,2.125,499,3.434,500,3.434,501,2.125,502,2.125,503,2.125,504,2.125,505,4.32,506,4.32,507,3.434,508,3.434,509,2.125,510,3.434,511,2.125,512,2.125,513,2.125,514,1.858,515,2.125,516,2.125,517,4.961,518,2.125,519,2.125,520,2.125,521,1.858,522,3.777,523,2.125,524,2.125,525,2.125,526,2.125,527,2.125,528,2.125,529,1.858,530,3.434,531,3.434,532,2.125,533,2.125,534,2.125,535,2.475,536,3.434,537,3.434,538,3.434,539,3.434,540,2.125,541,2.125,542,3.434,543,4.961,544,4.32,545,2.125,546,3.434,547,3.434,548,2.125,549,2.125,550,2.125,551,2.125,552,2.125,553,3.434,554,2.125,555,2.125,556,2.125,557,2.125,558,2.125,559,2.125,560,2.125,561,2.125,562,3.434,563,3.434,564,1.858,565,2.125,566,2.125,567,1.858,568,1.682,569,1.682,570,6.379,571,3.434,572,2.125,573,2.125,574,2.125,575,2.194,576,2.194,577,2.194,578,1.682,579,1.682,580,1.682,581,5.824,582,4.32,583,2.994,584,3.434,585,2.125,586,3.434,587,3.434,588,4.32,589,2.125,590,3.434,591,2.125,592,2.125,593,2.125,594,2.125,595,4.961,596,3.002,597,2.125,598,3.434,599,3.434,600,3.434,601,3.434,602,3.434,603,2.125,604,3.434,605,3.434,606,2.125,607,2.125,608,1.682,609,2.125,610,3.434,611,2.125,612,2.125,613,2.125]],["title/interfaces/Autorisation.html",[0,0.553,614,3.01]],["body/interfaces/Autorisation.html",[0,0.962,2,1.813,3,0.19,4,0.171,5,0.152,8,0.311,9,1.185,16,1.823,17,0.626,18,0.012,19,1.813,20,0.227,21,0.01,22,0.01,28,1.934,66,2.136,279,3.272,286,3.43,301,2.844,465,4.333,575,3.833,576,5.085,577,5.085,614,5.603,615,4.376,616,4.08,617,4.08,618,3.622,619,3.437]],["title/modules/ComponentsModule.html",[369,2.149,620,2.251]],["body/modules/ComponentsModule.html",[3,0.144,4,0.129,5,0.115,18,0.012,20,0.144,21,0.009,22,0.009,74,0.793,75,0.522,87,0.543,176,1.857,204,2.42,218,2.42,233,2.251,234,1.415,236,2.42,240,2.42,242,2.42,286,2.167,326,1.927,371,2.081,372,2.76,375,2.998,376,2.26,378,3.281,383,3.281,384,2.362,386,3.631,387,1.927,388,3.133,390,3.281,394,3.631,395,2.737,396,4.091,397,3.084,398,4.091,399,3.084,409,2.362,620,4.657,621,3.964,622,3.964,623,3.964,624,4.535,625,4.388,626,5.259,627,3.964,628,4.388,629,3.308,630,6.016,631,4.535,632,5.259,633,3.964,634,5.259,635,3.964,636,4.535,637,4.535,638,4.535,639,4.535,640,4.535,641,3.588,642,4.535]],["title/components/DefaultComponent.html",[148,0.475,202,1.17]],["body/components/DefaultComponent.html",[3,0.151,4,0.136,5,0.121,8,0.247,18,0.012,20,0.151,21,0.009,22,0.009,35,1.063,41,1.222,44,1.028,47,0.804,55,0.763,68,1.491,74,0.447,75,0.55,87,0.572,89,1.418,133,1.766,148,0.798,149,1.491,150,2.007,151,1.591,152,1.54,153,1.591,154,1.591,156,2.307,157,1.591,158,2.779,159,2.69,160,2.074,162,2.074,165,2.444,171,1.558,172,2.216,187,3.052,188,3.249,189,3.249,190,3.249,191,3.249,192,2.737,193,1.591,194,2.074,195,2.074,196,1.591,197,2.444,198,1.591,199,1.591,200,1.399,201,1.591,202,2.081,203,1.591,204,1.399,205,1.591,206,1.399,207,1.591,208,1.399,209,1.159,210,2.074,211,1.399,212,1.591,213,1.399,214,1.591,215,1.399,216,1.195,217,1.591,218,1.399,219,1.591,220,1.399,221,1.591,222,1.399,223,1.444,224,1.591,225,1.399,226,1.591,227,1.399,228,1.591,229,1.399,230,1.233,231,1.399,232,1.591,233,1.399,234,1.491,235,1.591,236,1.399,237,1.591,238,1.399,239,1.591,240,1.399,241,1.591,242,1.399,243,1.591,244,1.399,245,1.591,246,1.591,643,4.177,644,6.925,645,6.226,646,4.778,647,4.778]],["title/modules/DefaultModule.html",[369,2.149,648,2.806]],["body/modules/DefaultModule.html",[3,0.183,4,0.164,5,0.146,18,0.012,20,0.183,21,0.01,22,0.01,74,0.766,75,0.664,87,0.691,176,2.361,202,2.423,286,2.755,326,2.45,371,2.646,372,3.216,375,3.493,376,2.874,378,3.823,383,3.823,384,3.003,388,3.65,390,3.823,409,3.003,620,3.823,625,5.112,648,5.633,649,5.041,650,5.041,651,5.041,652,5.767,653,5.767,654,5.767,655,4.766,656,3.921]],["title/interfaces/Diner.html",[0,0.553,657,1.972]],["body/interfaces/Diner.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.815,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.964,658,2.631,659,3.91,660,3.91,661,2.085,662,3.331,663,3.331,664,3.331,665,3.331,666,3.331,667,3.331,668,3.331,669,2.749,670,3.918,671,4.051,672,2.631]],["title/interfaces/ErrorDataHttp.html",[0,0.553,673,3.01]],["body/interfaces/ErrorDataHttp.html",[0,0.726,2,1.637,3,0.172,4,0.154,5,0.137,8,0.281,9,1.113,16,1.697,17,0.549,18,0.012,20,0.214,21,0.01,22,0.01,31,1.354,36,2.571,41,0.956,54,1.865,56,2.246,74,0.687,75,0.624,76,1.995,78,1.746,85,1.995,86,1.865,87,0.649,89,1.234,99,3.361,140,1.804,171,1.687,178,1.443,257,3.951,259,3.683,309,2.484,583,3.269,608,4.286,673,5.606,674,4.286,675,3.269,676,4.286,677,7.146,678,5.115,679,3.683,680,3.103,681,4.735,682,4.735,683,4.735,684,4.735,685,5.895,686,4.286,687,4.735,688,4.735,689,4.735,690,4.735,691,4.735]],["title/injectables/ErrorHttpService.html",[31,0.829,680,2.364]],["body/injectables/ErrorHttpService.html",[0,0.65,3,0.154,4,0.138,5,0.123,8,0.251,9,1.038,11,0.537,16,1.629,17,0.512,18,0.012,20,0.199,21,0.009,22,0.009,31,1.263,33,1.916,35,1.073,36,2.987,41,1.231,44,1.263,46,1.071,47,0.627,52,1.85,54,2.165,55,1.004,56,2.324,74,0.653,75,0.559,76,1.787,78,1.564,85,1.787,86,1.67,87,0.581,89,1.105,99,3.134,140,1.616,171,1.847,172,2.239,173,2.316,178,1.858,257,4.587,259,4.276,309,2.718,583,3.796,608,4.976,673,5.089,674,6.2,675,4.729,676,3.84,677,6.849,678,4.974,679,3.299,680,3.602,681,6.099,682,5.497,683,6.099,684,5.497,685,6.452,686,4.976,687,5.497,688,6.099,689,4.242,690,6.452,691,4.242,692,6.288,693,4.852,694,4.852,695,4.852,696,4.852]],["title/components/FooterComponent.html",[148,0.475,204,1.208]],["body/components/FooterComponent.html",[3,0.146,4,0.131,5,0.117,8,0.238,18,0.012,20,0.146,21,0.009,22,0.009,35,1.037,41,1.2,44,1.003,47,0.784,55,0.735,68,1.436,74,0.431,75,0.53,87,0.551,89,1.384,133,1.723,148,0.783,149,1.436,150,1.958,151,1.533,152,1.483,153,1.533,154,1.533,156,2.265,157,1.533,158,2.771,159,2.683,160,2.023,162,2.023,165,2.409,171,1.52,193,1.533,194,2.023,195,2.023,196,1.533,197,2.409,198,1.533,199,1.533,200,1.347,201,1.533,202,1.305,203,1.533,204,2.117,205,1.533,206,1.347,207,1.533,208,1.347,209,1.116,210,2.023,211,1.347,212,1.533,213,1.347,214,1.533,215,1.347,216,1.151,217,1.533,218,1.347,219,1.533,220,1.347,221,1.533,222,1.347,223,1.391,224,1.533,225,1.347,226,1.533,227,1.347,228,1.533,229,1.347,230,1.188,231,1.347,232,1.533,233,1.347,234,1.436,235,1.533,236,1.347,237,1.533,238,1.347,239,1.533,240,1.347,241,1.533,242,1.347,243,1.533,244,1.347,245,1.533,246,1.533,328,2.51,332,2.581,351,3.357,354,3.313,356,3.479,697,4.023,698,5.944,699,6.8,700,6.074,701,4.602,702,4.602,703,6.074,704,6.074,705,6.074,706,6.074,707,6.074,708,4.602,709,3.129,710,2.778,711,4.023,712,3.641,713,2.636,714,3.129,715,4.023,716,2.51,717,4.602]],["title/interfaces/Franchisee.html",[0,0.553,209,1.001]],["body/interfaces/Franchisee.html",[0,0.704,2,1.587,3,0.166,4,0.15,5,0.133,8,0.272,9,1.092,11,0.955,16,1.83,17,0.68,18,0.012,19,2.579,20,0.166,21,0.009,22,0.009,23,4.705,28,2.45,47,0.982,57,6.015,66,2.706,74,0.619,209,1.604,618,4.588,619,4.354,718,4.592,719,6.645,720,6.015,721,6.645,722,6.645,723,5.252,724,5.252]],["title/components/FranchiseeComponent.html",[148,0.475,206,1.208]],["body/components/FranchiseeComponent.html",[3,0.063,4,0.056,5,0.05,8,0.103,9,0.535,11,0.581,16,0.716,17,0.603,18,0.013,19,1.704,20,0.063,21,0.005,22,0.005,23,3.557,28,1.534,35,0.554,36,1.57,41,0.572,44,1.264,46,1.159,47,0.768,53,0.909,55,0.9,64,2.726,68,0.618,72,1.817,74,0.634,75,0.228,83,0.874,87,0.237,89,0.451,96,0.755,122,0.947,133,0.92,140,0.66,148,0.474,149,0.618,150,1.045,151,0.66,152,1.327,153,0.66,154,0.66,156,1.371,157,0.66,158,2.512,159,2.432,160,1.08,162,1.08,165,1.585,171,1.833,172,1.154,173,2.076,177,0.909,178,1.267,182,2.072,193,0.66,194,1.08,195,1.08,196,0.66,197,1.585,198,0.66,199,0.66,200,0.58,201,0.66,202,0.562,203,0.66,204,0.58,205,0.66,206,1.393,207,0.66,208,0.949,209,1.925,210,1.08,211,0.58,212,0.66,213,0.58,214,0.66,215,0.58,216,0.496,217,0.66,218,0.58,219,0.66,220,0.58,221,0.66,222,0.58,223,0.599,224,0.66,225,0.58,226,0.66,227,0.58,228,0.66,229,0.58,230,0.511,231,0.58,232,0.66,233,0.58,234,0.618,235,0.66,236,0.58,237,0.66,238,0.58,239,0.66,240,0.58,241,0.66,242,0.58,243,0.66,244,0.58,245,0.66,246,0.66,301,2.213,309,1.753,314,2.935,315,2.693,316,2.935,319,3.303,332,3.229,343,2.809,351,1.445,352,1.568,353,1.858,355,1.135,357,2.371,358,3.007,359,2.872,360,3.387,361,3.229,362,2.485,363,2.485,415,1.55,440,2.072,443,2.072,489,1.135,583,1.196,619,1.858,661,2.452,716,3.245,725,1.732,726,6.042,727,3.071,728,4.117,729,3.833,730,2.8,731,3.833,732,3.88,733,3.599,734,3.258,735,2.485,736,3.599,737,3.243,738,4.117,739,4.117,740,2.63,741,5.428,742,3.258,743,3.471,744,4.117,745,3.599,746,3.599,747,4.758,748,2.835,749,2.835,750,1.981,751,3.402,752,3.592,753,2.485,754,2.595,755,3.243,756,1.981,757,3.243,758,1.981,759,1.981,760,2.835,761,1.981,762,2.835,763,1.981,764,3.243,765,1.981,766,1.981,767,1.981,768,1.981,769,1.981,770,1.981,771,1.981,772,1.981,773,1.981,774,3.003,775,1.981,776,1.981,777,1.981,778,1.981,779,1.981,780,1.981,781,1.732,782,1.266,783,1.266,784,1.732,785,1.732,786,1.981,787,1.568,788,1.347,789,1.445,790,1.445,791,1.981,792,1.981,793,1.981,794,3.243,795,1.981,796,0.987,797,1.769,798,1.981,799,1.981,800,3.243,801,1.981,802,1.732,803,1.981,804,1.981,805,1.135,806,1.196,807,1.266,808,1.347,809,1.732,810,1.568,811,1.347,812,1.347,813,1.347,814,5.249,815,1.732,816,1.732,817,2.835,818,4.16,819,4.16,820,2.835,821,2.835,822,1.732,823,3.243,824,2.63,825,1.732,826,1.981,827,1.981,828,5.618,829,2.566,830,2.835,831,2.566,832,2.835,833,2.205,834,2.8,835,2.835,836,3.599,837,2.63,838,1.732,839,1.732,840,2.366,841,1.981,842,2.726,843,2.726,844,2.8,845,2.726,846,2.8,847,2.726,848,3.007,849,2.63,850,2.366,851,1.732,852,1.732,853,4.758,854,1.732,855,1.732,856,1.981,857,1.981,858,1.568,859,1.732,860,1.347,861,1.732,862,1.266,863,1.732,864,1.347,865,1.445,866,1.347,867,2.205,868,1.347,869,1.347,870,1.347,871,2.205,872,1.981,873,1.732,874,1.445,875,1.266,876,1.445,877,1.858,878,1.958,879,3.074,880,1.981,881,2.835,882,1.196,883,1.347,884,1.445,885,1.958,886,2.566,887,2.366,888,3.243,889,3.243,890,3.243,891,3.243,892,3.243,893,3.243,894,3.243,895,3.243,896,3.243,897,3.243,898,2.566,899,3.243,900,2.835,901,4.758,902,3.243,903,3.243,904,1.981,905,3.243,906,3.243,907,2.566,908,2.366,909,2.566,910,2.366,911,2.366,912,3.243,913,3.243,914,3.243,915,1.568,916,1.445,917,1.445,918,1.347,919,3.243,920,3.243,921,1.568,922,1.958,923,1.347,924,1.981,925,1.732,926,2.566,927,1.732,928,1.981]],["title/components/FranchiseeDialogComponent.html",[148,0.475,208,1.208]],["body/components/FranchiseeDialogComponent.html",[3,0.072,4,0.065,5,0.058,8,0.118,9,0.599,11,0.401,16,1.325,17,0.585,18,0.012,20,0.072,21,0.005,22,0.005,23,3.861,25,1.8,26,1.659,27,1.8,29,1.8,30,1.8,32,4.594,35,0.619,36,2.85,41,0.64,44,1.278,46,0.8,47,0.727,53,2.755,55,1.044,66,0.81,68,0.71,72,2.886,74,0.682,75,0.262,87,0.272,92,0.687,96,1.724,122,1.732,133,1.028,148,0.692,149,0.71,150,1.169,151,0.757,152,0.733,153,0.757,154,0.757,156,1.506,157,0.757,158,2.566,159,2.485,160,1.207,162,1.207,165,1.718,171,1.937,172,0.81,173,0.838,177,1.044,178,1.968,193,0.757,194,1.207,195,1.207,196,0.757,197,1.718,198,0.757,199,0.757,200,0.666,201,0.757,202,0.645,203,0.757,204,0.666,205,0.757,206,0.666,207,0.757,208,1.51,209,1.863,210,1.207,211,0.666,212,0.757,213,0.666,214,0.757,215,0.666,216,0.569,217,0.757,218,0.666,219,0.757,220,0.666,221,0.757,222,0.666,223,0.687,224,0.757,225,0.666,226,0.757,227,0.666,228,0.757,229,0.666,230,0.587,231,0.666,232,0.757,233,0.666,234,0.71,235,0.757,236,0.666,237,0.757,238,0.666,239,0.757,240,0.666,241,0.757,242,0.666,243,0.757,244,0.666,245,0.757,246,0.757,281,1.24,286,1.732,301,1.776,309,2.211,328,2.466,343,2.253,387,0.966,434,2.888,440,1.453,489,1.303,490,1.8,491,1.988,618,1.373,619,2.59,661,2.371,720,1.8,727,3.01,735,2.188,743,3.762,751,3.802,753,2.729,754,2.813,774,4.11,782,1.453,783,1.453,784,1.988,785,1.988,787,1.8,788,1.546,789,5.684,796,1.133,797,1.24,805,2.59,806,2.729,807,2.888,808,1.546,809,3.169,810,1.8,811,2.465,812,2.465,813,2.465,828,4.509,840,3.298,842,2.077,843,2.077,845,2.077,847,2.077,848,2.077,854,1.988,855,3.952,877,2.077,878,2.188,879,3.567,881,3.169,882,2.188,885,2.188,886,2.869,887,2.644,929,6.812,930,1.8,931,3.952,932,3.169,933,4.925,934,4.521,935,3.169,936,4.509,937,3.295,938,4.081,939,3.507,940,1.988,941,4.925,942,2.888,943,3.295,944,3.169,945,3.169,946,3.952,947,2.274,948,1.988,949,2.274,950,2.274,951,2.274,952,2.274,953,2.274,954,2.274,955,2.274,956,1.988,957,1.988,958,2.274,959,1.988,960,2.274,961,2.274,962,1.988,963,2.274,964,1.988,965,1.453,966,2.274,967,2.274,968,4.509,969,1.988,970,4.521,971,2.274,972,2.274,973,2.274,974,2.274,975,2.274,976,1.453,977,1.453,978,1.453,979,2.274,980,4.306,981,2.274,982,2.274,983,1.8,984,2.274,985,2.274,986,2.274,987,2.274,988,2.274,989,2.274,990,2.274,991,2.274,992,2.274,993,2.274,994,2.274,995,2.274,996,2.274,997,2.274,998,2.274,999,2.274,1000,2.274,1001,2.274,1002,2.274,1003,2.274,1004,2.274,1005,2.274,1006,2.274,1007,2.274,1008,2.274,1009,2.274,1010,2.274,1011,3.625,1012,1.988,1013,2.274,1014,2.274,1015,3.625,1016,2.274,1017,3.625,1018,2.274,1019,2.274,1020,1.988,1021,2.274,1022,1.659,1023,3.169,1024,1.988,1025,1.546,1026,2.274,1027,2.274,1028,1.988,1029,1.659,1030,1.988,1031,1.988,1032,1.988,1033,5.175,1034,4.77,1035,5.158,1036,2.077,1037,3.625,1038,3.625,1039,3.625,1040,3.625,1041,3.625,1042,2.888,1043,1.453,1044,2.316,1045,1.453,1046,1.453,1047,1.453,1048,2.888,1049,2.888,1050,2.888,1051,2.188,1052,1.977,1053,1.453,1054,1.453,1055,1.373,1056,1.453,1057,1.453]],["title/modules/FranchiseeModule.html",[369,2.149,1058,3.01]],["body/modules/FranchiseeModule.html",[3,0.139,4,0.125,5,0.111,18,0.013,20,0.139,21,0.008,22,0.008,74,0.805,75,0.505,76,1.614,87,0.525,109,4.362,111,2.8,112,2.645,140,1.459,148,0.505,176,1.794,180,1.794,206,2.277,208,2.315,209,1.063,326,1.862,371,2.011,372,2.698,375,2.93,376,2.184,378,3.207,383,3.207,384,2.282,385,3.756,386,3.549,387,1.862,388,3.062,389,4.239,390,2.39,394,3.549,395,2.645,396,3.998,397,2.98,398,3.998,399,2.98,407,2.39,409,2.282,410,2.645,415,2.809,620,3.207,628,4.289,629,3.196,655,3.998,656,2.98,751,4.597,783,2.8,787,3.468,789,3.196,790,3.196,1058,5.997,1059,3.831,1060,3.831,1061,3.831,1062,4.382,1063,5.14,1064,2.98,1065,4.289,1066,4.289,1067,4.289,1068,3.196,1069,4.289,1070,3.196,1071,4.289,1072,3.196,1073,4.289,1074,3.196,1075,4.289,1076,3.196,1077,4.289,1078,3.196,1079,5.14,1080,5.14,1081,3.831,1082,4.289,1083,3.196,1084,5.14,1085,3.831,1086,5.14,1087,3.831,1088,5.14,1089,3.831,1090,4.382,1091,3.196,1092,3.196,1093,3.196,1094,3.196,1095,3.196]],["title/interfaces/FranchiseeRecipe.html",[0,0.553,1096,2.806]],["body/interfaces/FranchiseeRecipe.html",[0,0.798,2,1.799,3,0.189,4,0.17,5,0.151,8,0.308,9,1.18,11,0.931,17,0.647,18,0.012,19,2.558,20,0.189,21,0.01,22,0.01,28,2.559,74,0.557,230,2.17,1096,4.859,1097,5.205,1098,5.205,1099,5.792,1100,5.399,1101,5.205]],["title/injectables/FranchiseeService.html",[31,0.829,751,2.491]],["body/injectables/FranchiseeService.html",[3,0.089,4,0.08,5,0.071,8,0.145,11,0.777,17,0.572,18,0.013,19,2.173,20,0.089,21,0.006,22,0.006,28,2.196,31,0.858,33,1.109,35,0.729,36,3.122,41,0.754,42,1.4,43,2.881,44,1.187,46,1.55,47,0.906,48,2.042,50,4.34,52,2.498,53,3.006,54,2.345,55,1.255,56,2.637,64,3.563,72,3.173,74,0.657,75,0.323,76,1.034,77,1.289,78,0.905,80,1.239,81,1.342,83,2.283,84,1.695,85,1.034,86,0.967,87,0.336,89,0.64,90,4.021,92,2.173,93,3.412,96,2.498,97,2.579,99,3.498,101,3.305,104,3.122,105,2.049,107,2.73,171,0.703,178,1.138,209,2.046,230,2.098,309,1.034,479,1.794,481,2.73,488,1.794,535,3.753,661,1.688,675,1.695,678,2.579,680,3.901,741,2.455,751,2.579,810,4.575,883,1.91,1020,4.522,1096,4.987,1100,1.91,1101,2.455,1102,2.455,1103,5.173,1104,5.173,1105,5.173,1106,5.781,1107,4.273,1108,5.781,1109,2.808,1110,2.808,1111,2.808,1112,3.736,1113,3.122,1114,4.273,1115,2.808,1116,5.054,1117,2.808,1118,2.808,1119,4.217,1120,2.808,1121,2.808,1122,5.781,1123,2.808,1124,2.808,1125,2.808,1126,4.522,1127,4.273,1128,4.273,1129,2.808,1130,2.808,1131,2.808,1132,2.808,1133,2.455,1134,2.049,1135,5.173,1136,2.808,1137,6.136,1138,5.954,1139,6.136,1140,4.237,1141,3.117,1142,4.273,1143,2.808,1144,2.808,1145,2.808,1146,1.91,1147,2.808,1148,2.808,1149,2.808,1150,2.808,1151,2.808,1152,4.273,1153,2.808,1154,2.808,1155,2.808,1156,2.808,1157,2.808,1158,2.049,1159,2.049]],["title/interfaces/Friday.html",[0,0.553,666,1.894]],["body/interfaces/Friday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.331,664,3.331,665,3.331,666,3.494,667,3.331,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/components/HomeComponent.html",[148,0.475,211,1.208]],["body/components/HomeComponent.html",[3,0.145,4,0.13,5,0.116,8,0.237,18,0.012,20,0.145,21,0.009,22,0.009,35,1.033,41,1.196,44,0.999,47,0.781,55,0.73,68,1.428,74,0.566,75,0.527,87,0.548,89,1.378,133,1.716,148,0.781,149,1.428,150,1.95,151,1.524,152,1.475,153,1.524,154,1.524,156,2.258,157,1.524,158,2.77,159,2.681,160,2.015,162,2.015,165,2.403,171,1.514,187,2.923,188,3.111,189,3.111,190,3.111,191,3.111,192,2.62,193,1.524,194,2.015,195,2.015,196,1.524,197,2.403,198,1.524,199,1.524,200,1.339,201,1.524,202,1.298,203,1.524,204,1.339,205,1.524,206,1.339,207,1.524,208,1.339,209,1.109,210,2.015,211,2.112,212,1.524,213,1.339,214,1.524,215,1.339,216,1.145,217,1.524,218,1.339,219,1.524,220,1.339,221,1.524,222,1.339,223,1.383,224,1.524,225,1.339,226,1.524,227,1.339,228,1.524,229,1.339,230,1.181,231,1.339,232,1.524,233,1.339,234,1.428,235,1.524,236,1.339,237,1.524,238,1.339,239,1.524,240,1.339,241,1.524,242,1.339,243,1.524,244,1.339,245,1.524,246,1.524,434,2.923,486,3.337,487,3.999,879,3.3,1160,3.999,1161,6.051,1162,6.78,1163,6.051,1164,4.575,1165,4.575,1166,3.62,1167,5.289,1168,6.051,1169,6.051,1170,6.051,1171,5.289,1172,5.289,1173,6.051,1174,6.051,1175,6.051]],["title/modules/HomeModule.html",[369,2.149,1176,3.01]],["body/modules/HomeModule.html",[3,0.17,4,0.153,5,0.136,18,0.012,20,0.17,21,0.01,22,0.01,74,0.788,75,0.619,87,0.643,140,1.788,148,0.619,176,2.199,211,2.488,326,2.281,371,2.464,372,3.078,375,3.343,376,2.676,378,3.658,383,3.658,384,2.796,386,4.049,387,2.281,388,3.493,389,4.673,390,2.929,394,4.049,395,3.241,396,4.561,397,3.652,398,4.561,399,3.652,407,2.929,409,2.796,410,3.241,625,4.893,626,5.864,627,4.694,628,4.893,629,3.917,1176,5.952,1177,4.694,1178,4.694,1179,4.694,1180,5.37,1181,6.708,1182,5.37,1183,5.37]],["title/interceptors/HttpErrorInterceptor.html",[108,3.265,1184,3.265]],["body/interceptors/HttpErrorInterceptor.html",[3,0.135,4,0.121,5,0.108,8,0.22,11,0.723,17,0.532,18,0.012,20,0.135,21,0.008,22,0.008,31,1.157,35,0.983,41,0.75,44,1.079,46,1.442,47,0.844,48,2.752,54,1.463,55,1.118,56,2.438,74,0.655,75,0.49,76,1.566,78,1.37,83,3.23,87,0.509,88,2.031,89,0.968,92,1.741,110,3.716,116,5.712,121,6.123,122,3.347,123,6.123,129,3.716,130,5.036,133,1.206,159,1.798,172,1.513,177,1.95,178,1.74,192,4.012,223,1.975,259,3.917,309,2.843,479,2.716,481,3.68,678,4.228,686,3.364,727,3.606,842,4.193,843,4.193,845,4.193,847,4.193,849,3.68,862,3.68,873,5.036,875,4.677,877,3.3,883,2.89,1146,4.978,1184,4.558,1185,6.123,1186,6.123,1187,3.716,1188,5.76,1189,4.251,1190,4.251,1191,5.76,1192,4.251,1193,5.76,1194,5.76,1195,5.76,1196,5.76,1197,5.76,1198,5.76,1199,5.036,1200,5.76,1201,4.251,1202,4.251,1203,5.036,1204,4.251,1205,4.251,1206,4.251,1207,3.364,1208,4.251,1209,3.101,1210,6.399,1211,6.534,1212,7.718,1213,4.251,1214,5.76,1215,5.76,1216,5.76,1217,5.76,1218,5.543,1219,4.251,1220,4.251,1221,4.251,1222,6.534,1223,4.251,1224,4.251,1225,5.036,1226,5.76,1227,4.251,1228,4.251,1229,4.251]],["title/interfaces/IngreType.html",[0,0.553,1230,2.149]],["body/interfaces/IngreType.html",[0,0.805,2,1.817,3,0.19,4,0.171,5,0.152,8,0.311,9,1.187,11,0.932,16,1.871,17,0.649,18,0.012,19,2.323,20,0.19,21,0.01,22,0.01,28,2.568,47,1.029,52,3.037,286,3.806,1230,3.742,1231,3.84,1232,4.757]],["title/interfaces/Ingredient.html",[0,0.553,216,1.032]],["body/interfaces/Ingredient.html",[0,0.789,2,1.779,3,0.186,4,0.168,5,0.149,8,0.305,9,1.172,11,0.929,16,1.682,17,0.644,18,0.012,19,2.303,20,0.186,21,0.01,22,0.01,28,2.55,47,1.021,74,0.551,90,3.372,216,1.906,301,2.623,1230,4.119,1233,5.146,1234,6.259,1235,5.053,1236,3.372,1237,3.211]],["title/components/IngredientComponent.html",[148,0.475,213,1.208]],["body/components/IngredientComponent.html",[3,0.054,4,0.049,5,0.043,8,0.089,9,0.476,11,0.482,17,0.601,18,0.013,19,1.317,20,0.054,21,0.004,22,0.004,28,1.2,35,0.492,41,0.508,44,1.247,46,0.962,47,0.721,54,0.591,55,1.004,68,0.536,74,0.522,75,0.198,83,0.758,86,0.591,87,0.206,89,0.391,96,1.098,122,1.778,133,0.817,140,0.572,148,0.429,149,0.536,150,0.929,151,0.572,152,1.2,153,0.572,154,0.572,156,1.239,157,0.572,158,2.451,159,2.373,160,0.959,162,0.959,164,1.959,165,1.451,171,1.862,172,1.325,173,1.605,177,0.788,178,1.56,180,1.987,182,1.84,193,0.572,194,0.959,195,0.959,196,0.572,197,1.617,198,0.572,199,0.572,200,0.503,201,0.572,202,0.487,203,0.572,204,0.503,205,0.572,206,0.503,207,0.572,208,0.503,209,0.416,210,0.959,211,0.503,212,0.572,213,1.275,214,0.572,215,0.503,216,1.943,217,0.572,218,0.503,219,0.572,220,0.503,221,0.572,222,0.503,223,0.519,224,0.572,225,0.503,226,0.572,227,0.503,228,0.572,229,0.503,230,0.443,231,0.503,232,0.572,233,0.503,234,0.536,235,0.572,236,0.503,237,0.572,238,0.503,239,0.572,240,0.503,241,0.572,242,0.503,243,0.572,244,0.503,245,0.572,246,0.572,301,2.016,302,2.463,309,2.317,314,2.528,315,2.319,316,2.528,319,3.654,328,2.865,331,2.269,332,2.868,343,0.856,346,1.037,353,0.984,354,0.937,355,3.009,356,0.984,357,3.035,358,1.65,359,1.739,360,1.571,361,0.984,362,2.246,364,3.009,387,0.73,415,1.376,443,1.097,583,1.739,709,3.796,710,2.246,712,1.359,713,2.495,714,3.301,716,3.045,727,2.91,730,1.959,731,2.53,732,3.676,735,2.246,740,2.377,742,2.945,752,3.676,796,0.856,797,0.937,805,2.131,806,2.246,807,2.377,824,2.377,833,1.168,834,1.959,837,3.891,842,3.009,843,3.009,844,2.53,845,3.009,846,2.53,847,3.009,848,2.495,849,2.377,860,1.168,862,1.097,864,1.168,865,1.253,866,1.168,867,1.959,868,1.168,869,1.168,870,1.168,871,1.959,874,1.253,875,2.377,876,2.714,877,2.495,878,2.63,879,3.045,882,2.246,883,1.168,885,3.171,908,2.101,909,2.28,910,2.101,911,2.101,916,2.101,917,1.253,918,1.168,922,2.63,926,3.447,927,2.518,937,2.783,939,2.963,942,2.377,943,2.783,965,1.097,976,2.377,977,1.097,978,1.097,980,1.097,1025,2.53,1029,1.253,1034,2.101,1036,0.984,1042,2.783,1043,1.097,1044,1.84,1045,1.097,1046,1.097,1047,1.097,1048,2.377,1049,2.377,1050,2.377,1051,1.739,1052,1.571,1053,1.097,1054,1.097,1055,1.037,1056,1.097,1057,1.097,1209,1.253,1230,2.528,1231,1.097,1234,4.157,1235,1.097,1236,0.984,1237,3.045,1238,4.589,1239,1.501,1240,3.721,1241,2.53,1242,2.714,1243,3.832,1244,2.881,1245,3.721,1246,3.808,1247,3.721,1248,3.253,1249,2.518,1250,3.447,1251,3.808,1252,2.881,1253,3.808,1254,4.357,1255,2.518,1256,1.717,1257,3.573,1258,3.796,1259,2.881,1260,2.881,1261,1.717,1262,1.717,1263,1.717,1264,1.717,1265,2.881,1266,1.717,1267,1.717,1268,1.717,1269,1.717,1270,1.717,1271,2.881,1272,1.717,1273,1.717,1274,1.717,1275,1.717,1276,1.717,1277,1.717,1278,1.717,1279,1.717,1280,1.717,1281,1.717,1282,1.717,1283,1.717,1284,2.881,1285,1.253,1286,1.501,1287,1.253,1288,1.168,1289,1.501,1290,1.501,1291,1.501,1292,3.841,1293,1.501,1294,1.501,1295,1.717,1296,1.717,1297,1.717,1298,3.253,1299,4.854,1300,2.518,1301,2.881,1302,2.881,1303,1.717,1304,1.717,1305,1.501,1306,2.881,1307,4.854,1308,1.717,1309,3.447,1310,4.357,1311,1.501,1312,1.717,1313,1.501,1314,1.501,1315,3.253,1316,1.501,1317,1.717,1318,1.501,1319,1.717,1320,1.359,1321,1.359,1322,1.359,1323,1.717,1324,3.253,1325,2.881,1326,2.518,1327,1.717,1328,1.717,1329,2.881,1330,2.881,1331,2.881,1332,2.881,1333,2.518,1334,2.518,1335,2.518,1336,1.717,1337,1.359,1338,3.447,1339,1.717,1340,1.717,1341,1.717,1342,1.501,1343,1.717,1344,1.717,1345,1.501,1346,1.501,1347,1.717,1348,1.717,1349,1.717,1350,2.881,1351,1.717,1352,1.501,1353,1.717,1354,1.717,1355,1.253,1356,1.359,1357,1.717,1358,1.717,1359,1.717,1360,1.717,1361,2.518,1362,1.717,1363,1.717,1364,1.717,1365,1.717,1366,1.501,1367,3.253,1368,1.501,1369,3.253,1370,1.501,1371,1.501,1372,1.359,1373,1.501,1374,1.501,1375,1.501,1376,4.243,1377,2.28,1378,1.501,1379,5.651,1380,3.253,1381,3.178,1382,1.501,1383,2.518,1384,4.593,1385,2.518,1386,3.253,1387,1.501,1388,1.253,1389,1.501,1390,1.501,1391,1.501,1392,3.253,1393,1.253,1394,1.253,1395,1.501,1396,1.501,1397,1.359,1398,1.359,1399,1.501,1400,1.359,1401,1.501,1402,3.808,1403,1.359,1404,1.253,1405,1.501,1406,2.881,1407,2.518]],["title/injectables/IngredientService.html",[31,0.829,1257,2.806]],["body/injectables/IngredientService.html",[3,0.132,4,0.119,5,0.106,8,0.217,11,0.77,17,0.567,18,0.012,19,1.958,20,0.132,21,0.008,22,0.008,28,1.837,31,1.144,33,1.652,35,0.973,36,3.111,41,0.738,42,2.084,43,3.467,44,1.202,46,1.536,47,0.898,48,2.722,50,4.534,52,2.47,53,2.614,54,2.395,55,1.249,56,2.642,60,5.127,64,3.712,72,3.212,74,0.703,75,0.482,76,1.54,77,1.919,78,1.348,80,1.846,81,1.998,83,1.846,84,2.525,85,1.54,86,1.44,87,0.501,88,1.998,89,0.953,90,3.985,92,2.103,93,3.623,95,4.445,96,2.47,97,2.525,99,3.229,101,2.672,104,3.911,107,2.672,216,2.078,230,1.471,363,3.439,1100,3.874,1113,3.911,1119,4.726,1141,3.051,1237,3.107,1249,4.98,1255,4.98,1257,3.874,1285,3.051,1408,3.656,1409,5.697,1410,6.957,1411,4.182,1412,5.697,1413,4.182,1414,5.697,1415,4.182,1416,6.48,1417,5.664,1418,4.182,1419,5.697,1420,4.182,1421,5.697,1422,4.182,1423,4.182,1424,3.656,1425,5.697,1426,4.182,1427,3.051,1428,4.182]],["title/components/IngredientTypeComponent.html",[148,0.475,215,1.208]],["body/components/IngredientTypeComponent.html",[3,0.074,4,0.067,5,0.059,8,0.121,9,0.613,11,0.511,17,0.624,18,0.012,19,1.122,20,0.074,21,0.005,22,0.005,35,0.634,41,0.655,44,1.255,46,1.018,47,0.786,52,2.18,55,1.087,68,0.732,74,0.535,75,0.27,83,1.034,87,0.281,89,0.534,96,1.416,122,1.12,133,1.053,148,0.531,149,0.732,150,1.197,151,0.781,152,1.487,153,0.781,154,0.781,156,1.536,157,0.781,158,2.578,159,2.496,160,1.237,162,1.237,165,1.747,171,1.947,172,1.322,173,1.368,177,1.076,178,1.698,180,1.888,193,0.781,194,1.237,195,1.237,196,0.781,197,1.747,198,0.781,199,0.781,200,0.686,201,0.781,202,0.665,203,0.781,204,0.686,205,0.781,206,0.686,207,0.781,208,0.686,209,0.568,210,1.237,211,0.686,212,0.781,213,0.686,214,0.781,215,1.536,216,1.703,217,0.781,218,0.686,219,0.781,220,0.686,221,0.781,222,0.686,223,0.709,224,0.781,225,0.686,226,0.781,227,0.686,228,0.781,229,0.686,230,0.605,231,0.686,232,0.781,233,0.686,234,0.732,235,0.781,236,0.686,237,0.781,238,0.686,239,0.781,240,0.686,241,0.781,242,0.686,243,0.781,244,0.686,245,0.781,246,0.781,293,1.343,301,1.806,302,2.523,309,1.699,314,2.402,315,2.204,316,2.402,319,2.204,328,2.515,332,2.708,343,1.168,357,2.298,387,0.996,415,1.775,583,1.415,716,2.515,727,3.253,732,2.784,734,1.855,735,2.784,740,2.947,752,4.109,796,1.168,797,1.279,805,2.642,806,2.784,807,2.947,813,1.594,824,1.498,837,3.886,842,3.005,843,3.005,844,3.136,845,3.005,846,3.136,847,3.005,848,2.642,849,2.373,850,2.709,858,1.855,860,1.594,862,1.498,864,1.594,866,1.594,867,2.525,868,1.594,869,1.594,870,1.594,871,2.525,875,2.947,876,3.364,877,1.343,878,1.415,879,3.713,882,1.415,884,1.71,885,3.167,907,3.65,910,2.709,911,2.709,937,3.352,939,3.568,942,2.947,943,3.352,965,1.498,976,2.947,977,1.498,978,1.498,980,1.498,1022,2.709,1025,2.525,1033,2.939,1034,2.709,1042,2.947,1043,1.498,1044,2.373,1045,1.498,1046,1.498,1047,1.498,1048,2.947,1049,2.947,1050,2.947,1051,2.242,1052,2.026,1053,1.498,1054,1.498,1055,1.415,1056,1.498,1057,1.498,1230,4.079,1231,1.498,1235,2.947,1236,1.343,1238,4.627,1241,3.136,1242,3.364,1243,3.364,1248,4.999,1250,4.152,1251,4.586,1258,4.137,1287,1.71,1288,5.254,1289,2.049,1290,2.049,1293,2.049,1294,4.999,1300,2.049,1309,4.152,1315,2.049,1320,1.855,1321,1.855,1322,1.855,1333,4.586,1355,3.364,1407,3.247,1429,6.701,1430,2.049,1431,4.612,1432,3.714,1433,4.612,1434,3.247,1435,5.246,1436,5.246,1437,3.247,1438,2.344,1439,3.714,1440,3.714,1441,2.344,1442,2.344,1443,2.344,1444,2.344,1445,2.344,1446,2.344,1447,2.344,1448,2.344,1449,3.714,1450,2.344,1451,2.344,1452,2.344,1453,2.344,1454,2.344,1455,2.344,1456,2.344,1457,2.344,1458,5.246,1459,4.612,1460,2.344,1461,2.344,1462,2.344,1463,4.586,1464,2.344,1465,2.344,1466,4.612,1467,2.344,1468,2.344,1469,2.049,1470,2.344,1471,5.246,1472,2.344,1473,3.714,1474,3.714,1475,3.714]],["title/injectables/IngredientTypeService.html",[31,0.829,1258,2.806]],["body/injectables/IngredientTypeService.html",[3,0.12,4,0.108,5,0.096,8,0.196,11,0.739,17,0.667,18,0.012,19,1.859,20,0.12,21,0.008,22,0.008,28,1.716,31,1.069,33,1.497,35,0.909,36,3.06,41,0.939,42,1.889,43,3.325,44,1.16,46,1.473,47,0.861,48,2.543,50,3.713,52,1.445,53,2.823,54,1.833,55,1.195,56,2.586,60,4.868,64,3.524,72,2.944,74,0.7,75,0.437,76,1.396,77,1.74,78,1.222,80,1.673,81,1.811,83,1.673,84,2.288,85,1.396,86,1.305,87,0.454,89,0.864,90,3.821,92,2.309,93,3.474,96,2.543,99,3.066,104,3.213,107,2.422,178,1.418,216,1.911,309,1.396,479,2.422,481,4.489,535,3.821,675,2.288,678,4.611,680,4.286,1113,3.713,1134,2.765,1140,4.027,1158,4.866,1159,4.866,1230,3.474,1235,3.93,1236,2.172,1237,3.833,1258,3.62,1287,5.315,1288,4.955,1417,5.378,1427,2.765,1434,4.653,1437,4.653,1476,3.314,1477,5.323,1478,6.671,1479,3.791,1480,5.323,1481,3.791,1482,5.323,1483,3.791,1484,6.152,1485,5.323,1486,5.323,1487,3.791,1488,5.323,1489,5.323,1490,5.323,1491,3.791,1492,3.791,1493,5.323,1494,3.791,1495,3.791,1496,5.323,1497,3.791,1498,3.791]],["title/guards/IsAuthenticatedGuard.html",[1499,3.265,1500,3.265]],["body/guards/IsAuthenticatedGuard.html",[3,0.169,4,0.152,5,0.135,8,0.276,11,0.739,17,0.543,18,0.012,20,0.169,21,0.009,22,0.009,31,1.34,35,1.139,41,0.939,44,1.102,46,1.473,47,0.862,55,0.85,56,2.427,74,0.715,75,0.613,78,1.716,85,1.961,86,1.833,87,0.638,88,2.544,92,1.609,117,3.883,118,4,126,4.867,133,1.51,140,1.773,168,4.665,176,2.18,178,1.418,261,4.174,301,2.508,430,5.766,482,6.045,1500,5.279,1501,4.213,1502,5.766,1503,6.37,1504,4.654,1505,6.877,1506,5.324,1507,4.654,1508,6.678,1509,5.324,1510,5.832,1511,6.37,1512,4.654,1513,4.654,1514,5.324]],["title/guards/IsUnauthenticatedGuard.html",[1499,3.265,1515,3.265]],["body/guards/IsUnauthenticatedGuard.html",[3,0.169,4,0.152,5,0.135,8,0.276,11,0.739,17,0.543,18,0.012,20,0.169,21,0.009,22,0.009,31,1.34,35,1.139,41,0.939,44,1.102,46,1.473,47,0.862,55,0.85,56,2.427,74,0.715,75,0.613,78,1.716,85,1.961,86,1.833,87,0.638,88,2.544,92,1.609,117,3.883,118,4,126,4.867,133,1.51,140,1.773,168,4.665,176,2.18,178,1.418,180,2.18,261,4.174,301,2.508,430,5.279,482,6.045,494,4.654,1501,4.213,1502,5.766,1505,6.877,1507,4.654,1508,6.678,1510,5.832,1511,6.37,1512,4.654,1513,4.654,1515,5.279,1516,6.37,1517,4.654,1518,5.324,1519,5.324]],["title/modules/LayoutsModule.html",[369,2.149,1520,2.806]],["body/modules/LayoutsModule.html",[3,0.179,4,0.161,5,0.143,18,0.012,20,0.179,21,0.01,22,0.01,35,0.965,44,0.933,55,0.902,74,0.73,75,0.651,87,0.677,92,1.708,148,0.651,176,2.314,202,1.964,326,2.401,371,2.593,372,3.177,375,3.45,376,2.817,379,5.479,380,6.543,382,6.543,388,3.898,390,3.083,407,3.083,409,3.605,625,5.05,648,5.794,1520,5.664,1521,4.941,1522,5.652,1523,4.941,1524,5.652,1525,5.652,1526,5.652,1527,5.652,1528,5.652]],["title/components/LoadingComponent.html",[148,0.475,218,1.208]],["body/components/LoadingComponent.html",[3,0.111,4,0.1,5,0.089,8,0.261,9,0.833,11,0.389,17,0.525,18,0.012,20,0.111,21,0.007,22,0.007,35,0.862,36,1.924,41,0.621,44,1.128,46,0.777,47,0.762,55,0.562,68,1.098,74,0.552,75,0.405,87,0.421,89,0.801,133,1.432,148,0.68,149,1.098,150,1.627,151,1.172,152,1.134,153,1.172,154,1.172,156,1.966,157,1.172,158,2.706,159,2.62,160,1.681,162,1.681,165,2.148,168,4.194,171,1.477,172,1.797,173,1.859,175,4.412,176,1.44,178,0.937,181,3.075,182,4.542,183,6.215,193,1.172,194,1.681,195,1.681,196,1.172,197,2.148,198,1.172,199,1.172,200,1.03,201,1.172,202,0.998,203,1.172,204,1.03,205,1.172,206,1.03,207,1.172,208,1.03,209,0.853,210,1.681,211,1.03,212,1.172,213,1.03,214,1.172,215,1.03,216,0.88,217,1.172,218,1.888,219,1.172,220,1.03,221,1.172,222,1.03,223,1.063,224,1.172,225,1.03,226,1.172,227,1.03,228,1.172,229,1.03,230,0.908,231,1.03,232,1.172,233,1.03,234,1.098,235,1.172,236,1.03,237,1.172,238,1.03,239,1.172,240,1.03,241,1.172,242,1.03,243,1.172,244,1.03,245,1.172,246,1.172,301,2.221,302,2.846,314,1.832,315,1.681,316,1.832,317,5.405,318,6.401,319,1.681,320,5.971,321,3.075,322,2.566,323,3.994,324,3.075,325,3.994,326,2.144,327,3.682,328,2.753,329,2.784,330,3.682,331,2.629,332,3.241,333,6.126,334,3.075,335,2.784,336,3.075,337,3.075,338,3.075,339,2.784,340,2.566,341,2.784,342,4.672,343,1.753,344,4.672,345,4.672,346,2.123,347,4.412,348,3.075,349,3.075,350,2.566,351,2.566,352,2.784,353,2.015,354,1.918,355,2.015,356,2.015,357,1.753,358,2.015,359,2.123,360,1.918,361,2.891,362,2.123,363,2.123,364,2.015,365,2.784,367,3.075,368,3.075,753,3.047,754,4.16,788,2.392,1052,3.22,1529,3.075,1530,5.903,1531,5.047,1532,4.412,1533,5.903,1534,4.306,1535,3.518,1536,5.047,1537,3.518,1538,3.518,1539,3.518,1540,5.047,1541,5.047,1542,5.047,1543,5.047,1544,5.047,1545,3.518,1546,3.518,1547,3.518,1548,3.518,1549,3.518]],["title/injectables/LoadingService.html",[31,0.829,754,2.251]],["body/injectables/LoadingService.html",[3,0.163,4,0.147,5,0.131,8,0.267,9,1.08,11,0.571,17,0.585,18,0.012,20,0.163,21,0.009,22,0.009,31,1.313,33,2.037,35,1.116,36,3.15,41,1.267,44,1.314,46,1.444,47,0.666,54,2.251,55,1.146,56,2.726,74,0.612,75,0.594,78,1.662,85,1.899,86,1.775,87,0.618,89,1.175,92,1.559,171,1.889,172,2.328,173,2.408,178,1.913,488,4.177,679,3.507,753,4.334,754,3.566,782,4.177,1550,4.508,1551,7.18,1552,7.551,1553,7.551,1554,6.539,1555,6.539,1556,5.157,1557,5.157,1558,6.539,1559,5.157,1560,4.081,1561,6.539,1562,6.539,1563,5.716,1564,5.157,1565,5.716,1566,5.157,1567,5.157,1568,5.157,1569,5.157,1570,5.157]],["title/injectables/LocalStorageService.html",[31,0.829,434,2.636]],["body/injectables/LocalStorageService.html",[3,0.153,4,0.137,5,0.122,8,0.249,11,0.815,16,1.883,17,0.599,18,0.012,20,0.153,21,0.009,22,0.009,31,1.256,33,1.902,35,1.068,41,1.226,44,1.259,46,1.625,47,0.95,55,1.175,74,0.451,75,0.555,85,1.773,86,1.658,87,0.577,89,1.097,92,2.224,171,1.841,172,1.714,173,2.71,180,1.971,192,2.758,293,4.215,301,2.154,302,2.125,434,3.997,437,5.317,486,5.703,1126,5.47,1166,6.187,1207,3.81,1218,3.81,1571,4.209,1572,6.257,1573,4.815,1574,6.257,1575,4.815,1576,7.359,1577,6.257,1578,4.815,1579,6.257,1580,4.815,1581,6.257,1582,4.815,1583,7.359,1584,4.815,1585,4.815,1586,4.815,1587,4.815,1588,4.815,1589,4.815,1590,4.815,1591,4.815,1592,6.257,1593,4.815]],["title/components/LoginComponent.html",[148,0.475,220,1.208]],["body/components/LoginComponent.html",[3,0.145,4,0.13,5,0.116,8,0.237,11,0.507,17,0.373,18,0.012,20,0.145,21,0.009,22,0.009,35,1.034,41,0.808,44,1.12,46,1.011,47,0.876,55,0.967,68,1.43,74,0.635,75,0.528,87,0.549,88,2.189,89,1.044,117,3.342,118,3.843,132,3.342,133,1.718,148,0.782,149,1.43,150,1.952,151,1.526,152,1.477,153,1.526,154,1.526,156,2.26,157,1.526,158,2.77,159,2.682,160,2.017,162,2.017,165,2.404,171,1.698,193,1.526,194,2.017,195,2.017,196,1.526,197,2.404,198,1.526,199,1.526,200,1.341,201,1.526,202,1.299,203,1.526,204,1.341,205,1.526,206,1.341,207,1.526,208,1.341,209,1.111,210,2.017,211,1.341,212,1.526,213,1.341,214,1.526,215,1.341,216,1.146,217,1.526,218,1.341,219,1.526,220,2.113,221,1.526,222,1.341,223,1.385,224,1.526,225,1.341,226,1.526,227,1.341,228,1.526,229,1.341,230,1.183,231,1.341,232,1.526,233,1.341,234,1.43,235,1.526,236,1.341,237,1.526,238,1.341,239,1.526,240,1.341,241,1.526,242,1.341,243,1.526,244,1.341,245,1.526,246,1.526,341,3.625,364,2.624,448,5.295,713,2.624,729,3.115,922,2.765,923,3.115,1366,4.005,1594,4.005,1595,6.785,1596,6.057,1597,7.219,1598,4.581,1599,4.581,1600,4.581,1601,4.581,1602,4.005]],["title/interfaces/Lunch.html",[0,0.553,670,1.894]],["body/interfaces/Lunch.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.815,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.928,658,2.631,659,3.91,660,3.91,661,2.085,662,3.331,663,3.331,664,3.331,665,3.331,666,3.331,667,3.331,668,3.331,669,2.749,670,3.929,671,4.051,672,2.631]],["title/injectables/MessagesService.html",[31,0.829,1603,3.265]],["body/injectables/MessagesService.html",[3,0.176,4,0.158,5,0.141,8,0.288,9,1.131,11,0.615,16,1.639,17,0.558,18,0.012,20,0.176,21,0.01,22,0.01,31,1.375,33,2.193,35,1.169,44,1.226,46,1.225,47,0.717,54,2.357,55,0.886,56,2.473,74,0.641,75,0.639,78,1.789,85,2.045,86,1.911,87,0.665,171,1.389,172,2.438,173,2.522,178,1.978,332,3.155,679,5.049,1603,5.419,1604,4.853,1605,7.752,1606,6.491,1607,6.847,1608,6.847,1609,5.551,1610,6.847,1611,6.847,1612,6.847,1613,6.847,1614,6.847,1615,5.551,1616,5.551,1617,4.853,1618,5.551,1619,5.551]],["title/interfaces/Monday.html",[0,0.553,662,1.894]],["body/interfaces/Monday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.494,663,3.331,664,3.331,665,3.331,666,3.331,667,3.331,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/components/PageNotFoundComponent.html",[148,0.475,222,1.208]],["body/components/PageNotFoundComponent.html",[3,0.117,4,0.105,5,0.093,8,0.191,18,0.012,20,0.117,21,0.007,22,0.007,35,0.89,41,1.068,44,0.861,47,0.673,55,0.587,68,1.148,74,0.344,75,0.424,87,0.441,89,1.187,133,1.478,148,0.697,149,1.148,150,1.68,151,1.225,152,1.186,153,1.225,154,1.225,156,2.016,157,1.225,158,2.718,159,2.631,160,1.736,162,1.736,165,2.193,171,1.304,193,1.225,194,1.736,195,1.736,196,1.225,197,2.193,198,1.225,199,1.225,200,1.077,201,1.225,202,1.044,203,1.225,204,1.077,205,1.225,206,1.077,207,1.225,208,1.077,209,0.892,210,1.736,211,1.077,212,1.225,213,1.077,214,1.225,215,1.077,216,0.921,217,1.225,218,1.077,219,1.225,220,1.077,221,1.225,222,1.927,223,2.291,224,1.225,225,1.077,226,1.225,227,1.077,228,1.225,229,1.077,230,0.95,231,1.077,232,1.225,233,1.077,234,1.148,235,1.225,236,1.077,237,1.225,238,1.077,239,1.225,240,1.077,241,1.225,242,1.077,243,1.225,244,1.077,245,1.225,246,1.225,322,5.412,323,4.124,327,5.412,330,5.069,331,3.152,332,3.066,333,5.209,339,2.912,342,2.912,344,2.912,345,4.789,346,2.221,355,3.771,356,2.108,357,1.834,358,2.108,359,2.221,360,2.007,361,4.133,362,2.221,363,2.221,407,2.007,443,5.142,716,2.007,797,2.007,802,4.556,829,2.912,837,2.351,1241,3.544,1403,2.912,1620,5.291,1621,4.789,1622,3.216,1623,4.556,1624,6.052,1625,5.212,1626,3.679,1627,3.679,1628,3.679,1629,5.212,1630,3.679,1631,6.074,1632,6.308,1633,5.212,1634,3.679,1635,6.052,1636,3.679,1637,5.212,1638,5.212,1639,5.212,1640,5.212,1641,3.679,1642,3.679,1643,3.216,1644,6.052,1645,3.216,1646,6.949,1647,5.291,1648,3.679,1649,3.679,1650,3.679,1651,3.679,1652,4.556,1653,3.216,1654,3.679,1655,3.679,1656,3.679,1657,3.679,1658,3.679,1659,4.556,1660,5.212,1661,3.679,1662,3.679]],["title/interfaces/Picture.html",[0,0.553,1663,2.364]],["body/interfaces/Picture.html",[0,0.774,2,1.746,3,0.183,4,0.165,5,0.146,8,0.299,9,1.159,11,0.946,16,1.903,17,0.667,18,0.012,19,2.284,20,0.183,21,0.01,22,0.01,47,1.015,710,4.744,1663,4.019,1664,5.051,1665,6.871,1666,6.871,1667,6.871,1668,6.22]],["title/components/PrincipalComponent.html",[148,0.475,225,1.208]],["body/components/PrincipalComponent.html",[3,0.152,4,0.136,5,0.121,8,0.248,18,0.012,20,0.152,21,0.009,22,0.009,35,1.064,41,1.223,44,1.029,47,0.805,55,0.764,68,1.493,74,0.448,75,0.551,87,0.573,89,1.42,133,1.768,148,0.798,149,1.493,150,2.009,151,1.594,152,1.543,153,1.594,154,1.594,156,2.308,157,1.594,158,2.779,159,2.691,160,2.076,162,2.076,165,2.445,171,1.559,187,3.057,188,3.254,189,3.254,190,3.254,191,3.254,192,2.741,193,1.594,194,2.076,195,2.076,196,1.594,197,2.445,198,1.594,199,1.594,200,1.401,201,1.594,202,1.357,203,1.594,204,1.401,205,1.594,206,1.401,207,1.594,208,1.401,209,1.16,210,2.076,211,1.401,212,1.594,213,1.401,214,1.594,215,1.401,216,1.197,217,1.594,218,1.401,219,1.594,220,1.401,221,1.594,222,1.401,223,1.446,224,1.594,225,2.149,226,1.594,227,1.401,228,1.594,229,1.401,230,1.235,231,1.401,232,1.594,233,1.401,234,1.493,235,1.594,236,1.401,237,1.594,238,1.401,239,1.594,240,1.401,241,1.594,242,1.401,243,1.594,244,1.401,245,1.594,246,1.594,1669,4.183,1670,5.448,1671,6.93,1672,6.232,1673,4.785,1674,4.785]],["title/modules/PrincipalModule.html",[369,2.149,1675,3.01]],["body/modules/PrincipalModule.html",[3,0.169,4,0.152,5,0.135,18,0.012,20,0.169,21,0.009,22,0.009,74,0.791,75,0.613,87,0.638,89,1.213,177,2.443,222,2.35,225,2.35,255,2.904,326,2.262,371,2.443,372,3.061,375,3.325,376,2.653,378,3.639,383,3.639,384,2.773,385,4.262,387,2.262,388,3.474,391,4.654,392,3.883,393,4.654,402,3.62,403,4.654,404,4.654,405,4.654,409,3.474,411,4.654,412,4.654,414,4.654,415,2.544,727,3.188,1520,5.458,1534,4.867,1621,4.213,1670,4.654,1675,6.102,1676,4.654,1677,5.324,1678,4.654,1679,5.324,1680,5.324,1681,5.324,1682,5.324,1683,5.324,1684,5.324]],["title/components/ProfileComponent.html",[148,0.475,227,1.208]],["body/components/ProfileComponent.html",[3,0.085,4,0.076,5,0.068,8,0.293,9,0.682,11,0.816,16,1.111,17,0.609,18,0.013,19,1.521,20,0.085,21,0.006,22,0.006,35,0.705,41,0.729,44,1.235,46,1.111,47,0.787,55,0.902,56,1.676,66,2.863,68,0.838,72,1.185,74,0.664,75,0.309,78,0.866,87,0.322,89,0.612,92,0.812,96,1.918,133,1.171,140,1.375,148,0.702,149,0.838,150,1.331,151,0.894,152,1.622,153,0.894,154,0.894,156,1.676,157,0.894,158,2.625,159,2.542,160,1.375,162,1.375,165,1.881,171,1.525,172,0.956,173,1.521,177,1.232,178,1.714,192,3.235,193,0.894,194,1.375,195,1.375,196,0.894,197,1.881,198,0.894,199,0.894,200,0.786,201,0.894,202,0.762,203,0.894,204,0.786,205,0.894,206,0.786,207,0.894,208,0.786,209,0.651,210,1.375,211,0.786,212,0.894,213,0.786,214,0.894,215,0.786,216,0.672,217,0.894,218,0.786,219,0.894,220,0.786,221,0.894,222,0.786,223,0.812,224,0.894,225,0.786,226,0.894,227,1.653,228,0.894,229,0.786,230,0.693,231,0.786,232,0.894,233,0.786,234,0.838,235,0.894,236,0.786,237,0.894,238,0.786,239,0.894,240,0.786,241,0.894,242,0.786,243,0.894,244,0.786,245,0.894,246,0.894,247,1.621,251,3.511,255,1.465,273,1.959,278,1.826,281,1.465,282,2.347,283,1.715,284,1.826,285,2.125,286,1.283,293,2.365,294,2.125,297,2.347,299,3.841,301,2.382,302,2.492,309,1.521,312,2.347,314,2.62,315,2.404,316,2.62,319,2.404,331,1.398,332,2.735,353,2.882,354,2.744,387,1.141,415,1.973,474,3.61,535,1.538,616,2.808,617,2.808,618,2.492,619,3.235,713,3.964,714,4.377,727,2.404,732,2.492,740,2.638,796,1.338,805,4.066,806,3.037,879,2.252,885,2.492,886,3.267,887,3.012,937,3.608,942,3.214,943,3.608,965,1.715,976,1.715,977,1.715,978,1.715,980,3.608,983,2.125,1022,1.959,1052,2.252,1207,2.125,1218,4.824,1335,2.347,1337,2.125,1469,2.347,1617,2.347,1685,2.347,1686,4.937,1687,5.031,1688,5.031,1689,5.031,1690,4.129,1691,5.031,1692,5.031,1693,5.031,1694,5.031,1695,4.129,1696,4.129,1697,4.047,1698,4.129,1699,2.685,1700,4.129,1701,4.129,1702,2.685,1703,4.129,1704,2.685,1705,4.129,1706,2.685,1707,2.685,1708,2.685,1709,2.685,1710,2.685,1711,2.685,1712,2.685,1713,2.685,1714,2.685,1715,2.685,1716,2.685,1717,2.685,1718,2.685,1719,4.129,1720,2.685,1721,2.685,1722,2.685,1723,2.685,1724,2.685,1725,2.685,1726,2.685,1727,2.685,1728,2.685,1729,2.685,1730,2.685,1731,2.685,1732,2.685,1733,2.685,1734,2.685,1735,2.685,1736,2.685,1737,2.685,1738,2.685,1739,2.685,1740,2.685,1741,1.959,1742,2.685,1743,2.347,1744,5.031,1745,2.685,1746,2.347,1747,2.685,1748,2.347,1749,2.347,1750,2.347,1751,2.347,1752,2.685,1753,2.685,1754,2.685,1755,2.685,1756,3.61,1757,3.61,1758,3.61,1759,3.61,1760,3.61,1761,2.685,1762,2.685]],["title/modules/ProfileModule.html",[369,2.149,1763,3.01]],["body/modules/ProfileModule.html",[3,0.147,4,0.132,5,0.118,18,0.012,20,0.147,21,0.009,22,0.009,74,0.801,75,0.535,76,1.71,87,0.556,109,4.434,111,2.966,112,2.802,140,1.546,148,0.704,176,1.901,177,2.13,180,1.901,227,2.31,326,1.972,371,2.13,372,2.804,375,3.045,376,2.314,378,3.332,383,3.332,384,2.418,385,3.903,386,3.688,387,1.972,388,3.182,389,4.363,390,2.532,394,3.688,395,2.802,407,2.532,409,2.418,410,2.802,415,2.919,620,3.332,655,4.155,656,3.157,727,2.919,752,3.688,1064,3.157,1065,4.457,1066,4.457,1067,4.457,1068,3.387,1069,4.457,1070,3.387,1071,4.457,1072,3.387,1073,4.457,1074,3.387,1075,4.457,1076,3.387,1077,4.457,1078,3.387,1082,4.457,1083,3.387,1091,3.387,1092,3.387,1093,3.387,1094,3.387,1095,3.387,1146,3.157,1697,4.673,1763,5.965,1764,4.059,1765,4.059,1766,4.059,1767,4.643,1768,3.387,1769,5.341,1770,4.059,1771,5.341,1772,4.059,1773,4.643,1774,4.059,1775,4.643]],["title/injectables/ProfileService.html",[31,0.829,1697,2.491]],["body/injectables/ProfileService.html",[3,0.139,4,0.125,5,0.111,8,0.227,11,0.735,17,0.541,18,0.013,20,0.139,21,0.008,22,0.008,31,1.181,33,1.731,35,1.004,41,0.773,42,2.184,43,3.534,44,1.171,46,1.465,47,0.857,48,2.809,52,1.671,54,1.509,55,1.132,56,2.464,66,2.997,74,0.728,75,0.505,76,1.614,77,2.011,78,1.413,80,1.934,81,2.094,82,3.468,85,1.614,86,1.509,87,0.525,88,2.094,89,0.998,92,2.006,93,3.062,96,2.242,99,2.184,140,2.21,178,1.767,180,2.407,279,2.39,293,3.368,302,2.595,304,4.289,305,2.98,306,2.98,426,5.612,429,4.653,462,4.653,464,5.14,465,3.549,475,4.653,488,2.8,489,2.51,535,2.51,567,3.831,568,3.468,569,3.468,575,2.8,576,2.8,577,2.8,578,3.468,579,3.468,580,3.468,1140,2.645,1697,3.549,1776,3.831,1777,3.998,1778,4.382,1779,4.382,1780,4.382,1781,5.88,1782,4.382,1783,4.382,1784,5.88,1785,5.801,1786,6.636,1787,5.88,1788,6.636,1789,5.88,1790,6.636,1791,5.88,1792,6.636,1793,5.88,1794,4.382,1795,4.382,1796,4.382,1797,4.382,1798,4.382,1799,4.382]],["title/interfaces/Recipe.html",[0,0.553,230,1.065]],["body/interfaces/Recipe.html",[0,0.694,2,1.566,3,0.164,4,0.148,5,0.131,8,0.268,9,1.083,11,0.954,16,1.76,17,0.679,18,0.012,19,2.447,20,0.164,21,0.009,22,0.009,28,2.438,47,0.977,52,2.884,74,0.673,216,1.893,230,1.858,301,2.478,898,6.308,1236,2.969,1237,4.126,1663,4.333,1800,4.53,1801,6.613,1802,5.986,1803,5.518,1804,5.986,1805,5.518,1806,6.613,1807,4.333,1808,5.182,1809,5.182,1810,5.182]],["title/components/RecipeDialogComponent.html",[148,0.475,229,1.208]],["body/components/RecipeDialogComponent.html",[3,0.056,4,0.051,5,0.045,8,0.092,9,0.489,11,0.591,16,1.179,17,0.615,18,0.012,20,0.056,21,0.004,22,0.004,26,2.16,35,0.506,36,2.684,41,0.522,44,1.3,46,1.179,47,0.767,52,1.453,53,1.749,54,1.019,55,1.088,68,0.554,72,1.681,74,0.638,75,0.204,87,0.213,92,0.536,96,1.885,122,1.415,133,0.84,148,0.439,149,0.554,150,0.955,151,0.591,152,0.572,153,0.591,154,0.591,156,1.269,157,0.591,158,2.465,159,2.387,160,0.986,162,0.986,164,1.207,165,1.482,171,1.86,172,1.902,173,2.087,177,0.814,178,1.847,180,0.727,182,3.159,193,0.591,194,0.986,195,0.986,196,0.591,197,1.779,198,0.591,199,0.591,200,0.52,201,0.591,202,0.503,203,0.591,204,0.52,205,0.591,206,0.52,207,0.591,208,0.52,209,0.43,210,0.986,211,0.52,212,0.591,213,0.52,214,0.591,215,0.52,216,1.337,217,0.591,218,0.52,219,0.591,220,0.52,221,0.591,222,0.52,223,0.536,224,0.591,225,0.52,226,0.591,227,0.52,228,0.591,229,1.302,230,1.884,231,0.52,232,0.591,233,0.52,234,0.554,235,0.591,236,0.52,237,0.591,238,0.52,239,0.591,240,0.52,241,0.591,242,0.52,243,0.591,244,0.52,245,0.591,246,0.591,251,0.968,278,1.207,293,1.696,301,1.839,302,0.783,309,1.968,314,2.782,315,2.553,316,2.782,317,1.405,319,2.948,328,3.239,331,0.924,332,0.754,343,1.476,346,1.071,353,1.017,354,0.968,356,1.017,357,0.885,358,1.017,364,2.183,387,0.754,440,1.134,489,1.017,583,1.788,713,2.183,714,3.025,716,0.968,727,2.708,729,1.207,730,2.014,731,2.591,732,3.585,735,3.225,743,3.245,753,2.3,754,2.426,774,3.607,782,1.134,783,1.134,796,1.476,797,0.968,805,2.183,806,2.3,807,2.434,808,1.207,811,1.207,812,1.207,813,1.207,824,1.134,831,1.405,833,1.207,840,2.779,842,1.696,843,1.696,845,1.696,847,1.696,848,1.696,877,1.696,878,1.788,879,3.565,882,1.788,885,1.788,898,3.015,921,1.405,922,1.788,923,2.014,930,1.405,931,3.331,932,2.589,933,4.323,935,2.589,937,2.842,938,3.52,939,3.025,940,1.552,941,4.323,942,2.434,943,2.842,944,1.552,945,2.589,946,3.331,948,1.552,956,1.552,957,1.552,959,1.552,962,1.552,964,1.552,965,1.134,968,3.331,969,1.552,976,1.134,977,1.134,978,1.134,980,3.159,1022,1.295,1023,2.589,1024,1.552,1025,1.207,1028,1.552,1029,1.295,1030,1.552,1031,1.552,1032,1.552,1033,2.343,1034,2.16,1036,1.017,1042,2.842,1043,1.134,1044,1.892,1045,1.134,1046,1.134,1047,1.134,1048,2.434,1049,2.434,1050,2.434,1051,1.788,1052,1.615,1053,1.134,1054,1.134,1055,1.071,1056,1.134,1057,1.134,1099,1.295,1113,1.071,1230,2.782,1231,1.134,1235,1.134,1236,1.696,1237,3.091,1238,4.771,1253,3.889,1257,3.854,1285,1.295,1286,1.552,1291,1.552,1292,2.343,1311,1.552,1326,3.331,1355,1.295,1381,1.295,1388,2.16,1393,1.295,1394,1.295,1404,1.295,1463,1.552,1663,3.744,1805,3.897,1807,3.533,1811,6.91,1812,5.766,1813,3.81,1814,3.81,1815,4.448,1816,3.331,1817,3.81,1818,4.448,1819,2.961,1820,2.961,1821,2.961,1822,4.448,1823,2.961,1824,3.52,1825,3.421,1826,2.961,1827,1.775,1828,1.775,1829,1.775,1830,1.775,1831,1.775,1832,2.961,1833,1.775,1834,2.961,1835,1.775,1836,1.775,1837,2.961,1838,1.775,1839,1.775,1840,1.775,1841,2.961,1842,1.775,1843,1.775,1844,1.775,1845,1.775,1846,1.775,1847,1.775,1848,1.775,1849,1.775,1850,1.775,1851,1.775,1852,1.775,1853,1.775,1854,1.552,1855,1.405,1856,1.775,1857,1.405,1858,1.405,1859,1.775,1860,1.775,1861,2.961,1862,1.552,1863,3.81,1864,1.775,1865,1.775,1866,1.775,1867,1.775,1868,1.775,1869,1.775,1870,1.775,1871,4.448,1872,1.775,1873,1.775,1874,1.552,1875,4.448,1876,1.775,1877,1.775,1878,1.775,1879,1.775,1880,1.775,1881,1.775,1882,1.775,1883,1.775,1884,1.775,1885,1.775,1886,1.775,1887,1.775,1888,2.961,1889,2.961,1890,1.775,1891,1.775,1892,1.775,1893,1.775,1894,1.775,1895,1.775,1896,1.775,1897,1.775,1898,1.775,1899,1.775,1900,1.775,1901,1.775,1902,1.775,1903,1.775,1904,1.775,1905,1.775,1906,1.775,1907,1.775,1908,2.589,1909,1.775,1910,1.775,1911,1.775,1912,2.589,1913,3.889,1914,1.775,1915,1.775,1916,1.775,1917,1.775,1918,1.775,1919,1.775,1920,1.775,1921,1.775,1922,4.448,1923,2.961,1924,2.961,1925,2.961,1926,2.961,1927,1.775,1928,2.961,1929,1.775,1930,1.775,1931,1.552,1932,1.775,1933,3.81,1934,1.775,1935,1.552,1936,2.961,1937,1.775,1938,4.448,1939,1.775,1940,1.775,1941,1.775,1942,4.448,1943,1.552,1944,2.961,1945,1.775,1946,1.775,1947,1.775]],["title/modules/RecipeManagementModule.html",[369,2.149,1948,3.01]],["body/modules/RecipeManagementModule.html",[3,0.123,4,0.111,5,0.098,18,0.013,20,0.123,21,0.008,22,0.008,74,0.808,75,0.448,76,1.431,87,0.465,109,4.206,111,2.482,112,2.345,140,1.294,148,0.448,176,1.591,180,1.591,213,2.15,215,2.15,216,0.972,229,2.25,231,2.15,238,2.206,326,1.651,371,1.783,372,2.485,375,2.699,376,1.936,378,2.954,383,2.954,384,2.023,385,3.46,386,3.269,387,1.651,388,2.82,389,3.982,390,2.119,394,3.269,395,2.345,396,3.683,397,2.642,398,3.683,399,2.642,407,2.119,409,2.023,410,2.345,415,2.588,620,2.954,628,3.95,629,2.834,632,4.734,633,3.397,634,4.734,635,3.397,655,3.683,656,2.642,783,2.482,790,2.834,1063,4.734,1065,3.95,1066,3.95,1067,3.95,1068,2.834,1069,3.95,1070,2.834,1071,3.95,1072,2.834,1073,3.95,1074,2.834,1075,3.95,1076,2.834,1077,3.95,1078,2.834,1079,4.734,1080,4.734,1081,3.397,1082,3.95,1083,2.834,1084,4.734,1085,3.397,1086,4.734,1087,3.397,1088,4.734,1089,3.397,1091,2.834,1092,2.834,1093,2.834,1094,2.834,1095,2.834,1238,2.345,1288,2.642,1812,2.834,1825,4.433,1857,3.075,1948,6.077,1949,3.397,1950,3.397,1951,3.397,1952,3.885,1953,3.885,1954,5.415,1955,3.885,1956,5.415,1957,3.885,1958,5.415,1959,3.885,1960,5.415,1961,3.885,1962,5.415,1963,3.885,1964,5.415,1965,3.885,1966,3.885,1967,3.885,1968,3.885,1969,3.885,1970,3.885]],["title/injectables/RecipeService.html",[31,0.829,1825,2.491]],["body/injectables/RecipeService.html",[3,0.09,4,0.081,5,0.072,8,0.147,11,0.779,17,0.587,18,0.013,19,2.178,20,0.09,21,0.006,22,0.006,28,2.118,31,0.863,33,1.117,35,0.734,36,3.154,41,0.758,42,1.41,43,2.892,44,1.213,46,1.553,47,0.964,48,2.773,50,3.966,52,2.379,53,2.384,54,2.481,55,1.273,56,2.672,64,2.976,72,2.561,74,0.687,75,0.326,76,1.042,77,1.298,78,0.912,80,1.248,81,1.352,83,1.248,84,1.708,85,1.042,86,0.974,87,0.339,89,0.644,90,3.911,92,2.316,93,3.556,95,3.707,96,2.603,97,3.503,99,3.403,101,1.807,104,3.136,105,2.063,107,1.807,125,3.756,135,3.756,140,1.431,178,1.144,216,0.708,230,2.116,251,2.344,258,3.134,309,1.042,363,2.594,440,3.319,479,1.807,481,3.987,535,2.976,675,1.708,678,3.767,680,3.911,805,2.976,1100,3.946,1112,3.756,1113,3.136,1119,5.359,1134,2.063,1140,3.503,1141,2.063,1158,4.233,1159,4.233,1203,3.756,1236,1.62,1237,3.165,1305,3.756,1427,2.063,1663,4.209,1668,2.238,1785,6.299,1802,2.238,1803,3.134,1804,2.238,1805,2.063,1807,1.62,1824,3.4,1825,2.594,1971,2.473,1972,5.196,1973,4.297,1974,3.756,1975,4.297,1976,4.297,1977,5.073,1978,5.803,1979,4.297,1980,2.829,1981,2.829,1982,2.829,1983,4.297,1984,2.829,1985,4.297,1986,4.297,1987,2.829,1988,4.297,1989,2.829,1990,4.297,1991,2.829,1992,2.829,1993,2.829,1994,4.297,1995,4.297,1996,2.829,1997,4.297,1998,2.829,1999,4.297,2000,4.297,2001,2.829,2002,2.829,2003,2.829,2004,2.829,2005,5.196,2006,2.829,2007,4.297,2008,2.829,2009,5.196,2010,2.829,2011,2.829,2012,2.829,2013,2.829,2014,2.829,2015,2.829,2016,2.829,2017,2.829,2018,2.829,2019,2.829,2020,2.829,2021,2.829,2022,2.829,2023,2.829,2024,2.829,2025,2.829,2026,2.829,2027,2.829,2028,2.829,2029,2.829,2030,2.829]],["title/interfaces/RecipeType.html",[0,0.553,1807,2.364]],["body/interfaces/RecipeType.html",[0,0.805,2,1.817,3,0.19,4,0.171,5,0.152,8,0.311,9,1.187,11,0.932,16,1.871,17,0.649,18,0.012,19,2.323,20,0.19,21,0.01,22,0.01,28,2.568,47,1.029,52,3.037,286,3.806,1232,4.757,1807,4.116,1855,4.757]],["title/components/RecipesComponent.html",[148,0.475,231,1.208]],["body/components/RecipesComponent.html",[3,0.055,4,0.049,5,0.044,8,0.09,9,0.479,11,0.54,16,0.64,17,0.578,18,0.013,19,1.324,20,0.055,21,0.004,22,0.004,28,1.412,35,0.495,36,2.012,41,0.512,44,1.21,46,1.077,47,0.759,52,0.66,53,1.718,54,0.999,55,0.842,68,0.54,72,0.764,74,0.607,75,0.199,83,2.152,87,0.207,89,0.394,122,0.827,133,0.823,140,0.577,148,0.431,149,0.54,150,0.935,151,0.577,152,1.207,153,0.577,154,0.577,156,1.247,157,0.577,158,2.454,159,2.376,160,0.966,162,0.966,165,1.459,171,1.622,172,1.736,173,2.324,177,0.795,178,0.997,182,1.853,193,0.577,194,0.966,195,0.966,196,0.577,197,1.459,198,0.577,199,0.577,200,0.507,201,0.577,202,0.491,203,0.577,204,0.507,205,0.577,206,0.507,207,0.577,208,0.507,209,0.42,210,0.966,211,0.507,212,0.577,213,0.507,214,0.577,215,0.507,216,1.096,217,0.577,218,0.507,219,0.577,220,0.507,221,0.577,222,0.507,223,0.523,224,0.577,225,0.507,226,0.577,227,0.507,228,0.577,229,0.849,230,1.965,231,1.282,232,0.577,233,0.507,234,0.54,235,0.577,236,0.507,237,0.577,238,0.507,239,0.577,240,0.507,241,0.577,242,0.507,243,0.577,244,0.507,245,0.577,246,0.577,262,1.263,301,0.999,309,1.613,314,3.061,315,2.808,316,3.061,319,3.234,328,2.042,331,0.902,332,3.382,343,2.43,353,1.662,354,1.582,355,2.144,357,2.43,358,3.367,359,3.185,360,3.441,361,3.614,362,4.004,363,3.185,365,3.466,415,1.386,440,1.853,489,0.992,698,1.514,709,4.155,710,2.944,711,2.536,713,2.144,716,3.618,726,5.799,727,3.17,729,3.997,730,2.546,731,3.588,732,4.222,733,3.272,734,3.859,735,2.944,736,3.272,743,3.195,745,3.272,746,3.272,748,2.536,749,2.536,752,3.383,753,2.26,754,2.389,760,2.536,762,2.536,774,2.731,782,1.106,783,1.106,788,1.177,790,1.263,796,0.863,797,0.944,808,1.177,811,1.177,812,1.177,815,1.514,816,1.514,817,2.536,818,3.828,819,3.828,820,2.536,821,2.536,822,1.514,824,2.392,825,1.514,830,2.536,831,2.295,832,2.536,833,3.588,834,2.978,835,2.536,836,3.828,837,1.853,838,1.514,839,1.514,840,2.116,842,2.509,843,2.509,844,2.546,845,2.509,846,2.546,847,2.793,848,2.793,849,1.853,850,2.116,851,1.514,852,1.514,858,1.37,859,1.514,860,1.177,861,1.514,862,1.106,863,1.514,864,1.177,865,1.263,866,1.973,867,1.973,868,1.177,869,1.177,870,1.177,871,1.973,874,1.263,875,1.106,877,0.992,878,1.045,879,3.206,882,1.045,884,3.557,907,5.45,915,2.962,916,2.116,917,2.731,918,1.973,921,1.37,922,1.751,923,1.177,926,2.295,1042,2.392,1043,1.106,1044,1.853,1045,1.106,1046,1.106,1047,1.106,1048,2.392,1049,2.392,1050,2.392,1051,1.751,1052,1.582,1053,1.106,1054,1.106,1055,1.045,1056,1.106,1057,1.106,1064,1.177,1099,2.116,1113,3.185,1119,3.848,1167,1.514,1209,1.263,1210,1.514,1225,1.514,1230,1.949,1231,1.106,1236,0.992,1237,2.66,1238,4.464,1241,1.177,1242,1.263,1243,1.263,1246,3.272,1285,1.263,1292,1.37,1334,4.263,1338,3.466,1377,3.466,1381,3.195,1388,1.263,1393,1.263,1394,1.263,1397,4.175,1398,1.37,1404,1.263,1659,1.514,1663,2.144,1803,3.557,1807,1.662,1812,1.263,1816,3.272,1824,2.295,1825,3.185,1854,1.514,1857,1.37,1874,1.514,1908,1.514,1912,3.828,1913,5.138,1943,3.272,1974,2.536,1977,1.514,2031,1.514,2032,3.743,2033,2.901,2034,3.743,2035,4.379,2036,1.732,2037,2.901,2038,1.732,2039,2.536,2040,2.901,2041,1.732,2042,2.901,2043,2.901,2044,2.901,2045,1.732,2046,1.732,2047,1.732,2048,2.901,2049,1.732,2050,1.732,2051,1.732,2052,1.732,2053,1.732,2054,1.732,2055,1.732,2056,1.732,2057,1.732,2058,1.732,2059,1.732,2060,1.732,2061,1.732,2062,1.732,2063,4.877,2064,1.732,2065,1.732,2066,1.732,2067,2.901,2068,1.732,2069,2.536,2070,2.901,2071,1.732,2072,4.379,2073,1.732,2074,1.732,2075,1.732,2076,1.732,2077,1.732,2078,1.732,2079,1.732,2080,1.732,2081,2.901,2082,2.901,2083,4.379,2084,1.732,2085,1.732,2086,1.732,2087,1.732,2088,1.732,2089,1.732,2090,2.901,2091,1.732,2092,1.732,2093,2.901,2094,2.901,2095,2.901,2096,1.732,2097,1.732,2098,1.732,2099,1.732,2100,1.514,2101,2.901,2102,1.514,2103,2.901,2104,2.901,2105,1.732,2106,1.732,2107,1.732,2108,1.732,2109,1.732,2110,1.732,2111,1.732,2112,1.732,2113,1.732,2114,1.732,2115,1.732,2116,1.514,2117,1.732,2118,3.272,2119,1.514,2120,1.732,2121,1.732]],["title/interfaces/Saturday.html",[0,0.553,667,1.894]],["body/interfaces/Saturday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.331,664,3.331,665,3.331,666,3.331,667,3.494,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/interfaces/Schedule.html",[0,0.553,661,1.63]],["body/interfaces/Schedule.html",[0,1.11,2,1.516,3,0.159,4,0.143,5,0.127,8,0.26,9,1.061,16,1.65,17,0.655,18,0.012,20,0.262,21,0.009,22,0.009,657,3.889,658,2.5,659,3.202,660,3.202,661,2.537,662,3.735,663,3.735,664,3.735,665,3.735,666,3.735,667,3.735,668,3.735,669,2.612,670,3.896,671,4.005,672,2.5]],["title/injectables/ScheduleService.html",[31,0.829,2122,3.265]],["body/injectables/ScheduleService.html",[3,0.133,4,0.119,5,0.106,8,0.217,11,0.771,17,0.567,18,0.012,20,0.133,21,0.008,22,0.008,31,1.145,33,1.654,35,0.973,36,3.025,41,1.006,42,2.087,43,3.469,44,1.149,46,1.537,47,0.899,48,2.725,50,4.927,52,2.174,53,3.194,55,1.2,56,2.561,72,3.453,74,0.732,75,0.482,76,1.542,77,1.922,78,1.35,80,1.848,81,2.001,83,1.848,84,2.528,85,1.542,86,1.442,87,0.501,89,0.954,92,2.201,93,3.377,95,2.676,96,2.472,97,2.528,99,3.231,104,3.442,105,3.055,178,1.519,209,1.946,309,1.542,479,2.676,481,4.142,535,3.266,661,3.33,675,2.528,678,4.202,680,4.404,1133,3.661,1134,3.055,1140,3.442,1158,4.16,1159,4.16,1424,3.661,2122,4.512,2123,3.661,2124,6.484,2125,5.702,2126,6.484,2127,4.188,2128,4.188,2129,4.188,2130,7.514,2131,5.702,2132,4.188,2133,4.188,2134,4.188,2135,4.188,2136,4.188,2137,4.188,2138,4.188]],["title/components/ServerErrorComponent.html",[148,0.475,233,1.208]],["body/components/ServerErrorComponent.html",[3,0.083,4,0.075,5,0.067,8,0.136,18,0.012,20,0.083,21,0.006,22,0.006,35,0.695,41,0.877,44,0.672,47,0.526,55,0.421,68,0.822,74,0.247,75,0.304,87,0.316,89,0.927,133,1.154,148,0.573,149,0.822,150,1.312,151,0.878,152,0.849,153,0.878,154,0.878,156,1.656,157,0.878,158,2.619,159,2.535,160,1.356,162,1.356,165,1.863,171,1.018,193,0.878,194,1.356,195,1.356,196,0.878,197,1.863,198,0.878,199,0.878,200,0.772,201,0.878,202,0.747,203,0.878,204,0.772,205,0.878,206,0.772,207,0.878,208,0.772,209,0.639,210,1.356,211,0.772,212,0.878,213,0.772,214,0.878,215,0.772,216,0.659,217,0.878,218,0.772,219,0.878,220,0.772,221,0.878,222,0.772,223,0.796,224,0.878,225,0.772,226,0.878,227,0.772,228,0.878,229,0.772,230,0.68,231,0.772,232,0.878,233,1.637,234,2.147,235,0.878,236,0.772,237,0.878,238,0.772,239,0.878,240,0.772,241,0.878,242,0.772,243,0.878,244,0.772,245,0.878,246,0.878,309,1.499,322,5.878,325,5.443,326,2.922,327,5.353,329,2.085,330,5.017,331,3.468,332,2.922,335,2.085,340,1.922,343,4.049,346,3.856,354,2.22,355,1.509,356,2.848,361,4.13,443,5.378,641,3.935,715,2.304,797,4.003,915,2.085,925,4.347,1036,2.848,1352,4.347,1356,3.935,1400,4.783,1631,2.304,1632,6.171,1643,4.347,1645,3.558,1647,4.347,1652,3.558,1653,3.558,2069,2.304,2102,3.558,2119,4.347,2139,4.347,2140,2.304,2141,4.972,2142,4.07,2143,2.635,2144,2.635,2145,4.07,2146,4.07,2147,4.889,2148,2.635,2149,4.07,2150,2.635,2151,2.635,2152,2.635,2153,2.635,2154,2.635,2155,2.635,2156,2.635,2157,2.635,2158,2.635,2159,7.772,2160,5.592,2161,7.059,2162,4.972,2163,6.044,2164,2.635,2165,2.635,2166,2.635,2167,2.635,2168,2.635,2169,2.635,2170,1.922,2171,2.635,2172,4.07,2173,2.635,2174,4.07,2175,2.635,2176,2.635,2177,2.635,2178,2.635,2179,2.635,2180,2.635,2181,2.635,2182,7.059,2183,6.388,2184,4.07,2185,4.07,2186,4.07,2187,4.07,2188,5.592,2189,4.07,2190,4.07,2191,4.07,2192,4.972,2193,2.635,2194,4.972,2195,6.388,2196,4.07,2197,2.635,2198,4.07,2199,4.07,2200,4.972,2201,2.635,2202,4.972,2203,7.21,2204,2.635,2205,2.635,2206,2.635,2207,2.635,2208,2.635,2209,2.635,2210,2.635,2211,4.07,2212,2.635,2213,2.635,2214,4.07,2215,6.388,2216,2.635,2217,4.07,2218,2.304,2219,2.635,2220,2.085,2221,2.304,2222,4.972,2223,2.635,2224,2.635,2225,4.07,2226,2.635,2227,2.635,2228,4.07,2229,2.635,2230,2.635]],["title/components/SidebarComponent.html",[148,0.475,236,1.208]],["body/components/SidebarComponent.html",[3,0.125,4,0.112,5,0.1,8,0.204,9,0.903,11,0.695,17,0.512,18,0.012,20,0.125,21,0.008,22,0.008,35,0.933,41,0.965,44,1.249,46,0.87,47,0.811,54,1.356,55,1.002,56,2.259,66,2.415,68,1.229,74,0.733,75,0.454,78,1.27,87,0.472,89,0.897,96,1.502,133,1.551,148,0.723,149,1.229,150,1.763,151,1.312,152,1.27,153,1.312,154,1.312,156,2.092,157,1.312,158,2.735,159,2.648,160,1.821,162,1.821,165,2.259,171,1.845,172,1.402,173,1.451,178,1.456,193,1.312,194,1.821,195,1.821,196,1.312,197,2.259,198,1.312,199,1.312,200,1.153,201,1.312,202,1.117,203,1.312,204,1.153,205,1.312,206,1.153,207,1.312,208,1.153,209,0.955,210,1.821,211,1.153,212,1.312,213,1.153,214,1.312,215,1.153,216,0.986,217,1.312,218,1.153,219,1.312,220,1.153,221,1.312,222,1.153,223,1.191,224,1.312,225,1.153,226,1.312,227,1.153,228,1.312,229,1.153,230,1.017,231,1.153,232,1.312,233,1.153,234,1.229,235,1.312,236,1.986,237,1.312,238,1.153,239,1.312,240,1.153,241,1.312,242,1.153,243,1.312,244,1.153,245,1.312,246,1.312,247,2.378,251,4.022,255,2.149,273,2.874,278,2.679,281,2.149,283,2.517,299,3.718,301,1.882,302,2.413,314,2.051,315,1.882,316,2.051,319,1.882,356,2.256,357,3.13,431,4.948,514,3.444,716,2.149,729,3.718,834,2.679,938,5.368,1036,2.256,1602,3.444,2231,3.444,2232,5.468,2233,6.28,2234,5.468,2235,6.28,2236,5.143,2237,5.468,2238,3.939,2239,3.939,2240,3.939,2241,3.939,2242,3.939,2243,3.444,2244,3.444,2245,3.939,2246,3.444,2247,3.939,2248,3.939,2249,3.939,2250,3.444,2251,3.939,2252,3.939,2253,3.939,2254,3.939]],["title/injectables/SidebarService.html",[31,0.829,2236,2.806]],["body/injectables/SidebarService.html",[3,0.16,4,0.144,5,0.128,8,0.261,9,1.064,11,0.713,17,0.61,18,0.012,20,0.16,21,0.009,22,0.009,31,1.294,33,1.991,35,1.1,36,2.709,41,0.889,42,2.512,43,3.731,44,1.307,46,1.423,47,0.832,48,3.079,54,2.219,55,1.029,56,2.366,74,0.724,75,0.581,76,1.856,77,2.313,78,1.625,80,2.224,81,2.408,85,1.856,86,1.735,87,0.604,88,2.408,90,4.069,92,1.948,96,1.922,118,4.009,171,1.612,172,2.294,173,2.373,178,1.994,301,2.446,357,3.731,679,3.427,1140,3.042,1563,5.634,1606,6.21,2236,4.382,2255,4.406,2256,7.104,2257,5.925,2258,5.634,2259,6.444,2260,5.04,2261,6.444,2262,5.04,2263,6.444,2264,5.04,2265,5.04,2266,5.04,2267,5.04,2268,4.406,2269,5.04,2270,5.04]],["title/interfaces/Sunday.html",[0,0.553,668,1.894]],["body/interfaces/Sunday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.331,664,3.331,665,3.331,666,3.331,667,3.331,668,3.494,669,2.749,670,3.962,671,4.164,672,2.631]],["title/components/TabsComponent.html",[148,0.475,238,1.208]],["body/components/TabsComponent.html",[3,0.147,4,0.132,5,0.117,8,0.24,18,0.012,20,0.147,21,0.009,22,0.009,35,1.042,41,1.204,44,1.008,47,0.788,55,0.74,68,1.447,74,0.434,75,0.534,87,0.555,89,1.39,133,1.731,148,0.786,149,1.447,150,1.968,151,1.544,152,1.494,153,1.544,154,1.544,156,2.273,157,1.544,158,2.773,159,2.684,160,2.033,162,2.033,165,2.416,171,1.527,193,1.544,194,2.033,195,2.033,196,1.544,197,2.416,198,1.544,199,1.544,200,1.357,201,1.544,202,1.315,203,1.544,204,1.357,205,1.544,206,1.357,207,1.544,208,1.357,209,1.124,210,2.033,211,1.357,212,1.544,213,1.357,214,1.544,215,1.357,216,1.16,217,1.544,218,1.357,219,1.544,220,1.357,221,1.544,222,1.357,223,1.401,224,1.544,225,1.357,226,1.544,227,1.357,228,1.544,229,1.357,230,1.197,231,1.357,232,1.544,233,1.357,234,1.447,235,1.544,236,1.357,237,1.544,238,2.123,239,1.544,240,1.357,241,1.544,242,1.357,243,1.544,244,1.357,245,1.544,246,1.544,319,3.601,350,3.382,360,3.329,364,2.655,1238,4.119,2271,4.053,2272,6.104,2273,6.824,2274,6.104,2275,4.636,2276,4.636,2277,4.636,2278,7.738,2279,7.252,2280,4.636,2281,4.636,2282,4.636]],["title/interfaces/Thursday.html",[0,0.553,665,1.894]],["body/interfaces/Thursday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.331,664,3.331,665,3.494,666,3.331,667,3.331,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/components/TitleComponent.html",[148,0.475,240,1.208]],["body/components/TitleComponent.html",[3,0.138,4,0.124,5,0.11,8,0.226,16,1.563,17,0.478,18,0.012,20,0.138,21,0.008,22,0.008,35,1.001,41,1.168,44,1.169,47,0.757,52,2.816,55,0.697,68,1.362,74,0.408,75,0.503,87,0.523,89,1.336,133,1.663,148,0.763,149,1.362,150,1.89,151,1.453,152,1.407,153,1.453,154,1.453,156,2.205,157,1.453,158,2.759,159,2.671,160,1.953,162,1.953,164,5.284,165,2.358,171,1.467,193,1.453,194,1.953,195,1.953,196,1.453,197,2.358,198,1.453,199,1.453,200,1.278,201,1.453,202,1.238,203,1.453,204,1.278,205,1.453,206,1.278,207,1.453,208,1.278,209,1.058,210,1.953,211,1.278,212,1.453,213,1.278,214,1.453,215,1.278,216,1.092,217,1.453,218,1.278,219,1.453,220,1.278,221,1.453,222,1.278,223,1.319,224,1.453,225,1.278,226,1.453,227,1.278,228,1.453,229,1.278,230,1.126,231,1.278,232,1.453,233,1.278,234,1.362,235,1.453,236,1.278,237,1.453,238,1.278,239,1.453,240,2.073,241,1.453,242,1.278,243,1.453,244,1.278,245,1.453,246,1.453,340,3.183,346,2.634,361,3.358,364,3.358,709,2.967,712,3.453,713,2.499,922,2.634,923,2.967,1051,2.634,1052,3.612,1342,3.815,1345,5.789,1346,3.815,1356,3.453,1361,3.815,1532,5.126,1931,3.815,2116,3.815,2283,3.815,2284,6.622,2285,5.863,2286,5.863,2287,4.364,2288,4.364,2289,4.364,2290,4.364,2291,4.364,2292,4.364,2293,4.364,2294,4.364,2295,4.364,2296,5.863,2297,4.364,2298,4.364,2299,4.364]],["title/components/TopbarComponent.html",[148,0.475,242,1.208]],["body/components/TopbarComponent.html",[3,0.123,4,0.111,5,0.098,8,0.201,9,0.894,11,0.69,16,1.195,17,0.549,18,0.012,20,0.123,21,0.008,22,0.008,35,0.924,36,2.377,41,0.955,44,1.244,46,0.858,47,0.805,55,0.995,56,2.076,66,2.869,68,1.213,74,0.705,75,0.448,78,1.252,87,0.465,89,0.885,122,1.857,133,1.536,148,0.718,149,1.213,150,1.746,151,1.294,152,1.252,153,1.294,154,1.294,156,2.076,157,1.294,158,2.732,159,2.645,160,1.804,162,1.804,165,2.246,171,1.885,178,1.889,187,2.482,188,2.642,189,2.642,190,2.642,191,2.642,192,2.226,193,1.294,194,1.804,195,1.804,196,1.294,197,2.246,198,1.294,199,1.294,200,1.138,201,1.294,202,1.102,203,1.294,204,1.138,205,1.294,206,1.138,207,1.294,208,1.138,209,0.942,210,1.804,211,1.138,212,1.294,213,1.138,214,1.294,215,1.138,216,0.972,217,1.294,218,1.138,219,1.294,220,1.138,221,1.294,222,1.138,223,1.174,224,1.294,225,1.138,226,1.294,227,1.138,228,1.294,229,1.138,230,1.003,231,1.138,232,1.294,233,1.138,234,1.213,235,1.294,236,1.138,237,1.294,238,1.138,239,1.294,240,1.138,241,1.294,242,1.974,243,1.294,244,1.138,245,1.294,246,1.294,247,2.345,251,4.109,255,2.119,272,5.895,273,2.834,278,2.642,281,2.119,283,2.482,284,2.642,285,3.075,292,3.397,293,2.226,294,3.075,299,3.683,309,2.484,310,3.397,311,2.642,2236,5.124,2243,3.397,2244,3.397,2250,3.397,2300,3.397,2301,5.415,2302,6.234,2303,5.415,2304,6.234,2305,6.743,2306,5.415,2307,3.885,2308,3.885,2309,3.885,2310,3.885,2311,3.885,2312,3.885,2313,3.885]],["title/interfaces/Tuesday.html",[0,0.553,663,1.894]],["body/interfaces/Tuesday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.494,664,3.331,665,3.331,666,3.331,667,3.331,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/interfaces/User.html",[0,0.553,66,1.469]],["body/interfaces/User.html",[0,0.91,2,1.657,3,0.174,4,0.156,5,0.139,8,0.284,9,1.122,11,0.946,16,1.887,17,0.675,18,0.012,19,2.232,20,0.215,21,0.01,22,0.01,28,2.488,66,2.419,279,4.21,286,3.247,301,2.339,465,4.659,575,4.931,576,3.503,577,3.503,614,5.63,615,3.999,616,5.249,617,5.249,618,4.659,619,4.421]],["title/injectables/UserEffects.html",[31,0.829,402,2.806]],["body/injectables/UserEffects.html",[3,0.147,4,0.132,5,0.118,8,0.241,9,1.01,11,0.515,17,0.379,18,0.013,20,0.147,21,0.009,22,0.009,31,1.228,33,1.836,41,1.079,44,1.128,46,1.026,47,0.6,74,0.725,75,0.536,77,2.134,87,0.557,118,3.934,132,3.392,172,2.177,173,2.253,178,1.82,284,3.162,298,5.347,302,2.699,311,4.647,392,3.392,402,4.159,488,2.971,489,2.663,1565,5.975,1697,4.765,1741,5.502,1774,4.065,1777,4.647,2268,5.347,2314,4.065,2315,4.65,2316,6.128,2317,4.65,2318,7.894,2319,7.744,2320,6.116,2321,7.261,2322,6.116,2323,4.65,2324,6.116,2325,6.116,2326,6.116,2327,6.116,2328,4.65,2329,4.65,2330,4.65,2331,3.679,2332,4.65,2333,4.65,2334,4.65,2335,4.65,2336,4.65,2337,4.65,2338,4.65]],["title/injectables/UserService.html",[31,0.829,2339,3.265]],["body/injectables/UserService.html",[3,0.157,4,0.141,5,0.125,8,0.256,11,0.779,17,0.573,18,0.012,19,2.128,20,0.157,21,0.009,22,0.009,28,1.594,31,1.278,33,1.953,35,1.087,41,0.872,42,2.464,43,3.705,44,1.227,46,1.554,47,0.909,48,3.042,55,1.124,56,2.562,66,2.889,74,0.737,75,0.57,76,1.821,77,2.269,78,1.594,80,2.182,81,2.363,85,1.821,86,1.702,87,0.592,88,2.363,89,1.126,92,2.128,93,3.315,140,1.647,178,1.875,180,2.606,279,2.697,280,3.913,281,2.697,302,2.809,304,4.643,305,3.362,306,3.362,429,5.037,462,5.037,475,5.037,568,5.037,569,5.037,575,3.159,576,3.159,577,3.159,578,3.913,579,3.913,580,3.913,2339,5.037,2340,4.322,2341,7.434,2342,6.365,2343,4.944,2344,4.944,2345,6.365,2346,4.944,2347,4.944,2348,4.944,2349,4.322]],["title/interfaces/UserState.html",[0,0.553,2350,2.806]],["body/interfaces/UserState.html",[0,0.908,2,1.651,3,0.173,4,0.156,5,0.138,8,0.283,9,1.12,11,0.751,17,0.552,18,0.012,20,0.244,21,0.01,22,0.01,66,2.876,74,0.69,92,2.049,115,5.927,122,2.611,140,2.456,255,2.98,258,3.985,261,4.741,262,4.946,281,2.98,284,3.715,437,3.715,1741,5.974,2316,4.324,2350,5.013,2351,4.324,2352,5.927,2353,5.464,2354,4.776,2355,5.464,2356,5.464,2357,5.464,2358,5.464,2359,5.464,2360,5.464,2361,4.324,2362,5.366,2363,4.776,2364,4.324,2365,4.776,2366,5.927,2367,4.776]],["title/components/UsersComponent.html",[148,0.475,244,1.208]],["body/components/UsersComponent.html",[3,0.06,4,0.054,5,0.048,8,0.098,9,0.517,11,0.442,17,0.566,18,0.013,19,1.669,20,0.06,21,0.004,22,0.004,28,1.288,35,0.534,41,0.552,44,1.234,46,0.882,47,0.662,55,0.975,66,2.722,68,1.905,74,0.546,75,0.219,83,0.838,87,0.227,89,0.432,96,0.724,122,1.909,133,0.888,140,0.632,148,0.46,149,0.592,150,1.009,151,0.632,152,1.288,153,0.632,154,0.632,156,1.331,157,0.632,158,2.494,159,2.415,160,1.043,162,1.043,164,2.129,165,1.544,171,1.792,172,1.115,173,1.472,177,0.871,178,1.626,180,1.898,193,0.632,194,1.043,195,1.043,196,0.632,197,1.709,198,0.632,199,0.632,200,0.556,201,0.632,202,0.538,203,0.632,204,0.556,205,0.632,206,0.556,207,0.632,208,0.556,209,0.46,210,1.043,211,0.556,212,0.632,213,0.556,214,0.632,215,0.556,216,0.475,217,0.632,218,0.556,219,0.632,220,0.556,221,0.632,222,0.556,223,0.574,224,0.632,225,0.556,226,0.632,227,0.556,228,0.632,229,0.556,230,0.49,231,0.556,232,0.632,233,0.556,234,0.592,235,0.632,236,0.556,237,0.632,238,0.556,239,0.632,240,0.556,241,0.632,242,0.556,243,0.632,244,1.357,245,0.632,246,0.632,281,1.035,299,3.488,301,1.901,302,2.437,309,2.4,314,2.672,315,2.451,316,2.672,319,3.717,328,2.798,331,0.988,332,2.593,343,0.946,353,1.087,354,1.035,355,3.163,357,3.042,358,1.087,359,1.146,360,1.035,362,2.412,364,1.793,387,0.806,415,1.496,443,1.213,489,1.087,616,2.717,617,2.717,618,2.412,619,3.345,709,2.717,710,1.146,713,2.289,714,2.717,716,3.012,727,3.023,730,2.129,731,2.129,732,3.525,735,2.412,740,2.553,742,3.162,752,3.819,753,2.412,754,2.529,782,1.213,788,1.291,796,0.946,797,1.035,805,2.289,806,2.412,807,2.553,808,1.291,811,1.291,812,1.291,813,1.291,824,2.553,833,1.291,834,1.291,837,3.9,842,3.163,843,3.163,844,2.717,845,3.163,846,2.717,847,3.163,848,2.656,849,1.213,860,1.291,862,1.213,864,1.291,865,1.384,866,1.291,867,2.129,868,1.291,869,1.291,870,1.291,871,2.129,874,1.384,875,2.553,876,2.915,877,2.656,878,2.799,879,3.185,882,1.89,883,1.291,884,1.384,885,2.799,887,3.382,908,2.284,909,2.477,910,2.284,911,2.284,916,2.284,917,1.384,918,1.291,922,1.89,936,4.053,937,2.962,939,3.153,942,2.553,943,2.962,965,1.213,976,2.553,977,1.213,978,1.213,980,2.962,983,1.502,1012,1.659,1025,2.717,1029,1.384,1036,1.087,1042,2.962,1043,1.213,1044,2,1045,1.213,1046,1.213,1047,1.213,1048,2.553,1049,2.553,1050,2.553,1051,1.89,1052,1.708,1053,1.213,1054,1.213,1055,1.146,1056,1.213,1057,1.213,1172,1.659,1209,1.384,1241,2.717,1242,2.915,1243,3.742,1250,3.669,1298,3.493,1309,3.669,1313,1.659,1314,1.659,1316,1.659,1318,1.659,1320,1.502,1321,1.502,1322,1.502,1324,1.659,1338,3.162,1367,3.493,1368,1.659,1369,3.493,1370,1.659,1371,1.659,1372,1.502,1373,1.659,1374,1.659,1375,1.659,1376,4.485,1377,2.477,1378,1.659,1379,5.841,1380,3.493,1381,3.382,1382,1.659,1383,2.737,1384,4.827,1385,2.737,1386,3.493,1387,1.659,1388,1.384,1389,1.659,1390,1.659,1391,1.659,1392,3.493,1393,1.384,1394,1.384,1395,1.659,1396,1.659,1397,1.502,1398,1.502,1399,1.659,1400,1.502,1401,1.659,1402,4.053,1403,1.502,1404,1.384,1405,1.659,1743,1.659,1746,1.659,1748,1.659,1749,1.659,1750,1.659,1751,1.659,1756,4.053,1757,4.485,1758,4.485,1759,4.053,1760,4.053,2257,1.502,2368,1.659,2369,3.996,2370,3.131,2371,3.996,2372,3.996,2373,3.996,2374,3.131,2375,4.053,2376,3.131,2377,1.898,2378,3.528,2379,3.131,2380,3.131,2381,1.898,2382,1.898,2383,1.898,2384,1.898,2385,1.898,2386,1.898,2387,3.131,2388,1.898,2389,1.898,2390,1.898,2391,1.898,2392,1.898,2393,1.898,2394,1.898,2395,1.898,2396,1.898,2397,1.898,2398,1.898,2399,1.659,2400,1.898,2401,5.13,2402,3.131,2403,3.131,2404,3.131,2405,3.131,2406,1.898,2407,3.131,2408,4.636,2409,1.898,2410,3.131,2411,1.898,2412,1.898,2413,3.131,2414,1.898,2415,1.898,2416,3.131,2417,3.131,2418,6.105]],["title/modules/UsersModule.html",[369,2.149,2419,3.01]],["body/modules/UsersModule.html",[3,0.147,4,0.132,5,0.118,18,0.012,20,0.147,21,0.009,22,0.009,74,0.801,75,0.536,76,1.713,87,0.557,109,4.436,111,2.971,112,2.807,140,1.549,148,0.704,176,1.904,177,2.134,180,1.904,244,2.311,326,1.975,371,2.134,372,2.806,375,3.048,376,2.317,378,3.336,383,3.336,384,2.421,385,3.907,386,3.692,387,1.975,388,3.185,389,4.366,390,2.536,394,3.692,395,2.807,407,2.536,409,2.421,410,2.807,415,2.922,620,3.336,655,4.159,656,3.162,727,2.922,752,3.692,1064,3.162,1065,4.461,1066,4.461,1067,4.461,1068,3.392,1069,4.461,1070,3.392,1071,4.461,1072,3.392,1073,4.461,1074,3.392,1075,4.461,1076,3.392,1077,4.461,1078,3.392,1082,4.461,1083,3.392,1091,3.392,1092,3.392,1093,3.392,1094,3.392,1095,3.392,1146,3.162,1768,3.392,1769,5.347,1770,4.065,1771,5.347,1772,4.065,2378,4.947,2399,4.065,2419,5.966,2420,4.065,2421,4.065,2422,4.065,2423,4.65,2424,4.65]],["title/injectables/UsersService.html",[31,0.829,2378,2.636]],["body/injectables/UsersService.html",[3,0.193,4,0.106,5,0.094,8,0.193,11,0.803,17,0.59,18,0.012,19,2.338,20,0.118,21,0.007,22,0.007,28,2.136,31,1.057,33,1.474,35,0.899,36,3.161,41,0.658,42,1.86,43,3.302,44,1.23,46,1.6,47,0.936,48,2.516,50,3.682,52,2.326,53,2.416,54,2.281,55,1.278,56,2.687,64,3.494,66,2.872,68,1.643,72,3.083,74,0.678,75,0.43,76,1.375,77,1.713,78,1.203,80,1.647,81,1.783,83,1.647,84,2.253,85,1.375,86,1.285,87,0.447,88,1.783,89,0.85,90,4.152,92,2.191,93,3.775,95,4.232,96,2.664,97,2.253,99,3.04,101,2.384,104,3.178,107,2.384,171,0.934,209,1.97,258,3.84,281,2.036,426,4.166,428,4.602,437,3.58,465,3.682,488,2.384,535,3.016,564,3.263,1113,3.682,1116,4.602,1137,3.263,1138,3.263,1139,3.263,1140,3.178,1141,2.722,1427,2.722,1777,3.58,2257,5.242,2349,3.263,2375,4.602,2378,3.363,2425,3.263,2426,5.265,2427,3.732,2428,5.265,2429,3.732,2430,5.265,2431,3.732,2432,5.265,2433,3.732,2434,3.732,2435,5.265,2436,5.265,2437,3.732,2438,5.265,2439,5.265,2440,3.732,2441,6.1,2442,5.265,2443,3.732,2444,3.732,2445,3.732,2446,3.732,2447,3.732]],["title/interfaces/Wednesday.html",[0,0.553,664,1.894]],["body/interfaces/Wednesday.html",[0,1.119,2,1.596,3,0.167,4,0.15,5,0.134,8,0.273,9,1.096,11,0.843,16,1.681,17,0.541,18,0.012,20,0.265,21,0.009,22,0.009,657,3.992,658,2.631,659,3.307,660,3.307,661,2.085,662,3.331,663,3.331,664,3.494,665,3.331,666,3.331,667,3.331,668,3.331,669,2.749,670,3.962,671,4.164,672,2.631]],["title/coverage.html",[2448,4.467]],["body/coverage.html",[0,1.081,1,1.832,5,0.064,6,2.196,7,2.196,17,0.205,18,0.012,21,0.006,22,0.006,23,1.439,24,2.196,31,1.547,32,1.832,34,2.196,54,0.865,66,0.894,80,2.405,108,3.103,109,1.439,111,1.605,112,1.516,113,2.196,118,1.252,148,0.922,149,0.784,155,2.196,200,0.735,202,0.713,204,0.735,206,0.735,208,0.735,209,0.609,211,0.735,213,0.735,215,0.735,216,0.629,218,0.735,220,0.735,222,0.735,225,0.735,227,0.735,229,0.735,230,0.649,231,0.735,233,0.735,236,0.735,238,0.735,240,0.735,242,0.735,244,0.735,247,1.516,248,3.976,256,1.988,259,2.667,267,1.988,268,2.196,283,1.605,311,1.708,331,2.838,332,3.704,402,1.708,416,2.196,434,1.605,486,1.832,614,1.832,615,2.861,641,1.988,643,2.196,657,1.2,658,3.546,661,0.992,662,1.153,663,1.153,664,1.153,665,1.153,666,1.153,667,1.153,668,1.153,670,1.153,673,1.832,674,3.103,675,2.367,676,3.103,680,1.439,697,2.196,718,2.196,725,2.196,751,1.516,754,1.37,789,1.832,796,1.954,829,1.988,929,2.196,930,3.103,1096,1.708,1097,2.196,1098,2.196,1102,2.196,1160,2.196,1166,1.988,1184,1.988,1185,2.196,1186,2.196,1187,2.196,1230,1.308,1231,1.605,1232,3.103,1233,2.196,1238,3.568,1239,2.196,1257,1.708,1258,1.708,1287,1.832,1288,2.667,1337,1.988,1372,1.988,1408,2.196,1429,2.196,1430,2.196,1476,2.196,1499,3.103,1500,1.988,1502,3.103,1503,2.196,1504,2.196,1515,1.988,1516,2.196,1517,2.196,1529,2.196,1534,2.861,1550,2.196,1571,2.196,1594,2.196,1603,1.988,1604,2.196,1620,2.196,1621,1.988,1622,2.196,1663,1.439,1664,2.196,1669,2.196,1685,2.196,1697,1.516,1776,2.196,1777,1.708,1800,2.196,1807,1.439,1811,2.196,1812,1.832,1825,1.516,1855,1.988,1862,7.45,1971,2.196,2031,2.196,2122,1.988,2123,2.196,2139,2.196,2140,2.196,2147,2.196,2170,1.832,2220,1.988,2231,2.196,2236,1.708,2255,2.196,2271,2.196,2283,2.196,2300,2.196,2314,2.196,2331,1.988,2339,1.988,2340,2.196,2350,1.708,2351,4.313,2361,1.988,2362,1.988,2364,1.988,2368,2.196,2378,1.605,2425,2.196,2448,1.988,2449,2.196,2450,2.512,2451,2.512,2452,2.196,2453,3.428,2454,8.514,2455,5.911,2456,6.77,2457,7.921,2458,4.824,2459,5.45,2460,3.922,2461,2.512,2462,2.196,2463,2.512,2464,2.512,2465,2.512,2466,2.512,2467,2.512,2468,2.512,2469,2.512,2470,2.196,2471,2.196,2472,4.217,2473,4.217,2474,2.196,2475,2.196,2476,2.196,2477,3.428,2478,2.196,2479,2.196,2480,4.217,2481,5.72,2482,2.196,2483,2.196,2484,2.196,2485,4.217,2486,2.196,2487,2.196,2488,2.196,2489,4.765,2490,2.196,2491,2.196,2492,2.196,2493,2.196,2494,4.765,2495,2.196,2496,2.196,2497,2.196,2498,2.196,2499,4.217,2500,2.196,2501,2.196,2502,2.196,2503,2.196,2504,2.196,2505,5.918,2506,2.196,2507,2.196,2508,2.196,2509,2.196,2510,2.196,2511,2.196,2512,2.196,2513,2.196,2514,5.45,2515,3.922,2516,3.817,2517,4.824,2518,2.512,2519,2.512,2520,2.512,2521,2.512,2522,2.512,2523,2.512,2524,2.512,2525,2.512,2526,4.765,2527,5.45,2528,2.196,2529,2.512,2530,5.178,2531,1.988,2532,2.196,2533,2.196,2534,2.196,2535,2.196,2536,2.196,2537,2.196,2538,2.196,2539,2.196,2540,2.196,2541,2.196,2542,2.512]],["title/dependencies.html",[372,2.279,2543,2.722]],["body/dependencies.html",[18,0.012,21,0.01,22,0.01,75,0.639,78,1.789,176,2.273,250,4.853,251,3.028,255,3.735,372,2.547,384,2.891,387,2.358,392,4.049,407,3.028,477,4.853,478,4.853,781,4.853,1146,3.775,1768,4.049,2039,4.853,2448,4.393,2544,8.301,2545,5.551,2546,5.986,2547,5.551,2548,6.847,2549,5.986,2550,7.425,2551,5.551,2552,6.847,2553,5.551,2554,6.847,2555,5.551,2556,5.551,2557,5.551,2558,5.551,2559,5.551,2560,5.551,2561,4.853,2562,5.551,2563,5.551,2564,5.551,2565,5.551,2566,5.551,2567,5.551,2568,5.551,2569,5.551,2570,5.551,2571,5.551,2572,5.551,2573,5.551,2574,4.853,2575,5.551,2576,5.551,2577,5.551,2578,5.551,2579,4.393,2580,4.853,2581,5.551,2582,5.551,2583,5.551]],["title/miscellaneous/enumerations.html",[2584,1.97,2585,4.342]],["body/miscellaneous/enumerations.html",[8,0.291,18,0.012,21,0.01,22,0.01,53,2.579,64,4.277,66,2.001,72,2.481,83,3.045,97,4.165,101,4.408,173,3.173,174,3.823,209,1.363,261,3.22,279,3.764,360,3.764,431,4.1,459,4.914,465,4.165,490,5.46,850,4.1,908,4.1,1171,4.914,1560,4.448,2246,6.032,2584,3.22,2585,4.914,2586,6.9,2587,5.621,2588,5.621,2589,5.621,2590,5.621,2591,5.621,2592,5.621,2593,5.621,2594,5.621,2595,5.621,2596,6.9,2597,5.621,2598,4.914,2599,5.621,2600,5.621,2601,5.621,2602,5.621,2603,5.621,2604,5.621,2605,4.914,2606,5.621,2607,5.621,2608,5.621,2609,5.621,2610,5.621,2611,5.621,2612,5.621]],["title/miscellaneous/functions.html",[2584,1.97,2613,4.342]],["body/miscellaneous/functions.html",[8,0.325,11,0.816,17,0.601,18,0.012,21,0.01,22,0.01,46,1.628,47,0.952,55,1.177,66,2.235,248,4.579,252,6.844,260,5.487,279,4.021,301,2.161,2350,5.014,2354,5.487,2530,4.967,2531,5.835,2537,6.446,2584,3.596,2613,5.487,2614,5.487,2615,5.487,2616,5.487]],["title/index.html",[8,0.178,2617,3.007,2618,3.439]],["body/index.html",[4,0.119,18,0.011,21,0.008,22,0.008,28,1.835,47,0.539,53,1.917,54,1.438,133,1.185,138,5.66,148,0.656,152,1.346,159,1.304,174,5.318,187,2.668,223,1.262,234,2.021,286,1.996,315,3.832,319,2.72,326,1.774,350,3.047,379,3.305,485,3.651,521,3.651,672,2.081,710,2.521,740,3.636,848,2.392,900,4.976,918,2.84,1055,2.521,1064,5.106,1199,6.836,1355,4.723,1560,3.305,1768,4.723,1858,3.305,1935,3.651,2100,6.563,2170,3.047,2258,3.651,2449,4.976,2516,4.504,2543,3.305,2546,3.651,2561,3.651,2574,4.976,2579,3.305,2580,4.976,2598,4.976,2617,3.651,2619,7.276,2620,5.692,2621,4.177,2622,6.475,2623,5.692,2624,4.177,2625,6.475,2626,4.177,2627,7.508,2628,4.177,2629,5.692,2630,4.177,2631,3.651,2632,4.177,2633,4.177,2634,4.177,2635,4.177,2636,6.475,2637,6.475,2638,4.177,2639,6.716,2640,4.177,2641,4.177,2642,4.177,2643,4.177,2644,5.692,2645,5.692,2646,6.953,2647,4.177,2648,5.692,2649,5.692,2650,4.177,2651,4.177,2652,4.177,2653,6.475,2654,3.651,2655,4.177,2656,4.177,2657,4.177,2658,6.475,2659,5.692,2660,4.177,2661,3.305,2662,5.692,2663,5.692,2664,4.177,2665,4.177,2666,4.177,2667,4.177,2668,4.177,2669,6.953,2670,6.953,2671,4.177,2672,4.177,2673,3.651,2674,4.177,2675,4.177,2676,4.177,2677,4.177,2678,4.177,2679,4.177,2680,4.177,2681,5.692,2682,4.177,2683,4.177,2684,5.692,2685,4.177,2686,4.177,2687,7.683,2688,4.177,2689,4.177,2690,4.177,2691,4.177,2692,5.692,2693,4.177,2694,4.177,2695,4.177,2696,4.177,2697,4.177,2698,4.177,2699,4.177,2700,4.177,2701,4.177,2702,4.177,2703,4.177,2704,4.177,2705,5.692,2706,4.177,2707,5.692,2708,5.692,2709,4.177,2710,4.177,2711,4.177,2712,6.953,2713,4.177,2714,4.177,2715,4.177,2716,4.177,2717,4.177,2718,5.692,2719,4.177,2720,4.177,2721,4.177,2722,4.177,2723,4.177,2724,4.177,2725,4.177,2726,4.177,2727,4.177,2728,4.177,2729,5.692,2730,4.177,2731,4.177,2732,4.177,2733,4.177]],["title/modules.html",[371,2.59]],["body/modules.html",[18,0.01,21,0.01,22,0.01,370,4.453,371,2.801,620,3.33,648,4.152,1058,4.453,1176,4.453,1520,4.152,1675,4.453,1763,4.453,1948,4.453,2419,4.453,2549,7.463,2734,8.538,2735,8.538,2736,8.538]],["title/overview.html",[2661,4.467]],["body/overview.html",[2,1.261,18,0.012,21,0.008,22,0.008,33,1.647,109,4.299,150,1.345,200,1.894,202,2.178,204,2.249,206,1.894,208,1.894,211,2.249,213,1.894,215,1.894,218,2.249,220,1.894,222,1.894,225,1.894,227,1.894,229,1.894,231,1.894,233,1.894,236,2.249,238,1.894,240,2.249,242,2.249,244,1.894,326,1.772,370,5.474,371,1.914,372,2.61,373,3.646,374,3.646,375,2.834,376,2.079,620,4.596,621,3.646,622,3.646,623,3.646,648,5.452,649,3.646,650,3.646,651,3.646,751,3.906,796,2.079,1036,2.389,1058,5.848,1059,3.646,1060,3.646,1061,3.646,1176,5.305,1177,3.646,1178,3.646,1179,3.646,1501,3.301,1520,5.103,1521,3.646,1523,3.646,1675,5.702,1676,3.646,1678,3.646,1697,3.906,1763,5.702,1764,3.646,1765,3.646,1766,3.646,1825,3.906,1948,6.082,1949,3.646,1950,3.646,1951,3.646,2378,4.134,2419,5.702,2420,3.646,2421,3.646,2422,3.646,2516,3.301,2661,3.301,2737,3.646,2738,4.171]],["title/properties.html",[9,0.82,2543,2.722]],["body/properties.html",[9,1.11,18,0.011,21,0.011,22,0.011,2579,5.32,2739,6.723]],["title/miscellaneous/typealiases.html",[2584,1.97,2740,4.967]],["body/miscellaneous/typealiases.html",[8,0.344,17,0.62,18,0.011,21,0.011,22,0.011,465,4.597,615,4.842,2584,3.802,2741,6.638,2742,6.638,2743,6.638]],["title/miscellaneous/variables.html",[2584,1.97,2744,4.342]],["body/miscellaneous/variables.html",[5,0.116,8,0.097,9,0.309,16,1.828,17,0.665,18,0.012,21,0.004,22,0.004,23,1.771,25,1.479,26,1.364,27,1.479,28,2.422,29,1.479,30,1.479,47,0.894,52,2.399,54,1.064,55,0.298,57,1.479,66,2.714,72,0.825,73,1.634,80,2.677,92,1.538,148,0.356,158,0.997,168,1.071,172,2.968,173,3.071,174,2.689,180,2.083,209,0.75,216,0.989,230,1.415,248,1.364,249,1.634,251,1.686,253,1.634,254,1.634,256,2.447,257,1.364,261,2.631,262,2.884,267,2.447,269,2.447,279,2.506,283,2.526,286,3.177,293,1.771,302,2.419,305,1.271,306,2.103,311,2.103,315,1.477,343,3.68,410,1.128,431,1.364,437,3.124,522,1.634,529,1.634,575,1.194,576,1.194,577,1.194,596,2.703,616,3.945,617,3.945,618,3.662,619,3.475,659,3.506,660,3.506,661,0.738,662,0.858,663,0.858,664,0.858,665,0.858,666,0.858,667,0.858,668,0.858,670,2.662,671,2.891,710,2.387,719,1.634,720,1.479,721,1.634,722,1.634,796,2.289,1036,3.604,1096,2.103,1099,2.255,1100,2.103,1230,2.059,1234,2.447,1235,1.975,1237,1.686,1534,3.351,1623,2.703,1663,2.631,1665,3.456,1666,3.456,1667,3.456,1668,4.026,1686,2.703,1741,3.998,1777,2.103,1801,2.703,1802,2.447,1803,2.255,1804,2.447,1805,2.255,1806,2.703,1807,2.631,1858,1.479,2118,2.703,2170,1.364,2218,3.456,2220,1.479,2221,1.634,2316,1.479,2331,2.447,2350,1.271,2351,1.479,2352,1.634,2361,2.447,2362,3.129,2363,1.634,2364,2.447,2365,1.634,2366,2.703,2367,1.634,2452,1.634,2453,4.016,2462,1.634,2470,1.634,2471,3.456,2472,1.634,2473,4.016,2474,3.456,2475,3.456,2476,2.703,2477,1.634,2478,3.456,2479,2.703,2480,1.634,2481,5.5,2482,4.016,2483,4.016,2484,2.703,2485,1.634,2486,3.456,2487,3.456,2488,4.016,2489,1.634,2490,4.016,2491,3.456,2492,3.456,2493,3.456,2494,1.634,2495,2.703,2496,3.456,2497,4.448,2498,3.456,2499,1.634,2500,4.016,2501,4.016,2502,2.703,2503,1.634,2504,2.703,2505,1.634,2506,4.016,2507,3.456,2508,3.456,2509,2.703,2510,2.703,2511,2.703,2512,2.703,2513,2.703,2526,1.634,2528,2.703,2530,1.479,2531,1.479,2532,3.456,2533,3.456,2534,2.703,2535,2.703,2536,3.456,2538,1.634,2539,1.634,2540,1.634,2541,1.634,2584,1.071,2605,3.456,2614,4.792,2615,2.703,2616,2.703,2631,2.703,2639,4.016,2654,1.634,2673,2.703,2737,2.703,2744,1.634,2745,1.87,2746,1.87,2747,1.87,2748,1.87,2749,3.954,2750,4.594,2751,1.87,2752,3.092,2753,3.954,2754,3.954,2755,4.594,2756,3.954,2757,4.594,2758,1.87,2759,3.954,2760,6.067,2761,1.87,2762,1.87,2763,3.092,2764,3.092,2765,1.87,2766,1.87,2767,1.87,2768,1.87,2769,4.594,2770,3.092,2771,3.954,2772,1.87,2773,3.954,2774,3.954,2775,3.954,2776,3.954,2777,3.954,2778,3.092,2779,3.092,2780,3.092,2781,3.092,2782,3.092,2783,3.092,2784,3.092,2785,3.092,2786,3.092,2787,3.092,2788,1.87,2789,3.092,2790,1.87,2791,1.87,2792,1.87,2793,1.87,2794,1.87,2795,1.87,2796,1.87,2797,1.87,2798,1.87,2799,1.87,2800,1.87,2801,1.87,2802,3.092,2803,1.87,2804,1.87,2805,1.87,2806,3.954,2807,3.954,2808,1.87,2809,1.87,2810,1.87,2811,1.87,2812,1.87,2813,1.87,2814,1.87,2815,1.87,2816,1.87,2817,1.87,2818,1.87,2819,1.87,2820,1.87,2821,1.87,2822,1.87,2823,1.87,2824,1.87,2825,3.954,2826,3.954,2827,1.87,2828,1.87,2829,1.87,2830,1.87,2831,3.092,2832,3.092,2833,3.092,2834,3.092,2835,3.092,2836,5.088,2837,5.088,2838,5.088,2839,5.088,2840,1.87,2841,1.87,2842,1.87,2843,1.87,2844,1.87,2845,1.87,2846,1.87,2847,1.87,2848,1.87,2849,1.87]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":332,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2739,"title":{},"body":{"properties.html":{}}}],["0.0.0.0:8181",{"_index":2709,"title":{},"body":{"index.html":{}}}],["0.0.6",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["0.053",{"_index":1549,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0.07",{"_index":804,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["0.096",{"_index":2113,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1.2",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":2115,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.12.7",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":2114,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.16",{"_index":2105,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.1s",{"_index":2225,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.2",{"_index":2198,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.23",{"_index":2106,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.258",{"_index":366,"title":{},"body":{"components/AuthComponent.html":{}}}],["0.25em",{"_index":2253,"title":{},"body":{"components/SidebarComponent.html":{}}}],["0.25rem",{"_index":1942,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.2s",{"_index":925,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/ServerErrorComponent.html":{}}}],["0.325",{"_index":1932,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0.3s",{"_index":2227,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.41",{"_index":1639,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.49",{"_index":1638,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.4rem",{"_index":1402,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["0.4s",{"_index":2217,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5",{"_index":2172,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.5em",{"_index":2096,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.5rem",{"_index":730,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["0.5s",{"_index":2208,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.676",{"_index":2292,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.7",{"_index":2175,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.75",{"_index":2166,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.7s",{"_index":2216,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8",{"_index":2163,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.8rem",{"_index":2086,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0.8s",{"_index":2201,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.95",{"_index":2181,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["0.97",{"_index":1640,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.9rem",{"_index":2107,"title":{},"body":{"components/RecipesComponent.html":{}}}],["0/1",{"_index":2454,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2515,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2514,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["00000000",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0fe271d28c2d",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":1658,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0rem",{"_index":1936,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["0s",{"_index":2219,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1",{"_index":343,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["1.05",{"_index":2164,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.1",{"_index":2162,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.15",{"_index":2167,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.2.0",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["1.3s",{"_index":2210,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.5rem",{"_index":1382,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["1.5s",{"_index":324,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["1.6s",{"_index":2209,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.7s",{"_index":2214,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["1.jpg",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":796,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.1",{"_index":1047,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["100",{"_index":331,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["1000",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["10000",{"_index":839,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["100px",{"_index":2102,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["109.75px",{"_index":2224,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["10px",{"_index":715,"title":{},"body":{"components/FooterComponent.html":{},"components/ServerErrorComponent.html":{}}}],["10rem",{"_index":733,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["11",{"_index":1055,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["11111111",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1337,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["12.0",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345678",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124px",{"_index":349,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["13.0.2",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["13.1.2",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["13.2.6",{"_index":2623,"title":{},"body":{"index.html":{}}}],["13.3.1",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["13.3.2",{"_index":2546,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.0.0",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1347,"title":{},"body":{"components/IngredientComponent.html":{}}}],["14rem",{"_index":921,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["14s",{"_index":1636,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15",{"_index":2168,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15.0",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150px",{"_index":1241,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["156px",{"_index":1648,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["15px",{"_index":2193,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["15rem",{"_index":1939,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["16",{"_index":2516,"title":{},"body":{"coverage.html":{},"index.html":{},"overview.html":{}}}],["16.13.02",{"_index":2668,"title":{},"body":{"index.html":{}}}],["17px",{"_index":1946,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["18",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":1940,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["1px",{"_index":1397,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1rem",{"_index":1338,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["1s",{"_index":1643,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["2",{"_index":1036,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0a",{"_index":2683,"title":{},"body":{"index.html":{}}}],["2.2.1",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/11",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":344,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["201",{"_index":2597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2021",{"_index":706,"title":{},"body":{"components/FooterComponent.html":{}}}],["2022",{"_index":707,"title":{},"body":{"components/FooterComponent.html":{}}}],["204",{"_index":2596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["20deg",{"_index":1654,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["20px",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{}}}],["213",{"_index":1049,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["22",{"_index":2737,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["221",{"_index":2111,"title":{},"body":{"components/RecipesComponent.html":{}}}],["227",{"_index":2281,"title":{},"body":{"components/TabsComponent.html":{}}}],["229",{"_index":2112,"title":{},"body":{"components/RecipesComponent.html":{}}}],["230",{"_index":1050,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["234",{"_index":1931,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/TitleComponent.html":{}}}],["24",{"_index":2738,"title":{},"body":{"overview.html":{}}}],["24.2mbaprès",{"_index":2693,"title":{},"body":{"index.html":{}}}],["24t14:15:22z",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2147,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["250px",{"_index":2099,"title":{},"body":{"components/RecipesComponent.html":{}}}],["254",{"_index":2291,"title":{},"body":{"components/TitleComponent.html":{}}}],["255",{"_index":2282,"title":{},"body":{"components/TabsComponent.html":{}}}],["25px",{"_index":2185,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["25rem",{"_index":1375,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["26.67",{"_index":2155,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["28.33",{"_index":2148,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["280px",{"_index":2098,"title":{},"body":{"components/RecipesComponent.html":{}}}],["28cb65260f81",{"_index":2691,"title":{},"body":{"index.html":{}}}],["28d1",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":2109,"title":{},"body":{"components/RecipesComponent.html":{}}}],["2rem",{"_index":1242,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["2s",{"_index":1645,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["3",{"_index":2218,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["3.jpg",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/5",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1403,"title":{},"body":{"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UsersComponent.html":{}}}],["300",{"_index":1659,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{}}}],["3000",{"_index":876,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["30px",{"_index":924,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["31",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["310px",{"_index":1649,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["33",{"_index":2170,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["35px",{"_index":348,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["378.729px",{"_index":2223,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["38000",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":1943,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["3s",{"_index":1630,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4",{"_index":2220,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["4.17.3",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":335,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["400",{"_index":1209,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["401",{"_index":1219,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["401b",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1221,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["4200:4200",{"_index":2698,"title":{},"body":{"index.html":{}}}],["4201docker",{"_index":2728,"title":{},"body":{"index.html":{}}}],["44",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":2149,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["45deg",{"_index":2186,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["46.67",{"_index":2156,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["47",{"_index":2173,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["476.268px",{"_index":2204,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["48.33",{"_index":2150,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["485.125px",{"_index":2212,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["495057",{"_index":1348,"title":{},"body":{"components/IngredientComponent.html":{}}}],["4b4b62",{"_index":1661,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4e00",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":2116,"title":{},"body":{"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["4s",{"_index":1647,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["5",{"_index":2221,"title":{},"body":{"components/ServerErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":346,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["500",{"_index":1224,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["5000",{"_index":1210,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["50px",{"_index":2187,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.33px",{"_index":2213,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["51.67",{"_index":2151,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["55",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["550px",{"_index":835,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["576px",{"_index":2117,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6/19",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":829,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["607d8b",{"_index":1371,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["63",{"_index":2176,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["640px",{"_index":1947,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["65",{"_index":2165,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["66",{"_index":337,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["6px",{"_index":2104,"title":{},"body":{"components/RecipesComponent.html":{}}}],["6rem",{"_index":736,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["6s",{"_index":329,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["7",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2069,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["700",{"_index":2085,"title":{},"body":{"components/RecipesComponent.html":{}}}],["75",{"_index":2119,"title":{},"body":{"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["75px",{"_index":2190,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["77",{"_index":2179,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["7rem",{"_index":920,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["7s",{"_index":1642,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1762,"title":{},"body":{"components/ProfileComponent.html":{}}}],["80",{"_index":339,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["80/tcp",{"_index":2710,"title":{},"body":{"index.html":{}}}],["85",{"_index":2180,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["86a8c0",{"_index":1359,"title":{},"body":{"components/IngredientComponent.html":{}}}],["89",{"_index":347,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["8px",{"_index":1366,"title":{},"body":{"components/IngredientComponent.html":{},"components/LoginComponent.html":{}}}],["8rem",{"_index":2091,"title":{},"body":{"components/RecipesComponent.html":{}}}],["90",{"_index":340,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["93.33",{"_index":2152,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["95",{"_index":2157,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["950",{"_index":368,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["96.67",{"_index":2153,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["960px",{"_index":1395,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["96560464",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96b05134",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97px",{"_index":2205,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["9]{9",{"_index":1750,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["9c39",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fb7ed",{"_index":334,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["_franchisee",{"_index":857,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["_httprequest",{"_index":2586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_recipe",{"_index":2080,"title":{},"body":{"components/RecipesComponent.html":{}}}],["_recipetype",{"_index":1813,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["_res",{"_index":1023,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["_title",{"_index":2289,"title":{},"body":{"components/TitleComponent.html":{}}}],["_user",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isadmin",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.autorisations.isfranchisee",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["_user.roles.foreach((e",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["a952",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absolute",{"_index":352,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/LoadingComponent.html":{}}}],["acceder",{"_index":1217,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["accept",{"_index":871,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["acceptbuttonstyleclass",{"_index":870,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["access",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["accesstoken",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenisexpired(data",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenmodel",{"_index":1,"title":{"interfaces/AccessTokenModel.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["action",{"_index":262,"title":{},"body":{"interfaces/AppState.html":{},"components/RecipesComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["action's",{"_index":2358,"title":{},"body":{"interfaces/UserState.html":{}}}],["action.userdetails",{"_index":2366,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":252,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":253,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2316,"title":{},"body":{"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{}}}],["activatedroutesnapshot",{"_index":1508,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["actual_component",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":138,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"index.html":{}}}],["addrecipe",{"_index":1103,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["addrecipe(item",{"_index":1110,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["address",{"_index":23,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.model",{"_index":723,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["address_id",{"_index":57,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":69,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressservice",{"_index":32,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["addstarrecipe",{"_index":1151,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["admin",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["adminaccess",{"_index":2532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["adresse",{"_index":888,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ago",{"_index":2692,"title":{},"body":{"index.html":{}}}],["ajout",{"_index":1319,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ajouter",{"_index":825,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["aliases",{"_index":2741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":362,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["allergen",{"_index":1234,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":2192,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["alternate",{"_index":1631,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["amount",{"_index":899,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["angular",{"_index":1064,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"components/RecipesComponent.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["angular.json",{"_index":2673,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":781,"title":{},"body":{"components/FranchiseeComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":76,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["animate('400ms",{"_index":801,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["animation",{"_index":322,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["animations",{"_index":791,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["antialiased",{"_index":1351,"title":{},"body":{"components/IngredientComponent.html":{}}}],["api",{"_index":135,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["apibaseurl",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitokeninterceptorservice",{"_index":109,"title":{"interceptors/ApiTokenInterceptorService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiurl",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":149,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["application",{"_index":2716,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2714,"title":{},"body":{"index.html":{}}}],["appstate",{"_index":247,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["appurl",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":2640,"title":{},"body":{"index.html":{}}}],["asobservable",{"_index":1611,"title":{},"body":{"injectables/MessagesService.html":{}}}],["async",{"_index":114,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["attached",{"_index":1416,"title":{},"body":{"injectables/IngredientService.html":{}}}],["attachment",{"_index":1362,"title":{},"body":{"components/IngredientComponent.html":{}}}],["attachpictures",{"_index":1972,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(picture",{"_index":1981,"title":{},"body":{"injectables/RecipeService.html":{}}}],["attachpictures(this.picture",{"_index":1911,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["attched",{"_index":1484,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["attention",{"_index":60,"title":{},"body":{"injectables/AddressService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["au",{"_index":1227,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["auth",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component.html",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/auth.component",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_code_verifier",{"_index":2609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_state",{"_index":2607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_user_token",{"_index":2611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcomponent",{"_index":200,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticated",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated.guard.ts",{"_index":1504,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authenticated.guard.ts:15",{"_index":1506,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated.guard.ts:18",{"_index":1509,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["authenticated/is",{"_index":1503,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":370,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":145,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["authorization_code",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorizationcodetoaccesstoken(code",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize?${query.tostring",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{}}}],["authservice",{"_index":118,"title":{"injectables/AuthService.html":{}},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["auto",{"_index":837,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["automatically",{"_index":2632,"title":{},"body":{"index.html":{}}}],["autorisation",{"_index":614,"title":{"interfaces/Autorisation.html":{}},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["autorisations",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autorise",{"_index":1216,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["available_at",{"_index":1801,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["availabledate",{"_index":1887,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["avatarmodule",{"_index":1181,"title":{},"body":{"modules/HomeModule.html":{}}}],["await",{"_index":141,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{}}}],["b94a",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":2206,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["backend",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["background",{"_index":364,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["badgemodule",{"_index":626,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["bahar",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baixo",{"_index":1634,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["base",{"_index":1926,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["base_price",{"_index":1802,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":2357,"title":{},"body":{"interfaces/UserState.html":{}}}],["basezindex",{"_index":838,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["basic",{"_index":1934,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["bearer",{"_index":146,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["before",{"_index":264,"title":{},"body":{"interfaces/AppState.html":{}}}],["behaviorsubject",{"_index":679,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(false",{"_index":1563,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":682,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["between",{"_index":918,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["bezier(0.1",{"_index":1637,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bezier(0.86",{"_index":803,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["bien",{"_index":850,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bientôt",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"components/RecipesComponent.html":{}}}],["bill",{"_index":2229,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["blink",{"_index":2145,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["block",{"_index":1243,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["body",{"_index":1341,"title":{},"body":{"components/IngredientComponent.html":{}}}],["bold",{"_index":1405,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":922,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["bottom",{"_index":354,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":926,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["break",{"_index":1218,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["browse",{"_index":2736,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2549,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":2639,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":729,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{}}}],["buttonmodule",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["c",{"_index":2665,"title":{},"body":{"index.html":{}}}],["c47406527d49",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["calc(100",{"_index":919,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["calendar",{"_index":1373,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["calendarmodule",{"_index":1960,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["calibri",{"_index":2298,"title":{},"body":{"components/TitleComponent.html":{}}}],["canaccess",{"_index":2531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canaccess(user",{"_index":2616,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":1505,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["canactivate(route",{"_index":1507,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["capabilities",{"_index":2656,"title":{},"body":{"index.html":{}}}],["card",{"_index":2108,"title":{},"body":{"components/RecipesComponent.html":{}}}],["case",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["catalog",{"_index":1127,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["catch",{"_index":1591,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["catcherror",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["catcherror((err",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror((httperrorresponse",{"_index":1158,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["category",{"_index":2093,"title":{},"body":{"components/RecipesComponent.html":{}}}],["causing",{"_index":685,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["ccbe1c",{"_index":341,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{}}}],["ce",{"_index":873,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["cell",{"_index":1688,"title":{},"body":{"components/ProfileComponent.html":{}}}],["center",{"_index":361,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["cette",{"_index":2074,"title":{},"body":{"components/RecipesComponent.html":{}}}],["challenge",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["challenger",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["champ",{"_index":1033,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["change",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["changed",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1700,"title":{},"body":{"components/ProfileComponent.html":{}}}],["check",{"_index":2580,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["checkboxmodule",{"_index":632,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["checkerror",{"_index":935,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["checkerror(controlname",{"_index":945,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["chez",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":2652,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1935,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{}}}],["chrome",{"_index":1043,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["cima",{"_index":1641,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["circle",{"_index":321,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["city",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":87,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["class*=\"col",{"_index":1336,"title":{},"body":{"components/IngredientComponent.html":{}}}],["clear",{"_index":1401,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":2622,"title":{},"body":{"index.html":{}}}],["client",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["client_id",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["clone",{"_index":2682,"title":{},"body":{"index.html":{}}}],["closed_at",{"_index":659,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["closeerrorhttp",{"_index":690,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["cluster_authmodule",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":621,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":623,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":622,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_defaultmodule",{"_index":649,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_declarations",{"_index":651,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_exports",{"_index":650,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule",{"_index":1059,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_declarations",{"_index":1061,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_franchiseemodule_providers",{"_index":1060,"title":{},"body":{"modules/FranchiseeModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1177,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1179,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_exports",{"_index":1178,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule",{"_index":1521,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_exports",{"_index":1523,"title":{},"body":{"modules/LayoutsModule.html":{},"overview.html":{}}}],["cluster_layoutsmodule_imports",{"_index":1522,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["cluster_principalmodule",{"_index":1676,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_declarations",{"_index":1678,"title":{},"body":{"modules/PrincipalModule.html":{},"overview.html":{}}}],["cluster_principalmodule_imports",{"_index":1677,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["cluster_profilemodule",{"_index":1764,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1766,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":1765,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule",{"_index":1949,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_declarations",{"_index":1950,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_recipemanagementmodule_providers",{"_index":1951,"title":{},"body":{"modules/RecipeManagementModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2420,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":2421,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":2422,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":286,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/IngreType.html":{},"components/ProfileComponent.html":{},"interfaces/RecipeType.html":{},"interfaces/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code_challenge",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_challenge_method",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verifier",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["code_verify",{"_index":2608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":1335,"title":{},"body":{"components/IngredientComponent.html":{},"components/ProfileComponent.html":{}}}],["color",{"_index":328,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["column",{"_index":916,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["command",{"_index":2653,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["complete",{"_index":312,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["compodoc",{"_index":2712,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2718,"title":{},"body":{"index.html":{}}}],["component",{"_index":148,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/components.module",{"_index":654,"title":{},"body":{"modules/DefaultModule.html":{}}}],["componentsmodule",{"_index":620,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["compose",{"_index":2729,"title":{},"body":{"index.html":{}}}],["compte",{"_index":2603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["concatmap",{"_index":1565,"title":{},"body":{"injectables/LoadingService.html":{},"injectables/UserEffects.html":{}}}],["concatmap((action",{"_index":2325,"title":{},"body":{"injectables/UserEffects.html":{}}}],["config",{"_index":933,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.address",{"_index":972,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.franchisee",{"_index":971,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["config.data.ingredients",{"_index":1865,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.ingredientstypes",{"_index":1868,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.mode",{"_index":969,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["config.data.pictures",{"_index":1872,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipe",{"_index":1864,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.recipetype",{"_index":1867,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["config.data.schedule",{"_index":973,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["configuration",{"_index":2719,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":865,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["confirmation",{"_index":734,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["confirmationservice",{"_index":752,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/ProfileModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["confirmdialogmodule",{"_index":1082,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["console.info('complete",{"_index":313,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log",{"_index":883,"title":{},"body":{"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["console.log(\"désol",{"_index":1220,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log('[authervice",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('[authservice",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('[intercept",{"_index":134,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["console.log('actions",{"_index":265,"title":{},"body":{"interfaces/AppState.html":{}}}],["console.log('auth",{"_index":291,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('create",{"_index":1015,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["console.log('désol",{"_index":1222,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["console.log('erreur",{"_index":1720,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('je",{"_index":295,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log('makeingredient",{"_index":1308,"title":{},"body":{"components/IngredientComponent.html":{}}}],["console.log('picture",{"_index":1921,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('profile",{"_index":1742,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('refresh",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('res",{"_index":1469,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{}}}],["console.log('return",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('selected",{"_index":1915,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["console.log('service",{"_index":1138,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["console.log('set",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('state",{"_index":263,"title":{},"body":{"interfaces/AppState.html":{}}}],["console.log('topbar",{"_index":310,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["console.log('try",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('update",{"_index":1013,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["console.log('user",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":1316,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["console.log(this.user",{"_index":1715,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":140,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["constants/message.const",{"_index":84,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["constants/role.const",{"_index":1783,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(actions",{"_index":2315,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(authservice",{"_index":117,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(franchiseeservice",{"_index":750,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["constructor(http",{"_index":42,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(ingredientservice",{"_index":1256,"title":{},"body":{"components/IngredientComponent.html":{}}}],["constructor(ingredienttypeservice",{"_index":1438,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["constructor(loadingservice",{"_index":1535,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(messageservice",{"_index":1189,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(primengconfig",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":1545,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(recipeservice",{"_index":2036,"title":{},"body":{"components/RecipesComponent.html":{}}}],["constructor(ref",{"_index":940,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["constructor(store",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(usersservice",{"_index":2377,"title":{},"body":{"components/UsersComponent.html":{}}}],["contactdialog",{"_index":738,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["container",{"_index":350,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["conteneur",{"_index":2696,"title":{},"body":{"index.html":{}}}],["content",{"_index":360,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contentstyle",{"_index":832,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["continue",{"_index":1198,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["contractor",{"_index":2605,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":948,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["cookie",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["copyright",{"_index":703,"title":{},"body":{"components/FooterComponent.html":{}}}],["country",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":1360,"title":{},"body":{"components/IngredientComponent.html":{}}}],["coverage",{"_index":2448,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["cr",{"_index":1470,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["create",{"_index":53,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create_by",{"_index":719,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[auth",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaddress",{"_index":37,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(create",{"_index":49,"title":{},"body":{"injectables/AddressService.html":{}}}],["createaddress(this.address",{"_index":1018,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["created",{"_index":2598,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["created_by",{"_index":1810,"title":{},"body":{"interfaces/Recipe.html":{}}}],["createeffect",{"_index":2318,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createfeatureselector('user",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createingredient",{"_index":1409,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(item",{"_index":1412,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredienttype",{"_index":1477,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(item",{"_index":1480,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["createingredienttype(this.ingretype",{"_index":1468,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["createnewfranchisee",{"_index":747,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["createnewrecipe",{"_index":2035,"title":{},"body":{"components/RecipesComponent.html":{}}}],["createrecipe",{"_index":1973,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createrecipe(item",{"_index":1983,"title":{},"body":{"injectables/RecipeService.html":{}}}],["createreducer",{"_index":2352,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["createschedule",{"_index":2124,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createschedule(create",{"_index":2128,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["createselector",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserdetails",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserstate",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["création",{"_index":1025,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["crée",{"_index":851,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["créer",{"_index":2695,"title":{},"body":{"index.html":{}}}],["csprng",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["csuppression",{"_index":880,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ctrl",{"_index":2664,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":802,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["currency:'usd",{"_index":904,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["currency:\\'usd",{"_index":928,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["current",{"_index":1368,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["current_user",{"_index":2612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currentrole",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":1387,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["custom",{"_index":317,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["customer",{"_index":897,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["customers",{"_index":1380,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d",{"_index":2697,"title":{},"body":{"index.html":{}}}],["d'alerte",{"_index":2044,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'ingredient",{"_index":1315,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["d'ingrédient",{"_index":1333,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["d'une",{"_index":2043,"title":{},"body":{"components/RecipesComponent.html":{}}}],["d'utilisateur",{"_index":2410,"title":{},"body":{"components/UsersComponent.html":{}}}],["d.p",{"_index":2277,"title":{},"body":{"components/TabsComponent.html":{}}}],["d4dff7",{"_index":336,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["d8dadc",{"_index":1370,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["d8f6f6",{"_index":1927,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["d\\'ingredient",{"_index":1406,"title":{},"body":{"components/IngredientComponent.html":{}}}],["d\\'ingrédient",{"_index":1407,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["daemon",{"_index":2706,"title":{},"body":{"index.html":{}}}],["dans",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["dash",{"_index":323,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dasharray",{"_index":342,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["dashoffset",{"_index":345,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["data",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["data.expire_at",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.expires_in",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.refresh_token",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expire_at",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["dataresponse.expires_in",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["datatable",{"_index":1379,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["datatable.p",{"_index":1378,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["dataviewmodule",{"_index":1954,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["date",{"_index":898,"title":{},"body":{"components/FranchiseeComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{}}}],["date('2019",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().getdate",{"_index":1879,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date().setdate(new",{"_index":1878,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(new",{"_index":1877,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date(this.recipe?.available_at",{"_index":1880,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["date.now",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["datepicker",{"_index":1374,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["daygrid",{"_index":1364,"title":{},"body":{"components/IngredientComponent.html":{}}}],["days",{"_index":669,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{}}}],["dbe6fdd7",{"_index":2294,"title":{},"body":{"components/TitleComponent.html":{}}}],["de",{"_index":879,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["declarations",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dee2e6",{"_index":2097,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deep",{"_index":316,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["default.component",{"_index":653,"title":{},"body":{"modules/DefaultModule.html":{}}}],["default.component.html",{"_index":645,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":644,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default/default.component",{"_index":1526,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["default/default.module",{"_index":1527,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["defaultcomponent",{"_index":202,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultmodule",{"_index":648,"title":{"modules/DefaultModule.html":{}},"body":{"modules/DefaultModule.html":{},"modules/LayoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["defined",{"_index":44,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["defining",{"_index":2359,"title":{},"body":{"interfaces/UserState.html":{}}}],["defone",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["delay",{"_index":2203,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["delete",{"_index":64,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["delete(`${environment.apibaseurl}/addresses/${id",{"_index":106,"title":{},"body":{"injectables/AddressService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/${id",{"_index":1428,"title":{},"body":{"injectables/IngredientService.html":{}}}],["delete(`${environment.apibaseurl}/ingredients/types/${id",{"_index":1498,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["delete(`${environment.apibaseurl}/users/${id",{"_index":2447,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete(franchisee",{"_index":757,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["deleteaddress",{"_index":38,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteaddress(id",{"_index":58,"title":{},"body":{"injectables/AddressService.html":{}}}],["deletefranchisee",{"_index":1104,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deletefranchisee(id",{"_index":1114,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["deleteingredient",{"_index":1249,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["deleteingredient(id",{"_index":1414,"title":{},"body":{"injectables/IngredientService.html":{}}}],["deleteingredient(ingredient",{"_index":1260,"title":{},"body":{"components/IngredientComponent.html":{}}}],["deleteingredienttype",{"_index":1434,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(id",{"_index":1482,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["deleteingredienttype(ingretype",{"_index":1440,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleteingredienttype(ingretype.id",{"_index":1472,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["deleterecipe",{"_index":1974,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["deleterecipe(id",{"_index":1986,"title":{},"body":{"injectables/RecipeService.html":{}}}],["deleterecipe(recipe",{"_index":2040,"title":{},"body":{"components/RecipesComponent.html":{}}}],["deletes",{"_index":61,"title":{},"body":{"injectables/AddressService.html":{}}}],["deleteuser",{"_index":2426,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":2428,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":372,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":2411,"title":{},"body":{"components/UsersComponent.html":{}}}],["description",{"_index":52,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/TitleComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dessert",{"_index":1994,"title":{},"body":{"injectables/RecipeService.html":{}}}],["detail",{"_index":847,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["details",{"_index":1858,"title":{},"body":{"components/RecipeDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["details.module.ts",{"_index":1953,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/ingredient",{"_index":1429,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts",{"_index":1239,"title":{},"body":{"components/IngredientComponent.html":{},"coverage.html":{}}}],["details/ingredient/ingredient.component.ts:100",{"_index":1268,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:108",{"_index":1272,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:116",{"_index":1270,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:163",{"_index":1261,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:196",{"_index":1266,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:206",{"_index":1262,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:32",{"_index":1275,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:34",{"_index":1277,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:36",{"_index":1283,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:37",{"_index":1280,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:39",{"_index":1279,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:40",{"_index":1281,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:42",{"_index":1273,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:43",{"_index":1278,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:44",{"_index":1282,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:46",{"_index":1274,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:48",{"_index":1276,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:49",{"_index":1259,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:61",{"_index":1269,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:66",{"_index":1263,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:77",{"_index":1264,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/ingredient/ingredient.component.ts:85",{"_index":1267,"title":{},"body":{"components/IngredientComponent.html":{}}}],["details/recipe",{"_index":1952,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["details/recipe/recipe",{"_index":1811,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts",{"_index":2031,"title":{},"body":{"components/RecipesComponent.html":{},"coverage.html":{}}}],["details/recipe/recipes/recipes.component.ts:103",{"_index":2038,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:137",{"_index":2041,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:166",{"_index":2049,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:41",{"_index":2058,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:43",{"_index":2056,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:44",{"_index":2057,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:45",{"_index":2051,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:46",{"_index":2052,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:47",{"_index":2054,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:49",{"_index":2060,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:50",{"_index":2059,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:51",{"_index":2055,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:52",{"_index":2037,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:58",{"_index":2050,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:59",{"_index":2053,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:64",{"_index":2045,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:75",{"_index":2047,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/recipe/recipes/recipes.component.ts:88",{"_index":2046,"title":{},"body":{"components/RecipesComponent.html":{}}}],["details/tabs/tabs.component.ts",{"_index":2271,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["details/tabs/tabs.component.ts:13",{"_index":2276,"title":{},"body":{"components/TabsComponent.html":{}}}],["details/tabs/tabs.component.ts:8",{"_index":2275,"title":{},"body":{"components/TabsComponent.html":{}}}],["detectroutingongoing",{"_index":1533,"title":{},"body":{"components/LoadingComponent.html":{}}}],["determining",{"_index":2356,"title":{},"body":{"interfaces/UserState.html":{}}}],["dev",{"_index":2629,"title":{},"body":{"index.html":{}}}],["development",{"_index":2624,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["dgitflow",{"_index":2730,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":735,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dialog'},{'name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dialog.component",{"_index":790,"title":{},"body":{"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["dialog.component.html",{"_index":932,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.scss",{"_index":931,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts",{"_index":930,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:109",{"_index":1829,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:112",{"_index":949,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:121",{"_index":1839,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1830,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:141",{"_index":955,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:159",{"_index":1843,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:161",{"_index":953,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:165",{"_index":947,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:174",{"_index":1836,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":1838,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:183",{"_index":1833,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:188",{"_index":1840,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":1842,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:201",{"_index":1827,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":961,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":958,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":960,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":959,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":956,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":963,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1848,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":964,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":944,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1844,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":962,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":957,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1846,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1852,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1847,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1851,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1850,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":1826,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":952,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1849,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1845,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":951,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":1831,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:80",{"_index":1828,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":950,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1835,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dialog.component.ts:99",{"_index":954,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["dialog/franchisee",{"_index":789,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"coverage.html":{}}}],["dialog/recipe",{"_index":1812,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":1069,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["dialogservice",{"_index":726,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["diner",{"_index":657,"title":{"interfaces/Diner.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["direction",{"_index":915,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{}}}],["directive",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2638,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2643,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{},"injectables/UserEffects.html":{}}}],["display",{"_index":357,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{}}}],["disponiblit",{"_index":1923,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dist",{"_index":2642,"title":{},"body":{"index.html":{}}}],["div",{"_index":1340,"title":{},"body":{"components/IngredientComponent.html":{}}}],["dividermodule",{"_index":1964,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["docker",{"_index":2687,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":2684,"title":{},"body":{"index.html":{}}}],["dockerize",{"_index":2685,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2449,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["dosign",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["dot",{"_index":1365,"title":{},"body":{"components/IngredientComponent.html":{}}}],["down",{"_index":1860,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["drop",{"_index":1859,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["dropdown",{"_index":1388,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["dropdownmodule",{"_index":634,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["du",{"_index":881,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["dubeau",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dubois",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duration",{"_index":2202,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["during",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2039,"title":{},"body":{"components/RecipesComponent.html":{},"dependencies.html":{}}}],["dynamicdialog",{"_index":831,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["dynamicdialogconfig",{"_index":941,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["dynamicdialogmodule",{"_index":1079,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["dynamicdialogref",{"_index":774,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["définitivement",{"_index":2076,"title":{},"body":{"components/RecipesComponent.html":{}}}],["désol",{"_index":1213,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["e2e",{"_index":2650,"title":{},"body":{"index.html":{}}}],["e['code",{"_index":304,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["ease",{"_index":325,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/ServerErrorComponent.html":{}}}],["edge",{"_index":1057,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["edit",{"_index":1149,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["editing",{"_index":1689,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmode",{"_index":739,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["editmodeemail",{"_index":1691,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodefirstname",{"_index":1692,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodelastname",{"_index":1693,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editmodephone",{"_index":1694,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editprofilecomponent",{"_index":1775,"title":{},"body":{"modules/ProfileModule.html":{}}}],["edituser",{"_index":2374,"title":{},"body":{"components/UsersComponent.html":{}}}],["edituser(user",{"_index":2380,"title":{},"body":{"components/UsersComponent.html":{}}}],["effect",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["effectsmodule.forfeature([usereffects",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["element",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ellipsis",{"_index":2090,"title":{},"body":{"components/RecipesComponent.html":{}}}],["email",{"_index":619,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["ember",{"_index":2182,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["emitted",{"_index":2211,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["en",{"_index":908,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["end",{"_index":2100,"title":{},"body":{"components/RecipesComponent.html":{},"index.html":{}}}],["endpoints",{"_index":2246,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["endpoints.logout",{"_index":2252,"title":{},"body":{"components/SidebarComponent.html":{}}}],["entotal",{"_index":1474,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["entrycomponents",{"_index":1063,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["enumerations",{"_index":2585,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":80,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/contractors/${create.id}/times",{"_index":2137,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/recipes",{"_index":1143,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${franchisee.id}/times",{"_index":2136,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["environment.apibaseurl}/contractors/${id}/recipes/${recipe.id",{"_index":1155,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/contractors/${update.id}/recipes/${recipe.id",{"_index":1153,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["environment.apibaseurl}/users/${user.id}/roles",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apibaseurl}/users/current",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthcallbackuri",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthclientid",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.oauthproviderbaseurl",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.prod.ts",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1719,"title":{},"body":{"components/ProfileComponent.html":{}}}],["err.message",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.statustext",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["erreur",{"_index":877,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error",{"_index":309,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'name",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["error('failed",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('state",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('user",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('workflow",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(error.message",{"_index":1229,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error(httperrorresponse",{"_index":2009,"title":{},"body":{"injectables/RecipeService.html":{}}}],["error.component",{"_index":642,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["error.component.html",{"_index":2142,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.scss",{"_index":2141,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts",{"_index":2140,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:13",{"_index":2144,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.component.ts:8",{"_index":2143,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["error.error",{"_index":882,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["error.error.message",{"_index":2414,"title":{},"body":{"components/UsersComponent.html":{}}}],["error.interceptor.ts",{"_index":1187,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:13",{"_index":1190,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:18",{"_index":1202,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:30",{"_index":1192,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":1208,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error/http",{"_index":1186,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error/server",{"_index":641,"title":{},"body":{"modules/ComponentsModule.html":{},"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["error?.error?.message",{"_index":1212,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errordatahttp",{"_index":673,"title":{"interfaces/ErrorDataHttp.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["errorhttp",{"_index":683,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorhttpservice",{"_index":680,"title":{"injectables/ErrorHttpService.html":{}},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["errorhttpsubject",{"_index":681,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["errorname",{"_index":946,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["errors",{"_index":1605,"title":{},"body":{"injectables/MessagesService.html":{}}}],["est",{"_index":849,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["etes",{"_index":1320,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["event",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["event.checked",{"_index":1326,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["event.files",{"_index":1919,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.files[0",{"_index":1916,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["event.target",{"_index":815,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["event.url",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url.match",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value",{"_index":822,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["eventtarget",{"_index":2066,"title":{},"body":{"components/RecipesComponent.html":{}}}],["example",{"_index":2686,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":868,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["execute",{"_index":2648,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2065,"title":{},"body":{"components/RecipesComponent.html":{}}}],["exit",{"_index":2663,"title":{},"body":{"index.html":{}}}],["expire_at",{"_index":12,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["expires_in",{"_index":13,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["explorer",{"_index":1054,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["exports",{"_index":625,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{}}}],["express",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["external_link",{"_index":1665,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["eyes",{"_index":2228,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["f10f652d3da9",{"_index":2703,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1195,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["false",{"_index":302,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1342,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["fancy",{"_index":2146,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fb",{"_index":942,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["fc",{"_index":1363,"title":{},"body":{"components/IngredientComponent.html":{}}}],["feature",{"_index":257,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"miscellaneous/variables.html":{}}}],["ffa62b",{"_index":338,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["ffffff",{"_index":1358,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ffffffc7",{"_index":2295,"title":{},"body":{"components/TitleComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":2634,"title":{},"body":{"index.html":{}}}],["fileupload",{"_index":1933,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploader",{"_index":1937,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["fileuploadmodule",{"_index":1956,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["fill",{"_index":1660,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["filter",{"_index":1617,"title":{},"body":{"injectables/MessagesService.html":{},"components/ProfileComponent.html":{}}}],["filter((user",{"_index":1727,"title":{},"body":{"components/ProfileComponent.html":{}}}],["finalize",{"_index":782,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["firefox",{"_index":1044,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["first",{"_index":740,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["first_line",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":616,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(response",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(userroles",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstvaluefrom(usr",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["fish",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":712,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["flame",{"_index":2159,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["flex",{"_index":358,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["flicker",{"_index":2160,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["float",{"_index":1400,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["flow",{"_index":2732,"title":{},"body":{"index.html":{}}}],["font",{"_index":709,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["food",{"_index":705,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer",{"_index":698,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["footer'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":700,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":699,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":637,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["footercomponent",{"_index":204,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":805,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/UsersComponent.html":{}}}],["formbuilder",{"_index":943,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formcontrol",{"_index":1284,"title":{},"body":{"components/IngredientComponent.html":{}}}],["formdata",{"_index":1785,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/RecipeService.html":{}}}],["formdata.append('email",{"_index":1797,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('file_uuid",{"_index":2028,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('filename",{"_index":2025,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('firstname",{"_index":1794,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('lastname",{"_index":1795,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formdata.append('name",{"_index":2023,"title":{},"body":{"injectables/RecipeService.html":{}}}],["formdata.append('phone",{"_index":1796,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formgroup",{"_index":806,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["formsmodule",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["formvalue",{"_index":1729,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.email.trim",{"_index":1738,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.firstname.trim",{"_index":1732,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.lastname.trim",{"_index":1734,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formvalue.phone.trim",{"_index":1736,"title":{},"body":{"components/ProfileComponent.html":{}}}],["forroot",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["found",{"_index":1623,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["found.component",{"_index":1684,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["found.component.html",{"_index":1625,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1624,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1622,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:13",{"_index":1627,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1626,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1621,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{}}}],["fr",{"_index":1814,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["france",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["franch",{"_index":2435,"title":{},"body":{"injectables/UsersService.html":{}}}],["franchis",{"_index":828,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["franchisee",{"_index":209,"title":{"interfaces/Franchisee.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["franchisee'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["franchisee.address.city",{"_index":894,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.address.country",{"_index":895,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.address.first_line",{"_index":891,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.address.second_line",{"_index":892,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.address.zip_code",{"_index":893,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.component.html",{"_index":737,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.component.scss",{"_index":728,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.email",{"_index":890,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.name",{"_index":853,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee.owned_by",{"_index":1144,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["franchisee.phone",{"_index":889,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchisee/franchisee.component",{"_index":1090,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["franchisee_id",{"_index":1116,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["franchiseeaccess",{"_index":2533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchiseearray",{"_index":934,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["franchiseecomponent",{"_index":206,"title":{"components/FranchiseeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseedialogcomponent",{"_index":208,"title":{"components/FranchiseeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["franchiseemodule",{"_index":1058,"title":{"modules/FranchiseeModule.html":{}},"body":{"modules/FranchiseeModule.html":{},"modules.html":{},"overview.html":{}}}],["franchiseerecipe",{"_index":1096,"title":{"interfaces/FranchiseeRecipe.html":{}},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["franchisees",{"_index":741,"title":{},"body":{"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{}}}],["franchisees.length",{"_index":912,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["franchiseeservice",{"_index":751,"title":{"injectables/FranchiseeService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"injectables/FranchiseeService.html":{},"coverage.html":{},"overview.html":{}}}],["franchisés",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["freshaccesstoken",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["freshaccesstoken.access_token",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["friday",{"_index":666,"title":{"interfaces/Friday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["from(this.handle(req",{"_index":139,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["fromauth",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["fromauth.userreducer",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["front",{"_index":2199,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["fruit",{"_index":1489,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["function",{"_index":259,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["functionality",{"_index":677,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["functions",{"_index":2613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundo",{"_index":1628,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["further",{"_index":2657,"title":{},"body":{"index.html":{}}}],["g",{"_index":2705,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2636,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2621,"title":{},"body":{"index.html":{}}}],["generates",{"_index":2715,"title":{},"body":{"index.html":{}}}],["get(`${environment.apibaseurl}/contractors",{"_index":1136,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["get(`${environment.apibaseurl}/ingredients",{"_index":1422,"title":{},"body":{"injectables/IngredientService.html":{}}}],["get(`${environment.apibaseurl}/ingredients/types",{"_index":1494,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id",{"_index":2006,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/${id}/ingredients",{"_index":2011,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes/types",{"_index":2012,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/recipes?includes[]=pictures",{"_index":2008,"title":{},"body":{"injectables/RecipeService.html":{}}}],["get(`${environment.apibaseurl}/users",{"_index":2443,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(`${environment.apibaseurl}/users/${id",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["get(`${environment.apibaseurl}/users/${id}/roles",{"_index":2349,"title":{},"body":{"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/addresses",{"_index":94,"title":{},"body":{"injectables/AddressService.html":{}}}],["get(`${environment.apibaseurl}/users/${user.id}/roles",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(`${environment.apibaseurl}/users/current",{"_index":2348,"title":{},"body":{"injectables/UserService.html":{}}}],["get(`${environment.apibaseurl}/users/current?includes[]=roles",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["get(`${environment.oauthproviderbaseurl}/token",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(key",{"_index":1574,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getaccesstoken",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaddresses",{"_index":39,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddresses(user",{"_index":65,"title":{},"body":{"injectables/AddressService.html":{}}}],["getauthorizationcode",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuserremote",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["getformvalues",{"_index":936,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["getfranchiseerecipes",{"_index":1105,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchiseerecipes(franchisee",{"_index":1117,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["getfranchisees",{"_index":810,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{}}}],["getingredients",{"_index":1410,"title":{},"body":{"injectables/IngredientService.html":{}}}],["getingredientsbyrecipeid",{"_index":1975,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientsbyrecipeid(id",{"_index":1988,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getingredientstypes",{"_index":1478,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["getnewuser",{"_index":2341,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole",{"_index":2342,"title":{},"body":{"injectables/UserService.html":{}}}],["getnewuserrole(id",{"_index":2345,"title":{},"body":{"injectables/UserService.html":{}}}],["getpkce",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpkce(128",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrecipe",{"_index":1976,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipe(id",{"_index":1990,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrecipes",{"_index":1977,"title":{},"body":{"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["getrecipetype",{"_index":1978,"title":{},"body":{"injectables/RecipeService.html":{}}}],["getrole",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrole(user",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["getroleremote(user",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["getschedule",{"_index":2125,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["getschedule(franchisee",{"_index":2131,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["getting",{"_index":2617,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["getuser(id",{"_index":2430,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbyid(id",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserrole",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["getuserrole(id",{"_index":2432,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserrole(user",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":2257,"title":{},"body":{"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["gill",{"_index":2296,"title":{},"body":{"components/TitleComponent.html":{}}}],["git",{"_index":2681,"title":{},"body":{"index.html":{}}}],["global",{"_index":2717,"title":{},"body":{"index.html":{}}}],["glow",{"_index":2222,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["go",{"_index":2660,"title":{},"body":{"index.html":{}}}],["good",{"_index":704,"title":{},"body":{"components/FooterComponent.html":{}}}],["goodfood",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gradient(135deg",{"_index":2293,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(147.38deg",{"_index":1357,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grant_type",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["grayscale",{"_index":1354,"title":{},"body":{"components/IngredientComponent.html":{}}}],["grenoble",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1334,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["guard",{"_index":1499,"title":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1501,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"overview.html":{}}}],["handle",{"_index":115,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interfaces/UserState.html":{}}}],["handle(req",{"_index":120,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["handle(request",{"_index":1204,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handleerror",{"_index":1188,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handleerror(error",{"_index":1191,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handler",{"_index":1196,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["handles",{"_index":1193,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["has(key",{"_index":1577,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["header",{"_index":824,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["height",{"_index":834,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["help",{"_index":2658,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1344,"title":{},"body":{"components/IngredientComponent.html":{}}}],["here",{"_index":1755,"title":{},"body":{"components/ProfileComponent.html":{}}}],["hidden",{"_index":2089,"title":{},"body":{"components/RecipesComponent.html":{}}}],["hidedialog",{"_index":1250,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["hidehomebtn",{"_index":2235,"title":{},"body":{"components/SidebarComponent.html":{}}}],["highlight",{"_index":2230,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["home",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":1183,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":211,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":1176,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":314,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["hours",{"_index":672,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["htmltextareaelement).value",{"_index":816,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["http",{"_index":48,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["http.service",{"_index":1134,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["http.service.ts",{"_index":676,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["http.service.ts:10",{"_index":692,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:21",{"_index":695,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:29",{"_index":693,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http.service.ts:9",{"_index":696,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["http/error",{"_index":675,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["http://localhost/4000",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/4100",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/8085/api",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2631,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200/login/redirect",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/api",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8085/oauth",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8090/storage/files/string",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":1066,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httpclient",{"_index":43,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":1065,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["httperrorinterceptor",{"_index":1184,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["httperrorresponse",{"_index":678,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["httpevent",{"_index":129,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":123,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":130,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":121,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.google.fr",{"_index":2594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["https://www.tektutorialshub.com/angular/property",{"_index":2064,"title":{},"body":{"components/RecipesComponent.html":{}}}],["ici",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{}}}],["icon",{"_index":866,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["icons",{"_index":1339,"title":{},"body":{"components/IngredientComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["idfranchisee",{"_index":2371,"title":{},"body":{"components/UsersComponent.html":{}}}],["igredients",{"_index":1112,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{}}}],["il",{"_index":910,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["image",{"_index":1355,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"index.html":{}}}],["imagesrepository",{"_index":2688,"title":{},"body":{"index.html":{}}}],["img",{"_index":2101,"title":{},"body":{"components/RecipesComponent.html":{}}}],["img.flag",{"_index":1945,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["implements",{"_index":133,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":74,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":713,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"components/DefaultComponent.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indigo/theme.css",{"_index":2677,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":327,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{}}}],["informations",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["ingredient",{"_index":216,"title":{"interfaces/Ingredient.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingredient'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ingredient.allergen",{"_index":1301,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.html",{"_index":1244,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.component.scss",{"_index":1240,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.id",{"_index":1305,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/RecipeService.html":{}}}],["ingredient.model",{"_index":1808,"title":{},"body":{"interfaces/Recipe.html":{}}}],["ingredient.name",{"_index":1299,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient.types",{"_index":1303,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredient/ingredient.component",{"_index":1968,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["ingredient_type",{"_index":1486,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["ingredientcomponent",{"_index":213,"title":{"components/IngredientComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientdialog",{"_index":1245,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredients",{"_index":1237,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["ingredients.length",{"_index":1332,"title":{},"body":{"components/IngredientComponent.html":{}}}],["ingredientsdetails",{"_index":1815,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["ingredientservice",{"_index":1257,"title":{"injectables/IngredientService.html":{}},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["ingredientstypes",{"_index":2070,"title":{},"body":{"components/RecipesComponent.html":{}}}],["ingredienttype",{"_index":1246,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{}}}],["ingredienttypecomponent",{"_index":215,"title":{"components/IngredientTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredienttypedialog",{"_index":1433,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingredienttypeservice",{"_index":1258,"title":{"injectables/IngredientTypeService.html":{}},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["ingretype",{"_index":1230,"title":{"interfaces/IngreType.html":{}},"body":{"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingretype.description",{"_index":1459,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.id",{"_index":1461,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["ingretype.name",{"_index":1458,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["init",{"_index":1251,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["initauth",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initauth(user",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["initform",{"_index":937,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["initial",{"_index":2360,"title":{},"body":{"interfaces/UserState.html":{}}}],["initialstate",{"_index":2362,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inizialized",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":31,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":1404,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["inner",{"_index":2200,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["input",{"_index":1052,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["inputnumbermodule",{"_index":1075,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputs",{"_index":1532,"title":{},"body":{"components/LoadingComponent.html":{},"components/TitleComponent.html":{}}}],["inputtextareamodule",{"_index":1077,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["inputtextmodule",{"_index":1071,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["install",{"_index":2670,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2669,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["intercept",{"_index":116,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":127,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["intercept(request",{"_index":1201,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":108,"title":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":1092,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["interceptor.service.ts",{"_index":113,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:15",{"_index":119,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:18",{"_index":128,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptor.service.ts:33",{"_index":124,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["interceptors",{"_index":110,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"interfaces/Franchisee.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"interfaces/RecipeType.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"interfaces/Wednesday.html":{},"overview.html":{}}}],["internet",{"_index":1053,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["introuvable",{"_index":1223,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["isadmin",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isallergen",{"_index":1252,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isallergen(event",{"_index":1265,"title":{},"body":{"components/IngredientComponent.html":{}}}],["isauthenticated",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["isauthenticatedguard",{"_index":1500,"title":{"guards/IsAuthenticatedGuard.html":{}},"body":{"guards/IsAuthenticatedGuard.html":{},"coverage.html":{}}}],["iscreate",{"_index":742,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["isere",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfranchisee",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istanbul",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["isunauthenticatedguard",{"_index":1515,"title":{"guards/IsUnauthenticatedGuard.html":{}},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["item",{"_index":1113,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/UsersService.html":{}}}],["item.ingredients.map((ingredient",{"_index":2014,"title":{},"body":{"injectables/RecipeService.html":{}}}],["items",{"_index":363,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"injectables/IngredientService.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["jour",{"_index":1314,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":1590,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(action.userdetails",{"_index":2335,"title":{},"body":{"injectables/UserEffects.html":{}}}],["json.stringify(newuserdetails.email",{"_index":1793,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.firstname",{"_index":1787,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.lastname",{"_index":1789,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(newuserdetails.phone",{"_index":1791,"title":{},"body":{"injectables/ProfileService.html":{}}}],["json.stringify(value",{"_index":1585,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":359,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["karma",{"_index":2561,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1576,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyfiltermodule",{"_index":1080,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["keyframes",{"_index":330,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["l'ingrédient",{"_index":1324,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["la",{"_index":1912,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["label",{"_index":1941,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["label:not(.p",{"_index":1389,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["ladate",{"_index":1875,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["lastname",{"_index":617,"title":{},"body":{"interfaces/Autorisation.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":131,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["lastvaluefrom(next.handle(req",{"_index":147,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["latest",{"_index":2690,"title":{},"body":{"index.html":{}}}],["lato",{"_index":1343,"title":{},"body":{"components/IngredientComponent.html":{}}}],["layer",{"_index":1399,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["layout",{"_index":913,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["layouts/components/page",{"_index":1683,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layouts/layouts.module",{"_index":1681,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["layoutsmodule",{"_index":1520,"title":{"modules/LayoutsModule.html":{}},"body":{"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["le",{"_index":848,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["left",{"_index":355,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["length",{"_index":1701,"title":{},"body":{"components/ProfileComponent.html":{}}}],["les",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lets",{"_index":1197,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["life",{"_index":875,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["light",{"_index":2676,"title":{},"body":{"index.html":{}}}],["lightgoldenrodyellow",{"_index":708,"title":{},"body":{"components/FooterComponent.html":{}}}],["ligne",{"_index":1035,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["line",{"_index":2254,"title":{},"body":{"components/SidebarComponent.html":{}}}],["linear",{"_index":1356,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1666,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":2118,"title":{},"body":{"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":2743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["livraison",{"_index":1041,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["load",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadappuser",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["loaded",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":753,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["loading'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["loading.component.html",{"_index":1531,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1530,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":640,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["loadingcomponent",{"_index":218,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingoff",{"_index":1552,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingon",{"_index":1553,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":754,"title":{"injectables/LoadingService.html":{}},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loadingsubject",{"_index":1551,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loaduser",{"_index":311,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["localhost:8080/api/addresses",{"_index":98,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/addresses/{address_id",{"_index":102,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/contractors",{"_index":1135,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes",{"_index":1142,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id",{"_index":1152,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/contractors/{contractor_id}/times",{"_index":2130,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["localhost:8080/api/contractors/{contractors_id",{"_index":1156,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["localhost:8080/api/ingredients",{"_index":1421,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/ingredients/types",{"_index":1493,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/types/{ingredient_type_id",{"_index":1496,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["localhost:8080/api/ingredients/{ingredient_id",{"_index":1425,"title":{},"body":{"injectables/IngredientService.html":{}}}],["localhost:8080/api/recipes",{"_index":2007,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id",{"_index":2005,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/ingredients",{"_index":2010,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/recipes/{recipe_id}/pictures",{"_index":2027,"title":{},"body":{"injectables/RecipeService.html":{}}}],["localhost:8080/api/users",{"_index":2442,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id",{"_index":2441,"title":{},"body":{"injectables/UsersService.html":{}}}],["localhost:8080/api/users/{user_id}/addresses",{"_index":91,"title":{},"body":{"injectables/AddressService.html":{}}}],["localhost:8080/api/users/{user_id}/roles",{"_index":2444,"title":{},"body":{"injectables/UsersService.html":{}}}],["localstorage",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["localstorage.getitem(key",{"_index":1592,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1593,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem",{"_index":2334,"title":{},"body":{"injectables/UserEffects.html":{}}}],["localstorage.setitem(key",{"_index":1587,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":434,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["logger",{"_index":2537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(reducer",{"_index":260,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.html",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":220,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logoutaction",{"_index":2336,"title":{},"body":{"injectables/UserEffects.html":{}}}],["lose",{"_index":1417,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{}}}],["lower",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["lunch",{"_index":670,"title":{"interfaces/Lunch.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":1657,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["make",{"_index":1999,"title":{},"body":{"injectables/RecipeService.html":{}}}],["makeingredienttype",{"_index":1435,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["makerecipe",{"_index":1253,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["map",{"_index":77,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["map((res",{"_index":1140,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["map((userdetails",{"_index":2321,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map((value",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materialrun",{"_index":2723,"title":{},"body":{"index.html":{}}}],["max",{"_index":833,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["max_delivery_radius",{"_index":720,"title":{},"body":{"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["meat",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1393,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["medium",{"_index":2092,"title":{},"body":{"components/RecipesComponent.html":{}}}],["message",{"_index":83,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["message.create",{"_index":1424,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/ScheduleService.html":{}}}],["message.delete",{"_index":107,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["message.update",{"_index":105,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["message.update_success",{"_index":1427,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["messageservice",{"_index":727,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["messagesservice",{"_index":1603,"title":{"injectables/MessagesService.html":{}},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["metadata",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["metareducer",{"_index":254,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":267,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":35,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["microsoft",{"_index":1056,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["middle",{"_index":2095,"title":{},"body":{"components/RecipesComponent.html":{}}}],["min",{"_index":731,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["minutes",{"_index":2707,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":2584,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":1313,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["mockaddress",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchisee",{"_index":2478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseearray",{"_index":2479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe1",{"_index":2474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipe2",{"_index":2475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockfranchiseerecipearray",{"_index":2476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre1",{"_index":2486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingre2",{"_index":2487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockingredientarray",{"_index":2488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockpicturearray",{"_index":2490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe1",{"_index":2500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipe2",{"_index":2501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipearray",{"_index":2502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecipetypearray",{"_index":2495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockschedule",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype1",{"_index":2482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktype2",{"_index":2483,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktypearray",{"_index":2484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser1",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser2",{"_index":2507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser3",{"_index":2508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserarray",{"_index":2509,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth",{"_index":2510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth1",{"_index":2511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserauth2",{"_index":2512,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserwithauth",{"_index":2513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":840,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["models/access",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/address.model",{"_index":79,"title":{},"body":{"injectables/AddressService.html":{}}}],["models/franchisee",{"_index":1132,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["models/franchisee.model",{"_index":1133,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/ScheduleService.html":{}}}],["models/ingredient",{"_index":1492,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["models/ingredient.model",{"_index":2004,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/picture.model",{"_index":2002,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe",{"_index":2003,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/recipe.model",{"_index":2001,"title":{},"body":{"injectables/RecipeService.html":{}}}],["models/schedule.model",{"_index":2135,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["models/user.model",{"_index":82,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["modifi",{"_index":858,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["modification",{"_index":1029,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["modifications",{"_index":2600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":369,"title":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":371,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{}}}],["moi",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":878,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["monday",{"_index":662,"title":{"interfaces/Monday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":2659,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1352,"title":{},"body":{"components/IngredientComponent.html":{},"components/ServerErrorComponent.html":{}}}],["ms",{"_index":1051,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["msg",{"_index":1613,"title":{},"body":{"injectables/MessagesService.html":{}}}],["msg.length",{"_index":1614,"title":{},"body":{"injectables/MessagesService.html":{}}}],["mt",{"_index":2297,"title":{},"body":{"components/TitleComponent.html":{}}}],["multi",{"_index":1095,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["multiselect",{"_index":1938,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["multiselectmodule",{"_index":1962,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["n'etes",{"_index":1214,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["name",{"_index":47,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2702,"title":{},"body":{"index.html":{}}}],["nav",{"_index":2279,"title":{},"body":{"components/TabsComponent.html":{}}}],["navigate",{"_index":2630,"title":{},"body":{"index.html":{}}}],["navigationcancel",{"_index":1540,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationend",{"_index":1541,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationerror",{"_index":1542,"title":{},"body":{"components/LoadingComponent.html":{}}}],["navigationstart",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["need",{"_index":2654,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newerrorhttp",{"_index":688,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["newerrorhttp(httperrorresponse",{"_index":694,"title":{},"body":{"injectables/ErrorHttpService.html":{}}}],["newfranchisee",{"_index":1020,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{}}}],["newfranchisee(create",{"_index":1121,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["newingredient",{"_index":1254,"title":{},"body":{"components/IngredientComponent.html":{}}}],["newingredienttype",{"_index":1436,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["newrecipe",{"_index":1818,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["newuser",{"_index":2375,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["newuser(item",{"_index":2436,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuserdetails",{"_index":1784,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.email",{"_index":1792,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.firstname",{"_index":1786,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.lastname",{"_index":1788,"title":{},"body":{"injectables/ProfileService.html":{}}}],["newuserdetails.phone",{"_index":1790,"title":{},"body":{"injectables/ProfileService.html":{}}}],["next",{"_index":122,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{}}}],["next.handle(req",{"_index":137,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["ng",{"_index":315,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nginx",{"_index":2704,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["ngrx/effects",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":250,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":255,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["ngx",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["night",{"_index":671,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":1228,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["node",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["node_modules/.bin/compodoc",{"_index":2725,"title":{},"body":{"index.html":{}}}],["node_modules/primeicons/primeicons.css",{"_index":2674,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/primeng.min.css",{"_index":2678,"title":{},"body":{"index.html":{}}}],["node_modules/primeng/resources/themes/lara",{"_index":2675,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":2667,"title":{},"body":{"index.html":{}}}],["nom",{"_index":885,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["non",{"_index":1331,"title":{},"body":{"components/IngredientComponent.html":{}}}],["none",{"_index":1392,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["normal",{"_index":2084,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nosonar",{"_index":89,"title":{},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["nous",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["nouveau",{"_index":827,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["nouvel",{"_index":1318,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["nouvelle",{"_index":2068,"title":{},"body":{"components/RecipesComponent.html":{}}}],["nowrap",{"_index":2088,"title":{},"body":{"components/RecipesComponent.html":{}}}],["npm",{"_index":2627,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2720,"title":{},"body":{"index.html":{}}}],["null",{"_index":293,"title":{},"body":{"components/AuthComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["numéro",{"_index":886,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{}}}],["o",{"_index":2626,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["oauthcallbackuri",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthclientid",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauthproviderbaseurl",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":1139,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["obligatoire",{"_index":1034,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["obs",{"_index":1561,"title":{},"body":{"injectables/LoadingService.html":{}}}],["observable",{"_index":56,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["occurred",{"_index":1200,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["of(null).pipe",{"_index":1566,"title":{},"body":{"injectables/LoadingService.html":{}}}],["oftype",{"_index":2329,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.loaduser",{"_index":2320,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logoutaction.logoutflowinitiated.type",{"_index":2337,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.updateuser",{"_index":2324,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.userloaded",{"_index":2332,"title":{},"body":{"injectables/UserEffects.html":{}}}],["olhos",{"_index":1644,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["on(useractions.updateuser",{"_index":2367,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["on(useractions.userloaded",{"_index":2365,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["onchange",{"_index":1819,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchange(event",{"_index":1832,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onchangevalue",{"_index":748,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onchangevalue(event",{"_index":760,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onclick",{"_index":1917,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar",{"_index":1820,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclickstar(event",{"_index":1834,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onclose",{"_index":938,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["ondelete",{"_index":2376,"title":{},"body":{"components/UsersComponent.html":{}}}],["ondelete(user",{"_index":2387,"title":{},"body":{"components/UsersComponent.html":{}}}],["one",{"_index":258,"title":{},"body":{"interfaces/AppState.html":{},"injectables/RecipeService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["onfieldcancel",{"_index":1695,"title":{},"body":{"components/ProfileComponent.html":{}}}],["onfieldcancel(user",{"_index":1703,"title":{},"body":{"components/ProfileComponent.html":{}}}],["oninit",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["onlogin",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["onselectpicture",{"_index":1821,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onselectpicture(event",{"_index":1837,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onsortchange",{"_index":749,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsortchange(event",{"_index":762,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["onsubmit",{"_index":939,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["ont",{"_index":2601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupload",{"_index":1822,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic",{"_index":1823,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["onuploadpic(event",{"_index":1841,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["opacity",{"_index":797,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["open",{"_index":2258,"title":{},"body":{"injectables/SidebarService.html":{},"index.html":{}}}],["open(display",{"_index":2261,"title":{},"body":{"injectables/SidebarService.html":{}}}],["opened_at",{"_index":660,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["opensidebar",{"_index":2305,"title":{},"body":{"components/TopbarComponent.html":{}}}],["opera",{"_index":1045,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["operation",{"_index":1194,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Diner.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":906,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["order.amount",{"_index":903,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["order.customer",{"_index":902,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["order.id",{"_index":901,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["order.status",{"_index":905,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["origin",{"_index":1632,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["osx",{"_index":1353,"title":{},"body":{"components/IngredientComponent.html":{}}}],["oui",{"_index":1330,"title":{},"body":{"components/IngredientComponent.html":{}}}],["out",{"_index":326,"title":{},"body":{"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/ServerErrorComponent.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":2226,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["over",{"_index":2000,"title":{},"body":{"injectables/RecipeService.html":{}}}],["overflow",{"_index":836,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["overview",{"_index":2661,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned_by",{"_index":721,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["ownedby",{"_index":722,"title":{},"body":{"interfaces/Franchisee.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1122,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["p",{"_index":319,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["package",{"_index":2543,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":714,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["page",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":222,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":1367,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["panelmodule",{"_index":1084,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["pao",{"_index":1633,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["param",{"_index":99,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters['code",{"_index":288,"title":{},"body":{"components/AuthComponent.html":{}}}],["parameters['state",{"_index":289,"title":{},"body":{"components/AuthComponent.html":{}}}],["params",{"_index":859,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["part",{"_index":1754,"title":{},"body":{"components/ProfileComponent.html":{}}}],["partial",{"_index":50,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pas",{"_index":1215,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["passe",{"_index":296,"title":{},"body":{"components/AuthComponent.html":{}}}],["path",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"components/PageNotFoundComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["pays",{"_index":1039,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["phone",{"_index":618,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["pi",{"_index":867,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["picture",{"_index":1663,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/Picture.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture.model",{"_index":1809,"title":{},"body":{"interfaces/Recipe.html":{}}}],["picture.name",{"_index":2024,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture.uuid",{"_index":2029,"title":{},"body":{"injectables/RecipeService.html":{}}}],["picture1",{"_index":2491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture2",{"_index":2492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["picture3",{"_index":2493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pictures",{"_index":1803,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pipe(catcherror((err",{"_index":1205,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["pipe(filter((msg",{"_index":1612,"title":{},"body":{"injectables/MessagesService.html":{}}}],["pipe(finalize",{"_index":811,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["pipe(map((res",{"_index":95,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["pipe(map((user",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["pkce",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["placeholder",{"_index":1042,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["plat",{"_index":1922,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["platform",{"_index":2651,"title":{},"body":{"index.html":{}}}],["porc",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ports",{"_index":2701,"title":{},"body":{"index.html":{}}}],["position",{"_index":351,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/LoadingComponent.html":{}}}],["post",{"_index":97,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["post(`${environment.apibaseurl}/addresses",{"_index":100,"title":{},"body":{"injectables/AddressService.html":{}}}],["post(`${environment.apibaseurl}/contractors",{"_index":1145,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/contractors/${item.id}/recipes",{"_index":1150,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["post(`${environment.apibaseurl}/ingredients",{"_index":1423,"title":{},"body":{"injectables/IngredientService.html":{}}}],["post(`${environment.apibaseurl}/ingredients/types",{"_index":1495,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["post(`${environment.apibaseurl}/recipes",{"_index":2013,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.apibaseurl}/recipes/${recipe.id}/pictures",{"_index":2030,"title":{},"body":{"injectables/RecipeService.html":{}}}],["post(`${environment.apibaseurl}/users",{"_index":2445,"title":{},"body":{"injectables/UsersService.html":{}}}],["post(`${environment.oauthproviderbaseurl}/token",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["postal",{"_index":1037,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["price",{"_index":1099,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":1944,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["primeflex",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2574,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng",{"_index":1768,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["primeng/avatar",{"_index":1182,"title":{},"body":{"modules/HomeModule.html":{}}}],["primeng/badge",{"_index":627,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomeModule.html":{}}}],["primeng/button",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/calendar",{"_index":1961,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/checkbox",{"_index":633,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/confirmdialog",{"_index":1083,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/dataview",{"_index":1955,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dialog",{"_index":1070,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/divider",{"_index":1965,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/dropdown",{"_index":635,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/dynamicdialog",{"_index":783,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["primeng/fileupload",{"_index":1957,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/inputnumber",{"_index":1076,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtext",{"_index":1072,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/inputtextarea",{"_index":1078,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/keyfilter",{"_index":1081,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/multiselect",{"_index":1963,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/panel",{"_index":1085,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/progressbar",{"_index":1772,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/progressspinner",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/radiobutton",{"_index":1959,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["primeng/ripple",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/selectbutton",{"_index":1087,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/sidebar",{"_index":631,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["primeng/slider",{"_index":1770,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["primeng/table",{"_index":1068,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tabview",{"_index":1089,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primeng/toast",{"_index":656,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/toolbar",{"_index":1074,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["primeng/tooltip",{"_index":629,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["primengconfig",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["principal",{"_index":1670,"title":{},"body":{"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{}}}],["principal'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["principal.component",{"_index":1682,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["principal.component.html",{"_index":1672,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principal.component.scss",{"_index":1671,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["principalcomponent",{"_index":225,"title":{"components/PrincipalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["principalmodule",{"_index":1675,"title":{"modules/PrincipalModule.html":{}},"body":{"modules/PrincipalModule.html":{},"modules.html":{},"overview.html":{}}}],["prises",{"_index":2602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["prix",{"_index":1925,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["problem",{"_index":687,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["prod",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":907,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{}}}],["product@description.com",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.fr",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product@description.org",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1686,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":1690,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1687,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1773,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profilecomponent",{"_index":227,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":1763,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1697,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":320,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["progressbar",{"_index":1369,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["progressbarmodule",{"_index":1771,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["progressspinnermodule",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["project",{"_index":2620,"title":{},"body":{"index.html":{}}}],["promise",{"_index":126,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"interfaces/Wednesday.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["props",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1093,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["providedin",{"_index":85,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{},"components/FranchiseeComponent.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["prénom",{"_index":1756,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["pscontainer",{"_index":2700,"title":{},"body":{"index.html":{}}}],["public",{"_index":36,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UsersService.html":{}}}],["pulse",{"_index":2195,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["put",{"_index":101,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["put(`${environment.apibaseurl}/addresses/${update.id",{"_index":103,"title":{},"body":{"injectables/AddressService.html":{}}}],["put(`${environment.apibaseurl}/contractors/${update.id}/times",{"_index":2138,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/${update.id",{"_index":1426,"title":{},"body":{"injectables/IngredientService.html":{}}}],["put(`${environment.apibaseurl}/ingredients/types/${update.id",{"_index":1497,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["put(`${environment.apibaseurl}/recipes/${update.id",{"_index":2015,"title":{},"body":{"injectables/RecipeService.html":{}}}],["put(`${environment.apibaseurl}/users/${update.id",{"_index":2446,"title":{},"body":{"injectables/UsersService.html":{}}}],["put(`${environment.apibaseurl}/users/${user.id",{"_index":1798,"title":{},"body":{"injectables/ProfileService.html":{}}}],["query",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["r",{"_index":2727,"title":{},"body":{"index.html":{}}}],["radiobuttonmodule",{"_index":1958,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["radius",{"_index":923,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/LoginComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/TitleComponent.html":{}}}],["reactiveformsmodule",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["readonly",{"_index":2256,"title":{},"body":{"injectables/SidebarService.html":{}}}],["recette",{"_index":1913,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recipe",{"_index":230,"title":{"interfaces/Recipe.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.available_at",{"_index":1924,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["recipe.base_price",{"_index":2081,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.id",{"_index":1154,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["recipe.mock.ts",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipe.model",{"_index":1101,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{}}}],["recipe.model.ts",{"_index":1098,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["recipe.name",{"_index":2072,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe.recipe_type.code",{"_index":2082,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipe/recipe",{"_index":1967,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe/recipes/recipes.component",{"_index":1970,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["recipe_id",{"_index":1100,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipe_type",{"_index":1804,"title":{},"body":{"interfaces/Recipe.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["recipedialog",{"_index":2034,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipedialogcomponent",{"_index":229,"title":{"components/RecipeDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipemanagementmodule",{"_index":1948,"title":{"modules/RecipeManagementModule.html":{}},"body":{"modules/RecipeManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["recipepostmodel",{"_index":1985,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipes",{"_index":1119,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["recipes'},{'name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["recipes.component.html",{"_index":2033,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipes.component.scss",{"_index":2032,"title":{},"body":{"components/RecipesComponent.html":{}}}],["recipescomponent",{"_index":231,"title":{"components/RecipesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipeservice",{"_index":1825,"title":{"injectables/RecipeService.html":{}},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recipestype",{"_index":1816,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["recipetype",{"_index":1807,"title":{"interfaces/RecipeType.html":{}},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype1",{"_index":2496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype2",{"_index":2497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipetype3",{"_index":2498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["redirect_uri",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["reducer",{"_index":2354,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":266,"title":{},"body":{"interfaces/AppState.html":{}}}],["reducers",{"_index":256,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":743,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["ref.onclose.subscribe((franchisee",{"_index":841,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["ref.onclose.subscribe((recipe",{"_index":2071,"title":{},"body":{"components/RecipesComponent.html":{}}}],["reference",{"_index":2662,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":14,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"injectables/AuthService.html":{}}}],["refreshed",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(data",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["related",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":2633,"title":{},"body":{"index.html":{}}}],["remote",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":1126,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/LocalStorageService.html":{}}}],["remove(key",{"_index":1579,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removerecipe",{"_index":1106,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["removerecipe(id",{"_index":1124,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["repeat",{"_index":1361,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["replaced",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reporter",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":125,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/RecipeService.html":{}}}],["req.clone",{"_index":143,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["req.urlwithparams.startswith(environment.apibaseurl",{"_index":136,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["request",{"_index":1203,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/RecipeService.html":{}}}],["required",{"_index":2418,"title":{},"body":{"components/UsersComponent.html":{}}}],["res",{"_index":96,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["res.id",{"_index":1019,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["res['data",{"_index":1141,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/RecipeService.html":{},"injectables/UsersService.html":{}}}],["res['message",{"_index":104,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{}}}],["res['payload",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["response_type",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1391,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["return",{"_index":92,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"interfaces/AppState.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reverse",{"_index":2207,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["revoke",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgb(193",{"_index":1048,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["rgb(227",{"_index":2280,"title":{},"body":{"components/TabsComponent.html":{}}}],["rgba(0",{"_index":365,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{}}}],["rgba(198",{"_index":2110,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rgba(213",{"_index":2290,"title":{},"body":{"components/TitleComponent.html":{}}}],["rgba(255",{"_index":1930,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["right",{"_index":356,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RecipeDialogComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{}}}],["ripplemodule",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["role",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rolearraytype",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolebyid(_user",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.franchisee",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":86,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["rotate",{"_index":1653,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(0",{"_index":2188,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotate(0deg",{"_index":1652,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{}}}],["rotate(45deg",{"_index":2191,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["rotatepao",{"_index":1635,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(0deg",{"_index":1655,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["rotatex(30deg",{"_index":1656,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["route",{"_index":1510,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routeconfigloadend",{"_index":1543,"title":{},"body":{"components/LoadingComponent.html":{}}}],["routeconfigloadstart",{"_index":1544,"title":{},"body":{"components/LoadingComponent.html":{}}}],["router",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forchild",{"_index":1528,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["routermodule.forchild(routes",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerreducer",{"_index":249,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["routerstatesnapshot.tostring",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["routes",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["routing",{"_index":1534,"title":{},"body":{"components/LoadingComponent.html":{},"modules/PrincipalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":1680,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["routing.module.ts",{"_index":2453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":2121,"title":{},"body":{"components/RecipesComponent.html":{}}}],["rue",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["run",{"_index":1199,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"index.html":{}}}],["running",{"_index":2644,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":78,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LoadingService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{}}}],["s",{"_index":2726,"title":{},"body":{"index.html":{}}}],["s256",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["safari",{"_index":1046,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sans",{"_index":1345,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["sara",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saturday",{"_index":667,"title":{"interfaces/Saturday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saumon",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":2671,"title":{},"body":{"index.html":{}}}],["savein",{"_index":2672,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":2635,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2194,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.8",{"_index":2196,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale(0.98",{"_index":1650,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1",{"_index":1651,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scale(1.1",{"_index":2197,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.65",{"_index":2178,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.7",{"_index":2174,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.72",{"_index":2177,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(0.9",{"_index":2169,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1",{"_index":2161,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scale3d(1.2",{"_index":2171,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scales",{"_index":1629,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["scaley(0.1",{"_index":2158,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["scaley(1",{"_index":2154,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["schedule",{"_index":661,"title":{"interfaces/Schedule.html":{}},"body":{"interfaces/Diner.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schedule.name",{"_index":896,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["scheduledialog",{"_index":744,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["scheduleservice",{"_index":2122,"title":{"injectables/ScheduleService.html":{}},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["scope",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["screen",{"_index":1394,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["script",{"_index":2724,"title":{},"body":{"index.html":{}}}],["sdqi",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second_line",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["select(selectuserdetails",{"_index":1726,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selectbuttonmodule",{"_index":1086,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["selectedingredients",{"_index":1247,"title":{},"body":{"components/IngredientComponent.html":{}}}],["selectedusers",{"_index":2372,"title":{},"body":{"components/UsersComponent.html":{}}}],["selectisloggedin",{"_index":2534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["selectprofileuser",{"_index":2535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserdetails",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserstate",{"_index":2536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":2120,"title":{},"body":{"components/RecipesComponent.html":{}}}],["sera",{"_index":2075,"title":{},"body":{"components/RecipesComponent.html":{}}}],["serif",{"_index":1346,"title":{},"body":{"components/IngredientComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":2625,"title":{},"body":{"index.html":{}}}],["server",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["servererrorcomponent",{"_index":233,"title":{"components/ServerErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serveur",{"_index":686,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["service",{"_index":1146,"title":{},"body":{"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["services/user/auth/auth.service",{"_index":1512,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["set",{"_index":1572,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set(key",{"_index":1581,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setheaders",{"_index":144,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["severity",{"_index":843,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["shadow",{"_index":2103,"title":{},"body":{"components/RecipesComponent.html":{}}}],["shared/models/picture.model",{"_index":1856,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/models/schedule.model",{"_index":786,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["shared/services/loading/loading.service",{"_index":1853,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["shared/services/profile/profile.service",{"_index":1713,"title":{},"body":{"components/ProfileComponent.html":{}}}],["shared/services/user/auth/auth.service",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/store/state/user",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["shared/store/state/user/user.reducer",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["showerrors",{"_index":1607,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showerrors(...errors",{"_index":1608,"title":{},"body":{"injectables/MessagesService.html":{}}}],["showloaderuntilcompleted",{"_index":1554,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showloaderuntilcompleted(obs",{"_index":1558,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sidebar",{"_index":2232,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component.html",{"_index":2234,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2233,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":636,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarcomponent",{"_index":236,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":630,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["sidebarservice",{"_index":2236,"title":{"injectables/SidebarService.html":{}},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["size",{"_index":710,"title":{},"body":{"components/FooterComponent.html":{},"components/IngredientComponent.html":{},"interfaces/Picture.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["size_unit",{"_index":1667,"title":{},"body":{"interfaces/Picture.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":927,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{}}}],["slidermodule",{"_index":1769,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["small",{"_index":711,"title":{},"body":{"components/FooterComponent.html":{},"components/RecipesComponent.html":{}}}],["smoke",{"_index":2215,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["smoothing",{"_index":1350,"title":{},"body":{"components/IngredientComponent.html":{}}}],["solid",{"_index":1398,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sonar",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["sortfield",{"_index":745,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["sortorder",{"_index":746,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"modules/LayoutsModule.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Picture.html":{},"components/PrincipalComponent.html":{},"modules/PrincipalModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"components/TabsComponent.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"index.html":{}}}],["space",{"_index":917,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sparks",{"_index":1646,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["spinner",{"_index":318,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["src/.../address.mock.ts",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoints.const.ts",{"_index":2588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.example.ts",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stage.ts",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fracnhisee",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../franchisee.mock.ts",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httprequest.const.ts",{"_index":2587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ingredient",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ingredients.mock.ts",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.const.ts",{"_index":2589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../picture.mock.ts",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../principal",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../recipe.mock.ts",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.const.ts",{"_index":2590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../schedule.mock.ts",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storagekeys.const.ts",{"_index":2591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../store.reducer.ts",{"_index":2615,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":2742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.ts",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.selector.ts",{"_index":2614,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.mock.ts",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":2452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/auth/auth.module.ts",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.module.ts:40",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth/auth.component.ts",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth/auth.component.ts:19",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:30",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth/auth.component.ts:42",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":1599,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":1600,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:9",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layouts/components/components.module",{"_index":1091,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["src/app/layouts/components/components.module.ts",{"_index":624,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/layouts/components/footer/footer.component.ts",{"_index":697,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:13",{"_index":702,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/footer/footer.component.ts:8",{"_index":701,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts",{"_index":1529,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:20",{"_index":1537,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:23",{"_index":1536,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:25",{"_index":1539,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/loading/loading.component.ts:29",{"_index":1538,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/layouts/components/page",{"_index":1620,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/server",{"_index":2139,"title":{},"body":{"components/ServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts",{"_index":2231,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:17",{"_index":2241,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:18",{"_index":2242,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:19",{"_index":2237,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:28",{"_index":2239,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:36",{"_index":2240,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/sidebar/sidebar.component.ts:40",{"_index":2238,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts",{"_index":2283,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/title/title.component.ts:10",{"_index":2286,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:16",{"_index":2288,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/title/title.component.ts:9",{"_index":2287,"title":{},"body":{"components/TitleComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts",{"_index":2300,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:18",{"_index":2311,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:19",{"_index":2310,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:20",{"_index":2306,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:28",{"_index":2308,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:33",{"_index":2307,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/components/topbar/topbar.component.ts:48",{"_index":2309,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":643,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:13",{"_index":647,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:8",{"_index":646,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.module.ts",{"_index":652,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/layouts/layouts.module.ts",{"_index":1524,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/layouts/layouts.module.ts:14",{"_index":1525,"title":{},"body":{"modules/LayoutsModule.html":{}}}],["src/app/principal/franchisee/franchisee",{"_index":929,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee.module.ts",{"_index":1062,"title":{},"body":{"modules/FranchiseeModule.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts",{"_index":725,"title":{},"body":{"components/FranchiseeComponent.html":{},"coverage.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:107",{"_index":761,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:118",{"_index":756,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:144",{"_index":765,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:172",{"_index":758,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:54",{"_index":775,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:56",{"_index":772,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:57",{"_index":771,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:59",{"_index":766,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:60",{"_index":776,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:62",{"_index":767,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:63",{"_index":777,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:65",{"_index":779,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:66",{"_index":778,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:68",{"_index":773,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:69",{"_index":769,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:72",{"_index":770,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:73",{"_index":755,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:79",{"_index":768,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:85",{"_index":759,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/franchisee/franchisee/franchisee.component.ts:96",{"_index":763,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["src/app/principal/home/home.component.ts",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/principal/home/home.component.ts:14",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.component.ts:9",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/principal/home/home.module.ts",{"_index":1180,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/principal/principal",{"_index":2462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/principal/principal.component.ts",{"_index":1669,"title":{},"body":{"components/PrincipalComponent.html":{},"coverage.html":{}}}],["src/app/principal/principal.component.ts:13",{"_index":1674,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.component.ts:8",{"_index":1673,"title":{},"body":{"components/PrincipalComponent.html":{}}}],["src/app/principal/principal.module.ts",{"_index":1679,"title":{},"body":{"modules/PrincipalModule.html":{}}}],["src/app/principal/profile/profile.module.ts",{"_index":1767,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/principal/profile/profile/profile.component.ts",{"_index":1685,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:110",{"_index":1699,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:145",{"_index":1704,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:29",{"_index":1708,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:30",{"_index":1709,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:31",{"_index":1707,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:32",{"_index":1710,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:34",{"_index":1712,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:35",{"_index":1711,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:37",{"_index":1698,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:47",{"_index":1702,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/profile/profile/profile.component.ts:71",{"_index":1706,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/principal/recipe",{"_index":1238,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/TabsComponent.html":{},"coverage.html":{}}}],["src/app/principal/users/users.module.ts",{"_index":2423,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/principal/users/users/users.component.ts",{"_index":2368,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/principal/users/users/users.component.ts:102",{"_index":2381,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:110",{"_index":2389,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:158",{"_index":2388,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:197",{"_index":2383,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:27",{"_index":2398,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:28",{"_index":2396,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:29",{"_index":2394,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:31",{"_index":2391,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:33",{"_index":2393,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:34",{"_index":2395,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:35",{"_index":2397,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:37",{"_index":2390,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:39",{"_index":2392,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:40",{"_index":2379,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:52",{"_index":2386,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:64",{"_index":2384,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:76",{"_index":2382,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/principal/users/users/users.component.ts:94",{"_index":2385,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/constants/endpoints.const",{"_index":2247,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/constants/endpoints.const.ts",{"_index":2593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/httprequest.const.ts",{"_index":2592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/message.const.ts",{"_index":2595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/role.const",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["src/app/shared/constants/role.const.ts",{"_index":2604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/constants/storagekeys.const",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/constants/storagekeys.const.ts",{"_index":2606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/guards/is",{"_index":1502,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/api",{"_index":111,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/http",{"_index":1185,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/mock/address.mock.ts",{"_index":2470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/fracnhisee",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/franchisee.mock.ts",{"_index":2477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredient",{"_index":2480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/ingredients.mock.ts",{"_index":2485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/picture.mock.ts",{"_index":2489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe",{"_index":2494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/recipe.mock.ts",{"_index":2499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/schedule.mock.ts",{"_index":2503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/mock/users.mock.ts",{"_index":2505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/access",{"_index":6,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["src/app/shared/models/address.model",{"_index":785,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/address.model.ts",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee",{"_index":1097,"title":{},"body":{"interfaces/FranchiseeRecipe.html":{},"coverage.html":{}}}],["src/app/shared/models/franchisee.model",{"_index":784,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/franchisee.model.ts",{"_index":718,"title":{},"body":{"interfaces/Franchisee.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient",{"_index":1231,"title":{},"body":{"interfaces/IngreType.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/ingredient.model",{"_index":1285,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/ingredient.model.ts",{"_index":1233,"title":{},"body":{"interfaces/Ingredient.html":{},"coverage.html":{}}}],["src/app/shared/models/picture.model",{"_index":2061,"title":{},"body":{"components/RecipesComponent.html":{}}}],["src/app/shared/models/picture.model.ts",{"_index":1664,"title":{},"body":{"interfaces/Picture.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe",{"_index":1855,"title":{},"body":{"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["src/app/shared/models/recipe.model",{"_index":1854,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/models/recipe.model.ts",{"_index":1800,"title":{},"body":{"interfaces/Recipe.html":{},"coverage.html":{}}}],["src/app/shared/models/schedule.model",{"_index":966,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/models/schedule.model.ts",{"_index":658,"title":{},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{}}}],["src/app/shared/models/user.model",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["src/app/shared/models/user.model.ts",{"_index":615,"title":{},"body":{"interfaces/Autorisation.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/services/address/address.service",{"_index":967,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["src/app/shared/services/address/address.service.ts",{"_index":34,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/shared/services/address/address.service.ts:13",{"_index":45,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:22",{"_index":67,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:33",{"_index":51,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:44",{"_index":71,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/address/address.service.ts:56",{"_index":59,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/shared/services/error",{"_index":674,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service",{"_index":787,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"modules/FranchiseeModule.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts",{"_index":1102,"title":{},"body":{"injectables/FranchiseeService.html":{},"coverage.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:110",{"_index":1131,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:131",{"_index":1125,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:14",{"_index":1109,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:150",{"_index":1115,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:26",{"_index":1120,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:40",{"_index":1118,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:58",{"_index":1123,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:80",{"_index":1129,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/franchisee/franchisee.service.ts:93",{"_index":1111,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["src/app/shared/services/ingredient",{"_index":1287,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service",{"_index":1286,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts",{"_index":1408,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:12",{"_index":1411,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:21",{"_index":1418,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:32",{"_index":1413,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:43",{"_index":1420,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/ingredient/ingredient.service.ts:55",{"_index":1415,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/shared/services/loading/loading.service",{"_index":788,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/LoadingComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/shared/services/loading/loading.service.ts",{"_index":1550,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/shared/services/loading/loading.service.ts:15",{"_index":1564,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:17",{"_index":1555,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:23",{"_index":1559,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:31",{"_index":1557,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/loading/loading.service.ts:35",{"_index":1556,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/shared/services/messages/messages.service.ts",{"_index":1604,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/app/shared/services/messages/messages.service.ts:10",{"_index":1615,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:14",{"_index":1609,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/messages/messages.service.ts:8",{"_index":1616,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/app/shared/services/profile/profile.service",{"_index":1774,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/profile/profile.service.ts",{"_index":1776,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/shared/services/profile/profile.service.ts:12",{"_index":1778,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:17",{"_index":1779,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:28",{"_index":1780,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/profile/profile.service.ts:48",{"_index":1782,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/shared/services/recipe/recipe.service",{"_index":1857,"title":{},"body":{"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts",{"_index":1971,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:103",{"_index":1996,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:130",{"_index":1987,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:152",{"_index":1998,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:16",{"_index":1980,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:166",{"_index":1982,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:28",{"_index":1991,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:38",{"_index":1992,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:58",{"_index":1989,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:68",{"_index":1993,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/recipe/recipe.service.ts:80",{"_index":1984,"title":{},"body":{"injectables/RecipeService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts",{"_index":2123,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:14",{"_index":2127,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:27",{"_index":2132,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:40",{"_index":2129,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/schedule/schedule.service.ts:66",{"_index":2134,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service",{"_index":2243,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts",{"_index":2255,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:11",{"_index":2265,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:13",{"_index":2264,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:15",{"_index":2259,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:21",{"_index":2262,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/sidebar/sidebar.service.ts:25",{"_index":2260,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/shared/services/user/auth/auth.service",{"_index":132,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"components/AuthComponent.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:114",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:119",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:141",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:152",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:158",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:164",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:17",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:170",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:185",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:205",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:221",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:229",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:250",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:265",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:284",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:304",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:35",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/auth/auth.service.ts:70",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/user/local",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts",{"_index":2340,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user/user.service.ts:12",{"_index":2343,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:17",{"_index":2344,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:22",{"_index":2346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user/user.service.ts:27",{"_index":2347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/users/users.service",{"_index":2399,"title":{},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["src/app/shared/services/users/users.service.ts",{"_index":2425,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/shared/services/users/users.service.ts:12",{"_index":2427,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:21",{"_index":2431,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:31",{"_index":2434,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:41",{"_index":2433,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:58",{"_index":2437,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:69",{"_index":2440,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/services/users/users.service.ts:84",{"_index":2429,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/store",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{}}}],["src/app/shared/store/state/user",{"_index":285,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/state/user/index",{"_index":2330,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.actions.ts",{"_index":2526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.effects.ts",{"_index":2314,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:16",{"_index":2323,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:24",{"_index":2328,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.effects.ts:9",{"_index":2317,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/shared/store/state/user/user.reducer.ts",{"_index":2351,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/state/user/user.selector",{"_index":2245,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/store/state/user/user.selector.ts",{"_index":2530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/store/store.reducer",{"_index":2244,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["src/app/shared/store/store.reducer.ts",{"_index":248,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":81,"title":{},"body":{"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/SidebarService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["src/environments/environment.example.ts",{"_index":2538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.stage.ts",{"_index":2540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/styles.scss",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["star",{"_index":1805,"title":{},"body":{"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2628,"title":{},"body":{"index.html":{}}}],["started",{"_index":2618,"title":{"index.html":{}},"body":{}}],["state",{"_index":261,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["state('active",{"_index":798,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["state('void",{"_index":793,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["statements",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutsModule.html":{},"index.html":{}}}],["statiques",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["status",{"_index":900,"title":{},"body":{"components/FranchiseeComponent.html":{},"index.html":{}}}],["storage",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["storage.service.ts",{"_index":1571,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1582,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:24",{"_index":1575,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:35",{"_index":1580,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:39",{"_index":1578,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:6",{"_index":1573,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storagekeys",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":251,"title":{},"body":{"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2641,"title":{},"body":{"index.html":{}}}],["storemodule",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["storemodule.forfeature('user",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature(fromauth.userfeaturekey",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/Friday.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"injectables/LocalStorageService.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"interfaces/Wednesday.html":{},"miscellaneous/variables.html":{}}}],["stringservice",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["stroke",{"_index":333,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["style",{"_index":794,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["styleclass",{"_index":830,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["styles",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["styleurls",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["subject",{"_index":1606,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/SidebarService.html":{}}}],["submitted",{"_index":807,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":1022,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["subscribe((data",{"_index":974,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["subscribe((recipes",{"_index":2062,"title":{},"body":{"components/RecipesComponent.html":{}}}],["subscribe((res",{"_index":813,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe(async",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":844,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["succès",{"_index":846,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["summary",{"_index":845,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["sunday",{"_index":668,"title":{"interfaces/Sunday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2734,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":884,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["suppresssion",{"_index":2042,"title":{},"body":{"components/RecipesComponent.html":{}}}],["supprim",{"_index":874,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["supprimer",{"_index":864,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["survenue",{"_index":1226,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["svg",{"_index":2735,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1207,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{}}}],["sync",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":62,"title":{},"body":{"injectables/AddressService.html":{}}}],["sûre",{"_index":1321,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["t",{"_index":1560,"title":{},"body":{"injectables/LoadingService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["table",{"_index":1372,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablemodule",{"_index":1067,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2272,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs'},{'name",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["tabs.component.html",{"_index":2274,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2273,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":1969,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["tabscomponent",{"_index":238,"title":{"components/TabsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabview",{"_index":2278,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabviewmodule",{"_index":1088,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["tag",{"_index":2689,"title":{},"body":{"index.html":{}}}],["tap",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/LoadingService.html":{},"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"injectables/UsersService.html":{}}}],["tap((action",{"_index":2333,"title":{},"body":{"injectables/UserEffects.html":{}}}],["tap((obj",{"_index":1137,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/UsersService.html":{}}}],["tap((res",{"_index":1799,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tbody",{"_index":1386,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["td",{"_index":1376,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["template",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":2647,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2655,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2646,"title":{},"body":{"index.html":{}}}],["text",{"_index":1381,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["tfoot",{"_index":1396,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["th",{"_index":1385,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["thead",{"_index":1383,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["theme",{"_index":2722,"title":{},"body":{"index.html":{}}}],["themes",{"_index":2679,"title":{},"body":{"index.html":{}}}],["this._recipetype",{"_index":1866,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.accesstokenisexpired(useraccesstoken",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.actions$.pipe",{"_index":2319,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.activatedroute.queryparams.subscribe((parameters",{"_index":287,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.address",{"_index":855,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.address.id",{"_index":1010,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.addressservice",{"_index":1017,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.allergen",{"_index":1325,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.authservice.authorizationcodetoaccesstoken(code",{"_index":290,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.getaccesstoken",{"_index":142,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{}}}],["this.authservice.getauthorizationcode",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getuser",{"_index":2268,"title":{},"body":{"injectables/SidebarService.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.isauthenticated",{"_index":1513,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["this.authservice.logout",{"_index":2338,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.confirmationservice.confirm",{"_index":860,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.create",{"_index":1016,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.detectroutingongoing",{"_index":1546,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.dialogservice.open(franchiseedialogcomponent",{"_index":823,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.dialogservice.open(recipedialogcomponent",{"_index":2067,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.display",{"_index":2249,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.editmodeemail",{"_index":1723,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodefirstname",{"_index":1721,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodelastname",{"_index":1722,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editmodephone",{"_index":1724,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.errorhttpservice.newerrorhttp",{"_index":1159,"title":{},"body":{"injectables/FranchiseeService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["this.errorhttpsubject.asobservable",{"_index":684,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(errordatahttp",{"_index":689,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.errorhttpsubject.next(undefined",{"_index":691,"title":{},"body":{"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{}}}],["this.fb.group",{"_index":978,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form",{"_index":977,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.form.controls['ingredientsdetails'].value",{"_index":1901,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls['ingredienttype'].value.code",{"_index":1304,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.controls['recipetype'].value.code",{"_index":1897,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.controls[controlname].dirty",{"_index":1031,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.form.controls[controlname].haserror(errorname",{"_index":1032,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.form.get('allergen').setvalue(false",{"_index":1328,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('allergen').setvalue(true",{"_index":1327,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('allergen').value",{"_index":1302,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.form.get('description').value",{"_index":1460,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.form.get('email').value",{"_index":2405,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('firstname').value",{"_index":2402,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('lastname').value",{"_index":2403,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('name').value",{"_index":1300,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.form.get('phone').value",{"_index":2404,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.form.get('star').setvalue(false",{"_index":1891,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.get('star').setvalue(true",{"_index":1890,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.patchvalue(this.user",{"_index":1718,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.valid",{"_index":1905,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value",{"_index":1730,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.form.value.availabledate",{"_index":1893,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.city",{"_index":1006,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.country",{"_index":1008,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.description",{"_index":1904,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.email",{"_index":996,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.first_line",{"_index":1000,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.max_delivery_radius",{"_index":998,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.name",{"_index":992,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.phone",{"_index":994,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.price",{"_index":1899,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.second_line",{"_index":1002,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.form.value.star",{"_index":1902,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.title",{"_index":1895,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.form.value.zip_code",{"_index":1004,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee",{"_index":970,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address",{"_index":1009,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.city",{"_index":1005,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.country",{"_index":1007,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.first_line",{"_index":999,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.second_line",{"_index":1001,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address.zip_code",{"_index":1003,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.address_id",{"_index":1011,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.email",{"_index":995,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.max_delivery_radius",{"_index":997,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.name",{"_index":991,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee.phone",{"_index":993,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address",{"_index":985,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.city",{"_index":989,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.country",{"_index":990,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.first_line",{"_index":986,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.second_line",{"_index":987,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.address?.zip_code",{"_index":988,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.email",{"_index":982,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.max_delivery_radius",{"_index":984,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.name",{"_index":979,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisee?.phone",{"_index":981,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseearray",{"_index":975,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.franchisees",{"_index":814,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.franchiseeservice",{"_index":809,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.franchiseeservice.deletefranchisee(franchisee.id).subscribe",{"_index":872,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.franchiseeservice.updatefranchisee(this.franchisee).subscribe",{"_index":1027,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.getcurrentuser",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getformvalues",{"_index":1012,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.getrole(currentuser",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getroleremote(currentuser",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handleerror(err",{"_index":1206,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["this.has(key",{"_index":1588,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.http",{"_index":93,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/ProfileService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{},"injectables/UserService.html":{},"injectables/UsersService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/contractors/${id}`).pipe",{"_index":1157,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/recipes/${id}`).pipe",{"_index":2022,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.get",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users/current",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.apibaseurl}/users`).pipe",{"_index":2270,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.http.post(`${environment.apibaseurl}/files",{"_index":2026,"title":{},"body":{"injectables/RecipeService.html":{}}}],["this.http.put(`${environment.apibaseurl}/contractors",{"_index":1147,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["this.ingredient",{"_index":1307,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient.id",{"_index":1306,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.allergen",{"_index":1296,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.name",{"_index":1295,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredient?.types",{"_index":1297,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientdialog",{"_index":1310,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredients",{"_index":1292,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ingredients.foreach((x",{"_index":1869,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.createingredient(this.ingredient).subscribe",{"_index":1317,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.deleteingredient(ingredient.id).subscribe",{"_index":1323,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredientservice.getingredients().subscribe((res",{"_index":1291,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingredientservice.updateingredient(this.ingredient).subscribe",{"_index":1312,"title":{},"body":{"components/IngredientComponent.html":{}}}],["this.ingredienttype",{"_index":2077,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.ingredienttypedialog",{"_index":1471,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice",{"_index":1466,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingredienttypeservice.getingredientstypes().subscribe((res",{"_index":1293,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.ingretype",{"_index":1463,"title":{},"body":{"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ingretype.id",{"_index":1465,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.description",{"_index":1457,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.id",{"_index":1462,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.ingretype?.name",{"_index":1456,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.init",{"_index":1290,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.initauth(user",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.initauth(value",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initform",{"_index":976,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["this.iscreate",{"_index":1298,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadappuser",{"_index":2312,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.loading.loadingoff",{"_index":812,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loading.loadingon",{"_index":808,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadingoff",{"_index":1568,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingon",{"_index":1567,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.loadingoff",{"_index":1548,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.loadingon",{"_index":1547,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":1562,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(false",{"_index":1570,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(true",{"_index":1569,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.localstorageservice.get(storagekeys.code_verify",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.role",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.state",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.get(storagekeys.user)).id",{"_index":1021,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.localstorageservice.get(storagekeys.user_token",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.code_verify",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.role",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.state",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.has(storagekeys.user_token",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.code_verify",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.state",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove(storagekeys.user",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.code_verify",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.role",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.state",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set(storagekeys.user_token",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.makeingredienttype",{"_index":1464,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["this.makerecipe",{"_index":1311,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.messageservice.add",{"_index":842,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["this.mode",{"_index":968,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.newrecipe",{"_index":1907,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.picture",{"_index":1871,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.pictures",{"_index":2078,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.primengconfig.ripple",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this.profileservice.getcurrentuser",{"_index":1716,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.getuser().subscribe",{"_index":1717,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileservice.updateuser(action.userdetails",{"_index":2326,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.recipe",{"_index":1863,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.available_at",{"_index":1892,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.base_price",{"_index":1898,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.description",{"_index":1903,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.ingredients",{"_index":1900,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.name",{"_index":1894,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.recipe_type",{"_index":1896,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe.star",{"_index":1889,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.available_at",{"_index":1876,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.base_price",{"_index":1883,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.description",{"_index":1885,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.ingredients",{"_index":1884,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.name",{"_index":1881,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.recipe_type",{"_index":1882,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipe?.star",{"_index":1886,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipes",{"_index":2063,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice",{"_index":1908,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.recipeservice.createrecipe(this.recipe).subscribe",{"_index":1910,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.deleterecipe(recipe.id).subscribe",{"_index":2073,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.recipeservice.getrecipetype().subscribe((res",{"_index":1873,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.updaterecipe(this.recipe).subscribe",{"_index":1914,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipeservice.uploadpicture(this.picture).subscribe((res",{"_index":1918,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.recipestype",{"_index":1874,"title":{},"body":{"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref",{"_index":852,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.ref.close",{"_index":1030,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(_res",{"_index":1024,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.close(res",{"_index":1028,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/RecipeDialogComponent.html":{}}}],["this.ref.onclose.subscribe((_franchisee",{"_index":856,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["this.ref.onclose.subscribe((_recipe",{"_index":2079,"title":{},"body":{"components/RecipesComponent.html":{}}}],["this.refreshtoken(useraccesstoken",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolebyid(user",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.events.subscribe((event",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["this.router.navigate(['/home",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["this.router.navigate(['/login",{"_index":1514,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{}}}],["this.router.navigate([event.url.replace",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/home",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.schedule",{"_index":854,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{}}}],["this.sidebarservice.display$.subscribe((res",{"_index":2248,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(false",{"_index":2251,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.sidebarservice.open(true",{"_index":2313,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.sortfield",{"_index":819,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.sortorder",{"_index":818,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["this.star",{"_index":1888,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.store",{"_index":1725,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.dispatch",{"_index":1739,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.store.dispatch(useractions.loaduser",{"_index":294,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails",{"_index":2250,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe",{"_index":292,"title":{},"body":{"components/AuthComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(selectuserdetails)).subscribe((user",{"_index":1714,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.subject",{"_index":1610,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.subject.asobservable",{"_index":2263,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(display",{"_index":2269,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.subject.next(errors",{"_index":1618,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.submitted",{"_index":1309,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["this.typearray",{"_index":1294,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["this.update",{"_index":1014,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["this.updaterecipe",{"_index":1906,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.uploadedfiles.push(picture",{"_index":1920,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["this.url",{"_index":2267,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.user",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["this.user.email",{"_index":1737,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.firstname",{"_index":1731,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.id",{"_index":2407,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.user.lastname",{"_index":1733,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.phone",{"_index":1735,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user?.email",{"_index":1751,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.firstname",{"_index":1743,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.lastname",{"_index":1746,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.user?.phone",{"_index":1748,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["this.userdialog",{"_index":2408,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.users",{"_index":2401,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice",{"_index":2400,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.deleteuser(user.id).subscribe",{"_index":2415,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.newuser(this.user).subscribe",{"_index":2412,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.updateuser(this.user).subscribe",{"_index":2409,"title":{},"body":{"components/UsersComponent.html":{}}}],["throw",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FranchiseeService.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/ScheduleService.html":{}}}],["thursday",{"_index":665,"title":{"interfaces/Thursday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2680,"title":{},"body":{"index.html":{}}}],["title",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/IngredientComponent.html":{},"components/RecipeDialogComponent.html":{},"components/TitleComponent.html":{},"components/UsersComponent.html":{}}}],["title'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["title.component.html",{"_index":2285,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":2284,"title":{},"body":{"components/TitleComponent.html":{}}}],["title/title.component",{"_index":639,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["titlebar",{"_index":1929,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["titlecomponent",{"_index":240,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["titre1",{"_index":2304,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toastmodule",{"_index":655,"title":{},"body":{"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["todo",{"_index":1753,"title":{},"body":{"components/ProfileComponent.html":{}}}],["token",{"_index":112,"title":{},"body":{"interceptors/ApiTokenInterceptorService.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["token.model",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.model.ts",{"_index":7,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"coverage.html":{}}}],["token_type",{"_index":15,"title":{},"body":{"interfaces/AccessTokenModel.html":{}}}],["tool",{"_index":2713,"title":{},"body":{"index.html":{}}}],["toolbarmodule",{"_index":1073,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["tooltipmodule",{"_index":628,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/RecipeManagementModule.html":{}}}],["top",{"_index":353,"title":{},"body":{"components/AuthComponent.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["topbar",{"_index":2301,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["topbar.component.html",{"_index":2303,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":2302,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar/topbar.component",{"_index":638,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["topbarcomponent",{"_index":242,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/ComponentsModule.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":909,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["tr",{"_index":1384,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["transform",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ServerErrorComponent.html":{},"components/UsersComponent.html":{}}}],["transition",{"_index":800,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["transitions",{"_index":2355,"title":{},"body":{"interfaces/UserState.html":{}}}],["translate",{"_index":2189,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(0",{"_index":2183,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate(10px",{"_index":2184,"title":{},"body":{"components/ServerErrorComponent.html":{}}}],["translate/core",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["translatex",{"_index":795,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["translatex(0",{"_index":799,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["transparent",{"_index":1662,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["trashed_at",{"_index":1806,"title":{},"body":{"interfaces/Recipe.html":{},"miscellaneous/variables.html":{}}}],["trebuchet",{"_index":2299,"title":{},"body":{"components/TitleComponent.html":{}}}],["tree",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["triangle",{"_index":869,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["trigger('rowexpansiontrigger",{"_index":792,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["trigger,state,style,transition,animate",{"_index":780,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["trouvons",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/FranchiseeModule.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"guards/IsUnauthenticatedGuard.html":{},"injectables/LocalStorageService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/RecipeDialogComponent.html":{},"modules/RecipeManagementModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1589,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tsconfig.doc.json",{"_index":2721,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":663,"title":{"interfaces/Tuesday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tutorial",{"_index":2731,"title":{},"body":{"index.html":{}}}],["tyoe",{"_index":1473,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AccessTokenModel.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"interceptors/ApiTokenInterceptorService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Diner.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"interfaces/FranchiseeRecipe.html":{},"injectables/FranchiseeService.html":{},"interfaces/Friday.html":{},"interceptors/HttpErrorInterceptor.html":{},"interfaces/IngreType.html":{},"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Lunch.html":{},"injectables/MessagesService.html":{},"interfaces/Monday.html":{},"interfaces/Picture.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"interfaces/RecipeType.html":{},"components/RecipesComponent.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"injectables/ScheduleService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Tuesday.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["type.component",{"_index":1966,"title":{},"body":{"modules/RecipeManagementModule.html":{}}}],["type.component.html",{"_index":1432,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.scss",{"_index":1431,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts",{"_index":1430,"title":{},"body":{"components/IngredientTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:105",{"_index":1446,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:112",{"_index":1450,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:119",{"_index":1441,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:150",{"_index":1442,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1454,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1455,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:28",{"_index":1452,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1451,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:32",{"_index":1453,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:33",{"_index":1439,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1447,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:49",{"_index":1443,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:56",{"_index":1444,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:63",{"_index":1445,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.component.ts:72",{"_index":1448,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["type.mock.ts",{"_index":2481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.model",{"_index":1236,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"interfaces/Recipe.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["type.model.ts",{"_index":1232,"title":{},"body":{"interfaces/IngreType.html":{},"interfaces/RecipeType.html":{},"coverage.html":{}}}],["type.service",{"_index":1289,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["type.service.ts",{"_index":1476,"title":{},"body":{"injectables/IngredientTypeService.html":{},"coverage.html":{}}}],["type.service.ts:13",{"_index":1479,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:25",{"_index":1487,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:46",{"_index":1481,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:65",{"_index":1491,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type.service.ts:86",{"_index":1483,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["type/ingredient",{"_index":1288,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"modules/RecipeManagementModule.html":{},"coverage.html":{}}}],["type_id",{"_index":1485,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["typealiases",{"_index":2740,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typearray",{"_index":1248,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{}}}],["typearray.length",{"_index":1475,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["typeof",{"_index":1584,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["types",{"_index":1235,"title":{},"body":{"interfaces/Ingredient.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{},"components/RecipeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["téléphone",{"_index":887,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["ui",{"_index":1928,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["un",{"_index":826,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["unauthenticated",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthenticated.guard.ts",{"_index":1517,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["unauthenticated.guard.ts:15",{"_index":1518,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated.guard.ts:18",{"_index":1519,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{}}}],["unauthenticated/is",{"_index":1516,"title":{},"body":{"guards/IsUnauthenticatedGuard.html":{},"coverage.html":{}}}],["undefined",{"_index":2363,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["une",{"_index":1225,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"components/RecipesComponent.html":{}}}],["unit",{"_index":2645,"title":{},"body":{"index.html":{}}}],["up",{"_index":2708,"title":{},"body":{"index.html":{}}}],["update",{"_index":72,"title":{},"body":{"injectables/AddressService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{},"injectables/ScheduleService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["update(franchisee",{"_index":764,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["update).pipe",{"_index":1148,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["update.base_price",{"_index":2019,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.description",{"_index":2018,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.ingredients.map((ingredient",{"_index":2016,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.name",{"_index":2017,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.recipe_type",{"_index":2021,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update.star",{"_index":2020,"title":{},"body":{"injectables/RecipeService.html":{}}}],["update_success",{"_index":2599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updateaddress",{"_index":40,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(this.address",{"_index":1026,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["updateaddress(update",{"_index":70,"title":{},"body":{"injectables/AddressService.html":{}}}],["updated",{"_index":73,"title":{},"body":{"injectables/AddressService.html":{},"miscellaneous/variables.html":{}}}],["updatefield",{"_index":1696,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefield(type",{"_index":1705,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefranchisee",{"_index":1107,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updatefranchisee(update",{"_index":1128,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateingredient",{"_index":1255,"title":{},"body":{"components/IngredientComponent.html":{},"injectables/IngredientService.html":{}}}],["updateingredient(ingredient",{"_index":1271,"title":{},"body":{"components/IngredientComponent.html":{}}}],["updateingredient(update",{"_index":1419,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updateingredienttype",{"_index":1437,"title":{},"body":{"components/IngredientTypeComponent.html":{},"injectables/IngredientTypeService.html":{}}}],["updateingredienttype(ingretype",{"_index":1449,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(this.ingretype",{"_index":1467,"title":{},"body":{"components/IngredientTypeComponent.html":{}}}],["updateingredienttype(update",{"_index":1490,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["updaterecipe",{"_index":1824,"title":{},"body":{"components/RecipeDialogComponent.html":{},"injectables/RecipeService.html":{},"components/RecipesComponent.html":{}}}],["updaterecipe(recipe",{"_index":2048,"title":{},"body":{"components/RecipesComponent.html":{}}}],["updaterecipe(update",{"_index":1995,"title":{},"body":{"injectables/RecipeService.html":{}}}],["updaterecipeprice",{"_index":1108,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updaterecipeprice(update",{"_index":1130,"title":{},"body":{"injectables/FranchiseeService.html":{}}}],["updateschedule",{"_index":2126,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["updateschedule(update",{"_index":2133,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["updateuser",{"_index":1777,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserEffects.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuser(update",{"_index":2439,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":1781,"title":{},"body":{"injectables/ProfileService.html":{}}}],["upload",{"_index":1861,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadedfiles",{"_index":1817,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uploadpicture",{"_index":1979,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(picture",{"_index":1997,"title":{},"body":{"injectables/RecipeService.html":{}}}],["uploadpicture(this.picture",{"_index":1909,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["uppercase",{"_index":1390,"title":{},"body":{"components/IngredientComponent.html":{},"components/UsersComponent.html":{}}}],["url",{"_index":90,"title":{},"body":{"injectables/AddressService.html":{},"injectables/FranchiseeService.html":{},"interfaces/Ingredient.html":{},"injectables/IngredientService.html":{},"injectables/IngredientTypeService.html":{},"injectables/RecipeService.html":{},"injectables/SidebarService.html":{},"injectables/UsersService.html":{}}}],["urlsearchparams",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["urltree",{"_index":1511,"title":{},"body":{"guards/IsAuthenticatedGuard.html":{},"guards/IsUnauthenticatedGuard.html":{}}}],["use",{"_index":2637,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1094,"title":{},"body":{"modules/FranchiseeModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{}}}],["used",{"_index":63,"title":{},"body":{"injectables/AddressService.html":{}}}],["usehash",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{"interfaces/User.html":{}},"body":{"injectables/AddressService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Autorisation.html":{},"interfaces/Franchisee.html":{},"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user.actions",{"_index":2353,"title":{},"body":{"interfaces/UserState.html":{}}}],["user.autorisations.isadmin",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.autorisations.isfranchisee",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":1760,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.firstname",{"_index":1757,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.id",{"_index":2406,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.lastname",{"_index":1758,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.model",{"_index":724,"title":{},"body":{"interfaces/Franchisee.html":{}}}],["user.phone",{"_index":1759,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.roles.foreach((e",{"_index":303,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["user.roles.push(currentrole",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userdetails",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user/auth/auth.service",{"_index":2266,"title":{},"body":{"injectables/SidebarService.html":{}}}],["user@example.com",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_token",{"_index":2610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useraccesstoken",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["useractions",{"_index":284,"title":{},"body":{"components/AuthComponent.html":{},"components/ProfileComponent.html":{},"components/TopbarComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{}}}],["useractions.updateuser",{"_index":1740,"title":{},"body":{"components/ProfileComponent.html":{}}}],["useractions.userloaded",{"_index":2322,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.userupdated",{"_index":2327,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercurrentroles",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercurrentroles[0",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":1741,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["userdialog",{"_index":2373,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereffects",{"_index":402,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrincipalModule.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["userfeaturekey",{"_index":2361,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloaded",{"_index":2331,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":2438,"title":{},"body":{"injectables/UsersService.html":{}}}],["userreducer",{"_index":2364,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":68,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["users.component.html",{"_index":2370,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":2369,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.length",{"_index":2416,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":2424,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscomponent",{"_index":244,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":2339,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":2419,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":2378,"title":{"injectables/UsersService.html":{}},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstate",{"_index":2350,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userupdate",{"_index":1728,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userupdated",{"_index":2528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usr",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilidateurs",{"_index":2417,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateur",{"_index":2413,"title":{},"body":{"components/UsersComponent.html":{}}}],["utilisateurs",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["uuid",{"_index":1668,"title":{},"body":{"interfaces/Picture.html":{},"injectables/RecipeService.html":{},"miscellaneous/variables.html":{}}}],["uuis",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["va",{"_index":2694,"title":{},"body":{"index.html":{}}}],["validators",{"_index":965,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["validators.email",{"_index":983,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.maxlength(100",{"_index":1752,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(30",{"_index":1745,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.maxlength(40",{"_index":1747,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.minlength(3",{"_index":1744,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.pattern('/^[0][0",{"_index":1749,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["validators.required",{"_index":980,"title":{},"body":{"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/UsersComponent.html":{}}}],["value",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHttpService.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"injectables/MessagesService.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"injectables/UserEffects.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.code",{"_index":1329,"title":{},"body":{"components/IngredientComponent.html":{}}}],["value.indexof",{"_index":817,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.length",{"_index":821,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.name",{"_index":2083,"title":{},"body":{"components/RecipesComponent.html":{}}}],["value.substring(1",{"_index":820,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["value.tostring",{"_index":1586,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["valueserialized",{"_index":1583,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1862,"title":{},"body":{"components/RecipeDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2744,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetebale",{"_index":1488,"title":{},"body":{"injectables/IngredientTypeService.html":{}}}],["verifier",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["version",{"_index":2579,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":2666,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2094,"title":{},"body":{"components/RecipesComponent.html":{}}}],["via",{"_index":2649,"title":{},"body":{"index.html":{}}}],["ville",{"_index":1038,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["void",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DefaultComponent.html":{},"interfaces/ErrorDataHttp.html":{},"injectables/ErrorHttpService.html":{},"components/FooterComponent.html":{},"components/FranchiseeComponent.html":{},"components/FranchiseeDialogComponent.html":{},"injectables/FranchiseeService.html":{},"components/HomeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MessagesService.html":{},"components/PageNotFoundComponent.html":{},"components/PrincipalComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/ServerErrorComponent.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/TabsComponent.html":{},"components/TitleComponent.html":{},"components/TopbarComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["voulez",{"_index":861,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["vouloir",{"_index":1322,"title":{},"body":{"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["vous",{"_index":862,"title":{},"body":{"components/FranchiseeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["vraiment",{"_index":863,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/RecipesComponent.html":{}}}],["w",{"_index":1761,"title":{},"body":{"components/ProfileComponent.html":{}}}],["warn",{"_index":1211,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["web",{"_index":2619,"title":{},"body":{"index.html":{}}}],["webhttp://localhost:4200",{"_index":2711,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":1349,"title":{},"body":{"components/IngredientComponent.html":{}}}],["websee",{"_index":2699,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":664,"title":{"interfaces/Wednesday.html":{}},"body":{"interfaces/Diner.html":{},"interfaces/Friday.html":{},"interfaces/Lunch.html":{},"interfaces/Monday.html":{},"interfaces/Saturday.html":{},"interfaces/Schedule.html":{},"interfaces/Sunday.html":{},"interfaces/Thursday.html":{},"interfaces/Tuesday.html":{},"interfaces/Wednesday.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":1377,"title":{},"body":{"components/IngredientComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["white",{"_index":2087,"title":{},"body":{"components/RecipesComponent.html":{}}}],["width",{"_index":732,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/ProfileComponent.html":{},"components/RecipeDialogComponent.html":{},"components/RecipesComponent.html":{},"components/UsersComponent.html":{}}}],["window.location.href",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["window.scrollto(0",{"_index":1619,"title":{},"body":{"injectables/MessagesService.html":{}}}],["workflow",{"_index":2733,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":914,"title":{},"body":{"components/FranchiseeComponent.html":{}}}],["written",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HomeComponent.html":{},"components/PrincipalComponent.html":{},"components/TopbarComponent.html":{}}}],["x.name",{"_index":1870,"title":{},"body":{"components/RecipeDialogComponent.html":{}}}],["xxxxxx",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":911,"title":{},"body":{"components/FranchiseeComponent.html":{},"components/IngredientComponent.html":{},"components/IngredientTypeComponent.html":{},"components/UsersComponent.html":{}}}],["z",{"_index":367,"title":{},"body":{"components/AuthComponent.html":{},"components/LoadingComponent.html":{}}}],["zara",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_code",{"_index":30,"title":{},"body":{"interfaces/Address.html":{},"components/FranchiseeDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1040,"title":{},"body":{"components/FranchiseeDialogComponent.html":{}}}],["zone.js",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DefaultModule.html":{},"modules/FranchiseeModule.html":{},"modules/HomeModule.html":{},"modules/LayoutsModule.html":{},"modules/PrincipalModule.html":{},"modules/ProfileModule.html":{},"modules/RecipeManagementModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenModel.html":{"url":"interfaces/AccessTokenModel.html","title":"interface - AccessTokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/access-token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expire_at\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expire_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expire_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenModel {\n  token_type: string;\n  expires_in: number;\n  access_token: string;\n  refresh_token: string;\n  expire_at?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/address.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            second_line\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zip_code\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        second_line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n  id?: number;\n  first_line?: string;\n  second_line?: string;\n  zip_code?: string;\n  city?: string;\n  country?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createAddress\n                            \n                            \n                                    Public\n                                deleteAddress\n                            \n                            \n                                    Public\n                                getAddresses\n                            \n                            \n                                    Public\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/address/address.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(create: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        address_id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAddress(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:56\n                \n            \n\n\n            \n                \n                    Attention : Deletes an address from the system, only if it is not used\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete address\nAttention : Deletes an address from the system, only if it is not used\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddresses(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users addresses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAddress(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/address/address.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        address\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated address\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\nimport { Address } from '../../models/address.model';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/user.model';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/addresses\n   * @returns all users addresses\n   */\n  public getAddresses(user: User): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/addresses`)\n      .pipe(map((res) => [res]));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/addresses\n   * @param create new address\n   * @returns address_id\n   */\n  public createAddress(create: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/addresses`, create)\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/addresses/{address_id}\n   * @param update address\n   * @returns updated address\n   */\n  public updateAddress(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/addresses/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/addresses/{address_id}\n   * @param id address_id\n   * @returns Delete address\n   * Attention : Deletes an address from the system, only if it is not used\n   */\n  public deleteAddress(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/addresses/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiTokenInterceptorService.html":{"url":"interceptors/ApiTokenInterceptorService.html","title":"interceptor - ApiTokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiTokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/api-token-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/api-token-interceptor.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { from, lastValueFrom, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTokenInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    console.log('[INTERCEPT API TOKEN] handle', req);\n\n    if (!req.urlWithParams.startsWith(environment.apiBaseUrl)) {\n      return next.handle(req);\n    }\n\n    console.log('[INTERCEPT API TOKEN] add');\n\n    return from(this.handle(req, next));\n  }\n\n  async handle(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Promise> {\n    const token = await this.authService.getAccessToken();\n\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return lastValueFrom(next.handle(req));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GOODFOOD'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'GOODFOOD';\n\n  constructor(private primengConfig: PrimeNGConfig, private router: Router) {}\n\n  ngOnInit() {\n    this.primengConfig.ripple = true;\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        if (!!event.url && event.url.match(/^\\/#/)) {\n          this.router.navigate([event.url.replace('/#', '')]);\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/store.reducer.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { routerReducer } from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\n\n/**\n * @ActionReducerMap Map of all the reducers in this feature of which we have only one\n */\n\nexport interface AppState {}\n\nexport const reducers: ActionReducerMap = {\n  router: routerReducer,\n};\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state, action) => {\n    console.log('state before: ', state);\n    console.log('actions', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer[] = [];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, activatedRoute: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth/auth.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth/auth.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { AppState } from 'src/app/shared/store';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    let code: string = '';\n    let state: string = '';\n\n    this.activatedRoute.queryParams.subscribe((parameters) => {\n      code = parameters['code'];\n      state = parameters['state'];\n    });\n    this.authService.authorizationCodeToAccessToken(code, state);\n    console.log('auth component');\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n          console.log('je passe dans *** auth dispatch ***', user);\n        } else {\n          this.user = user;\n          let authorized: boolean = false;\n          user.roles.forEach((e) => {\n            if (e['code'] === Roles.ADMIN || e['code'] === Roles.FRANCHISEE) {\n              authorized = true;\n            }\n          });\n          if (authorized) {\n            this.router.navigateByUrl('/home');\n          } else {\n            this.router.navigateByUrl('/');\n          }\n        }\n      },\n      error: (error): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n      complete: () => {\n        console.info('complete');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.258);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { UserEffects } from '../shared/store/state/user';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { AuthService } from '../shared/services/user/auth/auth.service';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'redirect', component: AuthComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    //StoreModule.forFeature('user', fromAuth.userReducer),\n    ProgressSpinnerModule,\n    EffectsModule.forFeature([UserEffects]),\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n  ],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AuthModule,\n      providers: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessTokenIsExpired\n                            \n                            \n                                    Async\n                                authorizationCodeToAccessToken\n                            \n                            \n                                doSign\n                            \n                            \n                                    Async\n                                getAccessToken\n                            \n                            \n                                getAuthorizationCode\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                getCurrentUserRemote\n                            \n                            \n                                    Async\n                                getRole\n                            \n                            \n                                    Async\n                                getRoleRemote\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                refreshToken\n                            \n                            \n                                    Public\n                                roleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http client object\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        accessTokenIsExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    accessTokenIsExpired(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authorizationCodeToAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorizationCodeToAccessToken(code: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Transform authorization code to AccessToken\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSign\n                        \n                    \n                \n            \n            \n                \ndoSign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthorizationCode\n                        \n                    \n                \n            \n            \n                \ngetAuthorizationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n                    Redirect user to login backend page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUserRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserRemote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleRemote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleRemote(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:152\n                \n            \n\n\n            \n                \n                    Get user by id as a franchisee or an admin (goodfood)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:114\n                \n            \n\n\n            \n                \n                    Revoke the authenticated user token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(data: AccessTokenModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AccessTokenModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        roleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleById(_user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/auth/auth.service.ts:265\n                \n            \n\n\n            \n                \n                    Verify user role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport getPkce from 'oauth-pkce';\nimport { catchError, firstValueFrom, Observable, throwError } from 'rxjs';\nimport { Router, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AccessTokenModel } from '../../../models/access-token.model';\nimport { User } from '../../../models/user.model';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { map, tap } from 'rxjs/operators';\nimport { StorageKeys } from 'src/app/shared/constants/storageKeys.const';\nimport { Roles } from 'src/app/shared/constants/role.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /**\n   *\n   * Constructor\n   * @param http The http client object\n   * @param stringService\n   * @param localStorageService\n   * @param router\n   */\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirect user to login backend page\n   */\n  getAuthorizationCode(): void {\n    if (this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      this.router.navigate(['/home']);\n      return;\n    }\n\n    this.localStorageService.remove(StorageKeys.STATE);\n    this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n    const state = RouterStateSnapshot.toString();\n\n    getPkce(128, (error, { verifier, challenge }) => {\n      if (!error) {\n        this.localStorageService.set(StorageKeys.CODE_VERIFY, verifier);\n        this.localStorageService.set(StorageKeys.STATE, state);\n\n        const query = new URLSearchParams({\n          client_id: environment.oAuthClientId,\n          redirect_uri: environment.oAuthCallbackUri,\n          response_type: 'code',\n          scope: '',\n          state: state,\n          code_challenge: challenge,\n          code_challenge_method: 'S256',\n        });\n\n        window.location.href = `${\n          environment.oAuthProviderBaseUrl\n        }/authorize?${query.toString()}`;\n      } else {\n        throw new Error('failed to get code challenger');\n      }\n    });\n  }\n\n  /** Transform authorization code to AccessToken */\n  async authorizationCodeToAccessToken(\n    code: string,\n    state: string\n  ): Promise {\n    console.log('try to change authorization code to access token');\n\n    if (\n      !this.localStorageService.has(StorageKeys.STATE) ||\n      !this.localStorageService.has(StorageKeys.CODE_VERIFY)\n    ) {\n      throw new Error('Workflow auth is not inizialized');\n    }\n\n    if (this.localStorageService.get(StorageKeys.STATE) !== state) {\n      throw new Error('State has changed');\n    }\n\n    this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'authorization_code',\n        client_id: environment.oAuthClientId,\n        redirect_uri: environment.oAuthCallbackUri,\n        code_verifier: this.localStorageService.get(StorageKeys.CODE_VERIFY),\n        code: code,\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      )\n      .subscribe(async (data) => {\n        console.log('Set to local storage token access');\n        data.expire_at = Date.now() + data.expires_in * 1000;\n        this.localStorageService.set(StorageKeys.USER_TOKEN, data);\n        this.localStorageService.remove(StorageKeys.STATE);\n        this.localStorageService.remove(StorageKeys.CODE_VERIFY);\n        await this.getCurrentUser();\n\n        this.router.navigate(['/home']);\n      });\n  }\n\n  /** Revoke the authenticated user token */\n  logout() {\n    this.localStorageService.remove(StorageKeys.USER);\n    this.router.navigateByUrl('/');\n  }\n\n  async getAccessToken(): Promise {\n    if (!this.localStorageService.has(StorageKeys.USER_TOKEN)) {\n      throw new Error('user unauthenticated');\n    }\n\n    const userAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n\n    if (this.accessTokenIsExpired(userAccessToken)) {\n      console.log('REFRESH USER TOKEN');\n      await this.refreshToken(userAccessToken);\n      console.log('USER TOKEN REFRESHED');\n    }\n    console.log('RETURN ACCESS TOKEN FROM STORAGE');\n\n    const freshAccessToken = (\n      this.localStorageService.get(StorageKeys.USER_TOKEN)\n    );\n    return freshAccessToken.access_token;\n  }\n\n  isAuthenticated(): boolean {\n    return (\n      !!this.localStorageService.has(StorageKeys.USER) &&\n      !!this.localStorageService.has(StorageKeys.ROLE) &&\n      !!this.localStorageService.has(StorageKeys.USER_TOKEN)\n    );\n  }\n\n  /**\n   * Get user by id as a franchisee or an admin (goodfood)\n   */\n  getUserById(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  doSign(): Observable {\n    return this.http\n      .get(`${environment.oAuthProviderBaseUrl}/token`)\n      .pipe(map((res) => res['payload']));\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  getUserRole(user: User): Observable {\n    const currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${user.id}/roles`)\n      .pipe(\n        tap(() => currentRole),\n        map((value) => this.initAuth(value))\n      );\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  async getCurrentUser(): Promise {\n    let currentUser: User;\n    if (this.localStorageService.has(StorageKeys.USER)) {\n      console.log('[AUTHSERVICE] Retrieve USER from CACHE');\n      currentUser = this.localStorageService.get(StorageKeys.USER);\n    } else {\n      console.log('[AUTHSERVICE] Retrieve USER from remote');\n      const usr = this.http.get(\n        `${environment.apiBaseUrl}/users/current`\n      );\n      currentUser = await firstValueFrom(usr);\n      this.localStorageService.set(StorageKeys.USER, currentUser);\n    }\n    return this.getRole(currentUser);\n  }\n\n  async getCurrentUserRemote(): Promise {\n    let currentUser: User;\n    const usr = this.http.get(`${environment.apiBaseUrl}/users/current`);\n    currentUser = await firstValueFrom(usr);\n\n    return this.getRoleRemote(currentUser);\n  }\n\n  async getRole(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    if (this.localStorageService.has(StorageKeys.ROLE)) {\n      console.log('[AUTHSERVICE] Retrieve ROLE from CACHE');\n      currentRole = this.localStorageService.get(StorageKeys.ROLE);\n    } else {\n      console.log('[AUTHERVICE] Retrieve ROLE from remote');\n      const userRoles = this.http.get(\n        `${environment.apiBaseUrl}/users/${user.id}/roles`\n      );\n      const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n      currentRole = userCurrentRoles[0];\n      this.localStorageService.set(StorageKeys.ROLE, currentRole);\n    }\n    user.roles.push(currentRole);\n\n    return this.roleById(user);\n  }\n\n  async getRoleRemote(user: User): Promise {\n    type role = { code: string };\n    type roleArrayType = Array;\n    let currentRole: role;\n    const userRoles = this.http.get(\n      `${environment.apiBaseUrl}/users/${user.id}/roles`\n    );\n    const userCurrentRoles: roleArrayType = await firstValueFrom(userRoles);\n    currentRole = userCurrentRoles[0];\n\n    user.roles.push(currentRole);\n    return this.roleById(user);\n  }\n\n  /** Verify user role */\n  public roleById(_user: User): User {\n    const user = {\n      ..._user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        user.autorisations.isFranchisee = true;\n      }\n    });\n    return user;\n  }\n\n  private async refreshToken(data: AccessTokenModel): Promise {\n    const response = this.http\n      .post(`${environment.oAuthProviderBaseUrl}/token`, {\n        grant_type: 'refresh_token',\n        refresh_token: data.refresh_token,\n        client_id: environment.oAuthClientId,\n        scope: '',\n      })\n      .pipe(\n        catchError((err) => {\n          const error = err.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      );\n    const dataResponse = await firstValueFrom(response);\n\n    dataResponse.expire_at = Date.now() + dataResponse.expires_in * 1000;\n    this.localStorageService.set(StorageKeys.USER_TOKEN, dataResponse);\n  }\n\n  private accessTokenIsExpired(data: AccessTokenModel): boolean {\n    return (\n      !!data.expire_at && data.expire_at > 0 && Date.now() >= data.expire_at\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Autorisation.html":{"url":"interfaces/Autorisation.html","title":"interface - Autorisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Autorisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isFranchisee\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFranchisee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFranchisee:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            ServerErrorComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TitleComponent\n                        \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\n\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { TitleComponent } from './title/title.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\n\n@NgModule({\n  declarations: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n    ServerErrorComponent,\n  ],\n  exports: [\n    TopbarComponent,\n    SidebarComponent,\n    TitleComponent,\n    LoadingComponent,\n    FooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    CheckboxModule,\n    BadgeModule,\n    ButtonModule,\n    TooltipModule,\n    SidebarModule,\n    DropdownModule,\n    RippleModule,\n  ],\n})\nexport class ComponentsModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                styleUrls\n                ./default.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss'],\n})\nexport class DefaultComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./default.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DefaultModule.html":{"url":"modules/DefaultModule.html","title":"module - DefaultModule","body":"\n                   \n\n\n\n\n    Modules\n    DefaultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_DefaultModule_declarations\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/default/default.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { DefaultComponent } from './default.component';\nimport { ComponentsModule } from './../components/components.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  declarations: [DefaultComponent],\n  exports: [DefaultComponent],\n  imports: [CommonModule, RouterModule, ComponentsModule, ToastModule],\n})\nexport class DefaultModule {\n  // No code\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Diner.html":{"url":"interfaces/Diner.html","title":"interface - Diner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Diner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorDataHttp.html":{"url":"interfaces/ErrorDataHttp.html","title":"interface - ErrorDataHttp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorDataHttp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            functionality\n                                        \n                                \n                                \n                                        \n                                            httpErrorResponse\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        functionality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        functionality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpErrorResponse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpErrorResponse:         HttpErrorResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpErrorResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHttpService.html":{"url":"injectables/ErrorHttpService.html","title":"injectable - ErrorHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/error-http/error-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorHttp$\n                            \n                            \n                                    Private\n                                errorHttpSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeErrorHttp\n                            \n                            \n                                    Public\n                                newErrorHttp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeErrorHttp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newErrorHttp\n                        \n                    \n                \n            \n            \n                \n                    \n                    newErrorHttp(httpErrorResponse: HttpErrorResponse, functionality: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/error-http/error-http.service.ts:21\n                \n            \n\n\n            \n                \n                    Retrieve the error and the feature causing the error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    httpErrorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        serveur response\n\n                                    \n                                \n                                \n                                    functionality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function causing the problem\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorHttp$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.errorHttpSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorHttpSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/error-http/error-http.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHttpService {\n  private errorHttpSubject = new BehaviorSubject(undefined);\n  errorHttp$: Observable = this.errorHttpSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  /**\n   * Retrieve the error and the feature causing the error\n   * @param httpErrorResponse serveur response\n   * @param functionality function causing the problem\n   */\n  public newErrorHttp(\n    httpErrorResponse: HttpErrorResponse,\n    functionality: string\n  ): void {\n    const errorDataHttp: ErrorDataHttp = { httpErrorResponse, functionality };\n    this.errorHttpSubject.next(errorDataHttp);\n  }\n\n  public closeErrorHttp(): void {\n    this.errorHttpSubject.next(undefined);\n  }\n}\n\nexport interface ErrorDataHttp {\n  httpErrorResponse: HttpErrorResponse;\n  functionality: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/footer/footer.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    Copyright © GOOD FOOD 2021-2022\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  color: lightgoldenrodyellow;\n  font-size: small;\n  position: fixed !important;\n  padding-right: 10px;\n  margin-bottom: -20px;\n  bottom: 0%;\n  right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Copyright © GOOD FOOD 2021-2022  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Franchisee.html":{"url":"interfaces/Franchisee.html","title":"interface - Franchisee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Franchisee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            create_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_delivery_radius\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owned_by\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        create_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_delivery_radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_delivery_radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_by\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownedBy:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from './address.model';\nimport { User } from './user.model';\n\nexport interface Franchisee {\n  id?: number;\n  name?: string;\n  phone?: string;\n  email?: string;\n  max_delivery_radius?: number;\n  address_id?: number;\n  ownedBy?: User;\n  owned_by?: number;\n  create_by?: number;\n  address?: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeComponent.html":{"url":"components/FranchiseeComponent.html","title":"component - FranchiseeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee/franchisee.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-franchisee\n            \n\n            \n                styleUrls\n                ./franchisee.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./franchisee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                contactDialog\n                            \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                editMode\n                            \n                            \n                                first\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchisees\n                            \n                            \n                                id\n                            \n                            \n                                isCreate\n                            \n                            \n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                scheduleDialog\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewFranchisee\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(franchiseeService: FranchiseeService, messageService: MessageService, confirmationService: ConfirmationService, dialogService: DialogService, loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewFranchisee\n                        \n                    \n                \n            \n            \n                \ncreateNewFranchisee()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:172\n                \n            \n\n\n            \n                \n                    Delete a franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scheduleDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee/franchisee.component.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { trigger,state,style,transition,animate } from '@angular/animations';\nimport { finalize } from 'rxjs/operators';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\nimport { Address } from 'src/app/shared/models/address.model';\nimport { Schedule } from './../../../shared/models/schedule.model';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { FranchiseeDialogComponent } from '../franchisee-dialog/franchisee-dialog.component';\n\n@Component({\n  selector: 'app-franchisee',\n  templateUrl: './franchisee.component.html',\n  styleUrls: ['./franchisee.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n  animations: [\n      trigger('rowExpansionTrigger', [\n          state('void', style({\n              transform: 'translateX(-10%)',\n              opacity: 0\n          })),\n          state('active', style({\n              transform: 'translateX(0)',\n              opacity: 1\n          })),\n          transition('*  *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n      ])\n  ]\n})\nexport class FranchiseeComponent implements OnInit {\n  // form: FormGroup;\n  ref: DynamicDialogRef;\n\n  franchisees: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  contactDialog: boolean;\n  scheduleDialog: boolean;\n\n  sortOrder: number;\n  sortField: string;\n\n  isCreate: boolean;\n  editMode: boolean;\n\n  // submitted: boolean;\n  first: number = 0;\n  id: number;\n\n  constructor(\n    private franchiseeService: FranchiseeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    public dialogService: DialogService,\n    private loading: LoadingService\n  ) {\n    // NOSONAR\n  }\n\n  ngOnInit(): void {\n    /* retrieve franchisees */\n    this.loading.loadingOn();\n    this.franchiseeService\n      .getFranchisees()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.franchisees = res;\n      });\n  }\n\n  onSortChange(event) {\n    let value = (event.target as HTMLTextAreaElement).value;\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  createNewFranchisee(): void {\n    const ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: 'Ajouter un nouveau franchisé',\n      width: '60%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        franchisee: [],\n        address: {},\n        schedule: {},\n      },\n    });\n    ref.onClose.subscribe((franchisee: Franchisee) => {\n      if (franchisee) {\n        this.franchisees = [...this.franchisees];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'Le franchisé est bien crée.',\n        });\n      }\n    });\n  }\n\n  update(franchisee: Franchisee): void {\n    this.ref = this.dialogService.open(FranchiseeDialogComponent, {\n      header: `${franchisee.name}`,\n      width: '60%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        schedule: this.schedule,\n        address: this.address,\n        franchisee,\n      },\n    });\n    this.ref.onClose.subscribe((_franchisee: Franchisee): void => {\n      if (_franchisee) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'Le franchisé est bien modifié.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id franchisee\n   * Delete a franchisee\n   */\n  delete(franchisee: Franchisee): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer le franchisé \"${franchisee.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.franchiseeService.deleteFranchisee(franchisee.id).subscribe({\n          next: (): void => {\n            this.franchisees = [...this.franchisees];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Ce franchisé est supprimé.',\n              life: 3000,\n            });\n          },\n          error: (error: any): void => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de csuppression du franchisé',\n              detail: error.error,\n            });\n            console.log(\n              'erreur le moment de suppression du franchisé : ',\n              error\n            );\n          },\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n      \n    \n    \n      \n        \n          \n           Nom de franchisé \n           Numéro de téléphone \n           Email \n           Adresse \n          \n        \n      \n      \n        \n          \n            \n          \n          {{ franchisee.name }}\n          {{ franchisee.phone }}\n          {{ franchisee.email }}\n          \n            {{ franchisee.address.first_line }}, \n              {{ franchisee.address.second_line }},\n            \n            {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}\n          \n          \n            \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    {{ schedule.name }}\n                    Customer \n                    Date \n                    Amount \n                    Status \n                  \n                \n                \n                    \n                        {{order.id}}\n                        {{order.customer}}\n                        {{order.id}}\n                        {{order.amount | currency:'USD'}}\n                        {{order.status}}\n                        \n                    \n                \n                \n                    \n                        There are no order for this product yet.\n                    \n                \n              \n            \n          \n        \n      \n\n\n\n\n\n\n      \n         En total\n          il y a {{ franchisees ? franchisees.length : 0 }} franchisees. \n      \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./franchisee.component.scss\n                \n                \n.layout-wrapper .layout-content-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: absolute;\n    overflow: auto;\n    height: calc(100% - 7rem);\n    width: calc(100% - 14rem);\n    margin-top: 7rem;\n    border-top-left-radius: 30px;\n    transition: all 0.2s;\n}\n* {\n    box-sizing: border-box;\n}\n\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                             Nom de franchisé            Numéro de téléphone            Email            Adresse                                                                                 {{ franchisee.name }}          {{ franchisee.phone }}          {{ franchisee.email }}                      {{ franchisee.address.first_line }},               {{ franchisee.address.second_line }},                        {{ franchisee.address.zip_code }}, {{ franchisee.address.city }}, {{ franchisee.address.country }}                                                                                                                                                                            {{ schedule.name }}                    Customer                     Date                     Amount                     Status                                                                                               {{order.id}}                        {{order.customer}}                        {{order.id}}                        {{order.amount | currency:\\'USD\\'}}                        {{order.status}}                                                                                                                        There are no order for this product yet.                                                                                                     En total          il y a {{ franchisees ? franchisees.length : 0 }} franchisees.                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FranchiseeDialogComponent.html":{"url":"components/FranchiseeDialogComponent.html","title":"component - FranchiseeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FranchiseeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-franchisee-dialog\n            \n\n            \n                styleUrls\n                ./franchisee-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./franchisee-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                franchisee\n                            \n                            \n                                franchiseeArray\n                            \n                            \n                                localStorageService\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                schedule\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkError\n                            \n                            \n                                    Private\n                                create\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Private\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, loading: LoadingService, franchiseeService: FranchiseeService, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        franchiseeService\n                                                  \n                                                        \n                                                                        FranchiseeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkError\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkError(controlName: string, errorName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Franchisee } from 'src/app/shared/models/franchisee.model';\nimport { Address } from 'src/app/shared/models/address.model';\nimport { Schedule } from 'src/app/shared/models/schedule.model';\nimport { AddressService } from 'src/app/shared/services/address/address.service';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { User } from 'src/app/shared/models/user.model';\nimport { StorageKeys } from 'src/app/shared/constants/storageKeys.const';\n\n@Component({\n  selector: 'app-franchisee-dialog',\n  templateUrl: './franchisee-dialog.component.html',\n  styleUrls: ['./franchisee-dialog.component.scss'],\n})\nexport class FranchiseeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n  form: FormGroup;\n\n  franchiseeArray: Franchisee[] = [];\n  franchisee: Franchisee;\n\n  address: Address;\n  schedule: Schedule;\n\n  submitted: boolean;\n  localStorageService: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private loading: LoadingService,\n    private franchiseeService: FranchiseeService,\n    private addressService: AddressService\n  ) {\n    this.mode = config.data.mode;\n    this.franchisee = config.data.franchisee;\n    this.address = config.data.address;\n    this.schedule = config.data.schedule;\n  }\n\n  ngOnInit(): void {\n    this.franchiseeService\n      .getFranchisees()\n      .subscribe((data: Franchisee[]): void => {\n        this.franchiseeArray = data;\n      });\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.franchisee?.name || '', [Validators.required]],\n      phone: [this.franchisee?.phone || '', [Validators.required]],\n      email: [\n        this.franchisee?.email || '',\n        [Validators.required, Validators.email],\n      ],\n      max_delivery_radius: [\n        this.franchisee?.max_delivery_radius,\n        [Validators.required],\n      ],\n      address: [this.franchisee?.address, [Validators.required]],\n      first_line: [this.franchisee?.address?.first_line, [Validators.required]],\n      second_line: [this.franchisee?.address?.second_line || ''],\n      zip_code: [\n        this.franchisee?.address?.zip_code || '',\n        [Validators.required],\n      ],\n      city: [this.franchisee?.address?.city || '', [Validators.required]],\n      country: [this.franchisee?.address?.country || '', [Validators.required]],\n    });\n  }\n\n  private getFormValues(): void {\n    this.franchisee.name = this.form.value.name;\n    this.franchisee.phone = this.form.value.phone;\n    this.franchisee.email = this.form.value.email;\n    this.franchisee.max_delivery_radius = this.form.value.max_delivery_radius;\n    this.franchisee.address.first_line = this.form.value.first_line;\n    this.franchisee.address.second_line = this.form.value.second_line;\n    this.franchisee.address.zip_code = this.form.value.zip_code;\n    this.franchisee.address.city = this.form.value.city;\n    this.franchisee.address.country = this.form.value.country;\n    if (this.mode === 'UPDATE') {\n      this.address = this.franchisee.address;\n      this.address.id = this.franchisee.address_id;\n    }\n  }\n\n  public onSubmit(): void {\n    this.getFormValues();\n    this.loading.loadingOn();\n\n    if (this.mode === 'UPDATE') {\n      console.log('update address in component : ', this.mode);\n      this.update();\n    } else {\n      console.log('create address in component : ');\n      this.create();\n    }\n  }\n\n  private create(): void {\n    this.addressService\n      .createAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.address = res;\n        this.franchisee.address_id = res.id;\n        this.franchiseeService\n          .newFranchisee(\n            this.franchisee,\n            (this.localStorageService.get(StorageKeys.USER)).id\n          )\n          .subscribe({\n            next: (_res) => {\n              this.ref.close(_res);\n              this.franchisee = _res;\n              console.log('create franchisee in component : ', res);\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création du franchisé.',\n                detail: error.error,\n              });\n            },\n          });\n      });\n  }\n\n  private update(): void {\n    this.addressService\n      .updateAddress(this.address)\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((res): void => {\n        this.franchiseeService.updateFranchisee(this.franchisee).subscribe({\n          next: (res) => {\n            this.ref.close(res);\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de modification du franchisé.',\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n\n  public checkError(controlName: string, errorName: string): boolean {\n    return (\n      this.form.controls[controlName].dirty &&\n      this.form.controls[controlName].hasError(errorName)\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de franchisé\n      \n      Champ obligatoire\n    \n    \n      Numéro de téléphone\n      \n      Champ obligatoire -->\n    \n    \n      Email\n      \n      Champ obligatoire -->\n    \n  \n  \n    \n      Ligne 1\n      \n    \n    \n      Ligne 2\n      \n    \n    \n      Code postal\n      \n    \n  \n  \n    \n      Ville\n      \n    \n    \n      Pays\n      \n    \n    \n      Zone de livraison\n      \n      \n      Champ obligatoire -->\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./franchisee-dialog.component.scss\n                \n                ::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de franchisé            Champ obligatoire              Numéro de téléphone            Champ obligatoire -->              Email            Champ obligatoire -->                  Ligne 1                    Ligne 2                    Code postal                        Ville                    Pays                    Zone de livraison                  Champ obligatoire -->                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FranchiseeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FranchiseeModule.html":{"url":"modules/FranchiseeModule.html","title":"module - FranchiseeModule","body":"\n                   \n\n\n\n\n    Modules\n    FranchiseeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/franchisee/franchisee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FranchiseeComponent\n                        \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FranchiseeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            FranchiseeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { TabViewModule } from 'primeng/tabview';\n\nimport { FranchiseeComponent } from './franchisee/franchisee.component';\nimport { FranchiseeService } from 'src/app/shared/services/franchisee/franchisee.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\nimport { FranchiseeDialogComponent } from './franchisee-dialog/franchisee-dialog.component';\n\nconst routes: Routes = [{ path: '', component: FranchiseeComponent }];\n\n@NgModule({\n  declarations: [FranchiseeComponent, FranchiseeDialogComponent],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    DynamicDialogModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    TabViewModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    KeyFilterModule,\n  ],\n  entryComponents: [FranchiseeDialogComponent],\n  providers: [\n    FranchiseeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class FranchiseeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FranchiseeRecipe.html":{"url":"interfaces/FranchiseeRecipe.html","title":"interface - FranchiseeRecipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FranchiseeRecipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/franchisee-recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe:         Recipe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recipe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Recipe } from './recipe.model';\n\nexport interface FranchiseeRecipe {\n\tid?: number;\n\tprice?: number;\n\trecipe_id?: number;\n\trecipe?: Recipe;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FranchiseeService.html":{"url":"injectables/FranchiseeService.html","title":"injectable - FranchiseeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FranchiseeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/franchisee/franchisee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRecipe\n                            \n                            \n                                    Public\n                                deleteFranchisee\n                            \n                            \n                                    Public\n                                getFranchiseeRecipes\n                            \n                            \n                                    Public\n                                getFranchisees\n                            \n                            \n                                    Public\n                                newFranchisee\n                            \n                            \n                                    Public\n                                removeRecipe\n                            \n                            \n                                    Public\n                                updateFranchisee\n                            \n                            \n                                    Public\n                                updateRecipePrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/franchisee/franchisee.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRecipe(item: Franchisee, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:93\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients for franchisee\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee (recipe)\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFranchisee(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchiseeRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchiseeRecipes(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        franchisee recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFranchisees\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFranchisees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all Franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    newFranchisee(create: Partial, owner_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new franchisee\n\n                                    \n                                \n                                \n                                    owner_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee id - message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRecipe(id: number, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Remove a recipe from franchisee catalog\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateFranchisee\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFranchisee(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipePrice\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipePrice(update: Partial, recipe: FranchiseeRecipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/franchisee/franchisee.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                FranchiseeRecipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map, Observable, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { FranchiseeRecipe } from '../../models/franchisee-recipe.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FranchiseeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors\n   * @returns all Franchisee\n   */\n  public getFranchisees(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/contractors`)\n      .pipe(\n        tap((obj: any) => console.log('service -> get franchisees : ', obj)),\n        map((res: any) => res['data'])\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/contractors/{contractor_id}/recipes\n   * @param recipe\n   * @returns franchisee recipes\n   */\n  public getFranchiseeRecipes(\n    franchisee: Franchisee\n  ): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/recipes`\n      )\n      .pipe(\n        tap((obj): void => console.log('service -> All recipes : ', obj)),\n        map((res): any => res['data'])\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors\n   * @param create new franchisee\n   * @returns franchisee id - message\n   */\n  public newFranchisee(\n    create: Partial,\n    owner_id: number\n  ): Observable {\n    let franchisee: Franchisee;\n    franchisee = {\n      ...create,\n    };\n    franchisee.owned_by = owner_id;\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors`, franchisee)\n      .pipe(\n        tap((obj) => console.log(' service -> new franchisee : ', obj)),\n        map((res) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors\n   * @param update franchisee\n   * @returns update franchisee\n   */\n  public updateFranchisee(update: Partial): Observable {\n    return this.http.put(`${environment.apiBaseUrl}/contractors`, update).pipe(\n      tap((obj) => console.log('service -> edit franchisee : ', obj)),\n      map((res) => res)\n    );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/contractors/{contractor_id}/recipes\n   * Create new recipe with igredients for franchisee\n   * @param item franchisee (recipe)\n   * @returns new recipe\n   */\n  public addRecipe(\n    item: Franchisee,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/contractors/${item.id}/recipes`, recipe)\n      .pipe(\n        // tap((obj: any) => console.log('service -> addStarRecipe : ', obj)),\n        map((res: any) => res)\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param update franchisee schedule\n   * @returns update recipe\n   */\n  public updateRecipePrice(\n    update: Partial,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .put(\n        `${environment.apiBaseUrl}/contractors/${update.id}/recipes/${recipe.id}`,\n        recipe\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> updateRecipePrice : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.UPDATE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractor_id}/recipes/{recipe_id}\n   * @param id franchisee_id\n   * @param recipe.id recipe_id\n   * @returns Remove a recipe from franchisee catalog\n   */\n  public removeRecipe(\n    id: number,\n    recipe: FranchiseeRecipe\n  ): Observable {\n    return this.http\n      .delete(\n        `${environment.apiBaseUrl}/contractors/${id}/recipes/${recipe.id}`\n      )\n      .pipe(\n        // tap((obj: any) => console.log('service -> Remove removeRecipe : ', obj)),\n        map((res: any) => (res ? res['message'] : Message.DELETE))\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/contractors/{contractors_id}\n   * @param id franchisee_id\n   * @returns Delete a franchisee\n   */\n  public deleteFranchisee(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/contractors/${id}`).pipe(\n      // tap((obj) => console.log('service -> deleteFranchisee : ', obj)),\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(() => httpErrorResponse);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Friday.html":{"url":"interfaces/Friday.html","title":"interface - Friday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Friday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/home/home.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'src/app/shared/services/user/local-storage/local-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Bientôt\n            Ici nous trouvons les informations statiques de franchisés, utilisateurs, ...\n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Bientôt            Ici nous trouvons les informations statiques de franchisés, utilisateurs, ...                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RippleModule } from 'primeng/ripple';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    AvatarModule,\n    BadgeModule,\n    TooltipModule,\n    RippleModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http-error/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Returns a function that handles Http operation failures.\nThis error handler lets the app continue to run as if no error occurred.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/http-error/http-error.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { MessageService } from 'primeng/api';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private messageService: MessageService) {\n    //NOSONAR\n  }\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError((err) => this.handleError(err)));\n  }\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    switch (error.status) {\n      case 400:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log(\n          \"Désolé, vous n'etes pas autorise a acceder a ce page.\",\n          error?.error?.message\n        );\n        break;\n      case 401:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log(\"Désolé, vous n'etes pas autorise a acceder a ce page.\");\n        break;\n      case 404:\n        this.messageService.add({\n          life: 5000,\n          severity: 'warn',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé, page introuvable.');\n        break;\n      case 500:\n        this.messageService.add({\n          life: 5000,\n          severity: 'error',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé, une erreur est survenue au niveau serveur.');\n        break;\n      default:\n        this.messageService.add({\n          life: 5000,\n          severity: 'error',\n          summary: 'Service Message',\n          detail: error?.error?.message,\n        });\n        console.log('Désolé une erreur est survenue: ', error?.error?.message);\n    }\n    return throwError(() => new Error(error.message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngreType.html":{"url":"interfaces/IngreType.html","title":"interface - IngreType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngreType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngreType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ingredient.html":{"url":"interfaces/Ingredient.html","title":"interface - Ingredient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/ingredient.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allergen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            types\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allergen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allergen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        types:         IngreType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IngreType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngreType } from './ingredient-type.model';\n\n/*\n * url : /ingredients\n */\nexport interface Ingredient {\n  id?: number;\n  name?: string;\n  allergen?: boolean;\n  types?: IngreType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientComponent.html":{"url":"components/IngredientComponent.html","title":"component - IngredientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient/ingredient.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient\n            \n\n            \n                styleUrls\n                ./ingredient.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allergen\n                            \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                ingredient\n                            \n                            \n                                ingredientDialog\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                isCreate\n                            \n                            \n                                selectedIngredients\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredient\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                isAllergen\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                newIngredient\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientService: IngredientService, ingredientTypeService: IngredientTypeService, messageService: MessageService, confirmationService: ConfirmationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllergen\n                        \n                    \n                \n            \n            \n                \nisAllergen(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredient\n                        \n                    \n                \n            \n            \n                \nnewIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \nupdateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allergen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient/ingredient.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder,\n  FormControl,\n} from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientComponent implements OnInit {\n  form: FormGroup;\n\n  ingredient: Ingredient;\n\n  typeArray: IngreType[] = [];\n  ingredientType: IngreType;\n\n  ingredients: Ingredient[] = [];\n  selectedIngredients: Ingredient[];\n\n  allergen: boolean;\n  ingredientDialog: boolean;\n  submitted: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private ingredientService: IngredientService,\n    private ingredientTypeService: IngredientTypeService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingredient?.name || '', [Validators.required]],\n      allergen: this.ingredient?.allergen || false,\n      ingredientType: this.ingredient?.types || new FormControl([]),\n    });\n  }\n\n  private makeRecipe(): void {\n    const ingredient: Ingredient = {};\n    if (this.isCreate) {\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n      ingredient.types = [this.form.controls['ingredientType'].value.code];\n    } else {\n      ingredient.id = this.ingredient.id;\n      ingredient.name = this.form.get('name').value;\n      ingredient.allergen = this.form.get('allergen').value;\n    }\n    this.ingredient = ingredient;\n    console.log('makeIngredient', this.ingredient);\n  }\n\n  newIngredient(): void {\n    this.ingredient = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  updateIngredient(ingredient: Ingredient): void {\n    this.ingredient = { ...ingredient };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.ingredientDialog = true;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeRecipe();\n\n    if (this.ingredient.id) {\n      this.ingredientService.updateIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Mise à jour d'ingredient\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreur le moment de modification',\n            detail: error.error,\n          });\n          console.log(error);\n        },\n      });\n    } else {\n      this.ingredientService.createIngredient(this.ingredient).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: 'Nouvel ingredient ajouté',\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreur le moment de création',\n            detail: error.error,\n          });\n        },\n      });\n    }\n    this.ingredients = [...this.ingredients];\n    this.ingredientDialog = false;\n    this.ingredient = {};\n  }\n\n  deleteIngredient(ingredient: Ingredient): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingredient.name + '\"?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientService.deleteIngredient(ingredient.id).subscribe({\n          next: () => {\n            this.ingredients = [...this.ingredients];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: \"L'ingrédient est supprimé.\",\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: \"Erreur le moment de création de l'ingrédient!\",\n              detail: error.error,\n            });\n            console.log(\n              \"erreur le moment de création de l'ingrédient ->\",\n              error\n            );\n          },\n        });\n      },\n    });\n  }\n\n  isAllergen(event: any): void {\n    this.allergen = event.checked;\n    if (event.checked) {\n      this.allergen = true;\n      this.form.get('allergen').setValue(true);\n    } else {\n      this.form.get('allergen').setValue(false);\n    }\n  }\n\n  hideDialog(): void {\n    this.ingredientDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom d'ingredient \n        \n        \n          Type d'ingredient  \n        \n        \n          Allergen \n        \n        \n      \n    \n    \n      \n        {{ ingredient.name }}\n        {{ value.code }}\n        Oui\n        Non\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom d'ingrédient\n      \n      Nom est obligatoire.\n    \n    \n      \n        Type d'ingrédient\n        \n        \n      \n    \n    \n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./ingredient.component.scss\n                \n                .grid > .col,\n.grid > [class*=\"col\"] {\n  box-sizing: border-box;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  padding: 1rem;\n  width: 100%;\n}\n#icons {\n  justify-content: center !important;\n  right: 50%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ndiv {\n  display: block;\n}\n\nbody {\n  font-family: Lato, Helvetica, sans-serif;\n  font-size: 14px;\n  color: #495057;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 0;\n  margin: 0;\n  min-height: 100%;\n  background-image: linear-gradient(147.38deg, #ffffff 0%, #86a8c0 100%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n\n:root {\n  --fc-daygrid-event-dot-width: 8px;\n}\n\n// ---------------------\n\n:host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom d\\'ingredient                           Type d\\'ingredient                            Allergen                                             {{ ingredient.name }}        {{ value.code }}        Oui        Non                                                                En total il y a {{ ingredients ? ingredients.length : 0 }} ingredients.                        Nom d\\'ingrédient            Nom est obligatoire.                      Type d\\'ingrédient                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredient\n                            \n                            \n                                    Public\n                                deleteIngredient\n                            \n                            \n                                    Public\n                                getIngredients\n                            \n                            \n                                    Public\n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredient(item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create new ingredient\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        new ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredient(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:55\n                \n            \n\n\n            \n                \n                    Attention : All recipes attached to this ingredient will lose their ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\nAttention : All recipes attached to this ingredient will lose their ingredient\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredients\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredient(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient/ingredient.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update ingredient\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/ingredients\n   * @returns all ingredients\n   */\n  public getIngredients(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients`)\n      .pipe(map((res) => res['data']));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/ingredients\n   * @param item Create new ingredient\n   * @returns new ingredient\n   */\n  public createIngredient(item: Partial): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients`, item)\n      .pipe(map((res) => (res ? res['message'] : Message.CREATE)));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/ingredients/{ingredient_id}\n   * @param update ingredient items\n   * @returns update ingredient\n   */\n  public updateIngredient(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/${update.id}`, update)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)));\n  }\n\n  /**\n   *@url DELETE : localhost:8080/api/ingredients/{ingredient_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   * Attention : All recipes attached to this ingredient will lose their ingredient\n   */\n  public deleteIngredient(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/${id}`)\n      .pipe(map((res) => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientTypeComponent.html":{"url":"components/IngredientTypeComponent.html","title":"component - IngredientTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IngredientTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-ingredient-type\n            \n\n            \n                styleUrls\n                ./ingredient-type.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./ingredient-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                ingredientTypeDialog\n                            \n                            \n                                ingreType\n                            \n                            \n                                submitted\n                            \n                            \n                                typeArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteIngredientType\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeIngredientType\n                            \n                            \n                                newIngredientType\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientTypeService: IngredientTypeService, fb: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientTypeService\n                                                  \n                                                        \n                                                                        IngredientTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \ndeleteIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newIngredientType\n                        \n                    \n                \n            \n            \n                \nnewIngredientType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \nupdateIngredientType(ingreType: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingreType\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientTypeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MessageService, ConfirmationService } from 'primeng/api';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { IngredientTypeService } from 'src/app/shared/services/ingredient-type/ingredient-type.service';\n\n@Component({\n  selector: 'app-ingredient-type',\n  templateUrl: './ingredient-type.component.html',\n  styleUrls: ['./ingredient-type.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class IngredientTypeComponent implements OnInit {\n  ingreType: IngreType;\n  typeArray: IngreType[] = [];\n\n  form: FormGroup;\n\n  first: number = 0;\n\n  ingredientTypeDialog: boolean;\n  submitted: boolean;\n\n  constructor(\n    private ingredientTypeService: IngredientTypeService,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.init();\n    this.initForm();\n  }\n\n  init(): void {\n    /* retrieve ingredient types */\n    this.ingredientTypeService.getIngredientsTypes().subscribe((res) => {\n      this.typeArray = res;\n    });\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      name: [this.ingreType?.name || '', Validators.required],\n      description: this.ingreType?.description || '',\n    });\n  }\n\n  private makeIngredientType(): void {\n    let ingreType: IngreType = {};\n\n    ingreType.name = this.form.get('name').value;\n    ingreType.description = this.form.get('description').value;\n    ingreType.id = this.ingreType?.id || null;\n    this.ingreType = ingreType;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.makeIngredientType();\n    if (this.ingreType.id) {\n      this.ingredientTypeService\n        .updateIngredientType(this.ingreType)\n        .subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Le type d'ingrédient est bien modifié.\",\n            life: 3000,\n          });\n        });\n    } else {\n      this.ingredientTypeService\n        .createIngredientType(this.ingreType)\n        .subscribe((res) => {\n          console.log('res : ', res);\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"le type d'ingrédient est bien créé.\",\n            life: 3000,\n          });\n        });\n    }\n\n    this.typeArray = [...this.typeArray];\n    this.ingredientTypeDialog = false;\n    this.ingreType = {};\n  }\n\n  newIngredientType(): void {\n    this.ingreType = {};\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  updateIngredientType(ingreType: IngreType): void {\n    this.ingreType = { ...ingreType };\n    this.initForm();\n    this.submitted = false;\n    this.ingredientTypeDialog = true;\n  }\n\n  deleteIngredientType(ingreType: IngreType): void {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûre de vouloir supprimer \"' + ingreType.name + '\"?',\n      header: 'Confirmation de suppression',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.ingredientTypeService\n          .deleteIngredientType(ingreType.id)\n          .subscribe({\n            next: () => {\n              this.typeArray = [...this.typeArray];\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Succès',\n                detail: \"Création de type d'ingredient\",\n                life: 3000,\n              });\n            },\n            error: (error) => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Erreur le moment de création de type',\n                detail: error.error,\n              });\n            },\n          });\n      },\n    });\n  }\n\n  hideDialog(): void {\n    this.ingredientTypeDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          Nom de tyoe d'ingrédient\n        \n        \n          Description\n        \n        \n      \n    \n    \n      \n        {{ ingreType.name }}\n        {{ ingreType.description }}\n        \n          \n          \n        \n      \n    \n    \n      \n        Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.\n      \n    \n  \n\n\n\n\n  \n    \n      Nom de type d'ingrédient\n      \n      Champ obligatoire.\n    \n    \n      Description\n      \n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./ingredient-type.component.scss\n                \n                ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder { /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n            \n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Nom de tyoe d\\'ingrédient                          Description                                            {{ ingreType.name }}        {{ ingreType.description }}                                                                Entotal il y a {{ typeArray ? typeArray.length : 0 }} types.                        Nom de type d\\'ingrédient            Champ obligatoire.              Description                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientTypeService.html":{"url":"injectables/IngredientTypeService.html","title":"injectable - IngredientTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ingredient-type/ingredient-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createIngredientType\n                            \n                            \n                                    Public\n                                deleteIngredientType\n                            \n                            \n                                    Public\n                                getIngredientsTypes\n                            \n                            \n                                    Public\n                                updateIngredientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIngredientType(item: IngreType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:46\n                \n            \n\n\n            \n                \n                    Create new ingredient type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                IngreType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteIngredientType(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:86\n                \n            \n\n\n            \n                \n                    Attention : All ingredients attched to this type will lose their type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient-type_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a ingredient_type\nAttention : All ingredients attched to this type will lose their type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsTypes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredients types as Vegetebale, fruit, ...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateIngredientType\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIngredientType(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ingredient-type/ingredient-type.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { IngreType } from '../../models/ingredient-type.model';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IngredientTypeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * @returns ingredients types as Vegetebale, fruit, ...\n   */\n  public getIngredientsTypes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/ingredients/types`)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all ingredient-types'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types\n   * Create new ingredient type\n   * @param item\n   * @returns\n   */\n  public createIngredientType(item: IngreType): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/ingredients/types`, item)\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param update\n   */\n  public updateIngredientType(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/ingredients/types/${update.id}`, update)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url localhost:8080/api/ingredients/types/{ingredient_type_id}\n   * @param id ingredient-type_id\n   * @returns Delete a ingredient_type\n   * Attention : All ingredients attched to this type will lose their type\n   */\n  public deleteIngredientType(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/ingredients/types/${id}`)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.DELETE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'delete ingredient-type'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAuthenticatedGuard.html":{"url":"guards/IsAuthenticatedGuard.html","title":"guard - IsAuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-authenticated/is-authenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n\n    return isAuthenticated;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsUnauthenticatedGuard.html":{"url":"guards/IsUnauthenticatedGuard.html","title":"guard - IsUnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsUnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsUnauthenticatedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    const isAuthenticated: boolean = this.authService.isAuthenticated();\n\n    if (isAuthenticated) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutsModule.html":{"url":"modules/LayoutsModule.html","title":"module - LayoutsModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_imports\n\n\n\ncluster_LayoutsModule_exports\n\n\n\n\nDefaultModule\n\nDefaultModule\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/layouts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/layouts.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DefaultComponent } from './default/default.component';\nimport { DefaultModule } from './default/default.module';\n\n@NgModule({\n  imports: [\n    DefaultModule,\n    RouterModule.forChild([{ path: '', component: DefaultComponent }]),\n  ],\n  exports: [DefaultModule],\n})\nexport class LayoutsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LayoutsModule,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRoutingOnGoing\n                            \n                            \n                                routing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRoutingOnGoing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/loading/loading.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/loading/loading.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/loading/loading.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  RouteConfigLoadEnd,\n  RouteConfigLoadStart,\n  Router,\n} from '@angular/router';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Input()\n  routing: boolean = false;\n\n  @Input()\n  detectRoutingOnGoing: boolean = false;\n\n  constructor(public loadingService: LoadingService, private router: Router) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    if (this.detectRoutingOnGoing) {\n      this.router.events.subscribe((event): void => {\n        if (\n          event instanceof NavigationStart ||\n          event instanceof RouteConfigLoadStart\n        ) {\n          this.loadingService.loadingOn();\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationError ||\n          event instanceof NavigationCancel ||\n          event instanceof RouteConfigLoadEnd\n        ) {\n          this.loadingService.loadingOff();\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                :host ::ng-deep .custom-spinner .p-progress-spinner-circle {\n  animation: custom-progress-spinner-dash 1.5s ease-in-out infinite,\n    custom-progress-spinner-color 6s ease-in-out infinite;\n}\n\n@keyframes custom-progress-spinner-color {\n\n  100%,\n  0% {\n    stroke: #9FB7ED;\n  }\n\n  40% {\n    stroke: #D4DFF7;\n  }\n\n  66% {\n    stroke: #ffa62b;\n  }\n\n  80%,\n  90% {\n    stroke: #ccbe1c;\n  }\n}\n\n@keyframes custom-progress-spinner-dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px;\n  }\n\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px;\n  }\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.053);\n  z-index: 950;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingOff\n                            \n                            \n                                    Public\n                                loadingOn\n                            \n                            \n                                    Public\n                                showLoaderUntilCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadingOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadingOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showLoaderUntilCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoaderUntilCompleted(obs$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading/loading.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading/loading.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  concatMap,\n  finalize,\n  Observable,\n  of,\n  tap,\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n\n  loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n    //NOSONAR\n  }\n\n  public showLoaderUntilCompleted(obs$: Observable): Observable {\n    return of(null).pipe(\n      tap(() => this.loadingOn()),\n      concatMap(() => obs$),\n      finalize(() => this.loadingOff())\n    );\n  }\n\n  public loadingOn(): void {\n    this.loadingSubject.next(true);\n  }\n\n  public loadingOff(): void {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/local-storage/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | object | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: string | object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/local-storage/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {\n    //NOSONAR\n  }\n\n  set(key: string, value: string | object): void {\n    let valueSerialized: string = '';\n\n    switch (typeof value) {\n      case 'object':\n        valueSerialized = JSON.stringify(value);\n        break;\n      default:\n        valueSerialized = value.toString();\n    }\n    localStorage.setItem(key, valueSerialized);\n  }\n\n  get(key: string): string | object | null {\n    if (this.has(key)) {\n      try {\n        return JSON.parse(localStorage.getItem(key));\n      } catch {\n        return localStorage.getItem(key);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  has(key: string): boolean {\n    return localStorage.getItem(key) === null ? false : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n     //NOSONAR\n  }\n\n  onLogin() {\n    this.authService.getAuthorizationCode();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/styles.scss\";\n\nbutton {\n  background: #ccbe1c !important;\n  border-radius: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lunch.html":{"url":"interfaces/Lunch.html","title":"interface - Lunch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lunch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closed_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opened_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/messages/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors$\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors(...errors: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/messages/messages.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/messages/messages.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  private subject = new BehaviorSubject([]);\n\n  errors$: Observable = this.subject\n    .asObservable()\n    .pipe(filter((msg) => msg && msg.length > 0));\n\n  showErrors(...errors: string[]) {\n    this.subject.next(errors);\n    window.scrollTo(0, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monday.html":{"url":"interfaces/Monday.html","title":"interface - Monday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/page-not-found/page-not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n        \n        \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n              \n            \n          \n        \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                .fundo {\n  animation: scales 3s alternate infinite;\n  transform-origin: center;\n}\n\n.pao-baixo {\n  animation: rotatepao 14s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.pao-cima {\n  animation: rotatepao 7s 1s cubic-bezier(0.1, 0.49, 0.41, 0.97) infinite;\n  transform-origin: center;\n}\n\n.olhos {\n  animation: olhos 2s alternate infinite;\n  transform-origin: center;\n}\n\n.left-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 150px 156px;\n}\n\n.right-sparks {\n  animation: left-sparks 4s alternate infinite;\n  transform-origin: 310px 150px;\n}\n\n@keyframes scales {\n  from {\n    transform: scale(0.98);\n  }\n\n  to {\n    transform: scale(1);\n  }\n}\n\n@keyframes rotatepao {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  50%,\n  60% {\n    transform: rotate(-20deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes olhos {\n  0% {\n    transform: rotateX(0deg);\n  }\n\n  100% {\n    transform: rotateX(30deg);\n  }\n}\n\n@keyframes left-sparks {\n  0% {\n    opacity: 0;\n  }\n}\n\n.main {\n  margin: 0px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.path {\n  stroke-dasharray: 300;\n  stroke-dashoffset: 300;\n  animation: dash 4s alternate infinite;\n}\n\n@keyframes dash {\n  0%,\n  30% {\n    fill: #4b4b62;\n    stroke-dashoffset: 0;\n  }\n\n  80%,\n  100% {\n    fill: transparent;\n    stroke-dashoffset: -200;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/picture.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            external_link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size_unit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        external_link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size_unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size_unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Picture {\n  uuid?: string;\n  name?: string;\n  size?: number;\n  size_unit?: string;\n  link?: string;\n  external_link?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrincipalComponent.html":{"url":"components/PrincipalComponent.html","title":"component - PrincipalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrincipalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/principal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-principal\n            \n\n            \n                styleUrls\n                ./principal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./principal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/principal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/principal.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.scss'],\n})\nexport class PrincipalComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./principal.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrincipalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrincipalModule.html":{"url":"modules/PrincipalModule.html","title":"module - PrincipalModule","body":"\n                   \n\n\n\n\n    Modules\n    PrincipalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_imports\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/principal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            PrincipalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LayoutsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MessageService } from 'primeng/api';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromAuth from '../shared/store/state/user/user.reducer';\nimport { UserEffects } from '../shared/store/state/user';\n\nimport { routing } from './principal-routing.module';\nimport { LayoutsModule } from '../layouts/layouts.module';\n\nimport { PrincipalComponent } from './principal.component';\nimport { PageNotFoundComponent } from '../layouts/components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [PrincipalComponent, PageNotFoundComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    routing,\n    LayoutsModule,\n    StoreModule.forFeature(fromAuth.userFeatureKey, fromAuth.userReducer),\n    EffectsModule.forFeature([UserEffects]),\n  ],\n  providers: [MessageService],\n})\nexport class PrincipalModule {\n  // NOSONAR\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/profile/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                editModeEmail\n                            \n                            \n                                    Optional\n                                editModeFirstname\n                            \n                            \n                                    Optional\n                                editModeLastname\n                            \n                            \n                                    Optional\n                                editModePhone\n                            \n                            \n                                form\n                            \n                            \n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldCancel\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileService: ProfileService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:110\n                \n            \n\n\n            \n                \n                    In input form : + Verify value form (character form and length)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldCancel\n                        \n                    \n                \n            \n            \n                \nonFieldCancel(user: User, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/profile/profile/profile.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeFirstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModeLastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        editModePhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/profile/profile/profile.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ProfileService } from './../../../shared/services/profile/profile.service';\nimport { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { MessageService } from 'primeng/api';\nimport { Observable, filter, first } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppState } from 'src/app/shared/store';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  providers: [MessageService],\n  styleUrls: ['./profile.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    `,\n  ],\n})\nexport class ProfileComponent implements OnInit {\n  editModeFirstname?: boolean;\n  editModeLastname?: boolean;\n  editModeEmail?: boolean;\n  editModePhone?: boolean;\n\n  user$: Observable;\n  user: User;\n\n  form: FormGroup;\n\n  constructor(\n    private store: Store,\n    private profileService: ProfileService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    // this.store.pipe(select(selectUserDetails)).subscribe((user) => {\n    //   console.log(this.user);\n    //   if (user == null) {\n    //     this.store.dispatch(UserActions.loadUser());\n    //   }\n    // });\n    //this.user = this.profileService.getCurrentUser();\n    this.profileService.getUser().subscribe(\n      (res) => {\n        this.user = res;\n        this.form.patchValue(this.user);\n        console.log('res in profile : ', res);\n      },\n      (err) => console.log('erreur dans profile component : ', err)\n    );\n    this.editModeFirstname = false;\n    this.editModeLastname = false;\n    this.editModeEmail = false;\n    this.editModePhone = false;\n\n    this.initForm();\n  }\n\n  updateField(type: string): User {\n    this.store\n      .pipe(\n        select(selectUserDetails),\n        filter((user) => user != null),\n        first()\n      )\n      .subscribe(\n        (user) => {\n          const userUpdate = { ...user } as User;\n          const formValue = this.form.value;\n          switch (type) {\n            case 'FIRSTNAME':\n              this.user.firstname = formValue.firstname.trim();\n              break;\n            case 'LASTNAME':\n              this.user.lastname = formValue.lastname.trim();\n              break;\n            case 'PHONE':\n              this.user.phone = formValue.phone.trim();\n              break;\n            case 'EMAIL':\n              this.user.email = formValue.email.trim();\n              break;\n            default:\n              break;\n          }\n          this.store.dispatch(\n            UserActions.updateUser({ userDetails: this.user })\n          );\n        },\n        (error) => console.log('profile component > update user: ', error)\n      );\n    return this.user;\n  }\n\n  /**\n   * In input form : + Verify value form (character form and length)\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstname: [\n        this.user?.firstname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(30),\n        ],\n      ],\n      lastname: [\n        this.user?.lastname,\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      phone: [\n        this.user?.phone,\n        [Validators.required, Validators.pattern('/^[0][0-9]{9}$')],\n      ],\n      email: [\n        this.user?.email,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n    });\n  }\n\n  // TODO : *** code this part ***\n  onFieldCancel(user: User, index: number) {\n    // Complete here\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  Prénom\n                \n                \n                  \n                    {{ user.firstname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                Nom\n                \n                  \n                    {{ user.lastname }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Numéro de téléphone\n                \n                \n                  \n                    {{ user.phone }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n              \n                \n                  Email\n                \n                \n                  \n                    {{ user.email }}\n                  \n                  \n                    \n                  \n                \n                \n                  \n                  \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .w-8 {\n  width: 100% !important;\n}\n\n.col-12 {\n  width: 10% !important;\n}\n\n            \n      :host ::ng-deep .p-cell-editing {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Prénom                                                                      {{ user.firstname }}                                                                                                                                                                                                                            Nom                                                      {{ user.lastname }}                                                                                                                                                                                                                                              Numéro de téléphone                                                                      {{ user.phone }}                                                                                                                                                                                                                                              Email                                                                      {{ user.email }}                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// PrimeNG\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\n// Component\nimport { ProfileComponent } from './profile/profile.component';\n// Service\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: ProfileComponent }];\n\n@NgModule({\n  declarations: [ProfileComponent], //EditProfileComponent\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    ProfileService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/profile/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Defone user role\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Roles } from '../../constants/role.const';\nimport { User } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current?includes[]=roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n\n  /**\n   *\n   * @param user Defone user role\n   * @returns\n   */\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n\n    return _user;\n  }\n\n  updateUser(user: User): Observable {\n    const newUserDetails: User = { ...user };\n\n    const formData = new FormData();\n    if (newUserDetails != null) {\n      newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n      newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n      newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n      newUserDetails.email = JSON.stringify(newUserDetails.email);\n\n      formData.append('firstname', newUserDetails.firstname);\n      formData.append('lastname', newUserDetails.lastname);\n      formData.append('phone', newUserDetails.phone);\n      formData.append('email', newUserDetails.email);\n    }\n\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${user.id}`, formData)\n      .pipe(\n        tap((res) => {\n          if (res != null) {\n            newUserDetails.firstname = JSON.stringify(newUserDetails.firstname);\n            newUserDetails.lastname = JSON.stringify(newUserDetails.lastname);\n            newUserDetails.phone = JSON.stringify(newUserDetails.phone);\n            newUserDetails.email = JSON.stringify(newUserDetails.email);\n          }\n        }),\n        map((res) => res)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recipe.html":{"url":"interfaces/Recipe.html","title":"interface - Recipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            available_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            base_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pictures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipe_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            star\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trashed_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         Ingredient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ingredient[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipe_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipe_type:         RecipeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RecipeType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        star:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trashed_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trashed_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ingredient } from './ingredient.model';\nimport { Picture } from './picture.model';\nimport { RecipeType } from './recipe-type.model';\n\nexport interface Recipe {\n  id?: number;\n  name?: string;\n  star?: boolean;\n  base_price?: number;\n  description?: string;\n  recipe_type?: RecipeType;\n  ingredients?: Ingredient[];\n  //created_by: number;\n  available_at?: Date;\n  trashed_at?: Date;\n  pictures?: Picture[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipeDialogComponent.html":{"url":"components/RecipeDialogComponent.html","title":"component - RecipeDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipeDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recipe-dialog\n            \n\n            \n                styleUrls\n                ./recipe-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recipe-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _recipeType\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                form\n                            \n                            \n                                fr\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientsDetails\n                            \n                            \n                                ingreType\n                            \n                            \n                                mode\n                            \n                            \n                                picture\n                            \n                            \n                                recipe\n                            \n                            \n                                recipesType\n                            \n                            \n                                recipeType\n                            \n                            \n                                    Public\n                                ref\n                            \n                            \n                                star\n                            \n                            \n                                submitted\n                            \n                            \n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkError\n                            \n                            \n                                initForm\n                            \n                            \n                                    Private\n                                makeRecipe\n                            \n                            \n                                    Private\n                                newRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                onClickStar\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                onSelectPicture\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                onUploadPic\n                            \n                            \n                                    Private\n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, fb: FormBuilder, messageService: MessageService, recipeService: RecipeService, loading: LoadingService, ingredientService: IngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkError\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkError(controlName: string, errorName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        newRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    newRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickStar\n                        \n                    \n                \n            \n            \n                \nonClickStar(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPicture\n                        \n                    \n                \n            \n            \n                \nonSelectPicture(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpload\n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadPic\n                        \n                    \n                \n            \n            \n                \nonUploadPic(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientsDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingreType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"UPDATE\" | \"CREATE\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        star\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LoadingService } from './../../../../shared/services/loading/loading.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { MessageService } from 'primeng/api';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { RecipeType } from 'src/app/shared/models/recipe-type.model';\n\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from '../../../../shared/models/picture.model';\n\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { IngredientService } from 'src/app/shared/services/ingredient/ingredient.service';\n\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\n\n@Component({\n  selector: 'app-recipe-dialog',\n  templateUrl: './recipe-dialog.component.html',\n  styleUrls: ['./recipe-dialog.component.scss'],\n})\nexport class RecipeDialogComponent implements OnInit {\n  mode: 'UPDATE' | 'CREATE';\n\n  form: FormGroup;\n  //------------------------------- Recipe Type : dropdown (1)\n  recipesType: Recipe[] = [];\n  recipe: Recipe;\n  recipeType: RecipeType;\n  _recipeType: RecipeType[] = [];\n  //------------------------------- Ingredients details : drop down (2)\n  ingredients: Ingredient[] = [];\n  ingredientsDetails: Ingredient;\n\n  ingreType: IngreType[] = [];\n\n  uploadedFiles: any[] = []; // Upload image\n  picture: Picture = null; // Variable to store picture\n\n  submitted: boolean;\n  star: boolean;\n\n  \n\n  fr: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private fb: FormBuilder,\n    private messageService: MessageService,\n    private recipeService: RecipeService,\n    private loading: LoadingService,\n    private ingredientService: IngredientService\n  ) {\n    this.recipe = config.data.recipe;\n    this.ingredients = config.data.ingredients;\n    this._recipeType = config.data.recipeType;\n    this.ingreType = config.data.ingredientsTypes;\n    this.ingredients.forEach((x) => x.name);\n    this.mode = config.data.mode;\n    this.picture = config.data.pictures;\n  }\n\n  ngOnInit(): void {\n    /* retrieve recipe types */\n    this.recipeService.getRecipeType().subscribe((res) => {\n      this.recipesType = res;\n    });\n    /* retrieve ingredients data */\n    this.ingredientService.getIngredients().subscribe((res) => {\n      this.ingredients = res;\n    });\n    this.initForm();\n  }\n\n  initForm(): void {\n    let laDate: Date;\n    if (!this.recipe?.available_at) {\n      laDate = new Date(new Date().setDate(new Date().getDate() + 10));\n    } else {\n      laDate = new Date(this.recipe?.available_at);\n    }\n    this.form = this.fb.group({\n      title: [this.recipe?.name, [Validators.required]],\n      recipeType: [this.recipe?.recipe_type, [Validators.required]],\n      price: [this.recipe?.base_price, [Validators.required]],\n      ingredientsDetails: [this.recipe?.ingredients, Validators.required],\n      description: [this.recipe?.description],\n      star: this.recipe?.star || false,\n      availableDate: [laDate, [Validators.required]],\n    });\n  }\n\n  onClickStar(event: any): void {\n    this.star = event.checked;\n    this.recipe.star = event.checked;\n    if (event.checked) {\n      this.star = true;\n      this.form.get('star').setValue(true);\n    } else {\n      this.form.get('star').setValue(false);\n    }\n  }\n\n  private makeRecipe(): void {\n    if (this.mode === 'CREATE') {\n      this.recipe.available_at = this.form.value.availableDate;\n    }\n    this.recipe.name = this.form.value.title;\n    this.recipe.recipe_type = this.form.controls['recipeType'].value.code;\n    this.recipe.base_price = this.form.value.price;\n    this.recipe.ingredients = this.form.controls['ingredientsDetails'].value;\n    this.recipe.star = this.form.value.star;\n    this.recipe.description = this.form.value.description;\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.makeRecipe();\n      this.loading.loadingOn();\n\n      if (this.mode === 'UPDATE') {\n        this.updateRecipe();\n      } else {\n        this.newRecipe();\n      }\n    }\n  }\n\n  private newRecipe(): void {\n    this.recipeService\n      .uploadPicture(this.picture)\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.picture = res;\n        this.recipeService.createRecipe(this.recipe).subscribe({\n          next: (_res) => {\n            this.ref.close(_res);\n            this.recipe = _res;\n            this.recipeService\n              .attachPictures(this.picture, this.recipe)\n              .subscribe();\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de création de la recette',\n              detail: error.error,\n            });\n          },\n        });\n      });\n  }\n\n  private updateRecipe(): void {\n    this.recipeService.updateRecipe(this.recipe).subscribe({\n      next: (res) => {\n        this.ref.close(res);\n      },\n      error: (error) => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erreur le moment de modification de de la recette',\n          detail: error.error,\n        });\n      },\n    });\n  }\n\n  public onClose(): void {\n    this.ref.close();\n  }\n\n  onSelectPicture(event) {\n    console.log('Selected picture', event);\n  }\n\n  // On picture Select\n  onChange(event) {\n    this.picture = event.files[0];\n  }\n\n  // OnClick of button Upload\n  onUpload() {\n    this.recipeService.uploadPicture(this.picture).subscribe((res) => {\n      this.picture = res;\n    });\n  }\n\n  onUploadPic(event) {\n    for (let picture of event.files) {\n      this.uploadedFiles.push(picture);\n      console.log('picture : ', picture);\n    }\n  }\n\n  public checkError(controlName: string, errorName: string): boolean {\n    return (\n      this.form.controls[controlName].dirty &&\n      this.form.controls[controlName].hasError(errorName)\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Nom de plat\n      \n    \n    \n      Type de recette\n      \n      \n    \n    \n      Ingredients\n      Champ obligatoire\n      \n      \n    \n    \n      Date disponiblité\n      {{ recipe.available_at }}\n    \n  \n  \n    \n      \n        \n          Prix de base\n          \n          \n        \n        \n          \n        \n        \n          \n          \n        \n      \n    \n    \n      Description\n      \n    \n  \n  \n    \n    Plat star\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./recipe-dialog.component.scss\n                \n                :host ::ng-deep .p-dropdown {\n  width: 14rem;\n}\n\n.DynamicDialog {\n  :host ::ng-deep {\n    .p-dialog .p-dialog-header {\n      background: #d8f6f6 !important;\n    }\n  }\n}\n\n:host ::ng-deep .ui-dialog .ui-dialog-titlebar {\n  background-color: rgba(255, 234, 0, 0.325);\n}\n\n.p-fileupload .p-fileupload-basic .p-fileupload-choose {\n  border-radius: 50% !important;\n  min-width: 0rem !important;\n}\n\n#fileUploader {\n  min-width: 0rem;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 15rem;\n  width: 18rem;\n}\n\n:host ::ng-deep .multiselect-custom {\n  .p-multiselect-label {\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .country-item-value {\n    padding: 0.25rem 0.5rem;\n    border-radius: 3px;\n    display: inline-flex;\n    margin-right: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--primary-color-text);\n\n    img.flag {\n      width: 17px;\n    }\n  }\n\n  .country-placeholder {\n    padding: 0.25rem;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n:host ::ng-deep {\n  @media screen and (max-width: 640px) {\n    .p-multiselect {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nom de plat                    Type de recette                          Ingredients      Champ obligatoire                          Date disponiblité      {{ recipe.available_at }}                                    Prix de base                                                                                                              Description                      Plat star              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipeDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecipeManagementModule.html":{"url":"modules/RecipeManagementModule.html","title":"module - RecipeManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    RecipeManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/recipe-details/recipe-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IngredientComponent\n                        \n                        \n                            IngredientTypeComponent\n                        \n                        \n                            RecipeDialogComponent\n                        \n                        \n                            RecipesComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RecipeDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            RecipeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DataViewModule } from 'primeng/dataview';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { PanelModule } from 'primeng/panel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TabViewModule } from 'primeng/tabview';\nimport { TableModule } from 'primeng/table';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { DividerModule } from 'primeng/divider';\n\nimport { IngredientTypeComponent } from './ingredient-type/ingredient-type.component';\nimport { RecipeDialogComponent } from './recipe/recipe-dialog/recipe-dialog.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { RecipesComponent } from './recipe/recipes/recipes.component';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: TabsComponent }];\n\n@NgModule({\n  declarations: [\n    RecipesComponent,\n    RecipeDialogComponent,\n    IngredientComponent,\n    TabsComponent,\n    IngredientTypeComponent,\n  ],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DataViewModule,\n    DropdownModule,\n    DynamicDialogModule,\n    FileUploadModule,\n    FormsModule,\n    HttpClientModule,\n    InputNumberModule,\n    InputTextModule,\n    InputTextareaModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    RippleModule,\n    RouterModule.forChild(routes),\n    SelectButtonModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    TooltipModule,\n    PanelModule,\n    ProgressSpinnerModule,\n    DialogModule,\n    CheckboxModule,\n    CalendarModule,\n    TabViewModule,\n    MultiSelectModule,\n    KeyFilterModule,\n    DividerModule,\n  ],\n  entryComponents: [RecipeDialogComponent],\n  providers: [\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class RecipeManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/recipe/recipe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachPictures\n                            \n                            \n                                    Public\n                                createRecipe\n                            \n                            \n                                    Public\n                                deleteRecipe\n                            \n                            \n                                    Public\n                                getIngredientsByRecipeId\n                            \n                            \n                                    Public\n                                getRecipe\n                            \n                            \n                                    Public\n                                getRecipes\n                            \n                            \n                                    Public\n                                getRecipeType\n                            \n                            \n                                    Public\n                                updateRecipe\n                            \n                            \n                                    Public\n                                uploadPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/recipe/recipe.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachPictures\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachPictures(picture: Partial, recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        all pictures of recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRecipe(item: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:80\n                \n            \n\n\n            \n                \n                    Create new recipe with igredients\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RecipePostModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIngredientsByRecipeId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientsByRecipeId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all ingredients of a recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipe(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all recipes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRecipeType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecipeType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipes type as dessert\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRecipe(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe items\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update recipe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        uploadPicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPicture(picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/recipe/recipe.service.ts:152\n                \n            \n\n\n            \n                \n                    Store form name as \"picture\" with picture data\nMake http post request over api with formData as req\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport { Picture } from '../../models/picture.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\nimport { RecipeType } from '../../models/recipe-type.model';\nimport { Ingredient } from '../../models/ingredient.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}\n   * @returns one recipes\n   */\n  public getRecipe(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes\n   * @returns all recipes\n   */\n  public getRecipes(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes?includes[]=pictures`)\n      .pipe(\n        map((res) => res['data']),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url GET : localhost:8080/api/recipes/{recipe_id}/ingredients\n   * @param id recipe_id\n   * @returns all ingredients of a recipe\n   */\n  public getIngredientsByRecipeId(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/${id}/ingredients`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   *\n   * @returns recipes type as dessert\n   */\n  public getRecipeType(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/recipes/types`)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes\n   * Create new recipe with igredients\n   * @param item RecipePostModel\n   * @returns new recipe\n   */\n  public createRecipe(item: Recipe): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes`, {\n        ...item,\n        ingredients: item.ingredients.map((ingredient) => ingredient.id),\n      })\n      .pipe(\n        map((res) => res),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/recipes/{recipe_id}\n   * @param update recipe items\n   * @returns update recipe\n   */\n  public updateRecipe(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/recipes/${update.id}`, {\n        ingredients: update.ingredients.map((ingredient) => ingredient.id),\n        name: update.name,\n        description: update.description,\n        base_price: update.base_price,\n        star: update.star,\n        recipe_type: update.recipe_type,\n      })\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE_SUCCESS)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'get all recipes'\n          );\n          return throwError(() => new Error(httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/recipes/{recipe_id}\n   * @param id recipe_id\n   * @returns Delete a recipe\n   */\n  public deleteRecipe(id: number): Observable {\n    return this.http.delete(`${environment.apiBaseUrl}/recipes/${id}`).pipe(\n      map((res) => (res ? res['message'] : Message.DELETE)),\n      catchError((httpErrorResponse) => {\n        this.errorHttpService.newErrorHttp(\n          httpErrorResponse,\n          'get all recipes'\n        );\n        return throwError(()=> (httpErrorResponse));\n      })\n    );\n  }\n\n  /**\n   * @param FormData() Create form data\n   *\n   * Store form name as \"picture\" with picture data\n   * Make http post request over api with formData as req\n   *\n   * @param picture\n   * @returns\n   */\n  public uploadPicture(picture): Observable {\n    const formData = new FormData();\n\n    formData.append('name', picture.name);\n    formData.append('filename', picture);\n\n    return this.http.post(`${environment.apiBaseUrl}/files`, formData);\n  }\n\n  /**\n   * @url POST : localhost:8080/api/recipes/{recipe_id}/pictures\n   * @param id uuid\n   * @returns all pictures of recipe\n   */\n  public attachPictures(\n    picture: Partial,\n    recipe: Recipe\n  ): Observable {\n    const formData = new FormData();\n    formData.append('file_uuid', picture.uuid);\n    return this.http\n      .post(`${environment.apiBaseUrl}/recipes/${recipe.id}/pictures`, formData)\n      .pipe(map((res) => (res ? res['message'] : Message.UPDATE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecipeType.html":{"url":"interfaces/RecipeType.html","title":"interface - RecipeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecipeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/recipe-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RecipeType {\n  id?: number;\n  code?: string;\n  name?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecipesComponent.html":{"url":"components/RecipesComponent.html","title":"component - RecipesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecipesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                                MessageService\n                \n            \n\n\n            \n                selector\n                app-recipes\n            \n\n            \n                styleUrls\n                ./recipes.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./recipes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogService\n                            \n                            \n                                id\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientType\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                pictures\n                            \n                            \n                                recipeDialog\n                            \n                            \n                                recipes\n                            \n                            \n                                recipesType\n                            \n                            \n                                ref\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateNewRecipe\n                            \n                            \n                                deleteRecipe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeValue\n                            \n                            \n                                onSortChange\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeService: RecipeService, confirmationService: ConfirmationService, loading: LoadingService, dialogService: DialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recipeService\n                                                  \n                                                        \n                                                                        RecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateNewRecipe\n                        \n                    \n                \n            \n            \n                \nCreateNewRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:103\n                \n            \n\n\n            \n                \n                    Create new recipe button : DYNAMIC DIALOG\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \ndeleteRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:137\n                \n            \n\n\n            \n                \n                    Suppresssion d'une recette\nLe message d'alerte de suppression\nLe message de confirmation de suppression\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeValue\n                        \n                    \n                \n            \n            \n                \nonChangeValue(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \nupdateRecipe(recipe: Recipe)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                Recipe\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipesType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DynamicDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/recipe-details/recipe/recipes/recipes.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\n\nimport { Recipe } from 'src/app/shared/models/recipe.model';\nimport { Ingredient } from 'src/app/shared/models/ingredient.model';\nimport { Picture } from 'src/app/shared/models/picture.model';\nimport { IngreType } from 'src/app/shared/models/ingredient-type.model';\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { RecipeService } from 'src/app/shared/services/recipe/recipe.service';\nimport { RecipeDialogComponent } from '../recipe-dialog/recipe-dialog.component';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n  providers: [DialogService, MessageService],\n  styles: [\n    `\n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    `,\n  ],\n})\nexport class RecipesComponent implements OnInit {\n  ref: DynamicDialogRef;\n\n  recipes: Recipe[] = [];\n  recipesType: Recipe[] = [];\n  ingredients: Ingredient[] = [];\n  ingredientType: IngreType[] = [];\n  pictures: Picture[] = [];\n\n  sortOrder: number;\n  sortField: string;\n  recipeDialog: boolean;\n  id: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    public dialogService: DialogService,\n    public messageService: MessageService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit() {\n    this.loading.loadingOn();\n\n    this.recipeService\n      .getRecipes()\n      .pipe(finalize((): void => this.loading.loadingOff()))\n      .subscribe((recipes: Recipe[]): void => {\n        this.recipes = recipes;\n      });\n  }\n\n  onSortChange(event) {\n    // https://www.tektutorialshub.com/angular/property-value-does-not-exist-on-type-eventtarget-error-in-angular/\n    let value = (event.target as HTMLTextAreaElement).value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  onChangeValue(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n  /**\n   * Create new recipe button : DYNAMIC DIALOG\n   */\n  CreateNewRecipe(): void {\n    const ref = this.dialogService.open(RecipeDialogComponent, {\n      header: 'Ajouter une nouvelle recette',\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      baseZIndex: 10000,\n      data: {\n        mode: 'CREATE',\n        recipe: [],\n        recipeType: [],\n        ingredientsTypes: [],\n        ingredients: [],\n        pictures: [],\n      },\n    });\n    ref.onClose.subscribe((recipe: Recipe) => {\n      if (recipe) {\n        this.recipes = [...this.recipes];\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien crée.',\n        });\n      }\n    });\n  }\n\n  /**\n   * @params id recipe\n   * Suppresssion d'une recette\n   * Le message d'alerte de suppression\n   * Le message de confirmation de suppression\n   */\n  deleteRecipe(recipe: Recipe): void {\n    this.confirmationService.confirm({\n      message: `Voulez-vous vraiment supprimer la recette \"${recipe.name}\" ?`,\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: () => {\n        this.recipeService.deleteRecipe(recipe.id).subscribe({\n          next: () => {\n            this.recipes = [...this.recipes];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Cette recette sera supprimé définitivement bientôt.',\n              life: 5000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression de la recette.',\n              detail: error.error,\n            });\n          },\n        });\n      },\n    });\n  }\n\n  updateRecipe(recipe: Recipe): void {\n    this.ref = this.dialogService.open(RecipeDialogComponent, {\n      header: `${recipe.name}`,\n      width: '70%',\n      styleClass: 'DynamicDialog',\n      contentStyle: { 'max-height': '550px', overflow: 'auto' },\n      data: {\n        mode: 'UPDATE',\n        recipeType: this.recipesType,\n        ingredientsTypes: this.ingredientType,\n        ingredients: this.ingredients,\n        pictures: this.pictures,\n        recipe,\n      },\n    });\n    this.ref.onClose.subscribe((_recipe: Recipe) => {\n      if (_recipe) {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Succès',\n          detail: 'La recette est bien modifié.',\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n            \n            \n              \n                \n                \n                \n              \n              {{ recipe.name }}\n              € {{ recipe.base_price }}\n              \n                \n                {{ recipe.recipe_type.code }}\n              \n              \n                \n                   {{ value.name + \", \" }} \n                   {{ value.name }} \n                \n              \n              \n                \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recipes.component.scss\n                \n                :host ::ng-deep {\n  .p-dropdown {\n    width: 14rem;\n    font-weight: normal;\n  }\n\n  .product-name {\n    font-size: 1rem;\n    font-weight: 700;\n    margin-bottom: 0.8rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis ellipsis !important;\n    max-width: 8rem;\n  }\n\n  .product-description {\n    margin: 0 0 1rem 0;\n    font-size: medium;\n  }\n\n  .product-category-icon {\n    vertical-align: middle;\n  }\n\n  .product-category {\n    font-weight: 400;\n    font-size: small;\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .product-grid-item {\n    margin: 0.5em;\n    border: 1px solid #dee2e6;\n    max-width: 280px !important;\n    max-height: 250px !important;\n\n    .product-grid-item-top,\n    .product-grid-item-bottom {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .product-grid-item-footer {\n      justify-content: end;\n    }\n\n    img {\n      width: 100px;\n      height: 150px;\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n      margin: 1rem 0;\n    }\n\n    .product-grid-item-content {\n      text-align: center;\n    }\n\n    .product-price {\n      font-size: small;\n      font-weight: 300;\n    }\n  }\n}\n\n.inline-block {\n  font-size: 0.9rem;\n}\n\n.card {\n  box-shadow: 0 2px 1px -1px rgba(198, 221, 229, 0.096),\n    0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 576px) {\n  :host ::ng-deep .product-list-item {\n    flex-direction: column;\n    align-items: center;\n\n    img {\n      width: 75%;\n      margin: 1rem 0;\n    }\n\n    .product-list-detail {\n      text-align: left;\n    }\n\n    .product-price {\n      align-self: left;\n    }\n\n    .product-list-action {\n      margin-top: 2rem;\n      display: flex;\n      flex-direction: column;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-button {\n        margin: 0 0.5rem 0 0;\n        min-width: 10rem;\n      }\n      p {\n        margin: 0;\n      }\n      .confirmation-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      :host ::ng-deep .p-dialog .p-button {\n        min-width: 6rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                              {{ recipe.name }}              € {{ recipe.base_price }}                                              {{ recipe.recipe_type.code }}                                                               {{ value.name + \", \" }}                    {{ value.name }}                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecipesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Saturday.html":{"url":"interfaces/Saturday.html","title":"interface - Saturday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Saturday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schedule.html":{"url":"interfaces/Schedule.html","title":"interface - Schedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            friday\n                                        \n                                \n                                \n                                        \n                                            monday\n                                        \n                                \n                                \n                                        \n                                            saturday\n                                        \n                                \n                                \n                                        \n                                            sunday\n                                        \n                                \n                                \n                                        \n                                            thursday\n                                        \n                                \n                                \n                                        \n                                            tuesday\n                                        \n                                \n                                \n                                        \n                                            wednesday\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        friday:         Friday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Friday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monday:         Monday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Monday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saturday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saturday:         Saturday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Saturday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sunday:         Sunday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sunday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thursday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thursday:         Thursday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thursday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuesday:         Tuesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tuesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wednesday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wednesday:         Wednesday\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wednesday\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/schedule/schedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createSchedule\n                            \n                            \n                                    Public\n                                getSchedule\n                            \n                            \n                                    Public\n                                updateSchedule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHttpService: ErrorHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/schedule/schedule.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHttpService\n                                                  \n                                                        \n                                                                        ErrorHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchedule(create: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:40\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchedule(franchisee: Franchisee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:27\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    franchisee\n                                    \n                                                Franchisee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSchedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchedule(update: Partial, schedule: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/schedule/schedule.service.ts:66\n                \n            \n\n\n            \n                \n                    localhost:8080/api/contractors/{contractor_id}/times\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee schedule\n\n                                    \n                                \n                                \n                                    schedule\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update schedule\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\n\nimport { Schedule } from '../../models/schedule.model';\nimport { Franchisee } from '../../models/franchisee.model';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../../constants/message.const';\nimport { ErrorHttpService } from '../error-http/error-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScheduleService {\n  constructor(\n    private http: HttpClient,\n    private errorHttpService: ErrorHttpService\n  ) {\n    //NOSONAR\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param franchisee\n   * @returns\n   */\n  public getSchedule(franchisee: Franchisee): Observable {\n    return this.http\n      .get(\n        `${environment.apiBaseUrl}/contractors/${franchisee.id}/times`\n      )\n      .pipe(map((res: any) => res));\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param create franchisee schedule\n   * @returns update schedule\n   */\n  public createSchedule(\n    create: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .post(\n        `${environment.apiBaseUrl}/contractors/${create.id}/times`,\n        schedule\n      )\n      .pipe(\n        map((res: any) => (res ? res['message'] : Message.CREATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'create schedule'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n\n  /**\n   * localhost:8080/api/contractors/{contractor_id}/times\n   * @param update franchisee schedule\n   * @returns update schedule\n   */\n  public updateSchedule(\n    update: Partial,\n    schedule: Partial\n  ): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/contractors/${update.id}/times`, schedule)\n      .pipe(\n        map((res) => (res ? res['message'] : Message.UPDATE)),\n        catchError((httpErrorResponse) => {\n          this.errorHttpService.newErrorHttp(\n            httpErrorResponse,\n            'update schedule'\n          );\n          return throwError(()=> (httpErrorResponse));\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerErrorComponent.html":{"url":"components/ServerErrorComponent.html","title":"component - ServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/server-error/server-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-server-error\n            \n\n            \n                styleUrls\n                ./server-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/server-error/server-error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/server-error/server-error.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.scss'],\n})\nexport class ServerErrorComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n    \n  \n  \n  \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n      \n      \n      \n    \n    \n      \n        \n        \n        \n        \n      \n      \n        \n        \n      \n    \n    \n      \n      \n      \n      \n        \n        \n      \n      \n      \n    \n    \n      \n      \n    \n    \n    \n      \n      \n      \n      \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n      \n    \n    \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./server-error.component.scss\n                \n                @keyframes blink-fancy {\n  0%,\n  25%,\n  28.33%,\n  45%,\n  48.33%,\n  51.67%,\n  93.33%,\n  96.67% {\n    transform: scaleY(1);\n  }\n  26.67%,\n  46.67%,\n  50%,\n  95% {\n    transform: scaleY(0.1);\n  }\n}\n\n@keyframes flame-flicker-1 {\n  25% {\n    transform: scale3d(1, 1.1, 1);\n  }\n  40% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  50% {\n    transform: scale3d(1, 1.05, 1);\n  }\n  65% {\n    transform: scale3d(1, 0.75, 1);\n  }\n  75% {\n    transform: scale3d(1, 1, 1);\n  }\n  90% {\n    transform: scale3d(1, 1.15, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-flicker-2 {\n  15% {\n    transform: scale3d(0.9, 0.8, 1);\n  }\n  33% {\n    transform: scale3d(1.2, 0.5, 1);\n  }\n  47% {\n    transform: scale3d(0.7, 0.7, 1);\n  }\n  63% {\n    transform: scale3d(0.72, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.65, 1, 1);\n  }\n  77% {\n    transform: scale3d(1, 0.8, 1);\n  }\n  85% {\n    transform: scale3d(0.7, 0.95, 1);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n@keyframes flame-ember {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(10px, -25px) rotate(-45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(-10px, -75px) rotate(45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-alt {\n  0% {\n    transform: translate(0, 0) rotate(0deg);\n  }\n  25% {\n    transform: translate(-15px, -25px) rotate(45deg);\n  }\n  50% {\n    transform: translate(0, -50px) rotate(0);\n  }\n  75% {\n    transform: translate(10px, -75px) rotate(-45deg);\n  }\n  100% {\n    transform: translate(0, -100px) rotate(0);\n  }\n}\n\n@keyframes flame-ember-opacity {\n  45% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes scale-pulse {\n  0% {\n    transform: scale(0.8, 0.8);\n  }\n  50% {\n    transform: scale(1.1, 1.1);\n  }\n  100% {\n    transform: scale(0.8, 0.8);\n  }\n}\n\n@keyframes opacity-pulse {\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0.2;\n  }\n}\n\n.flame-front {\n  transform-origin: center bottom;\n  animation: flame-flicker-1 1s ease-in-out infinite;\n}\n\n.flame-inner {\n  transform-origin: center bottom;\n  animation: flame-flicker-2 0.8s ease-in-out infinite;\n}\n\n#flame-inner-right {\n  animation-duration: 1s;\n  animation-delay: -1s;\n  transform-origin: center center;\n  -moz-transform-origin: 476.268px 97px;\n}\n\n#flame-back {\n  animation-direction: reverse;\n  animation-delay: 0.5s;\n  animation-duration: 1.6s;\n}\n\n#flame-front-right {\n  animation-duration: 1.3s;\n  animation-delay: 0.2s;\n}\n\n.emitted-ember {\n  transform-origin: center center;\n  -moz-transform-origin: 485.125px 51.33px;\n  animation: flame-ember 2s linear infinite,\n    flame-ember-opacity 2s ease-out infinite;\n}\n\n.emitted-ember-alt {\n  animation: flame-ember-alt 1.7s linear infinite,\n    flame-ember-opacity 1.7s ease-out infinite;\n}\n\n.smoke {\n  transform-origin: center center;\n  animation: scale-pulse 0.7s ease-in-out infinite;\n}\n\n#smoke-float-1 {\n  animation-delay: 0.4s;\n}\n#smoke-float-2 {\n  animation-delay: 0.2s;\n}\n#smoke-float-3 {\n  animation-delay: 0s;\n}\n#smoke-float-4 {\n  animation-delay: -0.2s;\n}\n#smoke-float-5 {\n  animation-delay: -0.4s;\n}\n\n.glow {\n  transform-origin: center center;\n  -moz-transform-origin: 378.729px 109.75px;\n  animation: opacity-pulse 4s ease-in-out infinite 0.1s,\n    scale-pulse 4s ease-in-out alternate infinite;\n}\n\n#glow-outer-1 {\n  animation-delay: -0.1s;\n}\n#glow-inner {\n  animation-delay: -0.3s;\n}\n\n#eyes-left,\n#eyes-right {\n  animation: blink-fancy 6s linear infinite;\n}\n\n.bill-highlight {\n  animation: opacity-pulse 4s ease-in-out infinite;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        varn    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                hideHomeBtn\n                            \n                            \n                                    Optional\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/sidebar/sidebar.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideHomeBtn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport { selectUserDetails } from 'src/app/shared/store/state/user/user.selector';\nimport { EndPoints } from 'src/app/shared/constants/endpoints.const';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  display!: boolean;\n  hideHomeBtn = false;\n  user$?: Observable;\n\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.sidebarService.display$.subscribe((res) => (this.display = res));\n\n    if (this.user$ != new Observable()) {\n      this.user$ = this.store.pipe(select(selectUserDetails));\n    }\n  }\n\n  onClose(): void {\n    this.sidebarService.open(false);\n  }\n\n  logOut(): void {\n    window.location.href = EndPoints.LOGOUT;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                @import \"src/styles.scss\";\n\n:host ::ng-deep button {\n  margin-right: 0.25em;\n}\n.p-button {\n  line-height: 2;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/sidebar/sidebar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display$\n                            \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(display: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/sidebar/sidebar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/sidebar/sidebar.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../user/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarService {\n  private subject = new BehaviorSubject(false);\n\n  display$: Observable = this.subject.asObservable();\n\n  readonly url: any;\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    this.url = this.authService.getUser;\n  }\n\n  public open(display: boolean): void {\n    this.subject.next(display);\n  }\n\n  getUsers() {\n    return this.http.get(`${environment.apiBaseUrl}/users`).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sunday.html":{"url":"interfaces/Sunday.html","title":"interface - Sunday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sunday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/recipe-details/tabs/tabs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/recipe-details/tabs/tabs.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent implements OnInit {\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.component.scss\n                \n                .d.p-tabview-nav-content .p-tabview .p-tabview .p-tabview-nav .p-tabview-nav-container .p-tabview-nav-content {\n  background: rgb(227, 227, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thursday.html":{"url":"interfaces/Thursday.html","title":"interface - Thursday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thursday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/title/title.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-title\n            \n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/components/title/title.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/title/title.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title: string;\n  @Input() description: string;\n\n  constructor() {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    //NOSONAR\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  {{ description }}\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                ._title {\n  // background: rgba(213, 234, 254, 0.676);\n  background: linear-gradient(135deg, #dbe6fdd7 50%, #ffffffc7 90%) no-repeat center center fixed;\n  border-radius: 4px !important;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',\n      sans-serif;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  {{ description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/components/topbar/topbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titre1\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadAppUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadAppUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAppUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSidebar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/components/topbar/topbar.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        titre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/components/topbar/topbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { SidebarService } from 'src/app/shared/services/sidebar/sidebar.service';\nimport { AppState } from 'src/app/shared/store/store.reducer';\nimport {\n  selectUserDetails,\n  UserActions,\n} from 'src/app/shared/store/state/user';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss'],\n})\nexport class TopbarComponent implements OnInit {\n  user$: Observable;\n  user?: User;\n  titre1!: string;\n  constructor(\n    private store: Store,\n    private sidebarService: SidebarService\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loadAppUser();\n    this.user$ = this.store.pipe(select(selectUserDetails));\n  }\n\n  private loadAppUser(): void {\n    this.store.pipe(select(selectUserDetails)).subscribe({\n      next: (user) => {\n        if (user == null) {\n          this.store.dispatch(UserActions.loadUser());\n        } else {\n          this.user = user;\n        }\n      },\n      error: (error: any): void => {\n        console.log('topbar -> store -> loadUser -> error : ', error);\n      },\n    });\n  }\n\n  public openSidebar(): void {\n    this.sidebarService.open(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                // SONAR RULE : CSS should be written in lower case\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tuesday.html":{"url":"interfaces/Tuesday.html","title":"interface - Tuesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tuesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autorisations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autorisations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autorisations:         Autorisation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Autorisation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type role = { code: string };\n\nexport interface User {\n  id?: number;\n  firstname?: string;\n  lastname?: string;\n  phone?: string;\n  email?: string;\n  //code?: string;\n  roles?: role[];\n  autorisations?: Autorisation;\n}\nexport interface Autorisation {\n  isAdmin: boolean;\n  isFranchisee: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadUser$\n                            \n                            \n                                updateUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/state/user/user.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/store/state/user/user.effects.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { concatMap, map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/shared/services/user/auth/auth.service';\nimport { UserActions } from 'src/app/shared/store/state/user/index';\nimport { ProfileService } from 'src/app/shared/services/profile/profile.service';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private profileService: ProfileService\n  ) {}\n\n  loadUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      concatMap(() => this.authService.getUser()),\n      map((userDetails) => UserActions.userLoaded({ userDetails }))\n    )\n  );\n\n  updateUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.updateUser),\n      concatMap((action) => this.profileService.updateUser(action.userDetails)),\n      map((userDetails) => UserActions.userUpdated({ userDetails }))\n    )\n  );\n\n  // userLoaded$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.userLoaded),\n  //       tap((action) =>\n  //         localStorage.setItem(\n  //           'userDetails',\n  //           JSON.stringify(action.userDetails)\n  //         )\n  //       )\n  //     ),\n  //   { dispatch: false }\n  // );\n\n  // logOutAction$ = createEffect(\n  //   () =>\n  //     this.actions$.pipe(\n  //       ofType(UserActions.logOutAction.logOutFlowInitiated.type),\n  //       tap(() => this.authService.logOut())\n  //     ),\n  //   { dispatch: false }\n  // );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewUser\n                            \n                            \n                                getNewUserRole\n                            \n                            \n                                    Private\n                                initAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUser\n                        \n                    \n                \n            \n            \n                \ngetNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewUserRole\n                        \n                    \n                \n            \n            \n                \ngetNewUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuth(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, map } from 'rxjs';\nimport { Roles } from 'src/app/shared/constants/role.const';\nimport { User } from 'src/app/shared/models/user.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  getNewUser(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/current`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  getNewUserRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(map((user) => this.initAuth(user)));\n  }\n  private initAuth(user: User): User {\n    const _user = {\n      ...user,\n      autorisations: {\n        isAdmin: false,\n        isFranchisee: false,\n      },\n    };\n    _user.roles.forEach((e) => {\n      if (e['code'] === Roles.ADMIN) {\n        _user.autorisations.isAdmin = true;\n      }\n      if (e['code'] === Roles.FRANCHISEE) {\n        _user.autorisations.isFranchisee = true;\n      }\n    });\n    return _user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/state/user/user.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            userDetails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userDetails:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { User } from 'src/app/shared/models/user.model';\nimport * as UserActions from './user.actions';\n\n/**\n * @Reducer handle transitions from one state to the next state\n * by determining which actions to handle based on the action's type.\n */\n\n/**\n * Defining the interface for the user state object and its initial state\n */\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  userDetails?: User;\n}\n\nexport const initialState: UserState = {\n  userDetails: undefined,\n};\n\nexport const userReducer = createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/principal/users/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n            \n                styles\n                \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                idFranchisee\n                            \n                            \n                                isCreate\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                submitted\n                            \n                            \n                                user\n                            \n                            \n                                userDialog\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                getFormValues\n                            \n                            \n                                hideDialog\n                            \n                            \n                                initForm\n                            \n                            \n                                newUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, messageService: MessageService, confirmationService: ConfirmationService, loading: LoadingService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/principal/users/users/users.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFormValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUser\n                        \n                    \n                \n            \n            \n                \nnewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/principal/users/users/users.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/principal/users/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { finalize } from 'rxjs/operators';\n\nimport { User } from 'src/app/shared/models/user.model';\n\nimport { LoadingService } from 'src/app/shared/services/loading/loading.service';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [MessageService, ConfirmationService],\n})\nexport class UsersComponent implements OnInit {\n  users: User[] = [];\n  user: User;\n  selectedUsers: User[];\n\n  form: FormGroup;\n\n  idFranchisee: number;\n  submitted: boolean;\n  userDialog: boolean;\n\n  first: number = 0;\n\n  id: number;\n  isCreate: boolean;\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private loading: LoadingService,\n    private fb: FormBuilder\n  ) {\n    //NOSONAR\n  }\n\n  ngOnInit(): void {\n    this.loading.loadingOn();\n\n    this.usersService\n      .getUsers()\n      .pipe(finalize(() => this.loading.loadingOff()))\n      .subscribe((res) => {\n        this.users = res;\n      });\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.form = this.fb.group({\n      firstname: [this.user?.firstname, [Validators.required]],\n      lastname: [this.user?.lastname, [Validators.required]],\n      phone: [\n        this.user?.phone,\n        [Validators.required, Validators.pattern('/^[0][0-9]{9}$')],\n      ],\n      email: [this.user?.email, [Validators.required, Validators.email]],\n    });\n  }\n\n  private getFormValues(): void {\n    const user: User = {};\n\n    if (this.isCreate) {\n      user.firstname = this.form.get('firstname').value;\n      user.lastname = this.form.get('lastname').value;\n      user.phone = this.form.get('phone').value;\n      user.email = this.form.get('email').value;\n    } else {\n      user.id = this.user.id;\n      user.firstname = this.form.get('firstname').value;\n      user.lastname = this.form.get('lastname').value;\n      user.phone = this.form.get('phone').value;\n      user.email = this.form.get('email').value;\n    }\n    this.user = user;\n  }\n\n  newUser(): void {\n    this.user = {};\n    this.isCreate = true;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  editUser(user: User): void {\n    this.user = { ...user };\n    this.isCreate = false;\n    this.initForm();\n    this.submitted = false;\n    this.userDialog = true;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.getFormValues();\n\n    if (this.user.id) {\n      this.usersService.updateUser(this.user).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: \"Mise à jour d'utilisateur.\",\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary:\n              \"Erreur le moment de modification des informations d'utilisateur!\",\n            detail: error.error,\n          });\n          console.log(error);\n        },\n      });\n    } else {\n      this.usersService.newUser(this.user).subscribe({\n        next: () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Succès',\n            detail: 'Création de nouvel utilisateur.',\n            life: 3000,\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreur le moment de création!',\n            detail: error.error.Message,\n          });\n        },\n      });\n    }\n    this.users = [...this.users];\n    this.userDialog = false;\n    this.user = {};\n  }\n\n  onDelete(user: User): void {\n    this.confirmationService.confirm({\n      message:\n        'Etes-vous sûre de vouloir supprimer \"' +\n        user.firstname +\n        ' ' +\n        user.lastname +\n        '\" ?',\n      header: 'Confirm',\n      icon: 'pi pi-exclamation-triangle',\n      acceptButtonStyleClass: 'accept',\n      accept: (): void => {\n        this.usersService.deleteUser(user.id).subscribe({\n          next: () => {\n            this.user = {};\n            this.users = [...this.users];\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Succès',\n              detail: 'Utilisateur est supprimé.',\n              life: 3000,\n            });\n          },\n          error: (error) => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Erreur le moment de suppression!',\n              detail: error.error,\n            });\n            console.log(\n              \"erreur le moment de création de l'ingrédient ->\",\n              error\n            );\n          },\n        });\n      },\n    });\n  }\n\n  hideDialog() {\n    this.userDialog = false;\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n        \n          Prénom \n        \n        \n          Nom \n        \n        \n          Email \n        \n        \n          Téléphone \n        \n        \n      \n    \n    \n      \n        {{ user.firstname }}\n        {{ user.lastname }}\n        {{ user.email }}\n        {{ user.phone }}\n        \n          \n          \n        \n      \n    \n    \n      \n        En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.\n      \n    \n  \n\n\n\n\n  \n    \n      Prénom\n      \n      Firstname is required.\n    \n    \n      Nom\n      \n      Lastname is required.\n    \n    \n      Email\n      \n      Email is required.\n    \n    \n      Téléphone\n      \n      Phone is required.\n    \n  \n  \n    \n    \n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                :host ::ng-deep {\n  .p-paginator {\n    .p-paginator-current {\n      margin-left: auto;\n    }\n  }\n\n  .p-progressbar {\n    height: 0.5rem;\n    background-color: #d8dadc;\n\n    .p-progressbar-value {\n      background-color: #607d8b;\n    }\n  }\n\n  .table-header {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .p-calendar .p-datepicker {\n    min-width: 25rem;\n\n    td {\n      font-weight: 400;\n    }\n  }\n\n  .p-datatable.p-datatable-customers {\n    .p-datatable-header {\n      padding: 1rem;\n      text-align: left;\n      font-size: 1.5rem;\n    }\n\n    .p-paginator {\n      padding: 1rem;\n    }\n\n    .p-datatable-thead > tr > th {\n      text-align: left;\n    }\n\n    .p-datatable-tbody > tr > td {\n      cursor: auto;\n    }\n\n    .p-dropdown-label:not(.p-placeholder) {\n      text-transform: uppercase;\n    }\n  }\n\n  /* Responsive */\n  .p-datatable-customers .p-datatable-tbody > tr > td .p-column-title {\n    display: none;\n  }\n}\n\n::placeholder {\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\n  color: rgb(193, 213, 230);\n  opacity: 1; /* Firefox */\n}\n\n:-ms-input-placeholder {\n  /* Internet Explorer 10-11 */\n  color: rgb(193, 213, 230);\n}\n\n::-ms-input-placeholder {\n  /* Microsoft Edge */\n  color: rgb(193, 213, 230);\n}\n\n@media screen and (max-width: 960px) {\n  :host ::ng-deep {\n    .p-datatable {\n      &.p-datatable-customers {\n        .p-datatable-thead > tr > th,\n        .p-datatable-tfoot > tr > td {\n          display: none !important;\n        }\n\n        .p-datatable-tbody > tr {\n          border-bottom: 1px solid var(--layer-2);\n\n          > td {\n            text-align: left;\n            display: block;\n            border: 0 none !important;\n            width: 100% !important;\n            float: left;\n            clear: left;\n\n            .p-column-title {\n              padding: 0.4rem;\n              min-width: 30%;\n              display: inline-block;\n              margin: -0.4rem 1rem -0.4rem -0.4rem;\n              font-weight: bold;\n            }\n\n            .p-progressbar {\n              margin-top: 0.5rem;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n            \n      :host ::ng-deep .p-dialog {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Prénom                           Nom                           Email                           Téléphone                                             {{ user.firstname }}        {{ user.lastname }}        {{ user.email }}        {{ user.phone }}                                                                En total il y a \"{{ users ? users.length : 0 }}\" utilidateurs.                        Prénom            Firstname is required.              Nom            Lastname is required.              Email            Email is required.              Téléphone            Phone is required.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FranchiseeComponent', 'selector': 'app-franchisee'},{'name': 'FranchiseeDialogComponent', 'selector': 'app-franchisee-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IngredientComponent', 'selector': 'app-ingredient'},{'name': 'IngredientTypeComponent', 'selector': 'app-ingredient-type'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrincipalComponent', 'selector': 'app-principal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecipeDialogComponent', 'selector': 'app-recipe-dialog'},{'name': 'RecipesComponent', 'selector': 'app-recipes'},{'name': 'ServerErrorComponent', 'selector': 'app-server-error'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TabsComponent', 'selector': 'app-tabs'},{'name': 'TitleComponent', 'selector': 'app-title'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersComponent\n\nUsersComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/principal/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiTokenInterceptorService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Angular\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// PrimeNG\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { SliderModule } from 'primeng/slider';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\n// Component\nimport { UsersComponent } from './users/users.component';\n// Service\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport { ComponentsModule } from 'src/app/layouts/components/components.module';\nimport { ApiTokenInterceptorService } from 'src/app/shared/interceptors/api-token-interceptor.service';\n\nconst routes: Routes = [{ path: '', component: UsersComponent }];\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    ComponentsModule,\n    ConfirmDialogModule,\n    DialogModule,\n    FormsModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputTextModule,\n    SliderModule,\n    TableModule,\n    ToastModule,\n    ToolbarModule,\n    ProgressBarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    UsersService,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserRole\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                            \n                                    Public\n                                newUser\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee_id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Delete a franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        one franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRole(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        franchisee role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users (franch)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    newUser(item: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:58\n                \n            \n\n\n            \n                \n                    Create new franchisee user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        new franchisee\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(update: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        franchisee info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        update franchisee\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap, Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/shared/models/user.model';\nimport { Message } from '../../constants/message.const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  constructor(private http: HttpClient) {\n    //NOSONAR\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}\n   * @returns one franchisee\n   */\n  public getUser(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res: User): User => res));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users\n   * @returns all users (franch)\n   */\n  public getUsers(): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users`)\n      .pipe(map((res: User[]): any => res['data']));\n  }\n\n  /**\n   * @url GET : localhost:8080/api/users/{user_id}/roles\n   * @returns franchisee role\n   */\n  public getUserRole(id: number): Observable {\n    return this.http\n      .get(`${environment.apiBaseUrl}/users/${id}/roles`)\n      .pipe(\n        tap((obj: User): void =>\n          console.log('service -> get user role: ', obj)\n        ),\n        map((res: User): User => res)\n      );\n  }\n\n  /**\n   * @url POST : localhost:8080/api/users\n   * Create new franchisee user\n   * @param item userModel\n   * @returns new franchisee\n   */\n  public newUser(item: User): Observable {\n    return this.http\n      .post(`${environment.apiBaseUrl}/users`, item)\n      .pipe(map((res) => res));\n  }\n\n  /**\n   * @url PUT : localhost:8080/api/users/{user_id}\n   * @param update franchisee info\n   * @returns update franchisee\n   */\n  public updateUser(update: Partial): Observable {\n    return this.http\n      .put(`${environment.apiBaseUrl}/users/${update.id}`, update)\n      .pipe(\n        map((res: Object): any =>\n          res ? res['message'] : Message.UPDATE_SUCCESS\n        )\n      );\n  }\n\n  /**\n   * @url DELETE : localhost:8080/api/users/{user_id}\n   * @param id franchisee_id\n   * @returns Delete a franchisee\n   */\n  public deleteUser(id: number): Observable {\n    return this.http\n      .delete(`${environment.apiBaseUrl}/users/${id}`)\n      .pipe(map((res: Object): any => (res ? res['message'] : Message.DELETE)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wednesday.html":{"url":"interfaces/Wednesday.html","title":"interface - Wednesday","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wednesday\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/schedule.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            lunch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            night\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lunch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lunch:         Lunch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lunch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        night:         Diner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Diner\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schedule {\n\tmonday: Monday;\n\ttuesday: Tuesday;\n\twednesday: Wednesday;\n\tthursday: Thursday;\n\tfriday: Friday;\n\tsaturday: Saturday;\n\tsunday: Sunday;\n}\n\n// Days\nexport interface Monday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Tuesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Wednesday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Thursday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Friday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Saturday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\nexport interface Sunday {\n\tlunch?: Lunch;\n\tnight?: Diner;\n}\n\n// Hours\nexport interface Lunch {\n\topened_at?: string;\n\tclosed_at?: string;\n}\nexport interface Diner {\n\topened_at?: string;\n\tclosed_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layouts/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/server-error/server-error.component.ts\n            \n            component\n            ServerErrorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layouts/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee-dialog/franchisee-dialog.component.ts\n            \n            component\n            FranchiseeDialogComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/principal/franchisee/franchisee/franchisee.component.ts\n            \n            component\n            FranchiseeComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/principal/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/principal-routing.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/principal/principal.component.ts\n            \n            component\n            PrincipalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/profile/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient-type/ingredient-type.component.ts\n            \n            component\n            IngredientTypeComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/ingredient/ingredient.component.ts\n            \n            component\n            IngredientComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipe-dialog/recipe-dialog.component.ts\n            \n            component\n            RecipeDialogComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/recipe/recipes/recipes.component.ts\n            \n            component\n            RecipesComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/principal/recipe-details/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/principal/users/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-authenticated/is-authenticated.guard.ts\n            \n            guard\n            IsAuthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/guards/is-unauthenticated/is-unauthenticated.guard.ts\n            \n            guard\n            IsUnauthenticatedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/api-token-interceptor.service.ts\n            \n            interceptor\n            ApiTokenInterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/http-error/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/mock/address.mock.ts\n            \n            variable\n            mockAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/fracnhisee-recipe.mock.ts\n            \n            variable\n            mockFranchiseeRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchisee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/franchisee.mock.ts\n            \n            variable\n            mockFranchiseeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredient-type.mock.ts\n            \n            variable\n            mockTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngre2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/ingredients.mock.ts\n            \n            variable\n            mockIngredientArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            mockpictureArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/picture.mock.ts\n            \n            variable\n            picture3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            mockRecipeTypeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe-type.mock.ts\n            \n            variable\n            recipeType3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipe2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/recipe.mock.ts\n            \n            variable\n            mockRecipeArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/schedule.mock.ts\n            \n            variable\n            mockSchedule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUser3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserAuth2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/mock/users.mock.ts\n            \n            variable\n            mockUserWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/access-token.model.ts\n            \n            interface\n            AccessTokenModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/address.model.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee-recipe.model.ts\n            \n            interface\n            FranchiseeRecipe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/franchisee.model.ts\n            \n            interface\n            Franchisee\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient-type.model.ts\n            \n            interface\n            IngreType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/ingredient.model.ts\n            \n            interface\n            Ingredient\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/picture.model.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe-type.model.ts\n            \n            interface\n            RecipeType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/recipe.model.ts\n            \n            interface\n            Recipe\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Diner\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Friday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Lunch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Monday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Saturday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Schedule\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Sunday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Thursday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Tuesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/schedule.model.ts\n            \n            interface\n            Wednesday\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            Autorisation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            injectable\n            ErrorHttpService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/error-http/error-http.service.ts\n            \n            interface\n            ErrorDataHttp\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/franchisee/franchisee.service.ts\n            \n            injectable\n            FranchiseeService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient-type/ingredient-type.service.ts\n            \n            injectable\n            IngredientTypeService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/ingredient/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/recipe/recipe.service.ts\n            \n            injectable\n            RecipeService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/sidebar/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                31 %\n                (6/19)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            loadUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            updateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.actions.ts\n            \n            variable\n            userUpdated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            function\n            canAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            adminAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            franchiseeAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectIsLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectProfileUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/state/user/user.selector.ts\n            \n            variable\n            selectUserState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/store/store.reducer.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.stage.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.1\n        \n            @angular/cdk : ^13.3.2\n        \n            @angular/common : ~13.3.1\n        \n            @angular/compiler : ~13.3.1\n        \n            @angular/core : ~13.3.1\n        \n            @angular/forms : ~13.3.1\n        \n            @angular/platform-browser : ~13.3.1\n        \n            @angular/platform-browser-dynamic : ~13.3.1\n        \n            @angular/router : ~13.3.1\n        \n            @ngrx/effects : ^13.0.2\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.0.2\n        \n            @ngrx/store : ^13.0.2\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            csprng : ^0.1.2\n        \n            express : ^4.17.3\n        \n            karma-coverage-istanbul-reporter : ^3.0.3\n        \n            ngx-cookie-service : ^13.1.2\n        \n            node-localstorage : ^2.2.1\n        \n            oauth-pkce : ^0.0.6\n        \n            path : ^0.12.7\n        \n            primeflex : ^3.1.3\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.3.2\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            version-check : ^1.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _HttpRequest   (src/.../httpRequest.const.ts)\n                        \n                        \n                            EndPoints   (src/.../endpoints.const.ts)\n                        \n                        \n                            Message   (src/.../message.const.ts)\n                        \n                        \n                            Roles   (src/.../role.const.ts)\n                        \n                        \n                            StorageKeys   (src/.../storageKeys.const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/constants/httpRequest.const.ts\n    \n        \n            \n                \n                    \n                        \n                        _HttpRequest\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/shared/constants/endpoints.const.ts\n    \n        \n            \n                \n                    \n                        \n                        EndPoints\n                    \n                \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : https://www.google.fr\n                            \n                        \n            \n        \n\n    src/app/shared/constants/message.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Message\n                    \n                \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : 201 Created\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 204 No Content\n                            \n                        \n                        \n                            \n                                 UPDATE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : Les modifications ont bien été prises en compte.\n                            \n                        \n            \n        \n\n    src/app/shared/constants/role.const.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : goodfood\n                            \n                        \n                        \n                            \n                                 FRANCHISEE\n                            \n                        \n                        \n                            \n                                Value : contractor\n                            \n                        \n            \n        \n\n    src/app/shared/constants/storageKeys.const.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKeys\n                    \n                \n                        \n                            \n                                 STATE\n                            \n                        \n                        \n                            \n                                Value : AUTH_STATE\n                            \n                        \n                        \n                            \n                                 CODE_VERIFY\n                            \n                        \n                        \n                            \n                                Value : AUTH_CODE_VERIFIER\n                            \n                        \n                        \n                            \n                                 USER_TOKEN\n                            \n                        \n                        \n                            \n                                Value : AUTH_USER_TOKEN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : CURRENT_USER\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canAccess   (src/.../user.selector.ts)\n                        \n                        \n                            logger   (src/.../store.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canAccess\n                        \n                    \n                \n            \n            \n                \ncanAccess(user: UserState, roles)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGoodFood - web\nAngular\nThis project was generated with Angular CLI version 13.2.6.\nDevelopment server\nRun ng serve (or ng serve --open or ng serve -o or npm start) for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component  to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nExit\nRun ctrl c to exit a dev server.\nVersions\n\nNodejs : 16.13.02\nAngular : 13.2.6\nPrimeNG : 13.3.2\n\nInstallation\nPrimeNG\nprimeicons\nnpm install primeng --save\nnpm install primeicons --savein angular.json > Styles we will add also\nnode_modules/primeicons/primeicons.css\nnode_modules/primeng/resources/themes/lara-light-indigo/theme.css\nnode_modules/primeng/resources/primeng.min.css\nThere is more than 33 themes and we can choose between them.\n\nGetting for first time\ngit clone GOODFOOD-2.0A\nnpm install\nDockerfile\n\nDockerfile reference\nDockerize example\n\nCreate image in Docker\ndocker build -t goodfood-web .Check :\ndocker imagesREPOSITORY TAG IMAGE ID CREATED SIZE\n\ngoodfood-web latest  28cb65260f81 11 hours ago  24.2MBAprès build on va créer le conteneur docker :\ndocker run -d -p 4200:4200 --name GoodFood-web goodfood-webSee container details :\ndocker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nf10f652d3da9 goodfood-web \"nginx -g 'daemon of…\" 16 minutes ago Up 16 minutes 0.0.0.0:8181->80/tcp GoodFood-webhttp://localhost:4200/\nCompodoc\nCompodoc is a documentation tool for Angular applications. It generates a static documentation of your application.\nInstallation\n\nGlobal installation\n\nnpm install -g @compodoc/compodoc\nLocal installation\n\nng add @compodoc/compodoc\nConfiguration\n\nnpx compodoc -p tsconfig.doc.json --theme materialRun script :\nnpm run compodoc\n./node_modules/.bin/compodoc -s -r 4201docker compose\ndocker compose up --build -dGITFLOW\nTutorial Git flow workflow\n\n\nSonar Status : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DefaultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FranchiseeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrincipalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecipeManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_exports\n\n\n\ncluster_FranchiseeModule\n\n\n\ncluster_FranchiseeModule_declarations\n\n\n\ncluster_FranchiseeModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_LayoutsModule\n\n\n\ncluster_LayoutsModule_exports\n\n\n\ncluster_PrincipalModule\n\n\n\ncluster_PrincipalModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RecipeManagementModule\n\n\n\ncluster_RecipeManagementModule_declarations\n\n\n\ncluster_RecipeManagementModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFooterComponent->ComponentsModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nComponentsModule -->\n\nLoadingComponent->ComponentsModule\n\n\n\n\n\nServerErrorComponent\n\nServerErrorComponent\n\nComponentsModule -->\n\nServerErrorComponent->ComponentsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentsModule -->\n\nSidebarComponent->ComponentsModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nComponentsModule -->\n\nTitleComponent->ComponentsModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nComponentsModule -->\n\nTopbarComponent->ComponentsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentsModule->FooterComponent \n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nComponentsModule->LoadingComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentsModule->SidebarComponent \n\n\n\n\n\nTitleComponent \n\nTitleComponent \n\nTitleComponent  -->\n\nComponentsModule->TitleComponent \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nComponentsModule->TopbarComponent \n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nDefaultComponent \n\nDefaultComponent \n\nDefaultComponent  -->\n\nDefaultModule->DefaultComponent \n\n\n\n\n\nLayoutsModule\n\nLayoutsModule\n\nLayoutsModule -->\n\nDefaultModule->LayoutsModule\n\n\n\n\n\nFranchiseeComponent\n\nFranchiseeComponent\n\n\n\nFranchiseeModule\n\nFranchiseeModule\n\nFranchiseeModule -->\n\nFranchiseeComponent->FranchiseeModule\n\n\n\n\n\nFranchiseeDialogComponent\n\nFranchiseeDialogComponent\n\nFranchiseeModule -->\n\nFranchiseeDialogComponent->FranchiseeModule\n\n\n\n\n\nApiTokenInterceptorService\n\nApiTokenInterceptorService\n\nFranchiseeModule -->\n\nApiTokenInterceptorService->FranchiseeModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiTokenInterceptorService->ProfileModule\n\n\n\n\n\nRecipeManagementModule\n\nRecipeManagementModule\n\nRecipeManagementModule -->\n\nApiTokenInterceptorService->RecipeManagementModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nApiTokenInterceptorService->UsersModule\n\n\n\n\n\nFranchiseeService\n\nFranchiseeService\n\nFranchiseeModule -->\n\nFranchiseeService->FranchiseeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nDefaultModule \n\nDefaultModule \n\nDefaultModule  -->\n\nLayoutsModule->DefaultModule \n\n\n\n\n\nPrincipalModule\n\nPrincipalModule\n\nPrincipalModule -->\n\nLayoutsModule->PrincipalModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPrincipalModule -->\n\nPageNotFoundComponent->PrincipalModule\n\n\n\n\n\nPrincipalComponent\n\nPrincipalComponent\n\nPrincipalModule -->\n\nPrincipalComponent->PrincipalModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nIngredientComponent\n\nIngredientComponent\n\nRecipeManagementModule -->\n\nIngredientComponent->RecipeManagementModule\n\n\n\n\n\nIngredientTypeComponent\n\nIngredientTypeComponent\n\nRecipeManagementModule -->\n\nIngredientTypeComponent->RecipeManagementModule\n\n\n\n\n\nRecipeDialogComponent\n\nRecipeDialogComponent\n\nRecipeManagementModule -->\n\nRecipeDialogComponent->RecipeManagementModule\n\n\n\n\n\nRecipesComponent\n\nRecipesComponent\n\nRecipeManagementModule -->\n\nRecipesComponent->RecipeManagementModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nRecipeManagementModule -->\n\nTabsComponent->RecipeManagementModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nRecipeManagementModule -->\n\nRecipeService->RecipeManagementModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            role   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    role\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminAccess   (src/.../user.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            franchiseeAccess   (src/.../user.selector.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            loadUser   (src/.../user.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../store.reducer.ts)\n                        \n                        \n                            mockAddress   (src/.../address.mock.ts)\n                        \n                        \n                            mockFranchisee   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeArray   (src/.../franchisee.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe1   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipe2   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockFranchiseeRecipeArray   (src/.../fracnhisee-recipe.mock.ts)\n                        \n                        \n                            mockIngre1   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngre2   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockIngredientArray   (src/.../ingredients.mock.ts)\n                        \n                        \n                            mockpictureArray   (src/.../picture.mock.ts)\n                        \n                        \n                            mockRecipe1   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipe2   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeArray   (src/.../recipe.mock.ts)\n                        \n                        \n                            mockRecipeTypeArray   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            mockSchedule   (src/.../schedule.mock.ts)\n                        \n                        \n                            mockType1   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockType2   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockTypeArray   (src/.../ingredient-type.mock.ts)\n                        \n                        \n                            mockUser1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUser3   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserArray   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth1   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserAuth2   (src/.../users.mock.ts)\n                        \n                        \n                            mockUserWithAuth   (src/.../users.mock.ts)\n                        \n                        \n                            picture1   (src/.../picture.mock.ts)\n                        \n                        \n                            picture2   (src/.../picture.mock.ts)\n                        \n                        \n                            picture3   (src/.../picture.mock.ts)\n                        \n                        \n                            recipeType1   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType2   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            recipeType3   (src/.../recipe-type.mock.ts)\n                        \n                        \n                            reducers   (src/.../store.reducer.ts)\n                        \n                        \n                            routing   (src/.../app-routing.module.ts)\n                        \n                        \n                            routing   (src/.../principal-routing.module.ts)\n                        \n                        \n                            selectIsLoggedIn   (src/.../user.selector.ts)\n                        \n                        \n                            selectProfileUser   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserDetails   (src/.../user.selector.ts)\n                        \n                        \n                            selectUserState   (src/.../user.selector.ts)\n                        \n                        \n                            updateUser   (src/.../user.actions.ts)\n                        \n                        \n                            userFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            userLoaded   (src/.../user.actions.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            userUpdated   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/state/user/user.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.ADMIN, Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        franchiseeAccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserState, (user) => {\n  return canAccess(user, [Roles.FRANCHISEE]);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserDetails,\n  (userDetails) => !!userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProfileUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectUserDetails, (user) => {\n  return { user };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserState,\n  (user) => user.userDetails\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('user')\n                    \n                \n\n            \n                \n                    Feature selector\nand\na selector that returns the userDetails\naccess these properties :\n\nisLoggedIn,\ncanAccess,\nadminAccess | franchiseeAccess\n\n\n                \n            \n\n        \n    \n\n    src/environments/environment.example.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost/8085/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'http://localhost/4000',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96560464-28d1-401b-9c39-0fe271d28c2d',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost/4100'\n  }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: 'http://localhost:4200',\n  apiBaseUrl: 'http://localhost:8080/api',\n  oAuthProviderBaseUrl: 'http://localhost:8085/oauth',\n  oAuthClientId: '96b05134-a952-4e00-b94a-c47406527d49',\n  oAuthCallbackUri: 'http://localhost:4200/login/redirect',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n    src/app/shared/store/state/user/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  userDetails: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(UserActions.userLoaded, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  }),\n  on(UserActions.updateUser, (state, action) => {\n    return {\n      ...state,\n      userDetails: action.userDetails,\n    };\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/state/user/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Auth] Load User')\n                    \n                \n\n            \n                \n                    User-related Actions that we need for our user Store. Logout,\nand user changed Action to keep the user details in our Store in sync with Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] Update User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Load Auth Effect] User Loaded',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Profile Component] User Updated',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/store/store.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: routerReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/address.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  first_line: '4 rue isere',\n  second_line: '',\n  zip_code: '38000',\n  city: 'Grenoble',\n  country: 'France',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/franchisee.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchisee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'chez moi',\n  phone: '01 22 33 44 55',\n  email: 'user@example.com',\n  max_delivery_radius: 5,\n  address_id: 1,\n  ownedBy: mockUser1,\n  owned_by: 1,\n  create_by: 1,\n  address: mockAddress,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Franchisee[]\n\n                    \n                \n                \n                    \n                        Default value : [mockFranchisee]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/fracnhisee-recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  price: 12.0,\n  recipe_id: 1,\n  recipe: mockRecipe1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FranchiseeRecipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  price: 15.0,\n  recipe_id: 2,\n  recipe: mockRecipe2,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockFranchiseeRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  mockFranchiseeRecipe1,\n  mockFranchiseeRecipe2,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredients.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockIngre1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'Porc',\n  allergen: false,\n  types: [mockType2],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngre2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'Saumon',\n  allergen: true,\n  types: [mockType1],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockIngredientArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredient[]\n\n                    \n                \n                \n                    \n                        Default value : [mockIngre1, mockIngre2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/picture.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockpictureArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture[]\n\n                    \n                \n                \n                    \n                        Default value : [picture1, picture2, picture3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-1',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-1.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuis-2',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-2.jpg',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Picture\n\n                    \n                \n                \n                    \n                        Default value : {\n  uuid: 'uuid-3',\n  name: 'string',\n  size: 10,\n  size_unit: 'xxxxxx',\n  link: 'string',\n  external_link: 'http://localhost:8090/storage/files/string-3.jpg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipe1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  name: 'string',\n  star: false,\n  base_price: 22,\n  description: 'string',\n  recipe_type: recipeType1,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipe2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  name: 'string',\n  star: true,\n  base_price: 10,\n  description: 'string',\n  recipe_type: recipeType2,\n  ingredients: mockIngredientArray,\n  available_at: new Date('2019-08-24T14:15:22Z'),\n  trashed_at: null,\n  pictures: mockpictureArray,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockRecipeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recipe[]\n\n                    \n                \n                \n                    \n                        Default value : [mockRecipe1, mockRecipe2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/recipe-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockRecipeTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RecipeType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  recipeType2,\n  recipeType2,\n  recipeType3,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipeType3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecipeType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  code: 'string',\n  name: 'string',\n  description: 'string',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/schedule.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockSchedule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Schedule\n\n                    \n                \n                \n                    \n                        Default value : {\n  monday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  tuesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  wednesday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  thursday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  friday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  saturday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n  sunday: {\n    lunch: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n    night: {\n      opened_at: 'string',\n      closed_at: 'string',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/ingredient-type.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockType1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  code: 'fish',\n  name: 'fish',\n  description: 'description 1',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockType2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  code: 'meat',\n  name: 'meat',\n  description: 'description 2',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockTypeArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngreType[]\n\n                    \n                \n                \n                    \n                        Default value : [mockType1, mockType2]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/mock/users.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockUser1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 2,\n  firstname: 'Zara',\n  lastname: 'Dubeau',\n  email: 'Product@Description.com',\n  phone: '11111111',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 3,\n  firstname: 'Bahar',\n  lastname: 'Sdqi',\n  email: 'Product@Description.org',\n  phone: '00000000',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [mockUser1, mockUser2, mockUser3]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n    {\n      code: 'contractor',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'contractor',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserAuth2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserWithAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 1,\n  firstname: 'Sara',\n  lastname: 'Dubois',\n  email: 'Product@Description.fr',\n  phone: '12345678',\n  roles: [\n    {\n      code: 'goodfood',\n    },\n    {\n      code: 'contractor',\n    },\n  ],\n  autorisations: {\n    isAdmin: true,\n    isFranchisee: true,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forRoot(ROUTES, { useHash: false })\n                    \n                \n\n\n        \n    \n\n    src/app/principal/principal-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild(ROUTES)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
